<?xml version="1.0" encoding="UTF-8"?>
<office:document-content xmlns:office="urn:oasis:names:tc:opendocument:xmlns:office:1.0" xmlns:style="urn:oasis:names:tc:opendocument:xmlns:style:1.0" xmlns:text="urn:oasis:names:tc:opendocument:xmlns:text:1.0" xmlns:table="urn:oasis:names:tc:opendocument:xmlns:table:1.0" xmlns:draw="urn:oasis:names:tc:opendocument:xmlns:drawing:1.0" xmlns:fo="urn:oasis:names:tc:opendocument:xmlns:xsl-fo-compatible:1.0" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:meta="urn:oasis:names:tc:opendocument:xmlns:meta:1.0" xmlns:number="urn:oasis:names:tc:opendocument:xmlns:datastyle:1.0" xmlns:svg="urn:oasis:names:tc:opendocument:xmlns:svg-compatible:1.0" xmlns:chart="urn:oasis:names:tc:opendocument:xmlns:chart:1.0" xmlns:dr3d="urn:oasis:names:tc:opendocument:xmlns:dr3d:1.0" xmlns:math="http://www.w3.org/1998/Math/MathML" xmlns:form="urn:oasis:names:tc:opendocument:xmlns:form:1.0" xmlns:script="urn:oasis:names:tc:opendocument:xmlns:script:1.0" xmlns:ooo="http://openoffice.org/2004/office" xmlns:ooow="http://openoffice.org/2004/writer" xmlns:oooc="http://openoffice.org/2004/calc" xmlns:dom="http://www.w3.org/2001/xml-events" xmlns:xforms="http://www.w3.org/2002/xforms" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:rpt="http://openoffice.org/2005/report" xmlns:of="urn:oasis:names:tc:opendocument:xmlns:of:1.2" xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:grddl="http://www.w3.org/2003/g/data-view#" xmlns:officeooo="http://openoffice.org/2009/office" xmlns:tableooo="http://openoffice.org/2009/table" xmlns:drawooo="http://openoffice.org/2010/draw" xmlns:calcext="urn:org:documentfoundation:names:experimental:calc:xmlns:calcext:1.0" xmlns:loext="urn:org:documentfoundation:names:experimental:office:xmlns:loext:1.0" xmlns:field="urn:openoffice:names:experimental:ooo-ms-interop:xmlns:field:1.0" xmlns:formx="urn:openoffice:names:experimental:ooxml-odf-interop:xmlns:form:1.0" xmlns:css3t="http://www.w3.org/TR/css3-text/" office:version="1.2"><office:scripts/><office:font-face-decls><style:font-face style:name="OpenSymbol" svg:font-family="OpenSymbol"/><style:font-face style:name="Tahoma1" svg:font-family="Tahoma"/><style:font-face style:name="inherit" svg:font-family="inherit"/><style:font-face style:name="Times New Roman1" svg:font-family="&apos;Times New Roman&apos;" style:font-family-generic="roman"/><style:font-face style:name="Courier New" svg:font-family="&apos;Courier New&apos;" style:font-adornments="Regular" style:font-family-generic="modern" style:font-pitch="variable"/><style:font-face style:name="Times New Roman" svg:font-family="&apos;Times New Roman&apos;" style:font-family-generic="roman" style:font-pitch="variable"/><style:font-face style:name="Arial" svg:font-family="Arial" style:font-family-generic="swiss" style:font-pitch="variable"/><style:font-face style:name="Andale Sans UI" svg:font-family="&apos;Andale Sans UI&apos;" style:font-family-generic="system" style:font-pitch="variable"/><style:font-face style:name="Tahoma" svg:font-family="Tahoma" style:font-family-generic="system" style:font-pitch="variable"/></office:font-face-decls><office:automatic-styles><style:style style:name="Table1" style:family="table"><style:table-properties style:width="6.6924in" table:align="margins"/></style:style><style:style style:name="Table1.A" style:family="table-column"><style:table-column-properties style:column-width="0.7514in" style:rel-column-width="7357*"/></style:style><style:style style:name="Table1.B" style:family="table-column"><style:table-column-properties style:column-width="2.5944in" style:rel-column-width="25406*"/></style:style><style:style style:name="Table1.C" style:family="table-column"><style:table-column-properties style:column-width="0.709in" style:rel-column-width="6943*"/></style:style><style:style style:name="Table1.D" style:family="table-column"><style:table-column-properties style:column-width="2.6375in" style:rel-column-width="25829*"/></style:style><style:style style:name="Table1.A1" style:family="table-cell"><style:table-cell-properties style:vertical-align="middle" fo:background-color="#c0c0c0" fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="0.05pt solid #000000" fo:border-bottom="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table1.D1" style:family="table-cell"><style:table-cell-properties style:vertical-align="middle" fo:background-color="#c0c0c0" fo:padding="0.0382in" fo:border="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table1.A2" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table1.B2" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table1.C2" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table1.D2" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table1.A3" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table1.B3" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table1.C3" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table1.D3" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table1.A4" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table1.B4" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table1.C4" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table1.D4" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table1.A5" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table1.B5" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table1.C5" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table1.D5" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table1.A6" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table1.B6" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table1.C6" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table1.D6" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table1.A7" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table1.B7" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table1.C7" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table1.D7" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table1.A8" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table1.B8" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table1.C8" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table1.D8" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table1.A9" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table1.B9" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table1.C9" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table1.D9" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table1.A10" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table1.B10" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table1.C10" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table1.D10" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table1.A11" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table1.B11" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table1.C11" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table1.D11" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table1.A12" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table1.B12" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table1.C12" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table1.D12" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table1.A13" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table1.B13" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table1.C13" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table1.D13" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table1.A14" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table1.B14" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table1.C14" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table1.D14" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table1.A15" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table1.B15" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table1.C15" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table1.D15" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table1.A16" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table1.B16" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table1.C16" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table1.D16" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table1.A17" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table1.B17" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table1.C17" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table1.D17" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table1.A18" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table1.B18" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table1.C18" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table1.D18" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table1.A19" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table1.B19" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table1.C19" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table1.D19" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table1.A20" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table1.B20" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table1.C20" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table1.D20" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table2" style:family="table"><style:table-properties style:width="6.6924in" table:align="margins"/></style:style><style:style style:name="Table2.A" style:family="table-column"><style:table-column-properties style:column-width="1.7708in" style:rel-column-width="17340*"/></style:style><style:style style:name="Table2.B" style:family="table-column"><style:table-column-properties style:column-width="4.9215in" style:rel-column-width="48195*"/></style:style><style:style style:name="Table2.A1" style:family="table-cell"><style:table-cell-properties style:vertical-align="middle" fo:background-color="#e6e6e6" fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="0.05pt solid #000000" fo:border-bottom="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table2.B1" style:family="table-cell"><style:table-cell-properties style:vertical-align="middle" fo:background-color="#e6e6e6" fo:padding="0.0382in" fo:border="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table2.A2" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table2.B2" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table2.A3" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table2.B3" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table2.A4" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table2.B4" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table2.A5" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table2.B5" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table2.A6" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table2.B6" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table2.A7" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table2.B7" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table2.A8" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table2.B8" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table2.A9" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table2.B9" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table2.A10" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table2.B10" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table42" style:family="table"><style:table-properties style:width="6.6924in" table:align="margins" style:may-break-between-rows="false"/></style:style><style:style style:name="Table42.A" style:family="table-column"><style:table-column-properties style:column-width="6.6924in" style:rel-column-width="65535*"/></style:style><style:style style:name="Table42.A1" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border="none"/></style:style><style:style style:name="Table43" style:family="table"><style:table-properties style:width="6.6924in" table:align="margins" style:may-break-between-rows="false"/></style:style><style:style style:name="Table43.A" style:family="table-column"><style:table-column-properties style:column-width="6.6924in" style:rel-column-width="65535*"/></style:style><style:style style:name="Table43.A1" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border="none"/></style:style><style:style style:name="Table44" style:family="table"><style:table-properties style:width="6.6924in" table:align="margins" style:may-break-between-rows="false"/></style:style><style:style style:name="Table44.A" style:family="table-column"><style:table-column-properties style:column-width="6.6924in" style:rel-column-width="65535*"/></style:style><style:style style:name="Table44.A1" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border="none"/></style:style><style:style style:name="Table45" style:family="table"><style:table-properties style:width="6.6924in" table:align="margins" style:may-break-between-rows="false"/></style:style><style:style style:name="Table45.A" style:family="table-column"><style:table-column-properties style:column-width="6.6924in" style:rel-column-width="65535*"/></style:style><style:style style:name="Table46" style:family="table"><style:table-properties style:width="6.6924in" table:align="margins" style:may-break-between-rows="false"/></style:style><style:style style:name="Table46.A" style:family="table-column"><style:table-column-properties style:column-width="6.6924in" style:rel-column-width="65535*"/></style:style><style:style style:name="Table47" style:family="table"><style:table-properties style:width="6.6924in" table:align="margins" style:may-break-between-rows="false"/></style:style><style:style style:name="Table47.A" style:family="table-column"><style:table-column-properties style:column-width="6.6924in" style:rel-column-width="65535*"/></style:style><style:style style:name="Table48" style:family="table"><style:table-properties style:width="6.6924in" table:align="margins" style:may-break-between-rows="false"/></style:style><style:style style:name="Table48.A" style:family="table-column"><style:table-column-properties style:column-width="6.6924in" style:rel-column-width="65535*"/></style:style><style:style style:name="Table49" style:family="table"><style:table-properties style:width="6.6924in" table:align="margins" style:may-break-between-rows="false"/></style:style><style:style style:name="Table49.A" style:family="table-column"><style:table-column-properties style:column-width="6.6924in" style:rel-column-width="65535*"/></style:style><style:style style:name="Table50" style:family="table"><style:table-properties style:width="6.6924in" table:align="margins" style:may-break-between-rows="false"/></style:style><style:style style:name="Table50.A" style:family="table-column"><style:table-column-properties style:column-width="6.6924in" style:rel-column-width="65535*"/></style:style><style:style style:name="Table51" style:family="table"><style:table-properties style:width="6.6924in" table:align="margins" style:may-break-between-rows="false"/></style:style><style:style style:name="Table51.A" style:family="table-column"><style:table-column-properties style:column-width="6.6924in" style:rel-column-width="65535*"/></style:style><style:style style:name="Table52" style:family="table"><style:table-properties style:width="6.6924in" table:align="margins" style:may-break-between-rows="false"/></style:style><style:style style:name="Table52.A" style:family="table-column"><style:table-column-properties style:column-width="6.6924in" style:rel-column-width="65535*"/></style:style><style:style style:name="Table3" style:family="table"><style:table-properties style:width="6.6986in" fo:margin-left="-0.0063in" table:align="left"/></style:style><style:style style:name="Table3.A" style:family="table-column"><style:table-column-properties style:column-width="3.3556in"/></style:style><style:style style:name="Table3.B" style:family="table-column"><style:table-column-properties style:column-width="3.3431in"/></style:style><style:style style:name="Table3.A1" style:family="table-cell"><style:table-cell-properties fo:background-color="#b3b3b3" fo:padding="0.0382in" fo:border="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table3.A2" style:family="table-cell"><style:table-cell-properties fo:background-color="#e6e6ff" fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table3.B2" style:family="table-cell"><style:table-cell-properties fo:background-color="#e6e6ff" fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table3.A3" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table3.B3" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table4" style:family="table"><style:table-properties style:width="6.6986in" fo:margin-left="-0.0063in" table:align="left"/></style:style><style:style style:name="Table4.A" style:family="table-column"><style:table-column-properties style:column-width="3.3556in"/></style:style><style:style style:name="Table4.B" style:family="table-column"><style:table-column-properties style:column-width="3.3431in"/></style:style><style:style style:name="Table4.A1" style:family="table-cell"><style:table-cell-properties fo:background-color="#b3b3b3" fo:padding="0.0382in" fo:border="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table4.A2" style:family="table-cell"><style:table-cell-properties fo:background-color="#e6e6ff" fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table4.B2" style:family="table-cell"><style:table-cell-properties fo:background-color="#e6e6ff" fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table4.A3" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table4.B3" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table5" style:family="table"><style:table-properties style:width="6.6986in" fo:margin-left="-0.0063in" table:align="left"/></style:style><style:style style:name="Table5.A" style:family="table-column"><style:table-column-properties style:column-width="3.3556in"/></style:style><style:style style:name="Table5.B" style:family="table-column"><style:table-column-properties style:column-width="3.3431in"/></style:style><style:style style:name="Table5.A1" style:family="table-cell"><style:table-cell-properties fo:background-color="#b3b3b3" fo:padding="0.0382in" fo:border="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table5.A2" style:family="table-cell"><style:table-cell-properties fo:background-color="#e6e6ff" fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table5.B2" style:family="table-cell"><style:table-cell-properties fo:background-color="#e6e6ff" fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table5.A3" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table5.B3" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table6" style:family="table"><style:table-properties style:width="6.691in" table:align="right"/></style:style><style:style style:name="Table6.A" style:family="table-column"><style:table-column-properties style:column-width="3.3479in"/></style:style><style:style style:name="Table6.B" style:family="table-column"><style:table-column-properties style:column-width="3.3431in"/></style:style><style:style style:name="Table6.A1" style:family="table-cell"><style:table-cell-properties fo:background-color="#b3b3b3" fo:padding="0.0382in" fo:border="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table6.A2" style:family="table-cell"><style:table-cell-properties fo:background-color="#e6e6ff" fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table6.B2" style:family="table-cell"><style:table-cell-properties fo:background-color="#e6e6ff" fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table6.A3" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table6.B3" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table7" style:family="table"><style:table-properties style:width="6.6986in" fo:margin-left="-0.0063in" table:align="left"/></style:style><style:style style:name="Table7.A" style:family="table-column"><style:table-column-properties style:column-width="3.3556in"/></style:style><style:style style:name="Table7.B" style:family="table-column"><style:table-column-properties style:column-width="3.3431in"/></style:style><style:style style:name="Table7.A1" style:family="table-cell"><style:table-cell-properties fo:background-color="#b3b3b3" fo:padding="0.0382in" fo:border="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table7.A2" style:family="table-cell"><style:table-cell-properties fo:background-color="#e6e6ff" fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table7.B2" style:family="table-cell"><style:table-cell-properties fo:background-color="#e6e6ff" fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table7.A3" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table7.B3" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table8" style:family="table"><style:table-properties style:width="6.6986in" fo:margin-left="-0.0063in" table:align="left"/></style:style><style:style style:name="Table8.A" style:family="table-column"><style:table-column-properties style:column-width="3.3556in"/></style:style><style:style style:name="Table8.B" style:family="table-column"><style:table-column-properties style:column-width="3.3431in"/></style:style><style:style style:name="Table8.A1" style:family="table-cell"><style:table-cell-properties fo:background-color="#b3b3b3" fo:padding="0.0382in" fo:border="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table8.A2" style:family="table-cell"><style:table-cell-properties fo:background-color="#e6e6ff" fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table8.B2" style:family="table-cell"><style:table-cell-properties fo:background-color="#e6e6ff" fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table8.A3" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table8.B3" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table9" style:family="table"><style:table-properties style:width="6.6986in" fo:margin-left="-0.0063in" table:align="left"/></style:style><style:style style:name="Table9.A" style:family="table-column"><style:table-column-properties style:column-width="3.3556in"/></style:style><style:style style:name="Table9.B" style:family="table-column"><style:table-column-properties style:column-width="3.3431in"/></style:style><style:style style:name="Table9.A1" style:family="table-cell"><style:table-cell-properties fo:background-color="#b3b3b3" fo:padding="0.0382in" fo:border="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table9.A2" style:family="table-cell"><style:table-cell-properties fo:background-color="#e6e6ff" fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table9.B2" style:family="table-cell"><style:table-cell-properties fo:background-color="#e6e6ff" fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table9.A3" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table9.B3" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table10" style:family="table"><style:table-properties style:width="6.6986in" fo:margin-left="-0.0063in" table:align="left"/></style:style><style:style style:name="Table10.A" style:family="table-column"><style:table-column-properties style:column-width="3.3556in"/></style:style><style:style style:name="Table10.B" style:family="table-column"><style:table-column-properties style:column-width="3.3431in"/></style:style><style:style style:name="Table10.A1" style:family="table-cell"><style:table-cell-properties fo:background-color="#b3b3b3" fo:padding="0.0382in" fo:border="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table10.A2" style:family="table-cell"><style:table-cell-properties fo:background-color="#e6e6ff" fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table10.B2" style:family="table-cell"><style:table-cell-properties fo:background-color="#e6e6ff" fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table10.A3" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table10.B3" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table11" style:family="table"><style:table-properties style:width="6.6986in" fo:margin-left="-0.0063in" table:align="left"/></style:style><style:style style:name="Table11.A" style:family="table-column"><style:table-column-properties style:column-width="3.3556in"/></style:style><style:style style:name="Table11.B" style:family="table-column"><style:table-column-properties style:column-width="3.3431in"/></style:style><style:style style:name="Table11.A1" style:family="table-cell"><style:table-cell-properties fo:background-color="#b3b3b3" fo:padding="0.0382in" fo:border="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table11.A2" style:family="table-cell"><style:table-cell-properties fo:background-color="#e6e6ff" fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table11.B2" style:family="table-cell"><style:table-cell-properties fo:background-color="#e6e6ff" fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table11.A3" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table11.B3" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table12" style:family="table"><style:table-properties style:width="6.6986in" fo:margin-left="-0.0063in" table:align="left"/></style:style><style:style style:name="Table12.A" style:family="table-column"><style:table-column-properties style:column-width="3.3556in"/></style:style><style:style style:name="Table12.B" style:family="table-column"><style:table-column-properties style:column-width="3.3431in"/></style:style><style:style style:name="Table12.A1" style:family="table-cell"><style:table-cell-properties fo:background-color="#b3b3b3" fo:padding="0.0382in" fo:border="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table12.A2" style:family="table-cell"><style:table-cell-properties fo:background-color="#e6e6ff" fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table12.B2" style:family="table-cell"><style:table-cell-properties fo:background-color="#e6e6ff" fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table12.A3" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table12.B3" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table13" style:family="table"><style:table-properties style:width="6.6986in" fo:margin-left="-0.0063in" table:align="left"/></style:style><style:style style:name="Table13.A" style:family="table-column"><style:table-column-properties style:column-width="3.3556in"/></style:style><style:style style:name="Table13.B" style:family="table-column"><style:table-column-properties style:column-width="3.3431in"/></style:style><style:style style:name="Table13.A1" style:family="table-cell"><style:table-cell-properties fo:background-color="#b3b3b3" fo:padding="0.0382in" fo:border="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table13.A2" style:family="table-cell"><style:table-cell-properties fo:background-color="#e6e6ff" fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table13.B2" style:family="table-cell"><style:table-cell-properties fo:background-color="#e6e6ff" fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table13.A3" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table13.B3" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table14" style:family="table"><style:table-properties style:width="6.691in" table:align="right"/></style:style><style:style style:name="Table14.A" style:family="table-column"><style:table-column-properties style:column-width="3.3479in"/></style:style><style:style style:name="Table14.B" style:family="table-column"><style:table-column-properties style:column-width="3.3431in"/></style:style><style:style style:name="Table14.A1" style:family="table-cell"><style:table-cell-properties fo:background-color="#b3b3b3" fo:padding="0.0382in" fo:border="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table14.A2" style:family="table-cell"><style:table-cell-properties fo:background-color="#e6e6ff" fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table14.B2" style:family="table-cell"><style:table-cell-properties fo:background-color="#e6e6ff" fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table14.A3" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table14.B3" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table15" style:family="table"><style:table-properties style:width="6.6986in" fo:margin-left="-0.0063in" table:align="left"/></style:style><style:style style:name="Table15.A" style:family="table-column"><style:table-column-properties style:column-width="3.3556in"/></style:style><style:style style:name="Table15.B" style:family="table-column"><style:table-column-properties style:column-width="3.3431in"/></style:style><style:style style:name="Table15.A1" style:family="table-cell"><style:table-cell-properties fo:background-color="#b3b3b3" fo:padding="0.0382in" fo:border="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table15.A2" style:family="table-cell"><style:table-cell-properties fo:background-color="#e6e6ff" fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table15.B2" style:family="table-cell"><style:table-cell-properties fo:background-color="#e6e6ff" fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table15.A3" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table15.B3" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table16" style:family="table"><style:table-properties style:width="6.6986in" fo:margin-left="-0.0063in" table:align="left"/></style:style><style:style style:name="Table16.A" style:family="table-column"><style:table-column-properties style:column-width="3.3556in"/></style:style><style:style style:name="Table16.B" style:family="table-column"><style:table-column-properties style:column-width="3.3431in"/></style:style><style:style style:name="Table16.A1" style:family="table-cell"><style:table-cell-properties fo:background-color="#b3b3b3" fo:padding="0.0382in" fo:border="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table16.A2" style:family="table-cell"><style:table-cell-properties fo:background-color="#e6e6ff" fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table16.B2" style:family="table-cell"><style:table-cell-properties fo:background-color="#e6e6ff" fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table16.A3" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table16.B3" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table17" style:family="table"><style:table-properties style:width="6.6986in" fo:margin-left="-0.0063in" table:align="left"/></style:style><style:style style:name="Table17.A" style:family="table-column"><style:table-column-properties style:column-width="3.3556in"/></style:style><style:style style:name="Table17.B" style:family="table-column"><style:table-column-properties style:column-width="3.3431in"/></style:style><style:style style:name="Table17.A1" style:family="table-cell"><style:table-cell-properties fo:background-color="#b3b3b3" fo:padding="0.0382in" fo:border="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table17.A2" style:family="table-cell"><style:table-cell-properties fo:background-color="#e6e6ff" fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table17.B2" style:family="table-cell"><style:table-cell-properties fo:background-color="#e6e6ff" fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table17.A3" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table17.B3" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table18" style:family="table"><style:table-properties style:width="6.6986in" fo:margin-left="-0.0063in" table:align="left"/></style:style><style:style style:name="Table18.A" style:family="table-column"><style:table-column-properties style:column-width="3.3556in"/></style:style><style:style style:name="Table18.B" style:family="table-column"><style:table-column-properties style:column-width="3.3431in"/></style:style><style:style style:name="Table18.A1" style:family="table-cell"><style:table-cell-properties fo:background-color="#b3b3b3" fo:padding="0.0382in" fo:border="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table18.A2" style:family="table-cell"><style:table-cell-properties fo:background-color="#e6e6ff" fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table18.B2" style:family="table-cell"><style:table-cell-properties fo:background-color="#e6e6ff" fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table18.A3" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table18.B3" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table19" style:family="table"><style:table-properties style:width="6.6986in" fo:margin-left="-0.0063in" table:align="left"/></style:style><style:style style:name="Table19.A" style:family="table-column"><style:table-column-properties style:column-width="3.3556in"/></style:style><style:style style:name="Table19.B" style:family="table-column"><style:table-column-properties style:column-width="3.3431in"/></style:style><style:style style:name="Table19.A1" style:family="table-cell"><style:table-cell-properties fo:background-color="#b3b3b3" fo:padding="0.0382in" fo:border="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table19.A2" style:family="table-cell"><style:table-cell-properties fo:background-color="#e6e6ff" fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table19.B2" style:family="table-cell"><style:table-cell-properties fo:background-color="#e6e6ff" fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table19.A3" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table19.B3" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table20" style:family="table"><style:table-properties style:width="6.6986in" fo:margin-left="-0.0063in" table:align="left"/></style:style><style:style style:name="Table20.A" style:family="table-column"><style:table-column-properties style:column-width="3.3556in"/></style:style><style:style style:name="Table20.B" style:family="table-column"><style:table-column-properties style:column-width="3.3431in"/></style:style><style:style style:name="Table20.A1" style:family="table-cell"><style:table-cell-properties fo:background-color="#b3b3b3" fo:padding="0.0382in" fo:border="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table20.A2" style:family="table-cell"><style:table-cell-properties fo:background-color="#e6e6ff" fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table20.B2" style:family="table-cell"><style:table-cell-properties fo:background-color="#e6e6ff" fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table20.A3" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table20.B3" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table21" style:family="table"><style:table-properties style:width="6.6986in" fo:margin-left="-0.0063in" table:align="left"/></style:style><style:style style:name="Table21.A" style:family="table-column"><style:table-column-properties style:column-width="3.3556in"/></style:style><style:style style:name="Table21.B" style:family="table-column"><style:table-column-properties style:column-width="3.3431in"/></style:style><style:style style:name="Table21.A1" style:family="table-cell"><style:table-cell-properties fo:background-color="#b3b3b3" fo:padding="0.0382in" fo:border="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table21.A2" style:family="table-cell"><style:table-cell-properties fo:background-color="#e6e6ff" fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table21.B2" style:family="table-cell"><style:table-cell-properties fo:background-color="#e6e6ff" fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table21.A3" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table21.B3" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table22" style:family="table"><style:table-properties style:width="6.6986in" fo:margin-left="-0.0063in" table:align="left"/></style:style><style:style style:name="Table22.A" style:family="table-column"><style:table-column-properties style:column-width="3.3556in"/></style:style><style:style style:name="Table22.B" style:family="table-column"><style:table-column-properties style:column-width="3.3431in"/></style:style><style:style style:name="Table22.A1" style:family="table-cell"><style:table-cell-properties fo:background-color="#b3b3b3" fo:padding="0.0382in" fo:border="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table22.A2" style:family="table-cell"><style:table-cell-properties fo:background-color="#e6e6ff" fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table22.B2" style:family="table-cell"><style:table-cell-properties fo:background-color="#e6e6ff" fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table22.A3" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table22.B3" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table23" style:family="table"><style:table-properties style:width="6.6986in" fo:margin-left="-0.0063in" table:align="left"/></style:style><style:style style:name="Table23.A" style:family="table-column"><style:table-column-properties style:column-width="3.3556in"/></style:style><style:style style:name="Table23.B" style:family="table-column"><style:table-column-properties style:column-width="3.3431in"/></style:style><style:style style:name="Table23.A1" style:family="table-cell"><style:table-cell-properties fo:background-color="#b3b3b3" fo:padding="0.0382in" fo:border="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table23.A2" style:family="table-cell"><style:table-cell-properties fo:background-color="#e6e6ff" fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table23.B2" style:family="table-cell"><style:table-cell-properties fo:background-color="#e6e6ff" fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table23.A3" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table23.B3" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table24" style:family="table"><style:table-properties style:width="6.6986in" fo:margin-left="-0.0063in" table:align="left"/></style:style><style:style style:name="Table24.A" style:family="table-column"><style:table-column-properties style:column-width="3.3556in"/></style:style><style:style style:name="Table24.B" style:family="table-column"><style:table-column-properties style:column-width="3.3431in"/></style:style><style:style style:name="Table24.A1" style:family="table-cell"><style:table-cell-properties fo:background-color="#b3b3b3" fo:padding="0.0382in" fo:border="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table24.A2" style:family="table-cell"><style:table-cell-properties fo:background-color="#e6e6ff" fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table24.B2" style:family="table-cell"><style:table-cell-properties fo:background-color="#e6e6ff" fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table24.A3" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table24.B3" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table25" style:family="table"><style:table-properties style:width="6.6986in" fo:margin-left="-0.0063in" table:align="left"/></style:style><style:style style:name="Table25.A" style:family="table-column"><style:table-column-properties style:column-width="3.3556in"/></style:style><style:style style:name="Table25.B" style:family="table-column"><style:table-column-properties style:column-width="3.3431in"/></style:style><style:style style:name="Table25.A1" style:family="table-cell"><style:table-cell-properties fo:background-color="#b3b3b3" fo:padding="0.0382in" fo:border="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table25.A2" style:family="table-cell"><style:table-cell-properties fo:background-color="#e6e6ff" fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table25.B2" style:family="table-cell"><style:table-cell-properties fo:background-color="#e6e6ff" fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table25.A3" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table25.B3" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table26" style:family="table"><style:table-properties style:width="6.6986in" fo:margin-left="-0.0063in" table:align="left"/></style:style><style:style style:name="Table26.A" style:family="table-column"><style:table-column-properties style:column-width="3.3556in"/></style:style><style:style style:name="Table26.B" style:family="table-column"><style:table-column-properties style:column-width="3.3431in"/></style:style><style:style style:name="Table26.A1" style:family="table-cell"><style:table-cell-properties fo:background-color="#b3b3b3" fo:padding="0.0382in" fo:border="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table26.A2" style:family="table-cell"><style:table-cell-properties fo:background-color="#e6e6ff" fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table26.B2" style:family="table-cell"><style:table-cell-properties fo:background-color="#e6e6ff" fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table26.A3" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table26.B3" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table27" style:family="table"><style:table-properties style:width="6.6986in" fo:margin-left="-0.0063in" table:align="left"/></style:style><style:style style:name="Table27.A" style:family="table-column"><style:table-column-properties style:column-width="3.3556in"/></style:style><style:style style:name="Table27.B" style:family="table-column"><style:table-column-properties style:column-width="3.3431in"/></style:style><style:style style:name="Table27.A1" style:family="table-cell"><style:table-cell-properties fo:background-color="#b3b3b3" fo:padding="0.0382in" fo:border="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table27.A2" style:family="table-cell"><style:table-cell-properties fo:background-color="#e6e6ff" fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table27.B2" style:family="table-cell"><style:table-cell-properties fo:background-color="#e6e6ff" fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table27.A3" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table27.B3" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table53" style:family="table"><style:table-properties style:width="6.6924in" table:align="margins" style:may-break-between-rows="false"/></style:style><style:style style:name="Table53.A" style:family="table-column"><style:table-column-properties style:column-width="6.6924in" style:rel-column-width="65535*"/></style:style><style:style style:name="Table28" style:family="table"><style:table-properties style:width="6.6986in" fo:margin-left="-0.0063in" table:align="left"/></style:style><style:style style:name="Table28.A" style:family="table-column"><style:table-column-properties style:column-width="3.3556in"/></style:style><style:style style:name="Table28.B" style:family="table-column"><style:table-column-properties style:column-width="3.3431in"/></style:style><style:style style:name="Table28.A1" style:family="table-cell"><style:table-cell-properties fo:background-color="#b3b3b3" fo:padding="0.0382in" fo:border="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table28.A2" style:family="table-cell"><style:table-cell-properties fo:background-color="#e6e6ff" fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table28.B2" style:family="table-cell"><style:table-cell-properties fo:background-color="#e6e6ff" fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table28.A3" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table28.B3" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table28.A4" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table28.B4" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table28.A5" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table28.B5" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table28.A6" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table28.B6" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table28.A7" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table28.B7" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table29" style:family="table"><style:table-properties style:width="6.6986in" fo:margin-left="-0.0063in" table:align="left"/></style:style><style:style style:name="Table29.A" style:family="table-column"><style:table-column-properties style:column-width="3.3556in"/></style:style><style:style style:name="Table29.B" style:family="table-column"><style:table-column-properties style:column-width="3.3431in"/></style:style><style:style style:name="Table29.A1" style:family="table-cell"><style:table-cell-properties fo:background-color="#b3b3b3" fo:padding="0.0382in" fo:border="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table29.A2" style:family="table-cell"><style:table-cell-properties fo:background-color="#e6e6ff" fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table29.B2" style:family="table-cell"><style:table-cell-properties fo:background-color="#e6e6ff" fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table29.A3" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table29.B3" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table29.A4" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table29.B4" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table29.A5" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table29.B5" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table29.A6" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table29.B6" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table29.A7" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table29.B7" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table29.A8" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table29.B8" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table30" style:family="table"><style:table-properties style:width="6.6986in" fo:margin-left="-0.0063in" table:align="left"/></style:style><style:style style:name="Table30.A" style:family="table-column"><style:table-column-properties style:column-width="3.3556in"/></style:style><style:style style:name="Table30.B" style:family="table-column"><style:table-column-properties style:column-width="3.3431in"/></style:style><style:style style:name="Table30.A1" style:family="table-cell"><style:table-cell-properties fo:background-color="#b3b3b3" fo:padding="0.0382in" fo:border="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table30.A2" style:family="table-cell"><style:table-cell-properties fo:background-color="#e6e6ff" fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table30.B2" style:family="table-cell"><style:table-cell-properties fo:background-color="#e6e6ff" fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table30.A3" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table30.B3" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table30.A4" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table30.B4" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table30.A5" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table30.B5" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table30.A6" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table30.B6" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table30.A7" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table30.B7" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table30.A8" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table30.B8" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table30.A9" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table30.B9" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table31" style:family="table"><style:table-properties style:width="6.6986in" fo:margin-left="-0.0063in" table:align="left"/></style:style><style:style style:name="Table31.A" style:family="table-column"><style:table-column-properties style:column-width="3.3556in"/></style:style><style:style style:name="Table31.B" style:family="table-column"><style:table-column-properties style:column-width="3.3431in"/></style:style><style:style style:name="Table31.A1" style:family="table-cell"><style:table-cell-properties fo:background-color="#b3b3b3" fo:padding="0.0382in" fo:border="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table31.A2" style:family="table-cell"><style:table-cell-properties fo:background-color="#e6e6ff" fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table31.B2" style:family="table-cell"><style:table-cell-properties fo:background-color="#e6e6ff" fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table31.A3" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table31.B3" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table31.A4" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table31.B4" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table31.A5" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table31.B5" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table31.A6" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table31.B6" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table32" style:family="table"><style:table-properties style:width="6.6986in" fo:margin-left="-0.0063in" table:align="left"/></style:style><style:style style:name="Table32.A" style:family="table-column"><style:table-column-properties style:column-width="3.3556in"/></style:style><style:style style:name="Table32.B" style:family="table-column"><style:table-column-properties style:column-width="3.3431in"/></style:style><style:style style:name="Table32.A1" style:family="table-cell"><style:table-cell-properties fo:background-color="#b3b3b3" fo:padding="0.0382in" fo:border="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table32.A2" style:family="table-cell"><style:table-cell-properties fo:background-color="#e6e6ff" fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table32.B2" style:family="table-cell"><style:table-cell-properties fo:background-color="#e6e6ff" fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table32.A3" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table32.B3" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table32.A4" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table32.B4" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table32.A5" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table32.B5" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table33" style:family="table"><style:table-properties style:width="6.6986in" fo:margin-left="-0.0063in" table:align="left"/></style:style><style:style style:name="Table33.A" style:family="table-column"><style:table-column-properties style:column-width="3.3556in"/></style:style><style:style style:name="Table33.B" style:family="table-column"><style:table-column-properties style:column-width="3.3431in"/></style:style><style:style style:name="Table33.A1" style:family="table-cell"><style:table-cell-properties fo:background-color="#b3b3b3" fo:padding="0.0382in" fo:border="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table33.A2" style:family="table-cell"><style:table-cell-properties fo:background-color="#e6e6ff" fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table33.B2" style:family="table-cell"><style:table-cell-properties fo:background-color="#e6e6ff" fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table33.A3" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table33.B3" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table33.A4" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table33.B4" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table33.A5" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table33.B5" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table33.A6" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table33.B6" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table33.A7" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table33.B7" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table34" style:family="table"><style:table-properties style:width="6.6986in" fo:margin-left="-0.0063in" table:align="left"/></style:style><style:style style:name="Table34.A" style:family="table-column"><style:table-column-properties style:column-width="3.3556in"/></style:style><style:style style:name="Table34.B" style:family="table-column"><style:table-column-properties style:column-width="3.3431in"/></style:style><style:style style:name="Table34.A1" style:family="table-cell"><style:table-cell-properties fo:background-color="#b3b3b3" fo:padding="0.0382in" fo:border="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table34.A2" style:family="table-cell"><style:table-cell-properties fo:background-color="#e6e6ff" fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table34.B2" style:family="table-cell"><style:table-cell-properties fo:background-color="#e6e6ff" fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"><style:background-image/></style:table-cell-properties></style:style><style:style style:name="Table34.A3" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table34.B3" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table34.A4" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table34.B4" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table34.A5" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table34.B5" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table34.A6" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table34.B6" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table34.A7" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table34.B7" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table34.A8" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table34.B8" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table34.A9" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table34.B9" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table34.A10" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table34.B10" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table34.A11" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table34.B11" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table34.A12" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table34.B12" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table54" style:family="table"><style:table-properties style:width="6.6924in" table:align="margins" style:may-break-between-rows="false"/></style:style><style:style style:name="Table54.A" style:family="table-column"><style:table-column-properties style:column-width="3.3458in" style:rel-column-width="32767*"/></style:style><style:style style:name="Table54.B" style:family="table-column"><style:table-column-properties style:column-width="3.3465in" style:rel-column-width="32768*"/></style:style><style:style style:name="Table54.A1" style:family="table-cell"><style:table-cell-properties fo:padding="0in" fo:border="none"/></style:style><style:style style:name="Table56" style:family="table"><style:table-properties style:width="6.6924in" table:align="margins" style:may-break-between-rows="false"/></style:style><style:style style:name="Table56.A" style:family="table-column"><style:table-column-properties style:column-width="3.3458in" style:rel-column-width="32767*"/></style:style><style:style style:name="Table56.B" style:family="table-column"><style:table-column-properties style:column-width="3.3465in" style:rel-column-width="32768*"/></style:style><style:style style:name="Table58" style:family="table"><style:table-properties style:width="6.6924in" table:align="margins" style:may-break-between-rows="false"/></style:style><style:style style:name="Table58.A" style:family="table-column"><style:table-column-properties style:column-width="3.3458in" style:rel-column-width="32767*"/></style:style><style:style style:name="Table58.B" style:family="table-column"><style:table-column-properties style:column-width="3.3465in" style:rel-column-width="32768*"/></style:style><style:style style:name="Table60" style:family="table"><style:table-properties style:width="6.6924in" table:align="margins" style:may-break-between-rows="false"/></style:style><style:style style:name="Table60.A" style:family="table-column"><style:table-column-properties style:column-width="3.3458in" style:rel-column-width="32767*"/></style:style><style:style style:name="Table60.B" style:family="table-column"><style:table-column-properties style:column-width="3.3465in" style:rel-column-width="32768*"/></style:style><style:style style:name="Table62" style:family="table"><style:table-properties style:width="6.6924in" table:align="margins" style:may-break-between-rows="false"/></style:style><style:style style:name="Table62.A" style:family="table-column"><style:table-column-properties style:column-width="3.3458in" style:rel-column-width="32767*"/></style:style><style:style style:name="Table62.B" style:family="table-column"><style:table-column-properties style:column-width="3.3465in" style:rel-column-width="32768*"/></style:style><style:style style:name="Table63" style:family="table"><style:table-properties style:width="6.6924in" table:align="margins" style:may-break-between-rows="false"/></style:style><style:style style:name="Table63.A" style:family="table-column"><style:table-column-properties style:column-width="6.6924in" style:rel-column-width="65535*"/></style:style><style:style style:name="Table64" style:family="table"><style:table-properties style:width="6.6924in" table:align="margins" style:may-break-between-rows="false"/></style:style><style:style style:name="Table64.A" style:family="table-column"><style:table-column-properties style:column-width="6.6924in" style:rel-column-width="65535*"/></style:style><style:style style:name="Table65" style:family="table"><style:table-properties style:width="6.6924in" table:align="margins" style:may-break-between-rows="false"/></style:style><style:style style:name="Table65.A" style:family="table-column"><style:table-column-properties style:column-width="6.6924in" style:rel-column-width="65535*"/></style:style><style:style style:name="Table66" style:family="table"><style:table-properties style:width="6.6924in" table:align="margins" style:may-break-between-rows="false"/></style:style><style:style style:name="Table66.A" style:family="table-column"><style:table-column-properties style:column-width="6.6924in" style:rel-column-width="65535*"/></style:style><style:style style:name="Table35" style:family="table"><style:table-properties style:width="6.6924in" table:align="margins"/></style:style><style:style style:name="Table35.A" style:family="table-column"><style:table-column-properties style:column-width="3.3458in" style:rel-column-width="32767*"/></style:style><style:style style:name="Table35.B" style:family="table-column"><style:table-column-properties style:column-width="3.3465in" style:rel-column-width="32768*"/></style:style><style:style style:name="Table35.A1" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="0.05pt solid #000000" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table35.B1" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border="0.05pt solid #000000"/></style:style><style:style style:name="Table35.A2" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table35.B2" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table36" style:family="table"><style:table-properties style:width="6.6924in" table:align="margins"/></style:style><style:style style:name="Table36.A" style:family="table-column"><style:table-column-properties style:column-width="3.6903in" style:rel-column-width="36137*"/></style:style><style:style style:name="Table36.B" style:family="table-column"><style:table-column-properties style:column-width="1.4958in" style:rel-column-width="14647*"/></style:style><style:style style:name="Table36.C" style:family="table-column"><style:table-column-properties style:column-width="1.5063in" style:rel-column-width="14751*"/></style:style><style:style style:name="Table36.A1" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="0.05pt solid #000000" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table36.C1" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border="0.05pt solid #000000"/></style:style><style:style style:name="Table36.A2" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="none" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table36.C2" style:family="table-cell"><style:table-cell-properties fo:padding="0.0382in" fo:border-left="0.05pt solid #000000" fo:border-right="0.05pt solid #000000" fo:border-top="none" fo:border-bottom="0.05pt solid #000000"/></style:style><style:style style:name="Table67" style:family="table"><style:table-properties style:width="6.6924in" table:align="margins" style:may-break-between-rows="false"/></style:style><style:style style:name="Table67.A" style:family="table-column"><style:table-column-properties style:column-width="6.6924in" style:rel-column-width="65535*"/></style:style><style:style style:name="Table68" style:family="table"><style:table-properties style:width="6.6924in" table:align="margins" style:may-break-between-rows="false"/></style:style><style:style style:name="Table68.A" style:family="table-column"><style:table-column-properties style:column-width="6.6924in" style:rel-column-width="65535*"/></style:style><style:style style:name="Table69" style:family="table"><style:table-properties style:width="6.6924in" table:align="margins" style:may-break-between-rows="false"/></style:style><style:style style:name="Table69.A" style:family="table-column"><style:table-column-properties style:column-width="6.6924in" style:rel-column-width="65535*"/></style:style><style:style style:name="Table70" style:family="table"><style:table-properties style:width="6.6924in" table:align="margins" style:may-break-between-rows="false"/></style:style><style:style style:name="Table70.A" style:family="table-column"><style:table-column-properties style:column-width="6.6924in" style:rel-column-width="65535*"/></style:style><style:style style:name="Table37" style:family="table"><style:table-properties style:width="6.6924in" table:align="margins"/></style:style><style:style style:name="Table37.A" style:family="table-column"><style:table-column-properties style:column-width="0.9375in" style:rel-column-width="9180*"/></style:style><style:style style:name="Table37.B" style:family="table-column"><style:table-column-properties style:column-width="5.7549in" style:rel-column-width="56355*"/></style:style><style:style style:name="Table37.A1" style:family="table-cell"><style:table-cell-properties fo:padding="0in" fo:border="none"/></style:style><style:style style:name="Table55" style:family="table"><style:table-properties style:width="3.9243in" table:align="left"/></style:style><style:style style:name="Table55.A" style:family="table-column"><style:table-column-properties style:column-width="1.0549in"/></style:style><style:style style:name="Table55.B" style:family="table-column"><style:table-column-properties style:column-width="0.5in"/></style:style><style:style style:name="Table55.F" style:family="table-column"><style:table-column-properties style:column-width="0.8694in"/></style:style><style:style style:name="Table55.A1" style:family="table-cell"><style:table-cell-properties style:vertical-align="middle" fo:padding="0in" fo:border="none"/></style:style><style:style style:name="Table57" style:family="table"><style:table-properties style:width="3.9243in" table:align="left"/></style:style><style:style style:name="Table57.A" style:family="table-column"><style:table-column-properties style:column-width="1.0549in"/></style:style><style:style style:name="Table57.B" style:family="table-column"><style:table-column-properties style:column-width="0.5in"/></style:style><style:style style:name="Table57.F" style:family="table-column"><style:table-column-properties style:column-width="0.8694in"/></style:style><style:style style:name="Table57.A1" style:family="table-cell"><style:table-cell-properties style:vertical-align="middle" fo:padding="0in" fo:border="none"/></style:style><style:style style:name="P1" style:family="paragraph" style:parent-style-name="Header"><style:paragraph-properties fo:text-align="end" style:justify-single-word="false"/></style:style><style:style style:name="P2" style:family="paragraph" style:parent-style-name="Header"><style:paragraph-properties fo:text-align="end" style:justify-single-word="false"/><style:text-properties officeooo:rsid="04e95ae9" officeooo:paragraph-rsid="04ef74ec"/></style:style><style:style style:name="P3" style:family="paragraph" style:parent-style-name="Footer"><style:paragraph-properties fo:text-align="end" style:justify-single-word="false"/><style:text-properties officeooo:paragraph-rsid="04b0ebf5"/></style:style><style:style style:name="P4" style:family="paragraph" style:parent-style-name="Footer"><style:paragraph-properties fo:text-align="end" style:justify-single-word="false"/><style:text-properties officeooo:paragraph-rsid="04ef74ec"/></style:style><style:style style:name="P5" style:family="paragraph" style:parent-style-name="Footer"><style:text-properties officeooo:rsid="04aeac66" officeooo:paragraph-rsid="04aeac66"/></style:style><style:style style:name="P6" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG"/></style:style><style:style style:name="P7" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" fo:font-weight="bold" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="P8" style:family="paragraph" style:parent-style-name="Standard"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false"/><style:text-properties fo:language="bg" fo:country="BG" fo:font-weight="bold" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="P9" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" fo:font-weight="bold" officeooo:rsid="013688e2" officeooo:paragraph-rsid="013688e2" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="P10" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" fo:font-weight="bold" officeooo:rsid="021e7de5" officeooo:paragraph-rsid="021e7de5" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="P11" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" fo:font-weight="bold" officeooo:paragraph-rsid="021e7de5" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="P12" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:rsid="002fd33e" officeooo:paragraph-rsid="0030241d"/></style:style><style:style style:name="P13" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="00927c73"/></style:style><style:style style:name="P14" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="009773a3"/></style:style><style:style style:name="P15" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="009ac59e"/></style:style><style:style style:name="P16" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="009c6919"/></style:style><style:style style:name="P17" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="009f1680"/></style:style><style:style style:name="P18" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="00a1a5b4"/></style:style><style:style style:name="P19" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="00a34787"/></style:style><style:style style:name="P20" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="00a4f6f0"/></style:style><style:style style:name="P21" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="00a54844"/></style:style><style:style style:name="P22" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="00a8172d"/></style:style><style:style style:name="P23" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="00a90683"/></style:style><style:style style:name="P24" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="00a9d866"/></style:style><style:style style:name="P25" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="00ab018b"/></style:style><style:style style:name="P26" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="00acfc33"/></style:style><style:style style:name="P27" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="00af07b5"/></style:style><style:style style:name="P28" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="00af1e12"/></style:style><style:style style:name="P29" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="00afa54a"/></style:style><style:style style:name="P30" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="00b0578d"/></style:style><style:style style:name="P31" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="00b0fa35"/></style:style><style:style style:name="P32" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="00b117fc"/></style:style><style:style style:name="P33" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="00b3cf78"/></style:style><style:style style:name="P34" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="00c2347c"/></style:style><style:style style:name="P35" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="00c3960b"/></style:style><style:style style:name="P36" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="00c6243a"/></style:style><style:style style:name="P37" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="00c7d84b"/></style:style><style:style style:name="P38" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="00c92b84"/></style:style><style:style style:name="P39" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" style:text-underline-style="solid" style:text-underline-width="auto" style:text-underline-color="font-color" fo:font-weight="bold" officeooo:paragraph-rsid="0135cd8d" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="P40" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="013bef4b"/></style:style><style:style style:name="P41" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="015ac4d8"/></style:style><style:style style:name="P42" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="01718a6a"/></style:style><style:style style:name="P43" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="0174debf"/></style:style><style:style style:name="P44" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="0176c0af"/></style:style><style:style style:name="P45" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:rsid="018140b9" officeooo:paragraph-rsid="018a2066"/></style:style><style:style style:name="P46" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:rsid="018140b9" officeooo:paragraph-rsid="0465d984"/></style:style><style:style style:name="P47" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:rsid="0181c3af" officeooo:paragraph-rsid="0181c3af"/></style:style><style:style style:name="P48" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:rsid="0181c3af" officeooo:paragraph-rsid="0465d984"/></style:style><style:style style:name="P49" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:rsid="0181c3af" officeooo:paragraph-rsid="044bd142"/></style:style><style:style style:name="P50" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:rsid="01cc88fb" officeooo:paragraph-rsid="01cc88fb"/></style:style><style:style style:name="P51" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:rsid="01cc88fb" officeooo:paragraph-rsid="05a4531d"/></style:style><style:style style:name="P52" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:rsid="01cc88fb" officeooo:paragraph-rsid="05aae600"/></style:style><style:style style:name="P53" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:rsid="01cc88fb" officeooo:paragraph-rsid="05b26479"/></style:style><style:style style:name="P54" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:rsid="01cc88fb" officeooo:paragraph-rsid="0693df9e"/></style:style><style:style style:name="P55" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:rsid="01ce872c" officeooo:paragraph-rsid="01ce872c"/></style:style><style:style style:name="P56" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:rsid="01ce872c" officeooo:paragraph-rsid="063cd668"/></style:style><style:style style:name="P57" style:family="paragraph" style:parent-style-name="Standard"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false"/><style:text-properties fo:language="bg" fo:country="BG" officeooo:rsid="01ce872c" officeooo:paragraph-rsid="01ce872c"/></style:style><style:style style:name="P58" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:rsid="01ce872c" officeooo:paragraph-rsid="067a4ed5"/></style:style><style:style style:name="P59" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:rsid="01d3c7f6" officeooo:paragraph-rsid="01d3c7f6"/></style:style><style:style style:name="P60" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="01ec0377"/></style:style><style:style style:name="P61" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:rsid="021107d8" officeooo:paragraph-rsid="021107d8"/></style:style><style:style style:name="P62" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:rsid="02112a9a" officeooo:paragraph-rsid="02112a9a"/></style:style><style:style style:name="P63" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:rsid="0211d57d" officeooo:paragraph-rsid="0211d57d"/></style:style><style:style style:name="P64" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:rsid="0213daa2" officeooo:paragraph-rsid="0213daa2"/></style:style><style:style style:name="P65" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:rsid="02145e71" officeooo:paragraph-rsid="02145e71"/></style:style><style:style style:name="P66" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:rsid="0214f96b" officeooo:paragraph-rsid="0214f96b"/></style:style><style:style style:name="P67" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:rsid="0214f96b" officeooo:paragraph-rsid="02145e71"/></style:style><style:style style:name="P68" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="021e7de5"/></style:style><style:style style:name="P69" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:rsid="026e3a41" officeooo:paragraph-rsid="026e3a41"/></style:style><style:style style:name="P70" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="02713f9b"/></style:style><style:style style:name="P71" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="0282b437"/></style:style><style:style style:name="P72" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="0289a0fe"/></style:style><style:style style:name="P73" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="028b36de"/></style:style><style:style style:name="P74" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="02d59e59"/></style:style><style:style style:name="P75" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:rsid="02e9be7b" officeooo:paragraph-rsid="02e9be7b"/></style:style><style:style style:name="P76" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:rsid="02ea0674" officeooo:paragraph-rsid="02ea0674"/></style:style><style:style style:name="P77" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:rsid="02ea5810" officeooo:paragraph-rsid="02ea5810"/></style:style><style:style style:name="P78" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:rsid="02ea60ef" officeooo:paragraph-rsid="02ea60ef"/></style:style><style:style style:name="P79" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:rsid="02ebfb31" officeooo:paragraph-rsid="02ebfb31"/></style:style><style:style style:name="P80" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:rsid="02ecf355" officeooo:paragraph-rsid="02ecf355"/></style:style><style:style style:name="P81" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="02ef767c"/></style:style><style:style style:name="P82" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:rsid="02f092e1" officeooo:paragraph-rsid="02f092e1"/></style:style><style:style style:name="P83" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:rsid="02f131d7" officeooo:paragraph-rsid="02f131d7"/></style:style><style:style style:name="P84" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:rsid="02f3c95d" officeooo:paragraph-rsid="02f3c95d"/></style:style><style:style style:name="P85" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:rsid="02f53fc1" officeooo:paragraph-rsid="02f53fc1"/></style:style><style:style style:name="P86" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:rsid="02ef767c" officeooo:paragraph-rsid="02ef767c"/></style:style><style:style style:name="P87" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:rsid="045a057a" officeooo:paragraph-rsid="045a057a"/></style:style><style:style style:name="P88" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="04606294"/></style:style><style:style style:name="P89" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:rsid="017dca53" officeooo:paragraph-rsid="0465d984"/></style:style><style:style style:name="P90" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="0472a4c6"/></style:style><style:style style:name="P91" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:rsid="018dbbdd" officeooo:paragraph-rsid="0473d58a"/></style:style><style:style style:name="P92" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="0473d58a"/></style:style><style:style style:name="P93" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="04a2edbb"/></style:style><style:style style:name="P94" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="04a47c3f"/></style:style><style:style style:name="P95" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="04a57a66"/></style:style><style:style style:name="P96" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="04bd253c"/></style:style><style:style style:name="P97" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" fo:background-color="transparent"/></style:style><style:style style:name="P98" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="0504e488" fo:background-color="transparent"/></style:style><style:style style:name="P99" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="05077676" fo:background-color="transparent"/></style:style><style:style style:name="P100" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="0508f3b6" fo:background-color="transparent"/></style:style><style:style style:name="P101" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="050975fd" fo:background-color="transparent"/></style:style><style:style style:name="P102" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="050b7d30" fo:background-color="transparent"/></style:style><style:style style:name="P103" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="050d662b" fo:background-color="transparent"/></style:style><style:style style:name="P104" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="050e10f1" fo:background-color="transparent"/></style:style><style:style style:name="P105" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="050f18f6" fo:background-color="transparent"/></style:style><style:style style:name="P106" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="050f545d" fo:background-color="transparent"/></style:style><style:style style:name="P107" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="0504e488"/></style:style><style:style style:name="P108" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:rsid="0504e488" officeooo:paragraph-rsid="0504e488"/></style:style><style:style style:name="P109" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="052e40cd"/></style:style><style:style style:name="P110" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="054940f2"/></style:style><style:style style:name="P111" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="05521f8c"/></style:style><style:style style:name="P112" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="05799d92"/></style:style><style:style style:name="P113" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="0579cefa"/></style:style><style:style style:name="P114" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="057ba94e"/></style:style><style:style style:name="P115" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="057d7881"/></style:style><style:style style:name="P116" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="0580e645"/></style:style><style:style style:name="P117" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="0585a4cc"/></style:style><style:style style:name="P118" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="0587948e"/></style:style><style:style style:name="P119" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="05883fce"/></style:style><style:style style:name="P120" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="058979e7"/></style:style><style:style style:name="P121" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="058a7e5e"/></style:style><style:style style:name="P122" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="05915c4d"/></style:style><style:style style:name="P123" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="05a14402"/></style:style><style:style style:name="P124" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="05a3e9ea"/></style:style><style:style style:name="P125" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="05a8774a"/></style:style><style:style style:name="P126" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="05aa14df"/></style:style><style:style style:name="P127" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="05aae600"/></style:style><style:style style:name="P128" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="059f12b9"/></style:style><style:style style:name="P129" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="05ac361e"/></style:style><style:style style:name="P130" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="05b26479"/></style:style><style:style style:name="P131" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="05b4a7a6"/></style:style><style:style style:name="P132" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:rsid="01b9ac27" officeooo:paragraph-rsid="05cf49aa"/></style:style><style:style style:name="P133" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="05d077e5"/></style:style><style:style style:name="P134" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="05d8f7c9"/></style:style><style:style style:name="P135" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="05dc0dd3"/></style:style><style:style style:name="P136" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="05fa0a91"/></style:style><style:style style:name="P137" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:rsid="0296be4f" officeooo:paragraph-rsid="05fa0a91"/></style:style><style:style style:name="P138" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:rsid="029b9c52" officeooo:paragraph-rsid="05fa0a91"/></style:style><style:style style:name="P139" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="060f33b9"/></style:style><style:style style:name="P140" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="0610475a"/></style:style><style:style style:name="P141" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="06154073"/></style:style><style:style style:name="P142" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="061a15f6"/></style:style><style:style style:name="P143" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:rsid="061d67fb" officeooo:paragraph-rsid="061d67fb"/></style:style><style:style style:name="P144" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:rsid="061d67fb" officeooo:paragraph-rsid="062653f0"/></style:style><style:style style:name="P145" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:rsid="061d67fb" officeooo:paragraph-rsid="06294c3f"/></style:style><style:style style:name="P146" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="0622e6fb"/></style:style><style:style style:name="P147" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="062653f0"/></style:style><style:style style:name="P148" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="06294c3f"/></style:style><style:style style:name="P149" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="062a1cf5"/></style:style><style:style style:name="P150" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:rsid="061f5372"/></style:style><style:style style:name="P151" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:rsid="061f5372" officeooo:paragraph-rsid="062653f0"/></style:style><style:style style:name="P152" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="062e6169"/></style:style><style:style style:name="P153" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="05d2c62d"/></style:style><style:style style:name="P154" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="01c36773"/></style:style><style:style style:name="P155" style:family="paragraph" style:parent-style-name="Standard"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false"/><style:text-properties fo:language="bg" fo:country="BG"/></style:style><style:style style:name="P156" style:family="paragraph" style:parent-style-name="Standard"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false"/><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="052e40cd"/></style:style><style:style style:name="P157" style:family="paragraph" style:parent-style-name="Standard"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false"/><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="05806133"/></style:style><style:style style:name="P158" style:family="paragraph" style:parent-style-name="Standard"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false"/><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="05aae600"/></style:style><style:style style:name="P159" style:family="paragraph" style:parent-style-name="Standard"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false"/><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="01c36773"/></style:style><style:style style:name="P160" style:family="paragraph" style:parent-style-name="Standard"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false"/><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="05018ce0"/></style:style><style:style style:name="P161" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="05806133"/></style:style><style:style style:name="P162" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="05018ce0"/></style:style><style:style style:name="P163" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:rsid="0665aded" officeooo:paragraph-rsid="0665aded"/></style:style><style:style style:name="P164" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:rsid="066614df" officeooo:paragraph-rsid="066614df"/></style:style><style:style style:name="P165" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:rsid="066fa76f" officeooo:paragraph-rsid="066fa76f"/></style:style><style:style style:name="P166" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:rsid="066fa76f" officeooo:paragraph-rsid="0679261d"/></style:style><style:style style:name="P167" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:rsid="067233f5" officeooo:paragraph-rsid="067233f5"/></style:style><style:style style:name="P168" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="0679261d"/></style:style><style:style style:name="P169" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="067a4ed5"/></style:style><style:style style:name="P170" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="067e86c0"/></style:style><style:style style:name="P171" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="0686a708"/></style:style><style:style style:name="P172" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="068bec3d"/></style:style><style:style style:name="P173" style:family="paragraph" style:parent-style-name="Standard"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false"/><style:text-properties fo:font-size="16pt" fo:language="bg" fo:country="BG" fo:font-weight="bold" style:font-size-asian="16pt" style:font-weight-asian="bold" style:font-size-complex="16pt" style:font-weight-complex="bold"/></style:style><style:style style:name="P174" style:family="paragraph" style:parent-style-name="Standard"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false"/><style:text-properties fo:font-weight="bold" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="P175" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties officeooo:rsid="01ef7f26" officeooo:paragraph-rsid="0465d984"/></style:style><style:style style:name="P176" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties officeooo:rsid="01ef7f26" officeooo:paragraph-rsid="046cbe2d"/></style:style><style:style style:name="P177" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties officeooo:rsid="044bd142" officeooo:paragraph-rsid="0465d984"/></style:style><style:style style:name="P178" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties officeooo:paragraph-rsid="04748914"/></style:style><style:style style:name="P179" style:family="paragraph" style:parent-style-name="Standard"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false"/><style:text-properties fo:font-size="26pt" fo:language="bg" fo:country="BG" fo:font-weight="bold" style:font-size-asian="26pt" style:font-weight-asian="bold" style:font-size-complex="26pt" style:font-weight-complex="bold"/></style:style><style:style style:name="P180" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties officeooo:paragraph-rsid="04a2edbb"/></style:style><style:style style:name="P181" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties officeooo:paragraph-rsid="04a7f493"/></style:style><style:style style:name="P182" style:family="paragraph" style:parent-style-name="Standard"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false"/></style:style><style:style style:name="P183" style:family="paragraph" style:parent-style-name="Standard"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false"/><style:text-properties officeooo:paragraph-rsid="04ab19cc"/></style:style><style:style style:name="P184" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties officeooo:paragraph-rsid="04bf49fb"/></style:style><style:style style:name="P185" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties officeooo:paragraph-rsid="04c23624"/></style:style><style:style style:name="P186" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties officeooo:paragraph-rsid="04c34407"/></style:style><style:style style:name="P187" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties officeooo:paragraph-rsid="058297e7"/></style:style><style:style style:name="P188" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties officeooo:paragraph-rsid="058c34eb"/></style:style><style:style style:name="P189" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties officeooo:paragraph-rsid="058f1924"/></style:style><style:style style:name="P190" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties officeooo:paragraph-rsid="058f2173"/></style:style><style:style style:name="P191" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties officeooo:paragraph-rsid="05aae600"/></style:style><style:style style:name="P192" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties officeooo:paragraph-rsid="05fe3fae"/></style:style><style:style style:name="P193" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties officeooo:paragraph-rsid="0608aaba"/></style:style><style:style style:name="P194" style:family="paragraph" style:parent-style-name="Standard"><style:text-properties officeooo:paragraph-rsid="063cd668"/></style:style><style:style style:name="P195" style:family="paragraph" style:parent-style-name="Standard"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false" style:border-line-width-bottom="0.0138in 0.0138in 0.0098in" fo:padding="0.0291in" fo:border-left="none" fo:border-right="none" fo:border-top="none" fo:border-bottom="2.69pt double #000000" style:join-border="false"/><style:text-properties fo:font-size="16pt" fo:language="bg" fo:country="BG" fo:font-weight="bold" style:font-size-asian="16pt" style:font-weight-asian="bold" style:font-size-complex="16pt" style:font-weight-complex="bold"/></style:style><style:style style:name="P196" style:family="paragraph" style:parent-style-name="Standard"><style:paragraph-properties fo:text-align="start" style:justify-single-word="false" style:border-line-width-bottom="0.0138in 0.0138in 0.0098in" fo:padding="0.0291in" fo:border-left="none" fo:border-right="none" fo:border-top="none" fo:border-bottom="2.69pt double #000000" style:join-border="false"/><style:text-properties officeooo:paragraph-rsid="04777e41"/></style:style><style:style style:name="P197" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false"/><style:text-properties fo:font-weight="bold" officeooo:rsid="008a6f19" officeooo:paragraph-rsid="008a6f19" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="P198" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false"/><style:text-properties fo:font-weight="bold" officeooo:rsid="008a6f19" officeooo:paragraph-rsid="008caa8f" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="P199" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false"/><style:text-properties fo:font-weight="bold" officeooo:rsid="008a6f19" officeooo:paragraph-rsid="00903a8d" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="P200" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false"/><style:text-properties fo:font-weight="bold" officeooo:rsid="008a6f19" officeooo:paragraph-rsid="00927c73" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="P201" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false"/><style:text-properties fo:font-weight="bold" officeooo:rsid="0095d9bd" officeooo:paragraph-rsid="0095d9bd" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="P202" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false"/><style:text-properties fo:font-weight="bold" officeooo:rsid="00993f88" officeooo:paragraph-rsid="00993f88" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="P203" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false"/><style:text-properties fo:font-weight="bold" officeooo:rsid="009bc324" officeooo:paragraph-rsid="009bc324" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="P204" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false"/><style:text-properties fo:font-weight="bold" officeooo:rsid="009dfcfc" officeooo:paragraph-rsid="009dfcfc" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="P205" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false"/><style:text-properties fo:font-weight="bold" officeooo:rsid="00a01498" officeooo:paragraph-rsid="00a01498" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="P206" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false"/><style:text-properties fo:font-weight="bold" officeooo:rsid="00a1a5b4" officeooo:paragraph-rsid="00a1a5b4" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="P207" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false"/><style:text-properties fo:font-weight="bold" officeooo:rsid="00a46c71" officeooo:paragraph-rsid="00a46c71" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="P208" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false"/><style:text-properties fo:font-weight="bold" officeooo:rsid="00a4f6f0" officeooo:paragraph-rsid="00a4f6f0" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="P209" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false"/><style:text-properties fo:font-weight="bold" officeooo:rsid="00a66ffa" officeooo:paragraph-rsid="00a66ffa" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="P210" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false"/><style:text-properties fo:font-weight="bold" officeooo:rsid="00a8172d" officeooo:paragraph-rsid="00a8172d" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="P211" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false"/><style:text-properties fo:font-weight="bold" officeooo:rsid="00a9d212" officeooo:paragraph-rsid="00a9d212" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="P212" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false"/><style:text-properties fo:font-weight="bold" officeooo:rsid="00a9d866" officeooo:paragraph-rsid="00a9d866" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="P213" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false"/><style:text-properties fo:font-weight="bold" officeooo:rsid="00ab018b" officeooo:paragraph-rsid="00ab018b" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="P214" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false"/><style:text-properties fo:font-weight="bold" officeooo:rsid="00acfc33" officeooo:paragraph-rsid="00acfc33" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="P215" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false"/><style:text-properties fo:font-weight="bold" officeooo:rsid="00af07b5" officeooo:paragraph-rsid="00af07b5" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="P216" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false"/><style:text-properties fo:font-weight="bold" officeooo:rsid="00af1e12" officeooo:paragraph-rsid="00af1e12" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="P217" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false"/><style:text-properties fo:font-weight="bold" officeooo:rsid="00afa54a" officeooo:paragraph-rsid="00afa54a" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="P218" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false"/><style:text-properties fo:font-weight="bold" officeooo:rsid="00b0578d" officeooo:paragraph-rsid="00b0578d" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="P219" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false"/><style:text-properties fo:font-weight="bold" officeooo:rsid="00b0fa35" officeooo:paragraph-rsid="00b0fa35" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="P220" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false"/><style:text-properties fo:font-weight="bold" officeooo:rsid="00b117fc" officeooo:paragraph-rsid="00b117fc" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="P221" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false"/><style:text-properties fo:font-weight="bold" officeooo:rsid="00b3cf78" officeooo:paragraph-rsid="00b3cf78" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="P222" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false"/><style:text-properties fo:font-weight="bold" officeooo:rsid="00bc2aec" officeooo:paragraph-rsid="00bc2aec" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="P223" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false"/><style:text-properties fo:font-weight="bold" officeooo:rsid="00c142b6" officeooo:paragraph-rsid="00c142b6" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="P224" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false"/><style:text-properties fo:font-weight="bold" officeooo:rsid="00c36f57" officeooo:paragraph-rsid="00c36f57" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="P225" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false"/><style:text-properties fo:font-weight="bold" officeooo:rsid="00c55315" officeooo:paragraph-rsid="00c55315" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="P226" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false"/><style:text-properties fo:font-weight="bold" officeooo:rsid="00c6d257" officeooo:paragraph-rsid="00c6d257" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="P227" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false"/><style:text-properties fo:font-weight="bold" officeooo:rsid="00c7d84b" officeooo:paragraph-rsid="00c7d84b" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="P228" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false"/><style:text-properties fo:font-weight="bold" officeooo:rsid="00c92b84" officeooo:paragraph-rsid="00c92b84" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="P229" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false"/></style:style><style:style style:name="P230" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false"/><style:text-properties officeooo:paragraph-rsid="008caa8f"/></style:style><style:style style:name="P231" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false"/><style:text-properties officeooo:paragraph-rsid="00903a8d"/></style:style><style:style style:name="P232" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false"/><style:text-properties officeooo:paragraph-rsid="00927c73"/></style:style><style:style style:name="P233" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false"/><style:text-properties officeooo:paragraph-rsid="0094e13e"/></style:style><style:style style:name="P234" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false"/><style:text-properties officeooo:paragraph-rsid="009773a3"/></style:style><style:style style:name="P235" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false"/><style:text-properties officeooo:paragraph-rsid="009ac59e"/></style:style><style:style style:name="P236" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false"/><style:text-properties officeooo:paragraph-rsid="009c6919"/></style:style><style:style style:name="P237" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false"/><style:text-properties officeooo:paragraph-rsid="009f1680"/></style:style><style:style style:name="P238" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false"/><style:text-properties officeooo:paragraph-rsid="00a1a5b4"/></style:style><style:style style:name="P239" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false"/><style:text-properties officeooo:paragraph-rsid="00a34787"/></style:style><style:style style:name="P240" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false"/><style:text-properties officeooo:paragraph-rsid="00a4f6f0"/></style:style><style:style style:name="P241" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false"/><style:text-properties officeooo:paragraph-rsid="00a54844"/></style:style><style:style style:name="P242" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false"/><style:text-properties officeooo:paragraph-rsid="00a8172d"/></style:style><style:style style:name="P243" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false"/><style:text-properties officeooo:paragraph-rsid="00a90683"/></style:style><style:style style:name="P244" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false"/><style:text-properties officeooo:paragraph-rsid="00a9d866"/></style:style><style:style style:name="P245" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false"/><style:text-properties officeooo:paragraph-rsid="00ab018b"/></style:style><style:style style:name="P246" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false"/><style:text-properties officeooo:paragraph-rsid="00acfc33"/></style:style><style:style style:name="P247" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false"/><style:text-properties officeooo:paragraph-rsid="00af07b5"/></style:style><style:style style:name="P248" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false"/><style:text-properties officeooo:paragraph-rsid="00af1e12"/></style:style><style:style style:name="P249" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false"/><style:text-properties officeooo:paragraph-rsid="00afa54a"/></style:style><style:style style:name="P250" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false"/><style:text-properties officeooo:paragraph-rsid="00b0578d"/></style:style><style:style style:name="P251" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false"/><style:text-properties officeooo:paragraph-rsid="00b0fa35"/></style:style><style:style style:name="P252" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false"/><style:text-properties officeooo:paragraph-rsid="00b117fc"/></style:style><style:style style:name="P253" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false"/><style:text-properties officeooo:paragraph-rsid="00b3cf78"/></style:style><style:style style:name="P254" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false"/><style:text-properties officeooo:paragraph-rsid="00b8ab40"/></style:style><style:style style:name="P255" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false"/><style:text-properties officeooo:paragraph-rsid="00bf929f"/></style:style><style:style style:name="P256" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false"/><style:text-properties officeooo:paragraph-rsid="00c2347c"/></style:style><style:style style:name="P257" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false"/><style:text-properties officeooo:paragraph-rsid="00c3960b"/></style:style><style:style style:name="P258" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false"/><style:text-properties officeooo:paragraph-rsid="00c6243a"/></style:style><style:style style:name="P259" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false"/><style:text-properties officeooo:paragraph-rsid="00c7d84b"/></style:style><style:style style:name="P260" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false"/><style:text-properties officeooo:paragraph-rsid="00c92b84"/></style:style><style:style style:name="P261" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:paragraph-rsid="008caa8f"/></style:style><style:style style:name="P262" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:paragraph-rsid="00903a8d"/></style:style><style:style style:name="P263" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:paragraph-rsid="00927c73"/></style:style><style:style style:name="P264" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:paragraph-rsid="0094e13e"/></style:style><style:style style:name="P265" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:paragraph-rsid="009773a3"/></style:style><style:style style:name="P266" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:paragraph-rsid="009ac59e"/></style:style><style:style style:name="P267" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:paragraph-rsid="009c6919"/></style:style><style:style style:name="P268" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:paragraph-rsid="009f1680"/></style:style><style:style style:name="P269" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:paragraph-rsid="00a1a5b4"/></style:style><style:style style:name="P270" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:paragraph-rsid="00a34787"/></style:style><style:style style:name="P271" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:paragraph-rsid="00a4f6f0"/></style:style><style:style style:name="P272" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:paragraph-rsid="00a54844"/></style:style><style:style style:name="P273" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:paragraph-rsid="00a90683"/></style:style><style:style style:name="P274" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:paragraph-rsid="00a9d866"/></style:style><style:style style:name="P275" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:paragraph-rsid="00ab018b"/></style:style><style:style style:name="P276" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:paragraph-rsid="00acfc33"/></style:style><style:style style:name="P277" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:paragraph-rsid="00af07b5"/></style:style><style:style style:name="P278" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:paragraph-rsid="00af1e12"/></style:style><style:style style:name="P279" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:paragraph-rsid="00afa54a"/></style:style><style:style style:name="P280" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:paragraph-rsid="00b0578d"/></style:style><style:style style:name="P281" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:paragraph-rsid="00b0fa35"/></style:style><style:style style:name="P282" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:paragraph-rsid="00b117fc"/></style:style><style:style style:name="P283" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:paragraph-rsid="00b8ab40"/></style:style><style:style style:name="P284" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:rsid="00bd2a6f" officeooo:paragraph-rsid="00bd2a6f"/></style:style><style:style style:name="P285" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:rsid="00bd65f3" officeooo:paragraph-rsid="00bd65f3"/></style:style><style:style style:name="P286" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:paragraph-rsid="00bf929f"/></style:style><style:style style:name="P287" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false"/><style:text-properties officeooo:rsid="00bf929f" officeooo:paragraph-rsid="00bf929f"/></style:style><style:style style:name="P288" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false"/><style:text-properties officeooo:rsid="00bf929f" officeooo:paragraph-rsid="00c2347c"/></style:style><style:style style:name="P289" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false"/><style:text-properties officeooo:rsid="00bf929f" officeooo:paragraph-rsid="00c3960b"/></style:style><style:style style:name="P290" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false"/><style:text-properties officeooo:rsid="00bf929f" officeooo:paragraph-rsid="00c6243a"/></style:style><style:style style:name="P291" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false"/><style:text-properties officeooo:rsid="00bf929f" officeooo:paragraph-rsid="00c7d84b"/></style:style><style:style style:name="P292" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false"/><style:text-properties officeooo:rsid="00bf929f" officeooo:paragraph-rsid="00c92b84"/></style:style><style:style style:name="P293" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:paragraph-rsid="00c2347c"/></style:style><style:style style:name="P294" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:paragraph-rsid="00c3960b"/></style:style><style:style style:name="P295" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:paragraph-rsid="00c6243a"/></style:style><style:style style:name="P296" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:paragraph-rsid="00c7d84b"/></style:style><style:style style:name="P297" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:paragraph-rsid="00c92b84"/></style:style><style:style style:name="P298" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:rsid="00cae025" officeooo:paragraph-rsid="00cae025"/></style:style><style:style style:name="P299" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:rsid="00cb67c6" officeooo:paragraph-rsid="00cb67c6"/></style:style><style:style style:name="P300" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:rsid="00cbe498" officeooo:paragraph-rsid="00cbe498"/></style:style><style:style style:name="P301" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:rsid="00ccc320" officeooo:paragraph-rsid="00ccc320"/></style:style><style:style style:name="P302" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:rsid="00ce86f2" officeooo:paragraph-rsid="00c6243a"/></style:style><style:style style:name="P303" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:rsid="00ce86f2" officeooo:paragraph-rsid="00ce86f2"/></style:style><style:style style:name="P304" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:rsid="00cf2bae" officeooo:paragraph-rsid="00cf2bae"/></style:style><style:style style:name="P305" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:rsid="00d1e682" officeooo:paragraph-rsid="00d1e682"/></style:style><style:style style:name="P306" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:paragraph-properties fo:text-align="start" style:justify-single-word="false"/></style:style><style:style style:name="P307" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:rsid="00dc5f91" officeooo:paragraph-rsid="00dc5f91"/></style:style><style:style style:name="P308" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:rsid="00e68529" officeooo:paragraph-rsid="00e68529"/></style:style><style:style style:name="P309" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:rsid="00eb3f1b" officeooo:paragraph-rsid="00eb3f1b"/></style:style><style:style style:name="P310" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:rsid="00eb3f1b" officeooo:paragraph-rsid="00ed0fe9"/></style:style><style:style style:name="P311" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:rsid="00eb3f1b" officeooo:paragraph-rsid="00ee8b45"/></style:style><style:style style:name="P312" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:rsid="00eb3f1b" officeooo:paragraph-rsid="00f14f31"/></style:style><style:style style:name="P313" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:rsid="00eb3f1b" officeooo:paragraph-rsid="01331860"/></style:style><style:style style:name="P314" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:rsid="00eb3f1b" officeooo:paragraph-rsid="01337493"/></style:style><style:style style:name="P315" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:rsid="00f8c253" officeooo:paragraph-rsid="00f8c253"/></style:style><style:style style:name="P316" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:rsid="00f95d42" officeooo:paragraph-rsid="00f95d42"/></style:style><style:style style:name="P317" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:paragraph-rsid="01027c1d"/></style:style><style:style style:name="P318" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:rsid="0107a244" officeooo:paragraph-rsid="0107a244"/></style:style><style:style style:name="P319" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:rsid="01105af8" officeooo:paragraph-rsid="01105af8"/></style:style><style:style style:name="P320" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:rsid="0117372c" officeooo:paragraph-rsid="0117372c"/></style:style><style:style style:name="P321" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:rsid="011ea4c7" officeooo:paragraph-rsid="011ea4c7"/></style:style><style:style style:name="P322" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:rsid="011ee378" officeooo:paragraph-rsid="011ee378"/></style:style><style:style style:name="P323" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:rsid="01226416" officeooo:paragraph-rsid="01226416"/></style:style><style:style style:name="P324" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:rsid="012372b8" officeooo:paragraph-rsid="012372b8"/></style:style><style:style style:name="P325" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:rsid="0123d0ff" officeooo:paragraph-rsid="0123d0ff"/></style:style><style:style style:name="P326" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:paragraph-rsid="0124f9c2"/></style:style><style:style style:name="P327" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:rsid="012672a9" officeooo:paragraph-rsid="012672a9"/></style:style><style:style style:name="P328" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:rsid="0127b5c5" officeooo:paragraph-rsid="0127b5c5"/></style:style><style:style style:name="P329" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:rsid="012a6388" officeooo:paragraph-rsid="012a6388"/></style:style><style:style style:name="P330" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:rsid="012ba68a" officeooo:paragraph-rsid="012ba68a"/></style:style><style:style style:name="P331" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:rsid="012ce028" officeooo:paragraph-rsid="012ce028"/></style:style><style:style style:name="P332" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:rsid="012e16cd" officeooo:paragraph-rsid="012e16cd"/></style:style><style:style style:name="P333" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:rsid="012ffa43" officeooo:paragraph-rsid="012eafe7"/></style:style><style:style style:name="P334" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:rsid="012ffa43" officeooo:paragraph-rsid="012ffa43"/></style:style><style:style style:name="P335" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:rsid="0131312f" officeooo:paragraph-rsid="01331860"/></style:style><style:style style:name="P336" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:rsid="0131312f" officeooo:paragraph-rsid="01337493"/></style:style><style:style style:name="P337" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:rsid="01320b05" officeooo:paragraph-rsid="01320b05"/></style:style><style:style style:name="P338" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:rsid="01320b05" officeooo:paragraph-rsid="01337493"/></style:style><style:style style:name="P339" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:rsid="01356430" officeooo:paragraph-rsid="01356430"/></style:style><style:style style:name="P340" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:rsid="04995853" officeooo:paragraph-rsid="04995853"/></style:style><style:style style:name="P341" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:rsid="04a126c7" officeooo:paragraph-rsid="04a126c7"/></style:style><style:style style:name="P342" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:rsid="02228356" officeooo:paragraph-rsid="04a2edbb"/></style:style><style:style style:name="P343" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties fo:language="en" fo:country="US" officeooo:rsid="02228356" officeooo:paragraph-rsid="04a2edbb" style:language-asian="zxx" style:country-asian="none" style:language-complex="zxx" style:country-complex="none"/></style:style><style:style style:name="P344" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties fo:language="en" fo:country="US" officeooo:rsid="02244b73" officeooo:paragraph-rsid="04a2edbb" style:language-asian="zxx" style:country-asian="none" style:language-complex="zxx" style:country-complex="none"/></style:style><style:style style:name="P345" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties fo:language="en" fo:country="US" officeooo:rsid="02263f41" officeooo:paragraph-rsid="04a2edbb" style:language-asian="zxx" style:country-asian="none" style:language-complex="zxx" style:country-complex="none"/></style:style><style:style style:name="P346" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties fo:language="en" fo:country="US" officeooo:rsid="02a3c531" officeooo:paragraph-rsid="04a2edbb" style:language-asian="zxx" style:country-asian="none" style:language-complex="zxx" style:country-complex="none"/></style:style><style:style style:name="P347" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties fo:language="en" fo:country="US" officeooo:rsid="02bb26f9" officeooo:paragraph-rsid="04a2edbb" style:language-asian="zxx" style:country-asian="none" style:language-complex="zxx" style:country-complex="none"/></style:style><style:style style:name="P348" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties fo:language="en" fo:country="US" officeooo:rsid="02bea3eb" officeooo:paragraph-rsid="04a2edbb" style:language-asian="zxx" style:country-asian="none" style:language-complex="zxx" style:country-complex="none"/></style:style><style:style style:name="P349" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties fo:language="en" fo:country="US" officeooo:rsid="02c2ba89" officeooo:paragraph-rsid="04a2edbb" style:language-asian="zxx" style:country-asian="none" style:language-complex="zxx" style:country-complex="none"/></style:style><style:style style:name="P350" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties fo:language="en" fo:country="US" officeooo:rsid="02c55b24" officeooo:paragraph-rsid="04a2edbb" style:language-asian="zxx" style:country-asian="none" style:language-complex="zxx" style:country-complex="none"/></style:style><style:style style:name="P351" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties fo:language="en" fo:country="US" officeooo:rsid="02c675fa" officeooo:paragraph-rsid="04a2edbb" style:language-asian="zxx" style:country-asian="none" style:language-complex="zxx" style:country-complex="none"/></style:style><style:style style:name="P352" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties fo:language="en" fo:country="US" officeooo:rsid="02c8484b" officeooo:paragraph-rsid="04a2edbb" style:language-asian="zxx" style:country-asian="none" style:language-complex="zxx" style:country-complex="none"/></style:style><style:style style:name="P353" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties fo:language="en" fo:country="US" officeooo:rsid="03006a42" officeooo:paragraph-rsid="04a2edbb" style:language-asian="zxx" style:country-asian="none" style:language-complex="zxx" style:country-complex="none"/></style:style><style:style style:name="P354" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties fo:language="en" fo:country="US" officeooo:rsid="03c7fb5a" officeooo:paragraph-rsid="04a2edbb" style:language-asian="zxx" style:country-asian="none" style:language-complex="zxx" style:country-complex="none"/></style:style><style:style style:name="P355" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties fo:language="en" fo:country="US" officeooo:rsid="03e0dc7f" officeooo:paragraph-rsid="04a2edbb" style:language-asian="zxx" style:country-asian="none" style:language-complex="zxx" style:country-complex="none"/></style:style><style:style style:name="P356" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties fo:language="en" fo:country="US" officeooo:rsid="03ede995" officeooo:paragraph-rsid="04a2edbb" style:language-asian="zxx" style:country-asian="none" style:language-complex="zxx" style:country-complex="none"/></style:style><style:style style:name="P357" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties fo:language="en" fo:country="US" officeooo:rsid="0414d3ca" officeooo:paragraph-rsid="04a2edbb" style:language-asian="zxx" style:country-asian="none" style:language-complex="zxx" style:country-complex="none"/></style:style><style:style style:name="P358" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties fo:language="en" fo:country="US" officeooo:rsid="04193b88" officeooo:paragraph-rsid="04a2edbb" style:language-asian="zxx" style:country-asian="none" style:language-complex="zxx" style:country-complex="none"/></style:style><style:style style:name="P359" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties fo:language="en" fo:country="US" officeooo:rsid="0430fa18" officeooo:paragraph-rsid="04a2edbb" style:language-asian="zxx" style:country-asian="none" style:language-complex="zxx" style:country-complex="none"/></style:style><style:style style:name="P360" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:rsid="02244b73" officeooo:paragraph-rsid="04a2edbb"/></style:style><style:style style:name="P361" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:rsid="02263f41" officeooo:paragraph-rsid="04a2edbb"/></style:style><style:style style:name="P362" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:rsid="02a3c531" officeooo:paragraph-rsid="04a2edbb"/></style:style><style:style style:name="P363" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:rsid="02bb26f9" officeooo:paragraph-rsid="04a2edbb"/></style:style><style:style style:name="P364" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:rsid="02bea3eb" officeooo:paragraph-rsid="04a2edbb"/></style:style><style:style style:name="P365" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:rsid="02c2ba89" officeooo:paragraph-rsid="04a2edbb"/></style:style><style:style style:name="P366" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:rsid="02c447e4" officeooo:paragraph-rsid="04a2edbb"/></style:style><style:style style:name="P367" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:rsid="02c675fa" officeooo:paragraph-rsid="04a2edbb"/></style:style><style:style style:name="P368" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:rsid="02c8484b" officeooo:paragraph-rsid="04a2edbb"/></style:style><style:style style:name="P369" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:rsid="03006a42" officeooo:paragraph-rsid="04a2edbb"/></style:style><style:style style:name="P370" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:rsid="03c7fb5a" officeooo:paragraph-rsid="04a2edbb"/></style:style><style:style style:name="P371" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:rsid="03e0dc7f" officeooo:paragraph-rsid="04a2edbb"/></style:style><style:style style:name="P372" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:rsid="03ede995" officeooo:paragraph-rsid="04a2edbb"/></style:style><style:style style:name="P373" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:rsid="0414d3ca" officeooo:paragraph-rsid="04a2edbb"/></style:style><style:style style:name="P374" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:rsid="04193b88" officeooo:paragraph-rsid="04a2edbb"/></style:style><style:style style:name="P375" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:rsid="0430fa18" officeooo:paragraph-rsid="04a2edbb"/></style:style><style:style style:name="P376" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:rsid="026cff38" officeooo:paragraph-rsid="04a2edbb"/></style:style><style:style style:name="P377" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:rsid="02871d8d" officeooo:paragraph-rsid="04a2edbb"/></style:style><style:style style:name="P378" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:paragraph-rsid="04a2edbb"/></style:style><style:style style:name="P379" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:rsid="0512a359" officeooo:paragraph-rsid="0512a359"/></style:style><style:style style:name="P380" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:rsid="051448a1" officeooo:paragraph-rsid="051448a1"/></style:style><style:style style:name="P381" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:rsid="051448a1" officeooo:paragraph-rsid="0631d755"/></style:style><style:style style:name="P382" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:rsid="0516f2c8" officeooo:paragraph-rsid="0516f2c8"/></style:style><style:style style:name="P383" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:text-properties officeooo:paragraph-rsid="05a59312"/></style:style><style:style style:name="P384" style:family="paragraph" style:parent-style-name="Table"><style:text-properties officeooo:paragraph-rsid="02494a1b"/></style:style><style:style style:name="P385" style:family="paragraph" style:parent-style-name="Table"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="024b73b5"/></style:style><style:style style:name="P386" style:family="paragraph" style:parent-style-name="Table"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="024c27bc"/></style:style><style:style style:name="P387" style:family="paragraph" style:parent-style-name="Table"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="0251d9d3"/></style:style><style:style style:name="P388" style:family="paragraph" style:parent-style-name="Table"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="0253211f"/></style:style><style:style style:name="P389" style:family="paragraph" style:parent-style-name="Table"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="02565c50"/></style:style><style:style style:name="P390" style:family="paragraph" style:parent-style-name="Table"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="02576174"/></style:style><style:style style:name="P391" style:family="paragraph" style:parent-style-name="Table"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="025a42cc"/></style:style><style:style style:name="P392" style:family="paragraph" style:parent-style-name="Table"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="025b64b2"/></style:style><style:style style:name="P393" style:family="paragraph" style:parent-style-name="Table"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="025be9f1"/></style:style><style:style style:name="P394" style:family="paragraph" style:parent-style-name="Table"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="025cf1a4"/></style:style><style:style style:name="P395" style:family="paragraph" style:parent-style-name="Table"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="025d053f"/></style:style><style:style style:name="P396" style:family="paragraph" style:parent-style-name="Table"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="025e140f"/></style:style><style:style style:name="P397" style:family="paragraph" style:parent-style-name="Table"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="0261562a"/></style:style><style:style style:name="P398" style:family="paragraph" style:parent-style-name="Table"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="02645b67"/></style:style><style:style style:name="P399" style:family="paragraph" style:parent-style-name="Table"><style:text-properties fo:language="bg" fo:country="BG" officeooo:rsid="02645b67" officeooo:paragraph-rsid="02645b67"/></style:style><style:style style:name="P400" style:family="paragraph" style:parent-style-name="Table"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="02650cc7"/></style:style><style:style style:name="P401" style:family="paragraph" style:parent-style-name="Table"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="026a6d57"/></style:style><style:style style:name="P402" style:family="paragraph" style:parent-style-name="Table"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="026b3410"/></style:style><style:style style:name="P403" style:family="paragraph" style:parent-style-name="Table"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="05e7b856"/></style:style><style:style style:name="P404" style:family="paragraph" style:parent-style-name="Table"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="05e8f829"/></style:style><style:style style:name="P405" style:family="paragraph" style:parent-style-name="Subtitle"><style:paragraph-properties fo:break-before="page"/><style:text-properties officeooo:paragraph-rsid="04a2e840"/></style:style><style:style style:name="P406" style:family="paragraph" style:parent-style-name="Heading"><style:paragraph-properties fo:break-before="page"/></style:style><style:style style:name="P407" style:family="paragraph" style:parent-style-name="Illustration"><style:text-properties officeooo:paragraph-rsid="05d4639a"/></style:style><style:style style:name="P408" style:family="paragraph" style:parent-style-name="Illustration"><style:text-properties officeooo:paragraph-rsid="05d9369d"/></style:style><style:style style:name="P409" style:family="paragraph" style:parent-style-name="Illustration"><style:text-properties officeooo:paragraph-rsid="05fe3fae"/></style:style><style:style style:name="P410" style:family="paragraph" style:parent-style-name="Illustration"><style:text-properties officeooo:paragraph-rsid="0608aaba"/></style:style><style:style style:name="P411" style:family="paragraph" style:parent-style-name="Illustration"><style:text-properties officeooo:paragraph-rsid="0618302b"/></style:style><style:style style:name="P412" style:family="paragraph" style:parent-style-name="Illustration"><style:text-properties officeooo:paragraph-rsid="0639ac65"/></style:style><style:style style:name="P413" style:family="paragraph" style:parent-style-name="Illustration"><style:text-properties officeooo:paragraph-rsid="0652b5ce"/></style:style><style:style style:name="P414" style:family="paragraph" style:parent-style-name="Illustration"><style:text-properties officeooo:paragraph-rsid="06585518"/></style:style><style:style style:name="P415" style:family="paragraph" style:parent-style-name="Illustration"><style:text-properties officeooo:paragraph-rsid="065a7e65"/></style:style><style:style style:name="P416" style:family="paragraph" style:parent-style-name="Illustration"><style:text-properties officeooo:paragraph-rsid="065b8f9c"/></style:style><style:style style:name="P417" style:family="paragraph" style:parent-style-name="Illustration"><style:text-properties officeooo:paragraph-rsid="065db5ee"/></style:style><style:style style:name="P418" style:family="paragraph" style:parent-style-name="Table_20_Heading"><style:text-properties officeooo:paragraph-rsid="04a2edbb"/></style:style><style:style style:name="P419" style:family="paragraph" style:parent-style-name="Text_20_body"><style:text-properties fo:language="bg" fo:country="BG"/></style:style><style:style style:name="P420" style:family="paragraph" style:parent-style-name="Text_20_body"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="04a2e840"/></style:style><style:style style:name="P421" style:family="paragraph" style:parent-style-name="Text_20_body"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false"/><style:text-properties fo:language="bg" fo:country="BG"/></style:style><style:style style:name="P422" style:family="paragraph" style:parent-style-name="Text_20_body"><style:text-properties officeooo:paragraph-rsid="04a2e840"/></style:style><style:style style:name="P423" style:family="paragraph" style:parent-style-name="Source_20_Code"><style:text-properties officeooo:rsid="032845e9" officeooo:paragraph-rsid="04ea5979"/></style:style><style:style style:name="P424" style:family="paragraph" style:parent-style-name="Source_20_Code"><style:text-properties officeooo:rsid="03286724" officeooo:paragraph-rsid="04ea5979"/></style:style><style:style style:name="P425" style:family="paragraph" style:parent-style-name="Source_20_Code"><style:text-properties officeooo:rsid="0328b0f2" officeooo:paragraph-rsid="04ea5979"/></style:style><style:style style:name="P426" style:family="paragraph" style:parent-style-name="Source_20_Code"><style:text-properties officeooo:rsid="0329c28a" officeooo:paragraph-rsid="04ea5979"/></style:style><style:style style:name="P427" style:family="paragraph" style:parent-style-name="Source_20_Code"><style:text-properties officeooo:rsid="032ac163" officeooo:paragraph-rsid="04ea5979"/></style:style><style:style style:name="P428" style:family="paragraph" style:parent-style-name="Source_20_Code"><style:text-properties officeooo:rsid="032ba2d2" officeooo:paragraph-rsid="04ea5979"/></style:style><style:style style:name="P429" style:family="paragraph" style:parent-style-name="Source_20_Code"><style:text-properties officeooo:rsid="032d50fe" officeooo:paragraph-rsid="04ea5979"/></style:style><style:style style:name="P430" style:family="paragraph" style:parent-style-name="Source_20_Code"><style:text-properties officeooo:rsid="032ebc69" officeooo:paragraph-rsid="04ea5979"/></style:style><style:style style:name="P431" style:family="paragraph" style:parent-style-name="Source_20_Code"><style:text-properties officeooo:rsid="032f652f" officeooo:paragraph-rsid="04ea5979"/></style:style><style:style style:name="P432" style:family="paragraph" style:parent-style-name="Source_20_Code"><style:text-properties officeooo:rsid="033071be" officeooo:paragraph-rsid="04ea5979"/></style:style><style:style style:name="P433" style:family="paragraph" style:parent-style-name="Source_20_Code"><style:text-properties officeooo:rsid="03320345" officeooo:paragraph-rsid="04ea5979"/></style:style><style:style style:name="P434" style:family="paragraph" style:parent-style-name="Source_20_Code"><style:text-properties officeooo:rsid="03330b71" officeooo:paragraph-rsid="04ea5979"/></style:style><style:style style:name="P435" style:family="paragraph" style:parent-style-name="Source_20_Code"><style:text-properties officeooo:rsid="0334ebc2" officeooo:paragraph-rsid="04ea5979"/></style:style><style:style style:name="P436" style:family="paragraph" style:parent-style-name="Source_20_Code"><style:text-properties officeooo:rsid="0335fcce" officeooo:paragraph-rsid="04ea5979"/></style:style><style:style style:name="P437" style:family="paragraph" style:parent-style-name="Source_20_Code"><style:text-properties officeooo:rsid="0337d281" officeooo:paragraph-rsid="04ea5979"/></style:style><style:style style:name="P438" style:family="paragraph" style:parent-style-name="Source_20_Code"><style:text-properties officeooo:rsid="0338887d" officeooo:paragraph-rsid="04ea5979"/></style:style><style:style style:name="P439" style:family="paragraph" style:parent-style-name="Source_20_Code"><style:text-properties officeooo:rsid="033a47b2" officeooo:paragraph-rsid="04ea5979"/></style:style><style:style style:name="P440" style:family="paragraph" style:parent-style-name="Source_20_Code"><style:text-properties officeooo:rsid="033bdde9" officeooo:paragraph-rsid="04ea5979"/></style:style><style:style style:name="P441" style:family="paragraph" style:parent-style-name="Source_20_Code"><style:text-properties officeooo:rsid="033c1974" officeooo:paragraph-rsid="04ea5979"/></style:style><style:style style:name="P442" style:family="paragraph" style:parent-style-name="Source_20_Code"><style:text-properties officeooo:rsid="033de57d" officeooo:paragraph-rsid="04ea5979"/></style:style><style:style style:name="P443" style:family="paragraph" style:parent-style-name="Source_20_Code"><style:text-properties officeooo:rsid="033f68dc" officeooo:paragraph-rsid="04ea5979"/></style:style><style:style style:name="P444" style:family="paragraph" style:parent-style-name="Source_20_Code"><style:text-properties officeooo:rsid="03413c79" officeooo:paragraph-rsid="04ea5979"/></style:style><style:style style:name="P445" style:family="paragraph" style:parent-style-name="Source_20_Code"><style:text-properties officeooo:rsid="0343105b" officeooo:paragraph-rsid="04ea5979"/></style:style><style:style style:name="P446" style:family="paragraph" style:parent-style-name="Source_20_Code"><style:text-properties officeooo:rsid="03441ccb" officeooo:paragraph-rsid="04ea5979"/></style:style><style:style style:name="P447" style:family="paragraph" style:parent-style-name="Source_20_Code"><style:text-properties officeooo:rsid="03446bbd" officeooo:paragraph-rsid="04ea5979"/></style:style><style:style style:name="P448" style:family="paragraph" style:parent-style-name="Source_20_Code"><style:text-properties officeooo:rsid="034473ae" officeooo:paragraph-rsid="04ea5979"/></style:style><style:style style:name="P449" style:family="paragraph" style:parent-style-name="Source_20_Code"><style:text-properties officeooo:rsid="0345daa6" officeooo:paragraph-rsid="04ea5979"/></style:style><style:style style:name="P450" style:family="paragraph" style:parent-style-name="Source_20_Code"><style:text-properties officeooo:rsid="0347b132" officeooo:paragraph-rsid="04ea5979"/></style:style><style:style style:name="P451" style:family="paragraph" style:parent-style-name="Source_20_Code"><style:text-properties officeooo:rsid="03496b9f" officeooo:paragraph-rsid="04ea5979"/></style:style><style:style style:name="P452" style:family="paragraph" style:parent-style-name="Source_20_Code"><style:text-properties officeooo:rsid="0349d6ce" officeooo:paragraph-rsid="04ea5979"/></style:style><style:style style:name="P453" style:family="paragraph" style:parent-style-name="Source_20_Code"><style:text-properties officeooo:rsid="034a2a80" officeooo:paragraph-rsid="04ea5979"/></style:style><style:style style:name="P454" style:family="paragraph" style:parent-style-name="Source_20_Code"><style:text-properties officeooo:rsid="034bb874" officeooo:paragraph-rsid="04ea5979"/></style:style><style:style style:name="P455" style:family="paragraph" style:parent-style-name="Source_20_Code"><style:text-properties officeooo:rsid="034c7111" officeooo:paragraph-rsid="04ea5979"/></style:style><style:style style:name="P456" style:family="paragraph" style:parent-style-name="Source_20_Code"><style:text-properties officeooo:rsid="034c72bc" officeooo:paragraph-rsid="04ea5979"/></style:style><style:style style:name="P457" style:family="paragraph" style:parent-style-name="Source_20_Code"><style:text-properties officeooo:rsid="034e7033" officeooo:paragraph-rsid="04ea5979"/></style:style><style:style style:name="P458" style:family="paragraph" style:parent-style-name="Source_20_Code"><style:text-properties officeooo:rsid="034fe312" officeooo:paragraph-rsid="04ea5979"/></style:style><style:style style:name="P459" style:family="paragraph" style:parent-style-name="Source_20_Code"><style:text-properties officeooo:rsid="035076e4" officeooo:paragraph-rsid="04ea5979"/></style:style><style:style style:name="P460" style:family="paragraph" style:parent-style-name="Source_20_Code"><style:text-properties officeooo:rsid="03525bff" officeooo:paragraph-rsid="04ea5979"/></style:style><style:style style:name="P461" style:family="paragraph" style:parent-style-name="Source_20_Code"><style:text-properties officeooo:rsid="0353414f" officeooo:paragraph-rsid="04ea5979"/></style:style><style:style style:name="P462" style:family="paragraph" style:parent-style-name="Source_20_Code"><style:text-properties officeooo:rsid="0354a72b" officeooo:paragraph-rsid="04ea5979"/></style:style><style:style style:name="P463" style:family="paragraph" style:parent-style-name="Source_20_Code"><style:text-properties officeooo:rsid="035603cf" officeooo:paragraph-rsid="04ea5979"/></style:style><style:style style:name="P464" style:family="paragraph" style:parent-style-name="Source_20_Code"><style:text-properties officeooo:rsid="0356623a" officeooo:paragraph-rsid="04ea5979"/></style:style><style:style style:name="P465" style:family="paragraph" style:parent-style-name="Source_20_Code"><style:text-properties officeooo:rsid="03576ed5" officeooo:paragraph-rsid="04ea5979"/></style:style><style:style style:name="P466" style:family="paragraph" style:parent-style-name="Source_20_Code"><style:text-properties officeooo:rsid="0358757d" officeooo:paragraph-rsid="04ea5979"/></style:style><style:style style:name="P467" style:family="paragraph" style:parent-style-name="Source_20_Code"><style:text-properties officeooo:rsid="035a55c9" officeooo:paragraph-rsid="04ea5979"/></style:style><style:style style:name="P468" style:family="paragraph" style:parent-style-name="Source_20_Code"><style:text-properties officeooo:rsid="035befa3" officeooo:paragraph-rsid="04ea5979"/></style:style><style:style style:name="P469" style:family="paragraph" style:parent-style-name="Source_20_Code"><style:text-properties officeooo:rsid="035ca069" officeooo:paragraph-rsid="04ea5979"/></style:style><style:style style:name="P470" style:family="paragraph" style:parent-style-name="Source_20_Code"><style:text-properties officeooo:rsid="035e42f1" officeooo:paragraph-rsid="04ea5979"/></style:style><style:style style:name="P471" style:family="paragraph" style:parent-style-name="Source_20_Code"><style:text-properties officeooo:rsid="035f4a5f" officeooo:paragraph-rsid="04ea5979"/></style:style><style:style style:name="P472" style:family="paragraph" style:parent-style-name="Source_20_Code"><style:text-properties officeooo:rsid="035f62b4" officeooo:paragraph-rsid="04ea5979"/></style:style><style:style style:name="P473" style:family="paragraph" style:parent-style-name="Source_20_Code"><style:text-properties officeooo:rsid="035fc0a2" officeooo:paragraph-rsid="04ea5979"/></style:style><style:style style:name="P474" style:family="paragraph" style:parent-style-name="Source_20_Code"><style:text-properties officeooo:rsid="0360c048" officeooo:paragraph-rsid="04ea5979"/></style:style><style:style style:name="P475" style:family="paragraph" style:parent-style-name="Source_20_Code"><style:text-properties officeooo:rsid="0361211f" officeooo:paragraph-rsid="04ea5979"/></style:style><style:style style:name="P476" style:family="paragraph" style:parent-style-name="Source_20_Code"><style:text-properties officeooo:rsid="036171e6" officeooo:paragraph-rsid="04ea5979"/></style:style><style:style style:name="P477" style:family="paragraph" style:parent-style-name="Source_20_Code"><style:text-properties officeooo:rsid="036301c5" officeooo:paragraph-rsid="04ea5979"/></style:style><style:style style:name="P478" style:family="paragraph" style:parent-style-name="Source_20_Code"><style:text-properties officeooo:rsid="036380b1" officeooo:paragraph-rsid="04ea5979"/></style:style><style:style style:name="P479" style:family="paragraph" style:parent-style-name="Source_20_Code"><style:text-properties officeooo:rsid="03656fac" officeooo:paragraph-rsid="04ea5979"/></style:style><style:style style:name="P480" style:family="paragraph" style:parent-style-name="Source_20_Code"><style:text-properties officeooo:rsid="036663d1" officeooo:paragraph-rsid="04ea5979"/></style:style><style:style style:name="P481" style:family="paragraph" style:parent-style-name="Source_20_Code"><style:text-properties officeooo:rsid="03684e4f" officeooo:paragraph-rsid="04ea5979"/></style:style><style:style style:name="P482" style:family="paragraph" style:parent-style-name="Source_20_Code"><style:text-properties officeooo:rsid="036a11d7" officeooo:paragraph-rsid="04ea5979"/></style:style><style:style style:name="P483" style:family="paragraph" style:parent-style-name="Source_20_Code"><style:text-properties officeooo:rsid="036b15c8" officeooo:paragraph-rsid="04ea5979"/></style:style><style:style style:name="P484" style:family="paragraph" style:parent-style-name="Source_20_Code"><style:text-properties officeooo:rsid="036ca990" officeooo:paragraph-rsid="04ea5979"/></style:style><style:style style:name="P485" style:family="paragraph" style:parent-style-name="Source_20_Code"><style:text-properties officeooo:rsid="036d073a" officeooo:paragraph-rsid="04ea5979"/></style:style><style:style style:name="P486" style:family="paragraph" style:parent-style-name="Source_20_Code"><style:text-properties officeooo:rsid="036dd217" officeooo:paragraph-rsid="04ea5979"/></style:style><style:style style:name="P487" style:family="paragraph" style:parent-style-name="Source_20_Code"><style:text-properties officeooo:rsid="036e3f53" officeooo:paragraph-rsid="04ea5979"/></style:style><style:style style:name="P488" style:family="paragraph" style:parent-style-name="Source_20_Code"><style:text-properties officeooo:rsid="036e9dd3" officeooo:paragraph-rsid="04ea5979"/></style:style><style:style style:name="P489" style:family="paragraph" style:parent-style-name="Source_20_Code"><style:text-properties officeooo:rsid="036eb136" officeooo:paragraph-rsid="04ea5979"/></style:style><style:style style:name="P490" style:family="paragraph" style:parent-style-name="Source_20_Code"><style:text-properties officeooo:rsid="036f4fe3" officeooo:paragraph-rsid="04ea5979"/></style:style><style:style style:name="P491" style:family="paragraph" style:parent-style-name="Source_20_Code"><style:text-properties officeooo:rsid="03701f5e" officeooo:paragraph-rsid="04ea5979"/></style:style><style:style style:name="P492" style:family="paragraph" style:parent-style-name="Source_20_Code"><style:text-properties officeooo:rsid="0342e34b" officeooo:paragraph-rsid="04ea5979"/></style:style><style:style style:name="P493" style:family="paragraph" style:parent-style-name="Source_20_Code"><style:text-properties officeooo:rsid="03717d1f" officeooo:paragraph-rsid="04ea5979"/></style:style><style:style style:name="P494" style:family="paragraph" style:parent-style-name="Source_20_Code"><style:text-properties officeooo:rsid="037428c2" officeooo:paragraph-rsid="04ea5979"/></style:style><style:style style:name="P495" style:family="paragraph" style:parent-style-name="Source_20_Code"><style:text-properties officeooo:rsid="03763765" officeooo:paragraph-rsid="04ea5979"/></style:style><style:style style:name="P496" style:family="paragraph" style:parent-style-name="Source_20_Code"><style:text-properties officeooo:rsid="0376d1e9" officeooo:paragraph-rsid="04ea5979"/></style:style><style:style style:name="P497" style:family="paragraph" style:parent-style-name="Source_20_Code"><style:text-properties officeooo:rsid="0377fe16" officeooo:paragraph-rsid="04ea5979"/></style:style><style:style style:name="P498" style:family="paragraph" style:parent-style-name="Source_20_Code"><style:text-properties officeooo:rsid="0379ac87" officeooo:paragraph-rsid="04ea5979"/></style:style><style:style style:name="P499" style:family="paragraph" style:parent-style-name="Source_20_Code"><style:text-properties officeooo:rsid="037a5794" officeooo:paragraph-rsid="04ea5979"/></style:style><style:style style:name="P500" style:family="paragraph" style:parent-style-name="Source_20_Code"><style:text-properties officeooo:rsid="037ab1df" officeooo:paragraph-rsid="04ea5979"/></style:style><style:style style:name="P501" style:family="paragraph" style:parent-style-name="Source_20_Code"><style:text-properties officeooo:rsid="037c2e75" officeooo:paragraph-rsid="04ea5979"/></style:style><style:style style:name="P502" style:family="paragraph" style:parent-style-name="Source_20_Code"><style:text-properties officeooo:rsid="037da5fa" officeooo:paragraph-rsid="04ea5979"/></style:style><style:style style:name="P503" style:family="paragraph" style:parent-style-name="Source_20_Code"><style:text-properties officeooo:rsid="037e9861" officeooo:paragraph-rsid="04ea5979"/></style:style><style:style style:name="P504" style:family="paragraph" style:parent-style-name="Source_20_Code"><style:text-properties officeooo:rsid="037f0d14" officeooo:paragraph-rsid="04ea5979"/></style:style><style:style style:name="P505" style:family="paragraph" style:parent-style-name="Source_20_Code"><style:text-properties officeooo:rsid="037ffc33" officeooo:paragraph-rsid="04ea5979"/></style:style><style:style style:name="P506" style:family="paragraph" style:parent-style-name="Source_20_Code"><style:text-properties officeooo:paragraph-rsid="04ea5979"/></style:style><style:style style:name="P507" style:family="paragraph" style:parent-style-name="Source_20_Code"><style:text-properties fo:language="bg" fo:country="BG" officeooo:rsid="037ffc33" officeooo:paragraph-rsid="04ea5979"/></style:style><style:style style:name="P508" style:family="paragraph" style:parent-style-name="Standard"><style:paragraph-properties fo:margin-top="0in" fo:margin-bottom="0in" loext:contextual-spacing="false"/><style:text-properties fo:font-size="2pt" style:font-size-asian="2pt" style:font-size-complex="2pt"/></style:style><style:style style:name="P509" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:paragraph-properties fo:margin-top="0in" fo:margin-bottom="0in" loext:contextual-spacing="false" fo:text-align="end" style:justify-single-word="false"/><style:text-properties fo:color="#0ea600" style:font-name="inherit" fo:font-weight="normal" style:font-weight-asian="normal" style:font-weight-complex="normal"/></style:style><style:style style:name="P510" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:paragraph-properties fo:margin-left="0in" fo:margin-right="0in" fo:margin-top="0in" fo:margin-bottom="0in" loext:contextual-spacing="false" fo:text-align="start" style:justify-single-word="false" fo:text-indent="0in" style:auto-text-indent="false"/><style:text-properties style:font-name="inherit" fo:font-weight="normal" style:font-weight-asian="normal" style:font-weight-complex="normal"/></style:style><style:style style:name="P511" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:paragraph-properties fo:margin-left="0in" fo:margin-right="0in" fo:margin-top="0in" fo:margin-bottom="0in" loext:contextual-spacing="false" fo:text-align="end" style:justify-single-word="false" fo:text-indent="0in" style:auto-text-indent="false"/><style:text-properties style:font-name="inherit" fo:font-weight="normal" style:font-weight-asian="normal" style:font-weight-complex="normal"/></style:style><style:style style:name="P512" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:paragraph-properties fo:margin-left="0in" fo:margin-right="0in" fo:margin-top="0in" fo:margin-bottom="0in" loext:contextual-spacing="false" fo:text-align="end" style:justify-single-word="false" fo:text-indent="0in" style:auto-text-indent="false"/><style:text-properties fo:color="#0ea600" style:font-name="inherit" fo:font-weight="normal" style:font-weight-asian="normal" style:font-weight-complex="normal"/></style:style><style:style style:name="P513" style:family="paragraph" style:parent-style-name="Table_20_Contents"><style:paragraph-properties fo:margin-left="0in" fo:margin-right="0in" fo:margin-top="0in" fo:margin-bottom="0in" loext:contextual-spacing="false" fo:text-align="end" style:justify-single-word="false" fo:text-indent="0in" style:auto-text-indent="false"/><style:text-properties fo:color="#ff0000" style:font-name="inherit" fo:font-weight="normal" style:font-weight-asian="normal" style:font-weight-complex="normal"/></style:style><style:style style:name="P514" style:family="paragraph" style:parent-style-name="Table_20_Heading"><style:paragraph-properties fo:margin-left="0in" fo:margin-right="0in" fo:margin-top="0in" fo:margin-bottom="0in" loext:contextual-spacing="false" fo:text-align="start" style:justify-single-word="false" fo:text-indent="0in" style:auto-text-indent="false"/><style:text-properties fo:font-variant="normal" fo:text-transform="none" fo:color="#333333" style:font-name="inherit" fo:font-style="normal" fo:font-weight="bold" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="P515" style:family="paragraph" style:parent-style-name="Table_20_Heading"><style:paragraph-properties fo:margin-left="0in" fo:margin-right="0in" fo:margin-top="0in" fo:margin-bottom="0in" loext:contextual-spacing="false" fo:text-align="end" style:justify-single-word="false" fo:text-indent="0in" style:auto-text-indent="false"/><style:text-properties fo:font-variant="normal" fo:text-transform="none" fo:color="#333333" style:font-name="inherit" fo:font-style="normal" fo:font-weight="bold" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="P516" style:family="paragraph" style:parent-style-name="Standard" style:master-page-name="First_20_Page"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false" style:page-number="auto"/><style:text-properties fo:font-size="18pt" fo:language="bg" fo:country="BG" fo:font-weight="bold" style:font-size-asian="18pt" style:font-weight-asian="bold" style:font-size-complex="18pt" style:font-weight-complex="bold"/></style:style><style:style style:name="P517" style:family="paragraph" style:parent-style-name="Contents_20_1"><style:paragraph-properties><style:tab-stops><style:tab-stop style:position="6.6925in" style:type="right" style:leader-style="dotted" style:leader-text="."/></style:tab-stops></style:paragraph-properties></style:style><style:style style:name="P518" style:family="paragraph" style:parent-style-name="Heading" style:master-page-name="Index"><style:paragraph-properties fo:text-align="center" style:justify-single-word="false" style:page-number="1"/><style:text-properties fo:font-size="18pt" style:font-size-asian="18pt" style:font-size-complex="18pt"/></style:style><style:style style:name="P519" style:family="paragraph" style:parent-style-name="Heading" style:master-page-name="Appendix"><style:paragraph-properties style:page-number="1"/><style:text-properties officeooo:rsid="032046a1"/></style:style><style:style style:name="P520" style:family="paragraph" style:parent-style-name="Heading_20_1" style:master-page-name="Standard"><style:paragraph-properties style:page-number="1"/></style:style><style:style style:name="P521" style:family="paragraph" style:parent-style-name="Heading_20_1"><style:paragraph-properties fo:break-before="page"/></style:style><style:style style:name="P522" style:family="paragraph" style:parent-style-name="Heading_20_1"><style:paragraph-properties fo:break-before="page"/><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="001f2376"/></style:style><style:style style:name="P523" style:family="paragraph" style:parent-style-name="Heading_20_1"><style:paragraph-properties fo:break-before="page"/><style:text-properties officeooo:paragraph-rsid="06783256"/></style:style><style:style style:name="P524" style:family="paragraph" style:parent-style-name="Heading_20_2"><style:text-properties officeooo:rsid="02a92d64" officeooo:paragraph-rsid="03d5b142"/></style:style><style:style style:name="P525" style:family="paragraph" style:parent-style-name="Heading_20_2"><style:text-properties officeooo:paragraph-rsid="061a15f6"/></style:style><style:style style:name="P526" style:family="paragraph" style:parent-style-name="Heading_20_2"><style:text-properties officeooo:rsid="005cb816"/></style:style><style:style style:name="P527" style:family="paragraph" style:parent-style-name="Heading_20_2"><style:text-properties officeooo:paragraph-rsid="01ae5132"/></style:style><style:style style:name="P528" style:family="paragraph" style:parent-style-name="Heading_20_2"><style:text-properties officeooo:paragraph-rsid="062653f0"/></style:style><style:style style:name="P529" style:family="paragraph" style:parent-style-name="Heading_20_2"><style:text-properties officeooo:rsid="01b45392"/></style:style><style:style style:name="P530" style:family="paragraph" style:parent-style-name="Heading_20_2"><style:text-properties officeooo:paragraph-rsid="06294c3f"/></style:style><style:style style:name="P531" style:family="paragraph" style:parent-style-name="Heading_20_2"><style:text-properties officeooo:paragraph-rsid="04606294"/></style:style><style:style style:name="P532" style:family="paragraph" style:parent-style-name="Heading_20_3"><style:text-properties officeooo:paragraph-rsid="052e40cd"/></style:style><style:style style:name="P533" style:family="paragraph" style:parent-style-name="Heading_20_3"><style:text-properties fo:language="bg" fo:country="BG"/></style:style><style:style style:name="P534" style:family="paragraph" style:parent-style-name="Heading_20_3"><style:text-properties fo:language="bg" fo:country="BG" officeooo:paragraph-rsid="00771be5"/></style:style><style:style style:name="P535" style:family="paragraph" style:parent-style-name="Heading_20_3"><style:text-properties officeooo:rsid="01c9b453"/></style:style><style:style style:name="P536" style:family="paragraph" style:parent-style-name="Heading_20_3"><style:text-properties officeooo:paragraph-rsid="01ec0377"/></style:style><style:style style:name="P537" style:family="paragraph" style:parent-style-name="Contents_20_2"><style:paragraph-properties><style:tab-stops><style:tab-stop style:position="6.4957in" style:type="right" style:leader-style="dotted" style:leader-text="."/></style:tab-stops></style:paragraph-properties></style:style><style:style style:name="P538" style:family="paragraph" style:parent-style-name="Contents_20_3"><style:paragraph-properties><style:tab-stops><style:tab-stop style:position="6.2992in" style:type="right" style:leader-style="dotted" style:leader-text="."/></style:tab-stops></style:paragraph-properties></style:style><style:style style:name="P539" style:family="paragraph" style:parent-style-name="Illustration"><style:paragraph-properties><style:tab-stops><style:tab-stop style:position="6.6925in" style:type="right" style:leader-style="dotted" style:leader-text="."/></style:tab-stops></style:paragraph-properties></style:style><style:style style:name="P540" style:family="paragraph" style:parent-style-name="Table"><style:paragraph-properties><style:tab-stops><style:tab-stop style:position="6.6925in" style:type="right" style:leader-style="dotted" style:leader-text="."/></style:tab-stops></style:paragraph-properties></style:style><style:style style:name="T1" style:family="text"><style:text-properties style:font-name="Times New Roman1" officeooo:rsid="04b0ebf5" style:font-name-asian="Times New Roman1" style:font-name-complex="Times New Roman1"/></style:style><style:style style:name="T2" style:family="text"><style:text-properties officeooo:rsid="04b091ae"/></style:style><style:style style:name="T3" style:family="text"><style:text-properties officeooo:rsid="04e7e73f"/></style:style><style:style style:name="T4" style:family="text"><style:text-properties fo:font-weight="bold" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="T5" style:family="text"><style:text-properties fo:font-weight="bold" officeooo:rsid="013bef4b" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="T6" style:family="text"><style:text-properties fo:font-weight="bold" officeooo:rsid="019d472f" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="T7" style:family="text"><style:text-properties fo:font-weight="bold" officeooo:rsid="01a56d4b" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="T8" style:family="text"><style:text-properties fo:font-weight="bold" officeooo:rsid="01a8524f" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="T9" style:family="text"><style:text-properties fo:font-weight="bold" officeooo:rsid="01af723c" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="T10" style:family="text"><style:text-properties fo:font-weight="bold" officeooo:rsid="01b016a1" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="T11" style:family="text"><style:text-properties fo:font-weight="bold" officeooo:rsid="01c0cb9f" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="T12" style:family="text"><style:text-properties fo:font-weight="bold" officeooo:rsid="01c52519" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="T13" style:family="text"><style:text-properties fo:font-weight="bold" officeooo:rsid="01d17c98" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="T14" style:family="text"><style:text-properties fo:font-weight="bold" officeooo:rsid="01e5f5b7" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="T15" style:family="text"><style:text-properties fo:font-weight="bold" officeooo:rsid="01ce872c" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="T16" style:family="text"><style:text-properties fo:font-weight="bold" officeooo:rsid="01fa130e" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="T17" style:family="text"><style:text-properties fo:font-weight="bold" officeooo:rsid="01fcf132" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="T18" style:family="text"><style:text-properties fo:font-weight="bold" officeooo:rsid="024a54fe" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="T19" style:family="text"><style:text-properties fo:font-weight="bold" officeooo:rsid="024b73b5" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="T20" style:family="text"><style:text-properties fo:font-weight="bold" officeooo:rsid="024c27bc" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="T21" style:family="text"><style:text-properties fo:font-weight="bold" officeooo:rsid="024dc0aa" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="T22" style:family="text"><style:text-properties fo:font-weight="bold" officeooo:rsid="02520089" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="T23" style:family="text"><style:text-properties fo:font-weight="bold" officeooo:rsid="02550de1" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="T24" style:family="text"><style:text-properties fo:font-weight="bold" officeooo:rsid="02565c50" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="T25" style:family="text"><style:text-properties fo:font-weight="bold" officeooo:rsid="02576174" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="T26" style:family="text"><style:text-properties fo:font-weight="bold" officeooo:rsid="025931ca" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="T27" style:family="text"><style:text-properties fo:font-weight="bold" officeooo:rsid="025be9f1" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="T28" style:family="text"><style:text-properties fo:font-weight="bold" officeooo:rsid="025cf1a4" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="T29" style:family="text"><style:text-properties fo:font-weight="bold" officeooo:rsid="025d053f" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="T30" style:family="text"><style:text-properties fo:font-weight="bold" officeooo:rsid="02601363" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="T31" style:family="text"><style:text-properties fo:font-weight="bold" officeooo:rsid="0262e5c3" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="T32" style:family="text"><style:text-properties fo:font-weight="bold" officeooo:rsid="02650cc7" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="T33" style:family="text"><style:text-properties fo:font-weight="bold" officeooo:rsid="026a6d57" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="T34" style:family="text"><style:text-properties fo:font-weight="bold" officeooo:rsid="026cff38" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="T35" style:family="text"><style:text-properties fo:font-weight="bold" officeooo:rsid="044d93eb" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="T36" style:family="text"><style:text-properties fo:font-weight="bold" officeooo:rsid="05d4639a" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="T37" style:family="text"><style:text-properties fo:font-weight="bold" officeooo:rsid="05d9369d" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="T38" style:family="text"><style:text-properties fo:font-weight="bold" officeooo:rsid="060c7bb3" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="T39" style:family="text"><style:text-properties fo:font-weight="bold" officeooo:rsid="065a6a57" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="T40" style:family="text"><style:text-properties fo:font-weight="bold" officeooo:rsid="065b8f9c" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="T41" style:family="text"><style:text-properties fo:font-weight="bold" officeooo:rsid="065db5ee" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="T42" style:family="text"><style:text-properties fo:font-weight="bold" officeooo:rsid="065f67df" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="T43" style:family="text"><style:text-properties style:text-underline-style="solid" style:text-underline-width="auto" style:text-underline-color="font-color" fo:font-weight="bold" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="T44" style:family="text"><style:text-properties style:use-window-font-color="true" fo:language="en" fo:country="US" officeooo:rsid="02e0f778" fo:background-color="transparent" loext:char-shading-value="0"/></style:style><style:style style:name="T45" style:family="text"><style:text-properties fo:language="en" fo:country="US"/></style:style><style:style style:name="T46" style:family="text"><style:text-properties fo:language="en" fo:country="US" fo:background-color="transparent" loext:char-shading-value="0"/></style:style><style:style style:name="T47" style:family="text"><style:text-properties fo:language="en" fo:country="US" officeooo:rsid="02e0f778" fo:background-color="transparent" loext:char-shading-value="0"/></style:style><style:style style:name="T48" style:family="text"><style:text-properties fo:language="en" fo:country="US" officeooo:rsid="0504e488" fo:background-color="transparent" loext:char-shading-value="0"/></style:style><style:style style:name="T49" style:family="text"><style:text-properties fo:language="en" fo:country="US" officeooo:rsid="050f545d" fo:background-color="transparent" loext:char-shading-value="0"/></style:style><style:style style:name="T50" style:family="text"><style:text-properties fo:language="en" fo:country="US" officeooo:rsid="0695dffd" fo:background-color="transparent" loext:char-shading-value="0"/></style:style><style:style style:name="T51" style:family="text"><style:text-properties fo:language="en" fo:country="US" fo:font-weight="bold" officeooo:rsid="052e322e" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="T52" style:family="text"><style:text-properties fo:language="en" fo:country="US" officeooo:rsid="05039a15"/></style:style><style:style style:name="T53" style:family="text"><style:text-properties fo:language="en" fo:country="US" officeooo:rsid="0504e488"/></style:style><style:style style:name="T54" style:family="text"><style:text-properties fo:language="en" fo:country="US" officeooo:rsid="05077676"/></style:style><style:style style:name="T55" style:family="text"><style:text-properties fo:language="en" fo:country="US" officeooo:rsid="0508f3b6"/></style:style><style:style style:name="T56" style:family="text"><style:text-properties officeooo:rsid="002065db"/></style:style><style:style style:name="T57" style:family="text"><style:text-properties officeooo:rsid="00285ec0"/></style:style><style:style style:name="T58" style:family="text"><style:text-properties officeooo:rsid="0030241d"/></style:style><style:style style:name="T59" style:family="text"><style:text-properties officeooo:rsid="0030ff31"/></style:style><style:style style:name="T60" style:family="text"><style:text-properties officeooo:rsid="0035830b"/></style:style><style:style style:name="T61" style:family="text"><style:text-properties officeooo:rsid="00453fc4"/></style:style><style:style style:name="T62" style:family="text"><style:text-properties officeooo:rsid="004661eb"/></style:style><style:style style:name="T63" style:family="text"><style:text-properties officeooo:rsid="0052fbdf"/></style:style><style:style style:name="T64" style:family="text"><style:text-properties officeooo:rsid="00548320"/></style:style><style:style style:name="T65" style:family="text"><style:text-properties officeooo:rsid="005d07d1"/></style:style><style:style style:name="T66" style:family="text"><style:text-properties officeooo:rsid="005fe8b1"/></style:style><style:style style:name="T67" style:family="text"><style:text-properties officeooo:rsid="0071dc62"/></style:style><style:style style:name="T68" style:family="text"><style:text-properties officeooo:rsid="00771be5"/></style:style><style:style style:name="T69" style:family="text"><style:text-properties officeooo:rsid="00791855"/></style:style><style:style style:name="T70" style:family="text"><style:text-properties officeooo:rsid="007e5a51"/></style:style><style:style style:name="T71" style:family="text"><style:text-properties officeooo:rsid="0081eba5"/></style:style><style:style style:name="T72" style:family="text"><style:text-properties officeooo:rsid="00885e3c"/></style:style><style:style style:name="T73" style:family="text"><style:text-properties officeooo:rsid="00889119"/></style:style><style:style style:name="T74" style:family="text"><style:text-properties officeooo:rsid="008e5a16"/></style:style><style:style style:name="T75" style:family="text"><style:text-properties officeooo:rsid="0090f512"/></style:style><style:style style:name="T76" style:family="text"><style:text-properties officeooo:rsid="00932f69"/></style:style><style:style style:name="T77" style:family="text"><style:text-properties officeooo:rsid="00b2a006"/></style:style><style:style style:name="T78" style:family="text"><style:text-properties officeooo:rsid="00bf929f"/></style:style><style:style style:name="T79" style:family="text"><style:text-properties officeooo:rsid="00e59fc9"/></style:style><style:style style:name="T80" style:family="text"><style:text-properties officeooo:rsid="00e9525e"/></style:style><style:style style:name="T81" style:family="text"><style:text-properties officeooo:rsid="00feee69"/></style:style><style:style style:name="T82" style:family="text"><style:text-properties officeooo:rsid="00ff37ed"/></style:style><style:style style:name="T83" style:family="text"><style:text-properties officeooo:rsid="0101e3fb"/></style:style><style:style style:name="T84" style:family="text"><style:text-properties officeooo:rsid="01038308"/></style:style><style:style style:name="T85" style:family="text"><style:text-properties officeooo:rsid="011b3415"/></style:style><style:style style:name="T86" style:family="text"><style:text-properties officeooo:rsid="011c036a"/></style:style><style:style style:name="T87" style:family="text"><style:text-properties officeooo:rsid="014141ab"/></style:style><style:style style:name="T88" style:family="text"><style:text-properties officeooo:rsid="014851f7"/></style:style><style:style style:name="T89" style:family="text"><style:text-properties officeooo:rsid="014c4c7d"/></style:style><style:style style:name="T90" style:family="text"><style:text-properties officeooo:rsid="014c952a"/></style:style><style:style style:name="T91" style:family="text"><style:text-properties officeooo:rsid="014e3844"/></style:style><style:style style:name="T92" style:family="text"><style:text-properties officeooo:rsid="015465a0"/></style:style><style:style style:name="T93" style:family="text"><style:text-properties officeooo:rsid="0160209e"/></style:style><style:style style:name="T94" style:family="text"><style:text-properties officeooo:rsid="016686d8"/></style:style><style:style style:name="T95" style:family="text"><style:text-properties officeooo:rsid="01670c20"/></style:style><style:style style:name="T96" style:family="text"><style:text-properties officeooo:rsid="01690c17"/></style:style><style:style style:name="T97" style:family="text"><style:text-properties officeooo:rsid="016a6372"/></style:style><style:style style:name="T98" style:family="text"><style:text-properties officeooo:rsid="016ee6f9"/></style:style><style:style style:name="T99" style:family="text"><style:text-properties officeooo:rsid="01832a85"/></style:style><style:style style:name="T100" style:family="text"><style:text-properties officeooo:rsid="0184da19"/></style:style><style:style style:name="T101" style:family="text"><style:text-properties officeooo:rsid="018532d2"/></style:style><style:style style:name="T102" style:family="text"><style:text-properties officeooo:rsid="01885a8b"/></style:style><style:style style:name="T103" style:family="text"><style:text-properties officeooo:rsid="0188ce11"/></style:style><style:style style:name="T104" style:family="text"><style:text-properties officeooo:rsid="018a2066"/></style:style><style:style style:name="T105" style:family="text"><style:text-properties officeooo:rsid="0194a276"/></style:style><style:style style:name="T106" style:family="text"><style:text-properties officeooo:rsid="019d472f"/></style:style><style:style style:name="T107" style:family="text"><style:text-properties fo:language="bg" fo:country="BG"/></style:style><style:style style:name="T108" style:family="text"><style:text-properties fo:language="bg" fo:country="BG" fo:font-weight="bold" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="T109" style:family="text"><style:text-properties fo:language="bg" fo:country="BG" fo:font-weight="bold" officeooo:rsid="003989e1" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="T110" style:family="text"><style:text-properties fo:language="bg" fo:country="BG" fo:font-weight="bold" officeooo:rsid="0608aaba" style:font-weight-asian="bold" style:font-weight-complex="bold"/></style:style><style:style style:name="T111" style:family="text"><style:text-properties fo:language="bg" fo:country="BG" officeooo:rsid="003989e1"/></style:style><style:style style:name="T112" style:family="text"><style:text-properties fo:language="bg" fo:country="BG" officeooo:rsid="0181c3af"/></style:style><style:style style:name="T113" style:family="text"><style:text-properties fo:language="bg" fo:country="BG" officeooo:rsid="0465d984"/></style:style><style:style style:name="T114" style:family="text"><style:text-properties fo:language="bg" fo:country="BG" officeooo:rsid="0465fa19"/></style:style><style:style style:name="T115" style:family="text"><style:text-properties fo:language="bg" fo:country="BG" officeooo:rsid="0466a5ec"/></style:style><style:style style:name="T116" style:family="text"><style:text-properties fo:language="bg" fo:country="BG" officeooo:rsid="046c2462"/></style:style><style:style style:name="T117" style:family="text"><style:text-properties fo:language="bg" fo:country="BG" officeooo:rsid="046cbe2d"/></style:style><style:style style:name="T118" style:family="text"><style:text-properties fo:language="bg" fo:country="BG" officeooo:rsid="0497b4eb"/></style:style><style:style style:name="T119" style:family="text"><style:text-properties fo:language="bg" fo:country="BG" officeooo:rsid="00548320"/></style:style><style:style style:name="T120" style:family="text"><style:text-properties fo:language="bg" fo:country="BG" officeooo:rsid="005d07d1"/></style:style><style:style style:name="T121" style:family="text"><style:text-properties fo:language="bg" fo:country="BG" officeooo:rsid="014141ab"/></style:style><style:style style:name="T122" style:family="text"><style:text-properties fo:language="bg" fo:country="BG" officeooo:rsid="01ae5132"/></style:style><style:style style:name="T123" style:family="text"><style:text-properties fo:language="bg" fo:country="BG" officeooo:rsid="05d7b2b4"/></style:style><style:style style:name="T124" style:family="text"><style:text-properties fo:language="bg" fo:country="BG" officeooo:rsid="0608aaba"/></style:style><style:style style:name="T125" style:family="text"><style:text-properties officeooo:rsid="01a56d4b"/></style:style><style:style style:name="T126" style:family="text"><style:text-properties officeooo:rsid="01a8524f"/></style:style><style:style style:name="T127" style:family="text"><style:text-properties officeooo:rsid="01aa753b"/></style:style><style:style style:name="T128" style:family="text"><style:text-properties officeooo:rsid="01ab191d"/></style:style><style:style style:name="T129" style:family="text"><style:text-properties officeooo:rsid="01ab3712"/></style:style><style:style style:name="T130" style:family="text"><style:text-properties officeooo:rsid="01abf334"/></style:style><style:style style:name="T131" style:family="text"><style:text-properties officeooo:rsid="01ac5341"/></style:style><style:style style:name="T132" style:family="text"><style:text-properties officeooo:rsid="01acd10f"/></style:style><style:style style:name="T133" style:family="text"><style:text-properties officeooo:rsid="01ae5132"/></style:style><style:style style:name="T134" style:family="text"><style:text-properties officeooo:rsid="01af723c"/></style:style><style:style style:name="T135" style:family="text"><style:text-properties officeooo:rsid="01af72ed"/></style:style><style:style style:name="T136" style:family="text"><style:text-properties officeooo:rsid="01b016a1"/></style:style><style:style style:name="T137" style:family="text"><style:text-properties officeooo:rsid="01b6abd2"/></style:style><style:style style:name="T138" style:family="text"><style:text-properties officeooo:rsid="01c0cb9f"/></style:style><style:style style:name="T139" style:family="text"><style:text-properties officeooo:rsid="01c52519"/></style:style><style:style style:name="T140" style:family="text"><style:text-properties officeooo:rsid="01c6390a"/></style:style><style:style style:name="T141" style:family="text"><style:text-properties officeooo:rsid="01c81160"/></style:style><style:style style:name="T142" style:family="text"><style:text-properties officeooo:rsid="01c9b453"/></style:style><style:style style:name="T143" style:family="text"><style:text-properties officeooo:rsid="01cbe912"/></style:style><style:style style:name="T144" style:family="text"><style:text-properties officeooo:rsid="01d27b28"/></style:style><style:style style:name="T145" style:family="text"><style:text-properties officeooo:rsid="01e4c9f7"/></style:style><style:style style:name="T146" style:family="text"><style:text-properties officeooo:rsid="01e5f5b7"/></style:style><style:style style:name="T147" style:family="text"><style:text-properties officeooo:rsid="01ce872c"/></style:style><style:style style:name="T148" style:family="text"><style:text-properties officeooo:rsid="01eab529"/></style:style><style:style style:name="T149" style:family="text"><style:text-properties officeooo:rsid="01eed0e6"/></style:style><style:style style:name="T150" style:family="text"><style:text-properties officeooo:rsid="01f299c1"/></style:style><style:style style:name="T151" style:family="text"><style:text-properties officeooo:rsid="01fb3acc"/></style:style><style:style style:name="T152" style:family="text"><style:text-properties officeooo:rsid="01ffb47c"/></style:style><style:style style:name="T153" style:family="text"><style:text-properties officeooo:rsid="0208e5c9"/></style:style><style:style style:name="T154" style:family="text"><style:text-properties officeooo:rsid="020b91ec"/></style:style><style:style style:name="T155" style:family="text"><style:text-properties officeooo:rsid="0213561a"/></style:style><style:style style:name="T156" style:family="text"><style:text-properties officeooo:rsid="02145e71"/></style:style><style:style style:name="T157" style:family="text"><style:text-properties officeooo:rsid="0216f493"/></style:style><style:style style:name="T158" style:family="text"><style:text-properties officeooo:rsid="0219b5e5"/></style:style><style:style style:name="T159" style:family="text"><style:text-properties officeooo:rsid="02263f41"/></style:style><style:style style:name="T160" style:family="text"><style:text-properties officeooo:rsid="025b64b2"/></style:style><style:style style:name="T161" style:family="text"><style:text-properties officeooo:rsid="025cf1a4"/></style:style><style:style style:name="T162" style:family="text"><style:text-properties officeooo:rsid="026a6d57"/></style:style><style:style style:name="T163" style:family="text"><style:text-properties officeooo:rsid="026b3410"/></style:style><style:style style:name="T164" style:family="text"><style:text-properties fo:background-color="transparent" loext:char-shading-value="0"/></style:style><style:style style:name="T165" style:family="text"><style:text-properties officeooo:rsid="026f648a" fo:background-color="transparent" loext:char-shading-value="0"/></style:style><style:style style:name="T166" style:family="text"><style:text-properties officeooo:rsid="0270f74c" fo:background-color="transparent" loext:char-shading-value="0"/></style:style><style:style style:name="T167" style:family="text"><style:text-properties officeooo:rsid="02713f9b" fo:background-color="transparent" loext:char-shading-value="0"/></style:style><style:style style:name="T168" style:family="text"><style:text-properties officeooo:rsid="02730a4e" fo:background-color="transparent" loext:char-shading-value="0"/></style:style><style:style style:name="T169" style:family="text"><style:text-properties officeooo:rsid="02746b2c" fo:background-color="transparent" loext:char-shading-value="0"/></style:style><style:style style:name="T170" style:family="text"><style:text-properties officeooo:rsid="0275bff0" fo:background-color="transparent" loext:char-shading-value="0"/></style:style><style:style style:name="T171" style:family="text"><style:text-properties officeooo:rsid="027742d9" fo:background-color="transparent" loext:char-shading-value="0"/></style:style><style:style style:name="T172" style:family="text"><style:text-properties officeooo:rsid="0470c572" fo:background-color="transparent" loext:char-shading-value="0"/></style:style><style:style style:name="T173" style:family="text"><style:text-properties officeooo:rsid="0504e488" fo:background-color="transparent" loext:char-shading-value="0"/></style:style><style:style style:name="T174" style:family="text"><style:text-properties officeooo:rsid="06954eae" fo:background-color="transparent" loext:char-shading-value="0"/></style:style><style:style style:name="T175" style:family="text"><style:text-properties officeooo:rsid="02750bde"/></style:style><style:style style:name="T176" style:family="text"><style:text-properties officeooo:rsid="0280cc69"/></style:style><style:style style:name="T177" style:family="text"><style:text-properties officeooo:rsid="0282bc04"/></style:style><style:style style:name="T178" style:family="text"><style:text-properties officeooo:rsid="02871bd8"/></style:style><style:style style:name="T179" style:family="text"><style:text-properties officeooo:rsid="02871d8d"/></style:style><style:style style:name="T180" style:family="text"><style:text-properties officeooo:rsid="0287f15c"/></style:style><style:style style:name="T181" style:family="text"><style:text-properties officeooo:rsid="028d0a2b"/></style:style><style:style style:name="T182" style:family="text"><style:text-properties officeooo:rsid="028ffcf3"/></style:style><style:style style:name="T183" style:family="text"><style:text-properties officeooo:rsid="0293ebeb"/></style:style><style:style style:name="T184" style:family="text"><style:text-properties officeooo:rsid="0296be4f"/></style:style><style:style style:name="T185" style:family="text"><style:text-properties officeooo:rsid="029b9c52"/></style:style><style:style style:name="T186" style:family="text"><style:text-properties officeooo:rsid="02aaffea"/></style:style><style:style style:name="T187" style:family="text"><style:text-properties officeooo:rsid="02abb373"/></style:style><style:style style:name="T188" style:family="text"><style:text-properties officeooo:rsid="02b47f71"/></style:style><style:style style:name="T189" style:family="text"><style:text-properties officeooo:rsid="02b6097d"/></style:style><style:style style:name="T190" style:family="text"><style:text-properties officeooo:rsid="02d0163a"/></style:style><style:style style:name="T191" style:family="text"><style:text-properties officeooo:rsid="02e0f778"/></style:style><style:style style:name="T192" style:family="text"><style:text-properties officeooo:rsid="02e4330b"/></style:style><style:style style:name="T193" style:family="text"><style:text-properties officeooo:rsid="02e519a6"/></style:style><style:style style:name="T194" style:family="text"><style:text-properties officeooo:rsid="02f67c09"/></style:style><style:style style:name="T195" style:family="text"><style:text-properties officeooo:rsid="030d976c"/></style:style><style:style style:name="T196" style:family="text"><style:text-properties officeooo:rsid="0317f1a6"/></style:style><style:style style:name="T197" style:family="text"><style:text-properties officeooo:rsid="0381a6a5"/></style:style><style:style style:name="T198" style:family="text"><style:text-properties officeooo:rsid="038396d8"/></style:style><style:style style:name="T199" style:family="text"><style:text-properties officeooo:rsid="03852460"/></style:style><style:style style:name="T200" style:family="text"><style:text-properties officeooo:rsid="03855035"/></style:style><style:style style:name="T201" style:family="text"><style:text-properties officeooo:rsid="0386d5fc"/></style:style><style:style style:name="T202" style:family="text"><style:text-properties officeooo:rsid="03873e07"/></style:style><style:style style:name="T203" style:family="text"><style:text-properties officeooo:rsid="0387ac57"/></style:style><style:style style:name="T204" style:family="text"><style:text-properties officeooo:rsid="03885333"/></style:style><style:style style:name="T205" style:family="text"><style:text-properties officeooo:rsid="0389e124"/></style:style><style:style style:name="T206" style:family="text"><style:text-properties officeooo:rsid="038c29da"/></style:style><style:style style:name="T207" style:family="text"><style:text-properties officeooo:rsid="038debff"/></style:style><style:style style:name="T208" style:family="text"><style:text-properties officeooo:rsid="038fe2f9"/></style:style><style:style style:name="T209" style:family="text"><style:text-properties officeooo:rsid="0390b2dc"/></style:style><style:style style:name="T210" style:family="text"><style:text-properties officeooo:rsid="0391ffda"/></style:style><style:style style:name="T211" style:family="text"><style:text-properties officeooo:rsid="03949d65"/></style:style><style:style style:name="T212" style:family="text"><style:text-properties officeooo:rsid="03a378a0"/></style:style><style:style style:name="T213" style:family="text"><style:text-properties officeooo:rsid="03ad023f"/></style:style><style:style style:name="T214" style:family="text"><style:text-properties officeooo:rsid="03b27ae6"/></style:style><style:style style:name="T215" style:family="text"><style:text-properties officeooo:rsid="03c9bd6f"/></style:style><style:style style:name="T216" style:family="text"><style:text-properties officeooo:rsid="03f404df"/></style:style><style:style style:name="T217" style:family="text"><style:text-properties officeooo:rsid="040bb9c2"/></style:style><style:style style:name="T218" style:family="text"><style:text-properties officeooo:rsid="040c5fcb"/></style:style><style:style style:name="T219" style:family="text"><style:text-properties officeooo:rsid="040caf72"/></style:style><style:style style:name="T220" style:family="text"><style:text-properties officeooo:rsid="040ce6c0"/></style:style><style:style style:name="T221" style:family="text"><style:text-properties officeooo:rsid="040d1ca7"/></style:style><style:style style:name="T222" style:family="text"><style:text-properties officeooo:rsid="042a7368"/></style:style><style:style style:name="T223" style:family="text"><style:text-properties officeooo:rsid="042be08f"/></style:style><style:style style:name="T224" style:family="text"><style:text-properties officeooo:rsid="042d3041"/></style:style><style:style style:name="T225" style:family="text"><style:text-properties officeooo:rsid="042fbac2"/></style:style><style:style style:name="T226" style:family="text"><style:text-properties officeooo:rsid="044cc268"/></style:style><style:style style:name="T227" style:family="text"><style:text-properties officeooo:rsid="044d93eb"/></style:style><style:style style:name="T228" style:family="text"><style:text-properties officeooo:rsid="044f3a61"/></style:style><style:style style:name="T229" style:family="text"><style:text-properties officeooo:rsid="04582fc4"/></style:style><style:style style:name="T230" style:family="text"><style:text-properties officeooo:rsid="04622a8c"/></style:style><style:style style:name="T231" style:family="text"><style:text-properties officeooo:rsid="04652826"/></style:style><style:style style:name="T232" style:family="text"><style:text-properties officeooo:rsid="0465d984"/></style:style><style:style style:name="T233" style:family="text"><style:text-properties officeooo:rsid="046c2462"/></style:style><style:style style:name="T234" style:family="text"><style:text-properties officeooo:rsid="0473d58a"/></style:style><style:style style:name="T235" style:family="text"><style:text-properties officeooo:rsid="0497b4eb"/></style:style><style:style style:name="T236" style:family="text"><style:text-properties officeooo:rsid="04bd253c"/></style:style><style:style style:name="T237" style:family="text"><style:text-properties officeooo:rsid="04beefd0"/></style:style><style:style style:name="T238" style:family="text"><style:text-properties officeooo:rsid="04cab1b1"/></style:style><style:style style:name="T239" style:family="text"><style:text-properties officeooo:rsid="0504e488"/></style:style><style:style style:name="T240" style:family="text"><style:text-properties officeooo:rsid="05077676"/></style:style><style:style style:name="T241" style:family="text"><style:text-properties officeooo:rsid="0508f3b6"/></style:style><style:style style:name="T242" style:family="text"><style:text-properties officeooo:rsid="050975fd"/></style:style><style:style style:name="T243" style:family="text"><style:text-properties officeooo:rsid="050af962"/></style:style><style:style style:name="T244" style:family="text"><style:text-properties officeooo:rsid="050d662b"/></style:style><style:style style:name="T245" style:family="text"><style:text-properties officeooo:rsid="050e10f1"/></style:style><style:style style:name="T246" style:family="text"><style:text-properties officeooo:rsid="050f18f6"/></style:style><style:style style:name="T247" style:family="text"><style:text-properties officeooo:rsid="050f545d"/></style:style><style:style style:name="T248" style:family="text"><style:text-properties officeooo:rsid="0512a359"/></style:style><style:style style:name="T249" style:family="text"><style:text-properties officeooo:rsid="051448a1"/></style:style><style:style style:name="T250" style:family="text"><style:text-properties officeooo:rsid="0515751d"/></style:style><style:style style:name="T251" style:family="text"><style:text-properties officeooo:rsid="0516f2c8"/></style:style><style:style style:name="T252" style:family="text"><style:text-properties officeooo:rsid="0518d369"/></style:style><style:style style:name="T253" style:family="text"><style:text-properties fo:font-style="italic" style:font-style-asian="italic" style:font-style-complex="italic"/></style:style><style:style style:name="T254" style:family="text"><style:text-properties fo:font-style="italic" officeooo:rsid="0518d369" style:font-style-asian="italic" style:font-style-complex="italic"/></style:style><style:style style:name="T255" style:family="text"><style:text-properties fo:font-style="italic" officeooo:rsid="0519e9e7" style:font-style-asian="italic" style:font-style-complex="italic"/></style:style><style:style style:name="T256" style:family="text"><style:text-properties fo:font-style="italic" officeooo:rsid="051a3c8c" style:font-style-asian="italic" style:font-style-complex="italic"/></style:style><style:style style:name="T257" style:family="text"><style:text-properties fo:font-style="italic" officeooo:rsid="051ccc7d" style:font-style-asian="italic" style:font-style-complex="italic"/></style:style><style:style style:name="T258" style:family="text"><style:text-properties officeooo:rsid="0519e9e7"/></style:style><style:style style:name="T259" style:family="text"><style:text-properties officeooo:rsid="051a3c8c"/></style:style><style:style style:name="T260" style:family="text"><style:text-properties officeooo:rsid="051ccc7d"/></style:style><style:style style:name="T261" style:family="text"><style:text-properties officeooo:rsid="05257902"/></style:style><style:style style:name="T262" style:family="text"><style:text-properties officeooo:rsid="052f8121"/></style:style><style:style style:name="T263" style:family="text"><style:text-properties officeooo:rsid="05310e1b"/></style:style><style:style style:name="T264" style:family="text"><style:text-properties officeooo:rsid="0532e45f"/></style:style><style:style style:name="T265" style:family="text"><style:text-properties officeooo:rsid="0542b78b"/></style:style><style:style style:name="T266" style:family="text"><style:text-properties officeooo:rsid="05452777"/></style:style><style:style style:name="T267" style:family="text"><style:text-properties officeooo:rsid="05cee7ea"/></style:style><style:style style:name="T268" style:family="text"><style:text-properties officeooo:rsid="05d1deae"/></style:style><style:style style:name="T269" style:family="text"><style:text-properties officeooo:rsid="05d4639a"/></style:style><style:style style:name="T270" style:family="text"><style:text-properties officeooo:rsid="05d67b05"/></style:style><style:style style:name="T271" style:family="text"><style:text-properties officeooo:rsid="05d7b2b4"/></style:style><style:style style:name="T272" style:family="text"><style:text-properties officeooo:rsid="05d98135"/></style:style><style:style style:name="T273" style:family="text"><style:text-properties officeooo:rsid="05f3bb26"/></style:style><style:style style:name="T274" style:family="text"><style:text-properties officeooo:rsid="05fa0a91"/></style:style><style:style style:name="T275" style:family="text"><style:text-properties officeooo:rsid="0608aaba"/></style:style><style:style style:name="T276" style:family="text"><style:text-properties officeooo:rsid="061a15f6"/></style:style><style:style style:name="T277" style:family="text"><style:text-properties officeooo:rsid="061d67fb"/></style:style><style:style style:name="T278" style:family="text"><style:text-properties officeooo:rsid="0622e6fb"/></style:style><style:style style:name="T279" style:family="text"><style:text-properties officeooo:rsid="062653f0"/></style:style><style:style style:name="T280" style:family="text"><style:text-properties officeooo:rsid="06294c3f"/></style:style><style:style style:name="T281" style:family="text"><style:text-properties officeooo:rsid="062a1cf5"/></style:style><style:style style:name="T282" style:family="text"><style:text-properties officeooo:rsid="062cc1c1"/></style:style><style:style style:name="T283" style:family="text"><style:text-properties officeooo:rsid="0631d755"/></style:style><style:style style:name="T284" style:family="text"><style:text-properties officeooo:rsid="0656851e"/></style:style><style:style style:name="T285" style:family="text"><style:text-properties officeooo:rsid="0664216b"/></style:style><style:style style:name="T286" style:family="text"><style:text-properties officeooo:rsid="066b330c"/></style:style><style:style style:name="T287" style:family="text"><style:text-properties officeooo:rsid="06768f26"/></style:style><style:style style:name="T288" style:family="text"><style:text-properties officeooo:rsid="0679261d"/></style:style><style:style style:name="T289" style:family="text"><style:text-properties officeooo:rsid="0679f81c"/></style:style><style:style style:name="T290" style:family="text"><style:text-properties officeooo:rsid="06826057"/></style:style><style:style style:name="T291" style:family="text"><style:text-properties officeooo:rsid="068774c2"/></style:style><style:style style:name="T292" style:family="text"><style:text-properties officeooo:rsid="068e3122"/></style:style><style:style style:name="T293" style:family="text"><style:text-properties officeooo:rsid="0693df9e"/></style:style><style:style style:name="T294" style:family="text"><style:text-properties officeooo:rsid="069d122e"/></style:style><style:style style:name="fr1" style:family="graphic" style:parent-style-name="Frame"><style:graphic-properties style:wrap="run-through" style:number-wrapped-paragraphs="no-limit" style:vertical-pos="from-top" style:vertical-rel="paragraph" style:horizontal-pos="from-left" style:horizontal-rel="paragraph"/></style:style><style:style style:name="fr2" style:family="graphic" style:parent-style-name="Graphics"><style:graphic-properties style:run-through="foreground" style:vertical-pos="middle" style:vertical-rel="baseline" style:horizontal-pos="from-left" style:horizontal-rel="paragraph" style:mirror="none" fo:clip="rect(0in, 0in, 0in, 0in)" draw:luminance="0%" draw:contrast="0%" draw:red="0%" draw:green="0%" draw:blue="0%" draw:gamma="100%" draw:color-inversion="false" draw:image-opacity="100%" draw:color-mode="standard"/></style:style><style:style style:name="fr3" style:family="graphic" style:parent-style-name="Graphics"><style:graphic-properties style:vertical-pos="middle" style:vertical-rel="baseline" style:horizontal-pos="right" style:horizontal-rel="paragraph" style:mirror="none" fo:clip="rect(0in, 0in, 0in, 0in)" draw:luminance="0%" draw:contrast="0%" draw:red="0%" draw:green="0%" draw:blue="0%" draw:gamma="100%" draw:color-inversion="false" draw:image-opacity="100%" draw:color-mode="standard"/></style:style><style:style style:name="fr4" style:family="graphic" style:parent-style-name="Graphics"><style:graphic-properties fo:margin-left="0in" fo:margin-right="0in" fo:margin-top="0in" fo:margin-bottom="0in" style:run-through="foreground" style:wrap="run-through" style:number-wrapped-paragraphs="no-limit" style:vertical-pos="from-top" style:vertical-rel="paragraph" style:horizontal-pos="from-left" style:horizontal-rel="paragraph" fo:padding="0in" fo:border="none" style:shadow="none" draw:shadow-opacity="100%" style:mirror="none" fo:clip="rect(0in, 0in, 0in, 0in)" draw:luminance="0%" draw:contrast="0%" draw:red="0%" draw:green="0%" draw:blue="0%" draw:gamma="100%" draw:color-inversion="false" draw:image-opacity="100%" draw:color-mode="standard"/></style:style><style:style style:name="fr5" style:family="graphic" style:parent-style-name="Graphics"><style:graphic-properties style:run-through="foreground" style:wrap="run-through" style:number-wrapped-paragraphs="no-limit" style:vertical-pos="from-top" style:vertical-rel="paragraph" style:horizontal-pos="from-left" style:horizontal-rel="paragraph" style:mirror="none" fo:clip="rect(0in, 0in, 0in, 0in)" draw:luminance="0%" draw:contrast="0%" draw:red="0%" draw:green="0%" draw:blue="0%" draw:gamma="100%" draw:color-inversion="false" draw:image-opacity="100%" draw:color-mode="standard"/></style:style><style:style style:name="fr6" style:family="graphic" style:parent-style-name="Graphics"><style:graphic-properties style:vertical-pos="middle" style:vertical-rel="baseline" style:horizontal-pos="from-left" style:horizontal-rel="paragraph" style:mirror="none" fo:clip="rect(0in, 0in, 0in, 0in)" draw:luminance="0%" draw:contrast="0%" draw:red="0%" draw:green="0%" draw:blue="0%" draw:gamma="100%" draw:color-inversion="false" draw:image-opacity="100%" draw:color-mode="standard"/></style:style><style:style style:name="fr7" style:family="graphic" style:parent-style-name="Graphics"><style:graphic-properties fo:margin-left="0in" fo:margin-right="0in" fo:margin-top="0in" fo:margin-bottom="0in" style:run-through="foreground" style:wrap="parallel" style:number-wrapped-paragraphs="no-limit" style:wrap-contour="false" style:vertical-pos="middle" style:vertical-rel="baseline" style:horizontal-pos="from-left" style:horizontal-rel="paragraph" draw:fill-image-width="0in" draw:fill-image-height="0in" fo:padding="0in" fo:border="none" style:shadow="none" draw:shadow-opacity="100%" style:mirror="none" fo:clip="rect(0in, 0in, 0in, 0in)" draw:luminance="0%" draw:contrast="0%" draw:red="0%" draw:green="0%" draw:blue="0%" draw:gamma="100%" draw:color-inversion="false" draw:image-opacity="100%" draw:color-mode="standard"/></style:style><style:style style:name="fr8" style:family="graphic" style:parent-style-name="Graphics"><style:graphic-properties style:vertical-pos="from-top" style:horizontal-pos="from-left" style:horizontal-rel="paragraph" style:mirror="none" fo:clip="rect(0in, 0in, 0in, 0in)" draw:luminance="0%" draw:contrast="0%" draw:red="0%" draw:green="0%" draw:blue="0%" draw:gamma="100%" draw:color-inversion="false" draw:image-opacity="100%" draw:color-mode="standard"/></style:style><style:style style:name="fr9" style:family="graphic" style:parent-style-name="Graphics"><style:graphic-properties style:vertical-pos="middle" style:vertical-rel="baseline" style:horizontal-pos="from-left" style:horizontal-rel="paragraph" draw:fill-image-width="0in" draw:fill-image-height="0in" style:mirror="none" fo:clip="rect(0in, 0in, 0in, 0in)" draw:luminance="0%" draw:contrast="0%" draw:red="0%" draw:green="0%" draw:blue="0%" draw:gamma="100%" draw:color-inversion="false" draw:image-opacity="100%" draw:color-mode="standard"/></style:style><style:style style:name="fr10" style:family="graphic" style:parent-style-name="Graphics"><style:graphic-properties style:vertical-pos="top" style:vertical-rel="baseline" style:horizontal-pos="center" style:horizontal-rel="paragraph" style:mirror="none" fo:clip="rect(0in, 0in, 0in, 0in)" draw:luminance="0%" draw:contrast="0%" draw:red="0%" draw:green="0%" draw:blue="0%" draw:gamma="100%" draw:color-inversion="false" draw:image-opacity="100%" draw:color-mode="standard"/></style:style><style:style style:name="Sect1" style:family="section"><style:section-properties style:editable="false"><style:columns fo:column-count="1" fo:column-gap="0in"/></style:section-properties></style:style></office:automatic-styles><office:body><office:text text:use-soft-page-breaks="true"><office:forms form:automatic-focus="false" form:apply-design-mode="false"/><text:sequence-decls><text:sequence-decl text:display-outline-level="0" text:name="Illustration"/><text:sequence-decl text:display-outline-level="0" text:name="Table"/><text:sequence-decl text:display-outline-level="0" text:name="Text"/><text:sequence-decl text:display-outline-level="0" text:name="Drawing"/></text:sequence-decls><text:p text:style-name="P516">БЪЛГАРСКА <text:s/>АКАДЕМИЯ <text:s/>НА <text:s/>НАУКИТЕ</text:p><text:p text:style-name="P6"/><text:p text:style-name="P173">ИНСТИТУТ ПО ИНФОРМАЦИОННИ</text:p><text:p text:style-name="P195">И КОМУНИКАЦИОННИ ТЕХНОЛОГИИ</text:p><text:p text:style-name="P6"/><text:p text:style-name="P179">Д И С Е Р Т А Ц И Я</text:p><text:p text:style-name="P174">ЗА ПРИСЪЖДАНЕ НА ОБРАЗОВАТЕЛНА</text:p><text:p text:style-name="P174">И НАУЧНА СТЕПЕН „ДОКТОР“</text:p><text:p text:style-name="P6"/><text:p text:style-name="P8">РАЗПРЕДЕЛЕНА СИСТЕМА ЗА ПРОГНОЗИРАНЕ НА ВРЕМЕВИ</text:p><text:p text:style-name="P8">РЕДОВЕ С ЕВОЛЮЦИОННИ АЛГОРИТМИ И ИЗКУСТВЕНИ</text:p><text:p text:style-name="P8">НЕВРОННИ МРЕЖИ</text:p><text:p text:style-name="P6"/><text:p text:style-name="P39">Научна област:</text:p><text:p text:style-name="P9"><text:tab/>4 „Природни науки, математика и информатика“</text:p><text:p text:style-name="P39">Професионално направление:</text:p><text:p text:style-name="P9"><text:tab/>4.6 „Информатика и компютърни науки“</text:p><text:p text:style-name="P39">Научна специалност:</text:p><text:p text:style-name="P7"><text:tab/>01.01.12 „Информатика“</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6"/><text:p text:style-name="P6"><text:span text:style-name="T43">Докторант:</text:span><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:span text:style-name="T43">Научен ръководител:</text:span></text:p><text:p text:style-name="P68"><draw:frame draw:style-name="fr1" draw:name="Frame1" text:anchor-type="paragraph" svg:x="2.9819in" svg:y="-0.0626in" draw:z-index="0"><draw:text-box fo:min-height="0.1965in" fo:min-width="0.1339in"><text:p text:style-name="P10">проф. д-р <text:span text:style-name="T228">инж. </text:span>Васил Стефанов Василев</text:p></draw:text-box></draw:frame><text:span text:style-name="T4">инж. Тодор Димитров Балабанов</text:span><text:tab/></text:p><text:p text:style-name="P11"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>доц. <text:span text:style-name="T227">д</text:span>-р <text:span text:style-name="T227">инж.</text:span> Красимира Борисова Генова</text:p><text:p text:style-name="P40"><text:span text:style-name="T4"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/></text:span><text:span text:style-name="T43">Научен консултант:</text:span></text:p><text:p text:style-name="P40"><text:span text:style-name="T4"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/></text:span><text:span text:style-name="T35">проф</text:span><text:span text:style-name="T5">. </text:span><text:span text:style-name="T35">д</text:span><text:span text:style-name="T5">-р </text:span><text:span text:style-name="T35">инж.</text:span><text:span text:style-name="T5"> Милена Кирилова Лазарова</text:span></text:p><text:p text:style-name="P6"/><text:p text:style-name="P181"/><text:p text:style-name="P181"/><text:p text:style-name="P181"/><text:p text:style-name="P196"/><text:p text:style-name="P183"><text:span text:style-name="T108">София, 201</text:span><text:span text:style-name="T51">7</text:span></text:p><text:p text:style-name="P518">Съдържание</text:p><text:table-of-content text:style-name="Sect1" text:protected="true" text:name="Table of Contents1"><text:table-of-content-source text:outline-level="10"><text:index-title-template text:style-name="Contents_20_Heading"/><text:table-of-content-entry-template text:outline-level="1" text:style-name="Contents_20_1"><text:index-entry-link-start text:style-name="Index_20_Link"/><text:index-entry-chapter/><text:index-entry-text/><text:index-entry-tab-stop style:type="right" style:leader-char="."/><text:index-entry-page-number/><text:index-entry-link-end/></text:table-of-content-entry-template><text:table-of-content-entry-template text:outline-level="2" text:style-name="Contents_20_2"><text:index-entry-link-start text:style-name="Index_20_Link"/><text:index-entry-chapter/><text:index-entry-text/><text:index-entry-tab-stop style:type="right" style:leader-char="."/><text:index-entry-page-number/><text:index-entry-link-end/></text:table-of-content-entry-template><text:table-of-content-entry-template text:outline-level="3" text:style-name="Contents_20_3"><text:index-entry-link-start text:style-name="Index_20_Link"/><text:index-entry-chapter/><text:index-entry-text/><text:index-entry-tab-stop style:type="right" style:leader-char="."/><text:index-entry-page-number/><text:index-entry-link-end/></text:table-of-content-entry-template><text:table-of-content-entry-template text:outline-level="4" text:style-name="Contents_20_4"><text:index-entry-link-start text:style-name="Index_20_Link"/><text:index-entry-chapter/><text:index-entry-text/><text:index-entry-tab-stop style:type="right" style:leader-char="."/><text:index-entry-page-number/><text:index-entry-link-end/></text:table-of-content-entry-template><text:table-of-content-entry-template text:outline-level="5" text:style-name="Contents_20_5"><text:index-entry-link-start text:style-name="Index_20_Link"/><text:index-entry-chapter/><text:index-entry-text/><text:index-entry-tab-stop style:type="right" style:leader-char="."/><text:index-entry-page-number/><text:index-entry-link-end/></text:table-of-content-entry-template><text:table-of-content-entry-template text:outline-level="6" text:style-name="Contents_20_6"><text:index-entry-link-start text:style-name="Index_20_Link"/><text:index-entry-chapter/><text:index-entry-text/><text:index-entry-tab-stop style:type="right" style:leader-char="."/><text:index-entry-page-number/><text:index-entry-link-end/></text:table-of-content-entry-template><text:table-of-content-entry-template text:outline-level="7" text:style-name="Contents_20_7"><text:index-entry-link-start text:style-name="Index_20_Link"/><text:index-entry-chapter/><text:index-entry-text/><text:index-entry-tab-stop style:type="right" style:leader-char="."/><text:index-entry-page-number/><text:index-entry-link-end/></text:table-of-content-entry-template><text:table-of-content-entry-template text:outline-level="8" text:style-name="Contents_20_8"><text:index-entry-link-start text:style-name="Index_20_Link"/><text:index-entry-chapter/><text:index-entry-text/><text:index-entry-tab-stop style:type="right" style:leader-char="."/><text:index-entry-page-number/><text:index-entry-link-end/></text:table-of-content-entry-template><text:table-of-content-entry-template text:outline-level="9" text:style-name="Contents_20_9"><text:index-entry-link-start text:style-name="Index_20_Link"/><text:index-entry-chapter/><text:index-entry-text/><text:index-entry-tab-stop style:type="right" style:leader-char="."/><text:index-entry-page-number/><text:index-entry-link-end/></text:table-of-content-entry-template><text:table-of-content-entry-template text:outline-level="10" text:style-name="Contents_20_10"><text:index-entry-link-start text:style-name="Index_20_Link"/><text:index-entry-chapter/><text:index-entry-text/><text:index-entry-tab-stop style:type="right" style:leader-char="."/><text:index-entry-page-number/><text:index-entry-link-end/></text:table-of-content-entry-template></text:table-of-content-source><text:index-body><text:p text:style-name="P517"><text:a xlink:type="simple" xlink:href="#__RefHeading__146_63795308" text:style-name="Index_20_Link" text:visited-style-name="Index_20_Link">Увод<text:tab/>1</text:a></text:p><text:p text:style-name="P517"><text:a xlink:type="simple" xlink:href="#__RefHeading__148_63795308" text:style-name="Index_20_Link" text:visited-style-name="Index_20_Link">Глава 1 - Обзор на системи за прогнозиране на времеви редове<text:tab/>3</text:a></text:p><text:p text:style-name="P537"><text:a xlink:type="simple" xlink:href="#__RefHeading___Toc4533_1119578745" text:style-name="Index_20_Link" text:visited-style-name="Index_20_Link"><text:s/>1.1 Изкуствени невронни мрежи обучавани с евристични алгоритми<text:tab/>4</text:a></text:p><text:p text:style-name="P537"><text:a xlink:type="simple" xlink:href="#__RefHeading___Toc4535_1119578745" text:style-name="Index_20_Link" text:visited-style-name="Index_20_Link"><text:s/>1.2 Използване на евристики за оптимизация на топологията, която изкуствените невронни мрежи използват<text:tab/>7</text:a></text:p><text:p text:style-name="P537"><text:a xlink:type="simple" xlink:href="#__RefHeading___Toc4786_1119578745" text:style-name="Index_20_Link" text:visited-style-name="Index_20_Link"><text:s/>1.3 Едновременна оптимизация на теглата в изкуствените невронни мрежи и на топологията<text:tab/>10</text:a></text:p><text:p text:style-name="P537"><text:a xlink:type="simple" xlink:href="#__RefHeading___Toc5046_650950105" text:style-name="Index_20_Link" text:visited-style-name="Index_20_Link"><text:s/>1.4 Хибридни модели с точни числени методи и/или евристични<text:tab/>12</text:a></text:p><text:p text:style-name="P537"><text:a xlink:type="simple" xlink:href="#__RefHeading___Toc5048_650950105" text:style-name="Index_20_Link" text:visited-style-name="Index_20_Link"><text:s/>1.5 Еволюционни и/или популационни алгоритми за прогнозиране, без използване на изкуствени неверонни мрежи<text:tab/>17</text:a></text:p><text:p text:style-name="P537"><text:a xlink:type="simple" xlink:href="#__RefHeading___Toc58948_484695892" text:style-name="Index_20_Link" text:visited-style-name="Index_20_Link"><text:s/>1.6 Алгоритми за пресмятане в разпределена среда<text:tab/>20</text:a></text:p><text:p text:style-name="P537"><text:a xlink:type="simple" xlink:href="#__RefHeading___Toc4788_1119578745" text:style-name="Index_20_Link" text:visited-style-name="Index_20_Link"><text:s/>1.7 Анализ, проблеми, цели и задачи<text:tab/>25</text:a></text:p><text:p text:style-name="P538"><text:a xlink:type="simple" xlink:href="#__RefHeading___Toc4790_1119578745" text:style-name="Index_20_Link" text:visited-style-name="Index_20_Link"><text:s/>1.7.1 Анализ<text:tab/>25</text:a></text:p><text:p text:style-name="P538"><text:a xlink:type="simple" xlink:href="#__RefHeading___Toc4790_11195787451" text:style-name="Index_20_Link" text:visited-style-name="Index_20_Link"><text:s/>1.7.2 Проблеми<text:tab/>26</text:a></text:p><text:p text:style-name="P538"><text:a xlink:type="simple" xlink:href="#__RefHeading___Toc4792_1119578745" text:style-name="Index_20_Link" text:visited-style-name="Index_20_Link"><text:s/>1.7.3 Цели<text:tab/>29</text:a></text:p><text:p text:style-name="P538"><text:a xlink:type="simple" xlink:href="#__RefHeading___Toc4794_1119578745" text:style-name="Index_20_Link" text:visited-style-name="Index_20_Link"><text:s/>1.7.4 Задачи<text:tab/>30</text:a></text:p><text:p text:style-name="P517"><text:a xlink:type="simple" xlink:href="#__RefHeading__150_63795308" text:style-name="Index_20_Link" text:visited-style-name="Index_20_Link">Глава 2 - Модел за прогнозиране на времеви редове с изкуствени невронни мрежи, обучавани с еволюционни алгоритми<text:tab/>31</text:a></text:p><text:p text:style-name="P537"><text:a xlink:type="simple" xlink:href="#__RefHeading__2955_724005782" text:style-name="Index_20_Link" text:visited-style-name="Index_20_Link"><text:s/>2.1 Определяне на потребителските потребности<text:tab/>31</text:a></text:p><text:p text:style-name="P537"><text:a xlink:type="simple" xlink:href="#__RefHeading__2957_724005782" text:style-name="Index_20_Link" text:visited-style-name="Index_20_Link"><text:s/>2.2 Времеви редове<text:tab/>32</text:a></text:p><text:p text:style-name="P537"><text:a xlink:type="simple" xlink:href="#__RefHeading__2959_724005782" text:style-name="Index_20_Link" text:visited-style-name="Index_20_Link"><text:s/>2.3 Изкуствени невронни мрежи<text:tab/>32</text:a></text:p><text:p text:style-name="P537"><text:a xlink:type="simple" xlink:href="#__RefHeading__2961_724005782" text:style-name="Index_20_Link" text:visited-style-name="Index_20_Link"><text:s/>2.4 Диференциална еволюция<text:tab/>33</text:a></text:p><text:p text:style-name="P537"><text:a xlink:type="simple" xlink:href="#__RefHeading__2963_724005782" text:style-name="Index_20_Link" text:visited-style-name="Index_20_Link"><text:s/>2.5 Изчисления в разпределена среда<text:tab/>34</text:a></text:p><text:p text:style-name="P537"><text:a xlink:type="simple" xlink:href="#__RefHeading__2965_724005782" text:style-name="Index_20_Link" text:visited-style-name="Index_20_Link"><text:s/>2.6 Предложение за прогнозираща разпределена изчислителна система<text:tab/>35</text:a></text:p><text:p text:style-name="P538"><text:a xlink:type="simple" xlink:href="#__RefHeading__3314_724005782" text:style-name="Index_20_Link" text:visited-style-name="Index_20_Link"><text:s/>2.6.1 Структура на изкуствена невронна мрежа<text:tab/>39</text:a></text:p><text:p text:style-name="P538"><text:a xlink:type="simple" xlink:href="#__RefHeading__3316_724005782" text:style-name="Index_20_Link" text:visited-style-name="Index_20_Link"><text:s/>2.6.2 Изчисления от входа към изхода<text:tab/>42</text:a></text:p><text:p text:style-name="P538"><text:a xlink:type="simple" xlink:href="#__RefHeading__3318_724005782" text:style-name="Index_20_Link" text:visited-style-name="Index_20_Link"><text:s/>2.6.3 Манипулация на теглата в изкуствените невронни мрежи с диференциална еволюция<text:tab/>43</text:a></text:p><text:p text:style-name="P538"><text:a xlink:type="simple" xlink:href="#__RefHeading__3320_724005782" text:style-name="Index_20_Link" text:visited-style-name="Index_20_Link"><text:s/>2.6.4 Представяне на входните и изходните данни<text:tab/>46</text:a></text:p><text:p text:style-name="P538"><text:soft-page-break/><text:a xlink:type="simple" xlink:href="#__RefHeading__1941_564051341" text:style-name="Index_20_Link" text:visited-style-name="Index_20_Link"><text:s/>2.6.5 Оценка на индивидите в популацията<text:tab/>46</text:a></text:p><text:p text:style-name="P538"><text:a xlink:type="simple" xlink:href="#__RefHeading__1943_564051341" text:style-name="Index_20_Link" text:visited-style-name="Index_20_Link"><text:s/>2.6.6 Хибридна реализация с диференциална еволюция и обратно разпространение на грешката<text:tab/>48</text:a></text:p><text:p text:style-name="P538"><text:a xlink:type="simple" xlink:href="#__RefHeading__1945_564051341" text:style-name="Index_20_Link" text:visited-style-name="Index_20_Link"><text:s/>2.6.7 Обучение на изкуствени невронни мрежи с диференциална еволюция в разпределена среда<text:tab/>49</text:a></text:p><text:p text:style-name="P537"><text:a xlink:type="simple" xlink:href="#__RefHeading__2965_7240057821" text:style-name="Index_20_Link" text:visited-style-name="Index_20_Link"><text:s/>2.7 Обобщение<text:tab/>51</text:a></text:p><text:p text:style-name="P517"><text:a xlink:type="simple" xlink:href="#__RefHeading___Toc1979_1885221179" text:style-name="Index_20_Link" text:visited-style-name="Index_20_Link">Глава 3 - Софтуерна система за прогнозиране на времеви редове с изкуствени невронни мрежи и еволюционни алгоритми<text:tab/>52</text:a></text:p><text:p text:style-name="P537"><text:a xlink:type="simple" xlink:href="#__RefHeading___Toc2209_325322275" text:style-name="Index_20_Link" text:visited-style-name="Index_20_Link"><text:s/>3.1 Входна информация в разработената система<text:tab/>53</text:a></text:p><text:p text:style-name="P537"><text:a xlink:type="simple" xlink:href="#__RefHeading___Toc2227_325322275" text:style-name="Index_20_Link" text:visited-style-name="Index_20_Link"><text:s/>3.2 Изчисления в разпределена среда<text:tab/>54</text:a></text:p><text:p text:style-name="P537"><text:a xlink:type="simple" xlink:href="#__RefHeading___Toc2955_2025852820" text:style-name="Index_20_Link" text:visited-style-name="Index_20_Link"><text:s/>3.3 Развойни средства<text:tab/>54</text:a></text:p><text:p text:style-name="P538"><text:a xlink:type="simple" xlink:href="#__RefHeading___Toc12989_1666585142" text:style-name="Index_20_Link" text:visited-style-name="Index_20_Link"><text:s/>3.3.1 Клиентско приложение<text:tab/>54</text:a></text:p><text:p text:style-name="P538"><text:a xlink:type="simple" xlink:href="#__RefHeading___Toc12991_1666585142" text:style-name="Index_20_Link" text:visited-style-name="Index_20_Link"><text:s/>3.3.2 Сървър приложение<text:tab/>55</text:a></text:p><text:p text:style-name="P537"><text:a xlink:type="simple" xlink:href="#__RefHeading___Toc12993_1666585142" text:style-name="Index_20_Link" text:visited-style-name="Index_20_Link"><text:s/>3.4 Обектно-ориентирана структура на програмния код от страна на клиента<text:tab/>56</text:a></text:p><text:p text:style-name="P537"><text:a xlink:type="simple" xlink:href="#__RefHeading___Toc12995_1666585142" text:style-name="Index_20_Link" text:visited-style-name="Index_20_Link"><text:s/>3.5 Релационен модел за съхранение на данните от страна на сървъра<text:tab/>67</text:a></text:p><text:p text:style-name="P537"><text:a xlink:type="simple" xlink:href="#__RefHeading___Toc10174_594487062" text:style-name="Index_20_Link" text:visited-style-name="Index_20_Link"><text:s/>3.6 Административен модул за наблюдение и настройване на системата<text:tab/>71</text:a></text:p><text:p text:style-name="P537"><text:a xlink:type="simple" xlink:href="#__RefHeading___Toc10176_594487062" text:style-name="Index_20_Link" text:visited-style-name="Index_20_Link"><text:s/>3.7 Публичен модул за информация от системата<text:tab/>74</text:a></text:p><text:p text:style-name="P537"><text:a xlink:type="simple" xlink:href="#__RefHeading__2965_72400578211" text:style-name="Index_20_Link" text:visited-style-name="Index_20_Link"><text:s/>3.8 Обобщение<text:tab/>76</text:a></text:p><text:p text:style-name="P517"><text:a xlink:type="simple" xlink:href="#__RefHeading__152_63795308" text:style-name="Index_20_Link" text:visited-style-name="Index_20_Link">Глава 4 - Приложение на системата за прогнозиране и анализ на експериментални резултати<text:tab/>77</text:a></text:p><text:p text:style-name="P537"><text:a xlink:type="simple" xlink:href="#__RefHeading___Toc3705_327085497" text:style-name="Index_20_Link" text:visited-style-name="Index_20_Link"><text:s/>4.1 Инцидентно участие на възли в система за разпределени изчисления<text:tab/>78</text:a></text:p><text:p text:style-name="P537"><text:a xlink:type="simple" xlink:href="#__RefHeading___Toc3707_327085497" text:style-name="Index_20_Link" text:visited-style-name="Index_20_Link"><text:s/>4.2 Сравнение между C++ и JavaScript, при правия пас на изкуствена невронна мрежа<text:tab/>79</text:a></text:p><text:p text:style-name="P537"><text:a xlink:type="simple" xlink:href="#__RefHeading___Toc3709_327085497" text:style-name="Index_20_Link" text:visited-style-name="Index_20_Link"><text:s/>4.3 Сравнение между различни топологии на изкуствени неверонни мрежи<text:tab/>85</text:a></text:p><text:p text:style-name="P538"><text:a xlink:type="simple" xlink:href="#__RefHeading___Toc3711_327085497" text:style-name="Index_20_Link" text:visited-style-name="Index_20_Link"><text:s/>4.3.1 Сравнение между пълно-свързана и трислойна изкуствена невронна мрежа<text:tab/>85</text:a></text:p><text:p text:style-name="P538"><text:a xlink:type="simple" xlink:href="#__RefHeading___Toc3713_327085497" text:style-name="Index_20_Link" text:visited-style-name="Index_20_Link"><text:s/>4.3.2 Сравнение между трислойни изкуствени невронни мрежи с различен размер в скрития слой<text:tab/>86</text:a></text:p><text:p text:style-name="P537"><text:a xlink:type="simple" xlink:href="#__RefHeading___Toc3715_327085497" text:style-name="Index_20_Link" text:visited-style-name="Index_20_Link"><text:s/>4.4 Сравнение за ефективност на прогнозирането при различен прозорец от входни данни<text:tab/>88</text:a></text:p><text:p text:style-name="P537"><text:a xlink:type="simple" xlink:href="#__RefHeading__2965_724005782111" text:style-name="Index_20_Link" text:visited-style-name="Index_20_Link"><text:s/>4.5 Обобщение<text:tab/>90</text:a></text:p><text:p text:style-name="P517"><text:a xlink:type="simple" xlink:href="#__RefHeading__158_63795308" text:style-name="Index_20_Link" text:visited-style-name="Index_20_Link">Заключение<text:tab/>92</text:a></text:p><text:p text:style-name="P537"><text:a xlink:type="simple" xlink:href="#__RefHeading___Toc59109_1762457734" text:style-name="Index_20_Link" text:visited-style-name="Index_20_Link"><text:s/>Приноси<text:tab/>94</text:a></text:p><text:p text:style-name="P538"><text:a xlink:type="simple" xlink:href="#__RefHeading___Toc59318_608630531" text:style-name="Index_20_Link" text:visited-style-name="Index_20_Link"><text:s/>Научни приноси<text:tab/>94</text:a></text:p><text:p text:style-name="P538"><text:soft-page-break/><text:a xlink:type="simple" xlink:href="#__RefHeading___Toc59320_608630531" text:style-name="Index_20_Link" text:visited-style-name="Index_20_Link"><text:s/>Научно-приложни приноси<text:tab/>94</text:a></text:p><text:p text:style-name="P538"><text:a xlink:type="simple" xlink:href="#__RefHeading___Toc59322_608630531" text:style-name="Index_20_Link" text:visited-style-name="Index_20_Link"><text:s/>Приложни приноси<text:tab/>95</text:a></text:p><text:p text:style-name="P537"><text:a xlink:type="simple" xlink:href="#__RefHeading___Toc59111_1762457734" text:style-name="Index_20_Link" text:visited-style-name="Index_20_Link"><text:s/>Планове за бъдеща разработка<text:tab/>95</text:a></text:p><text:p text:style-name="P517"><text:a xlink:type="simple" xlink:href="#__RefHeading___Toc59050_2051044689" text:style-name="Index_20_Link" text:visited-style-name="Index_20_Link">Декларация за оригиналност на резултатите<text:tab/>97</text:a></text:p><text:p text:style-name="P517"><text:a xlink:type="simple" xlink:href="#__RefHeading__160_63795308" text:style-name="Index_20_Link" text:visited-style-name="Index_20_Link">Библиография<text:tab/>98</text:a></text:p><text:p text:style-name="P517"><text:a xlink:type="simple" xlink:href="#__RefHeading__162_63795308" text:style-name="Index_20_Link" text:visited-style-name="Index_20_Link">Списък с публикациите по дисертационната работа<text:tab/>128</text:a></text:p><text:p text:style-name="P517"><text:a xlink:type="simple" xlink:href="#__RefHeading__725_533363062" text:style-name="Index_20_Link" text:visited-style-name="Index_20_Link">Списък с цитирания и реферирания<text:tab/>130</text:a></text:p><text:p text:style-name="P517"><text:a xlink:type="simple" xlink:href="#__RefHeading___Toc59586_84424651" text:style-name="Index_20_Link" text:visited-style-name="Index_20_Link">Приложение А – Експериментални данни<text:tab/>131</text:a></text:p><text:p text:style-name="P537"><text:a xlink:type="simple" xlink:href="#__RefHeading___Toc59588_84424651" text:style-name="Index_20_Link" text:visited-style-name="Index_20_Link"><text:s/>Данни използвани за експериментите с кръгова топология и инцидентно включване на възли<text:tab/>131</text:a></text:p><text:p text:style-name="P537"><text:a xlink:type="simple" xlink:href="#__RefHeading___Toc59590_84424651" text:style-name="Index_20_Link" text:visited-style-name="Index_20_Link"><text:s/>Данни за сравнение на правия пас при обучение на изкуствена невронна мрежа със C++ и JavaScript<text:tab/>132</text:a></text:p><text:p text:style-name="P537"><text:a xlink:type="simple" xlink:href="#__RefHeading___Toc59592_84424651" text:style-name="Index_20_Link" text:visited-style-name="Index_20_Link"><text:s/>Данни за сравнение между трислойни изкуствени неверонни мрежи и мрежи с пълна свързаност<text:tab/>134</text:a></text:p></text:index-body></text:table-of-content><text:p text:style-name="Standard"/><text:p text:style-name="P406"><text:bookmark-start text:name="__RefHeading___Toc10631_360254166"/>Списък на фигурите<text:bookmark-end text:name="__RefHeading___Toc10631_360254166"/></text:p><text:p text:style-name="P94"/><text:user-index text:style-name="Sect1" text:name="User-Defined1"><text:user-index-source text:use-index-source-styles="true" text:index-name="User-Defined"><text:index-title-template text:style-name="User_20_Index_20_Heading"/><text:user-index-entry-template text:outline-level="1" text:style-name="Illustration"><text:index-entry-text/><text:index-entry-tab-stop style:type="right" style:leader-char="."/><text:index-entry-page-number/></text:user-index-entry-template><text:user-index-entry-template text:outline-level="2" text:style-name="User_20_Index_20_2"><text:index-entry-text/><text:index-entry-tab-stop style:type="right" style:leader-char="."/><text:index-entry-page-number/></text:user-index-entry-template><text:user-index-entry-template text:outline-level="3" text:style-name="User_20_Index_20_3"><text:index-entry-text/><text:index-entry-tab-stop style:type="right" style:leader-char="."/><text:index-entry-page-number/></text:user-index-entry-template><text:user-index-entry-template text:outline-level="4" text:style-name="User_20_Index_20_4"><text:index-entry-text/><text:index-entry-tab-stop style:type="right" style:leader-char="."/><text:index-entry-page-number/></text:user-index-entry-template><text:user-index-entry-template text:outline-level="5" text:style-name="User_20_Index_20_5"><text:index-entry-text/><text:index-entry-tab-stop style:type="right" style:leader-char="."/><text:index-entry-page-number/></text:user-index-entry-template><text:user-index-entry-template text:outline-level="6" text:style-name="User_20_Index_20_6"><text:index-entry-text/><text:index-entry-tab-stop style:type="right" style:leader-char="."/><text:index-entry-page-number/></text:user-index-entry-template><text:user-index-entry-template text:outline-level="7" text:style-name="User_20_Index_20_7"><text:index-entry-text/><text:index-entry-tab-stop style:type="right" style:leader-char="."/><text:index-entry-page-number/></text:user-index-entry-template><text:user-index-entry-template text:outline-level="8" text:style-name="User_20_Index_20_8"><text:index-entry-text/><text:index-entry-tab-stop style:type="right" style:leader-char="."/><text:index-entry-page-number/></text:user-index-entry-template><text:user-index-entry-template text:outline-level="9" text:style-name="User_20_Index_20_9"><text:index-entry-text/><text:index-entry-tab-stop style:type="right" style:leader-char="."/><text:index-entry-page-number/></text:user-index-entry-template><text:user-index-entry-template text:outline-level="10" text:style-name="User_20_Index_20_10"><text:index-entry-text/><text:index-entry-tab-stop style:type="right" style:leader-char="."/><text:index-entry-page-number/></text:user-index-entry-template><text:index-source-styles text:outline-level="1"><text:index-source-style text:style-name="Illustration"/></text:index-source-styles></text:user-index-source><text:index-body><text:p text:style-name="P539">Фиг. 1.1 TradingSolutions на фирмата NeuroDimension Inc.<text:tab/>28</text:p><text:p text:style-name="P539">Фиг. 1.2 MoneyBee на фирмата i42 GmbH.<text:tab/>29</text:p><text:p text:style-name="P539">Фиг. 2.1 Система за обучение на изкуствени невронни мрежи с диференциална еволюция, в разпределена среда.<text:tab/>37</text:p><text:p text:style-name="P539">Фиг. 2.2 Изкуствена невронна мрежа с топология 3-4-2.<text:tab/>40</text:p><text:p text:style-name="P539">Фиг. 2.3 Кръстосване на комплекти тегла.<text:tab/>44</text:p><text:p text:style-name="P539">Фиг. 2.4 Мутация на комплекти тегла.<text:tab/>45</text:p><text:p text:style-name="P539">Фиг. 2.5 Процедура за оценка на комплектите тегла.<text:tab/>47</text:p><text:p text:style-name="P539">Фиг. 2.6 Промяна на топологията в изкуствената невронна мрежа за нуждите на алгоритъма за обратно разпространение на грешката.<text:tab/>49</text:p><text:p text:style-name="P539">Фиг. 2.7 Обмен на задачи в система за изчисления в разпределена среда.<text:tab/>50</text:p><text:p text:style-name="P539">Фиг. 3.1 Котировки EUR/USD в MetaTrader 4.<text:tab/>53</text:p><text:p text:style-name="P539">Фиг. 3.2 Диаграма на класовете.<text:tab/>57</text:p><text:p text:style-name="P539">Фиг. 3.3 Диаграма на базата данни..<text:tab/>67</text:p><text:p text:style-name="P539">Фиг. 3.4 Екран за вход в административната система [NIRA2012][ANMO2011] (ляво) и екран за създаване на нова изкуствена невронна мрежа в базата данни [NIRA2012][ANMO2011] (дясно).<text:tab/>72</text:p><text:p text:style-name="P539">Фиг. 3.5 Екран за избор на изкуствена невронна мрежа, съхранена в базата данни [NIRA2012][ANMO2011] (ляво) и екран за изтриване на изкуствена невронна мрежа от базата данни [NIRA2012][ANMO2011] (дясно).<text:tab/>73</text:p><text:p text:style-name="P539"><text:soft-page-break/>Фиг. 3.6 Екран за настройка на опциите в административния модул [NIRA2012][ANMO2011] (ляво) и eкран за визуализация на изкуствена невронна мрежа [NIRA2012][ANMO2011] (дясно).<text:tab/>73</text:p><text:p text:style-name="P539">Фиг. 3.7 Основна уеб страница за публикуване на публично достъпна информация от системата (ляво) и уеб страница със списък на всички публично достъпни модули от системата (дясно).<text:tab/>75</text:p><text:p text:style-name="P539">Фиг. 3.8 Уеб страница с информация за контакт.<text:tab/>75</text:p><text:p text:style-name="P539">Фиг. 4.1 Инцидентно включване на възли в разпределената система.<text:tab/>78</text:p><text:p text:style-name="P539">Фиг. 4.2 Сравнение между инцидентно включване на възли и кръгова топология.<text:tab/>79</text:p><text:p text:style-name="P539">Фиг. 4.3 Сравнение в бързодействието при разпространение на информацията в изкуствена невронна мрежа, по време на правия пас, между C++ и JavaScript. По оста X са броят неврони, а по оста Y е бързодействието в милисекунди.<text:tab/>83</text:p><text:p text:style-name="P539">Фиг. 4.4 Стандартно отклонение по време при разпространение на информацията в изкуствена невронна мрежа, по време на правия пас, между C++ и JavaScript. По оста X е броят неврони, а по оста Y е стандартното отклонение.<text:tab/>84</text:p><text:p text:style-name="P539">Фиг. 4.5 Брой епохи за обучение, при еднакъв времеви интервал, за обучението, но различен размер на скрития слой.<text:tab/>87</text:p><text:p text:style-name="P539">Фиг. 4.6 Средна грешка, допускана от изкуствената невронна мрежа, при обучение на мрежи с топология от три слоя, в които размерът на скрития слой варира от 30 до 1.<text:tab/>88</text:p><text:p text:style-name="P539">Фиг. 4.7 Брой епохи за обучение, при еднакъв времеви интервал, за обучението, но различен размер на входния слой (прозорец от данни в миналото).<text:tab/>89</text:p><text:p text:style-name="P539">Фиг. 4.8 Средна грешка, допускана от изкуствената неверонна мрежа, при обучение на мрежи с топология от три слоя, в които размерът на входния слой варира от 35 до 5.<text:tab/>90</text:p></text:index-body></text:user-index><text:p text:style-name="P94"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc10633_360254166"/><text:soft-page-break/>Списък на таблиците<text:bookmark-end text:name="__RefHeading___Toc10633_360254166"/></text:p><text:p text:style-name="P95"/><text:user-index text:style-name="Sect1" text:name="User-Defined1"><text:user-index-source text:use-index-marks="true" text:use-index-source-styles="true" text:index-name="User-Defined"><text:index-title-template text:style-name="User_20_Index_20_Heading"/><text:user-index-entry-template text:outline-level="1" text:style-name="Table"><text:index-entry-text/><text:index-entry-tab-stop style:type="right" style:leader-char="."/><text:index-entry-page-number/></text:user-index-entry-template><text:user-index-entry-template text:outline-level="2" text:style-name="User_20_Index_20_2"><text:index-entry-text/><text:index-entry-tab-stop style:type="right" style:leader-char="."/><text:index-entry-page-number/></text:user-index-entry-template><text:user-index-entry-template text:outline-level="3" text:style-name="User_20_Index_20_3"><text:index-entry-text/><text:index-entry-tab-stop style:type="right" style:leader-char="."/><text:index-entry-page-number/></text:user-index-entry-template><text:user-index-entry-template text:outline-level="4" text:style-name="User_20_Index_20_4"><text:index-entry-text/><text:index-entry-tab-stop style:type="right" style:leader-char="."/><text:index-entry-page-number/></text:user-index-entry-template><text:user-index-entry-template text:outline-level="5" text:style-name="User_20_Index_20_5"><text:index-entry-text/><text:index-entry-tab-stop style:type="right" style:leader-char="."/><text:index-entry-page-number/></text:user-index-entry-template><text:user-index-entry-template text:outline-level="6" text:style-name="User_20_Index_20_6"><text:index-entry-text/><text:index-entry-tab-stop style:type="right" style:leader-char="."/><text:index-entry-page-number/></text:user-index-entry-template><text:user-index-entry-template text:outline-level="7" text:style-name="User_20_Index_20_7"><text:index-entry-text/><text:index-entry-tab-stop style:type="right" style:leader-char="."/><text:index-entry-page-number/></text:user-index-entry-template><text:user-index-entry-template text:outline-level="8" text:style-name="User_20_Index_20_8"><text:index-entry-text/><text:index-entry-tab-stop style:type="right" style:leader-char="."/><text:index-entry-page-number/></text:user-index-entry-template><text:user-index-entry-template text:outline-level="9" text:style-name="User_20_Index_20_9"><text:index-entry-text/><text:index-entry-tab-stop style:type="right" style:leader-char="."/><text:index-entry-page-number/></text:user-index-entry-template><text:user-index-entry-template text:outline-level="10" text:style-name="User_20_Index_20_10"><text:index-entry-text/><text:index-entry-tab-stop style:type="right" style:leader-char="."/><text:index-entry-page-number/></text:user-index-entry-template><text:index-source-styles text:outline-level="1"><text:index-source-style text:style-name="Table"/></text:index-source-styles></text:user-index-source><text:index-body><text:p text:style-name="P540">Таб. 3.1 Отговорници и сътрудници на класа описващ изкуствена невронна мрежа.<text:tab/>57</text:p><text:p text:style-name="P540">Таб. 3.2 Отговорници и сътрудници на класа описващ входа и изхода в изкуствената невронна мрежа.<text:tab/>58</text:p><text:p text:style-name="P540">Таб. 3.3 Отговорници и сътрудници на класа описващ входа в изкуствената невронна мрежа.<text:tab/>58</text:p><text:p text:style-name="P540">Таб. 3.4 Отговорници и сътрудници на класа описващ изхода от изкуствената невронна мрежа.<text:tab/>58</text:p><text:p text:style-name="P540">Таб. 3.5 Отговорници и сътрудници на класа описващ статичните връзки в изкуствената невронна мрежа.<text:tab/>59</text:p><text:p text:style-name="P540">Таб. 3.6 Отговорници и сътрудници на класа описващ хромозомите в диференциалната еволюция.<text:tab/>59</text:p><text:p text:style-name="P540">Таб. 3.7 Отговорници и сътрудници на базов клас за осъществяване на комуникацията.<text:tab/>59</text:p><text:p text:style-name="P540">Таб. 3.8 Отговорници и сътрудници на класа описващ броячите за събиране на статистика.<text:tab/>60</text:p><text:p text:style-name="P540">Таб. 3.9 Отговорници и сътрудници на класа описващ типовете кръстосване.<text:tab/>60</text:p><text:p text:style-name="P540">Таб. 3.10 Отговорници и сътрудници на класа описващ диференциалната еволюция.<text:tab/>61</text:p><text:p text:style-name="P540">Таб. 3.11 Отговорници и сътрудници на класа описващ матрица на съседство.<text:tab/>61</text:p><text:p text:style-name="P540">Таб. 3.12 Отговорници и сътрудници на класа описващ комуникация по HTTP протокола.<text:tab/>61</text:p><text:p text:style-name="P540">Таб. 3.13 Отговорници и сътрудници на класа описващ параметри за инициализация на системата.<text:tab/>62</text:p><text:p text:style-name="P540">Таб. 3.14 Отговорници и сътрудници на класа описващ JSON базирана комуникация по HTTP комуникационен протокол.<text:tab/>62</text:p><text:p text:style-name="P540"><text:soft-page-break/>Таб. 3.15 Отговорници и сътрудници на класа описващ параметрите на модела.<text:tab/>63</text:p><text:p text:style-name="P540">Таб. 3.16 Отговорници и сътрудници на класа описващ неврон в изкуствената невронна мрежа.<text:tab/>63</text:p><text:p text:style-name="P540">Таб. 3.17 Отговорници и сътрудници на класа описващ типове неврони в изкуствената невронна мрежа.<text:tab/>63</text:p><text:p text:style-name="P540">Таб. 3.18 Отговорници и сътрудници на класа описващ списък от неврони.<text:tab/>64</text:p><text:p text:style-name="P540">Таб. 3.19 Отговорници и сътрудници на класа описващ популацията в диференциалната еволюция.<text:tab/>64</text:p><text:p text:style-name="P540">Таб. 3.20 Отговорници и сътрудници на класа описващ информацията за котировките.<text:tab/>64</text:p><text:p text:style-name="P540">Таб. 3.21 Отговорници и сътрудници на класа описващ времевите периоди на котировките.<text:tab/>65</text:p><text:p text:style-name="P540">Таб. 3.22 Отговорници и сътрудници на класа описващ процеса на обучение.<text:tab/>65</text:p><text:p text:style-name="P540">Таб. 3.23 Отговорници и сътрудници на класа описващ тренировъчните примери.<text:tab/>65</text:p><text:p text:style-name="P540">Таб. 3.24 Отговорници и сътрудници на класа описващ тренировъчното множество.<text:tab/>66</text:p><text:p text:style-name="P540">Таб. 3.25 Отговорници и сътрудници на класа описващ теглата в изкуствената невронна мрежа.<text:tab/>66</text:p><text:p text:style-name="P540">Таб. 3.26 Таблица в базата данни, описваща конкретна изкуствена неверонна мрежа.<text:tab/>67</text:p><text:p text:style-name="P540">Таб. 3.27 Таблица в базата данни, описваща типовете изкуствена неверонна мрежа.<text:tab/>68</text:p><text:p text:style-name="P540">Таб. 3.28 Таблица в базата данни, описваща валутните двойки.<text:tab/>68</text:p><text:p text:style-name="P540">Таб. 3.29 Таблица в базата данни, описваща координатите на невроните при визуализация.<text:tab/>69</text:p><text:p text:style-name="P540">Таб. 3.30 Таблица в базата данни, описваща времевите периоди на котировките.<text:tab/>69</text:p><text:p text:style-name="P540">Таб. 3.31 Таблица в базата данни, описваща параметрите на обучението.<text:tab/>70</text:p><text:p text:style-name="P540"><text:soft-page-break/>Таб. 3.32 Таблица в базата данни, описваща обучаващото множество.<text:tab/>70</text:p><text:p text:style-name="P540">Таб. 4.1 Параметри на генетичния алгоритъм.<text:tab/>85</text:p><text:p text:style-name="P540">Таб. 4.2 Сравнение между трислойна и пълно-свързана изкуствена невронна мрежа.<text:tab/>86</text:p></text:index-body></text:user-index><text:p text:style-name="P95"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc59073_1762457734"/>Списък на съкращенията<text:bookmark-end text:name="__RefHeading___Toc59073_1762457734"/></text:p><text:p text:style-name="P93"/><table:table table:name="Table1" table:style-name="Table1"><table:table-column table:style-name="Table1.A"/><table:table-column table:style-name="Table1.B"/><table:table-column table:style-name="Table1.C"/><table:table-column table:style-name="Table1.D"/><table:table-header-rows><table:table-row><table:table-cell table:style-name="Table1.A1" office:value-type="string"><text:p text:style-name="P418">Съкращение на английски език</text:p></table:table-cell><table:table-cell table:style-name="Table1.A1" office:value-type="string"><text:p text:style-name="P418">Термин на английски език</text:p></table:table-cell><table:table-cell table:style-name="Table1.A1" office:value-type="string"><text:p text:style-name="P418">Съкращение на български език</text:p></table:table-cell><table:table-cell table:style-name="Table1.D1" office:value-type="string"><text:p text:style-name="P418">Термин на български език</text:p></table:table-cell></table:table-row></table:table-header-rows><table:table-row><table:table-cell table:style-name="Table1.A20" office:value-type="string"><text:p text:style-name="P342">ANN</text:p></table:table-cell><table:table-cell table:style-name="Table1.B20" office:value-type="string"><text:p text:style-name="P343">Artificial Neural Network</text:p></table:table-cell><table:table-cell table:style-name="Table1.C20" office:value-type="string"><text:p text:style-name="P342">ИНМ</text:p></table:table-cell><table:table-cell table:style-name="Table1.D2" office:value-type="string"><text:p text:style-name="P378">Изкуствена невронна мрежа</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table1.A20" office:value-type="string"><text:p text:style-name="P360">GA</text:p></table:table-cell><table:table-cell table:style-name="Table1.B20" office:value-type="string"><text:p text:style-name="P344">Genetic Algorithm</text:p></table:table-cell><table:table-cell table:style-name="Table1.C20" office:value-type="string"><text:p text:style-name="P360">ГА</text:p></table:table-cell><table:table-cell table:style-name="Table1.D3" office:value-type="string"><text:p text:style-name="P378">Генетичен алгоритъм</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table1.A20" office:value-type="string"><text:p text:style-name="P360">BP</text:p></table:table-cell><table:table-cell table:style-name="Table1.B20" office:value-type="string"><text:p text:style-name="P344">Back Propagation</text:p></table:table-cell><table:table-cell table:style-name="Table1.C20" office:value-type="string"><text:p text:style-name="P360">ОРГ</text:p></table:table-cell><table:table-cell table:style-name="Table1.D20" office:value-type="string"><text:p text:style-name="P378">Обратно разпространение на грешката</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table1.A20" office:value-type="string"><text:p text:style-name="P378">ЕА</text:p></table:table-cell><table:table-cell table:style-name="Table1.B20" office:value-type="string"><text:p text:style-name="P345">Evolutionary Algorithms</text:p></table:table-cell><table:table-cell table:style-name="Table1.C20" office:value-type="string"><text:p text:style-name="P378">ЕА</text:p></table:table-cell><table:table-cell table:style-name="Table1.D20" office:value-type="string"><text:p text:style-name="P378">Еволюционни алгоритми</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table1.A20" office:value-type="string"><text:p text:style-name="P361">DE</text:p></table:table-cell><table:table-cell table:style-name="Table1.B20" office:value-type="string"><text:p text:style-name="P345">Differential Evolution</text:p></table:table-cell><table:table-cell table:style-name="Table1.C20" office:value-type="string"><text:p text:style-name="P383">ДЕ</text:p></table:table-cell><table:table-cell table:style-name="Table1.D20" office:value-type="string"><text:p text:style-name="P378">Диференциална еволюция <text:span text:style-name="T159">(еволюция на разликите)</text:span></text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table1.A20" office:value-type="string"><text:p text:style-name="P362">PBMOA</text:p></table:table-cell><table:table-cell table:style-name="Table1.B20" office:value-type="string"><text:p text:style-name="P346">Population-based metaheuristic optimization algorithm</text:p></table:table-cell><table:table-cell table:style-name="Table1.C20" office:value-type="string"><text:p text:style-name="P378">ПА</text:p></table:table-cell><table:table-cell table:style-name="Table1.D20" office:value-type="string"><text:p text:style-name="P378">Популационни алгоритми</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table1.A20" office:value-type="string"><text:p text:style-name="P363">RANN</text:p></table:table-cell><table:table-cell table:style-name="Table1.B20" office:value-type="string"><text:p text:style-name="P347">Recurrent Artificial Neural Networks</text:p></table:table-cell><table:table-cell table:style-name="Table1.C20" office:value-type="string"><text:p text:style-name="P363">РИНМ</text:p></table:table-cell><table:table-cell table:style-name="Table1.D20" office:value-type="string"><text:p text:style-name="P378">Рекурентни изкуствени невронни мрежи</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table1.A20" office:value-type="string"><text:p text:style-name="P364">GMDH</text:p></table:table-cell><table:table-cell table:style-name="Table1.B20" office:value-type="string"><text:p text:style-name="P348">Group Method of Data Handling</text:p></table:table-cell><table:table-cell table:style-name="Table1.C20" office:value-type="string"><text:p text:style-name="P378">МГОА</text:p></table:table-cell><table:table-cell table:style-name="Table1.D20" office:value-type="string"><text:p text:style-name="P364">Метод за групово отчитане на аргументи</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table1.A20" office:value-type="string"><text:p text:style-name="P365">BRFNN</text:p></table:table-cell><table:table-cell table:style-name="Table1.B20" office:value-type="string"><text:p text:style-name="P349">Radial Basis Function Neural Network</text:p></table:table-cell><table:table-cell table:style-name="Table1.C20" office:value-type="string"><text:p text:style-name="P365">ИНМРБФ</text:p></table:table-cell><table:table-cell table:style-name="Table1.D20" office:value-type="string"><text:p text:style-name="P378">Изкуствени невронни мрежи с радиална базова функция</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table1.A20" office:value-type="string"><text:p text:style-name="P366">ROLS</text:p></table:table-cell><table:table-cell table:style-name="Table1.B20" office:value-type="string"><text:p text:style-name="P350">Regular Orthogonal Least Square </text:p></table:table-cell><table:table-cell table:style-name="Table1.C20" office:value-type="string"><text:p text:style-name="P378">РОСКА</text:p></table:table-cell><table:table-cell table:style-name="Table1.D20" office:value-type="string"><text:p text:style-name="P366">Регулиран ортогонален средно квадратичен алгоритъм</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table1.A20" office:value-type="string"><text:p text:style-name="P367">SOM</text:p></table:table-cell><table:table-cell table:style-name="Table1.B20" office:value-type="string"><text:p text:style-name="P351">Self-organized Map</text:p></table:table-cell><table:table-cell table:style-name="Table1.C20" office:value-type="string"><text:p text:style-name="P367">СОК</text:p></table:table-cell><table:table-cell table:style-name="Table1.D20" office:value-type="string"><text:p text:style-name="P378">Само-организираща се карта</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table1.A20" office:value-type="string"><text:p text:style-name="P368">SA</text:p></table:table-cell><table:table-cell table:style-name="Table1.B20" office:value-type="string"><text:p text:style-name="P352">Simulated Annealing</text:p></table:table-cell><table:table-cell table:style-name="Table1.C20" office:value-type="string"><text:p text:style-name="P368">СЗ</text:p></table:table-cell><table:table-cell table:style-name="Table1.D20" office:value-type="string"><text:p text:style-name="P378">Симулирано закаляване</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table1.A20" office:value-type="string"><text:p text:style-name="P369">SVD</text:p></table:table-cell><table:table-cell table:style-name="Table1.B20" office:value-type="string"><text:p text:style-name="P353">Singular Value Decomposition</text:p></table:table-cell><table:table-cell table:style-name="Table1.C20" office:value-type="string"><text:p text:style-name="P378">РЕС</text:p></table:table-cell><table:table-cell table:style-name="Table1.D20" office:value-type="string"><text:p text:style-name="P378">Разлагане на единични стойности</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table1.A20" office:value-type="string"><text:p text:style-name="P370">ALOPEX</text:p></table:table-cell><table:table-cell table:style-name="Table1.B20" office:value-type="string"><text:p text:style-name="P354">Algorithms of Pattern Extraction</text:p></table:table-cell><table:table-cell table:style-name="Table1.C20" office:value-type="string"><text:p text:style-name="P378">АИШ</text:p></table:table-cell><table:table-cell table:style-name="Table1.D20" office:value-type="string"><text:p text:style-name="P378">Алгоритъм за извличане на шаблони</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table1.A20" office:value-type="string"><text:p text:style-name="P371">MA</text:p></table:table-cell><table:table-cell table:style-name="Table1.B20" office:value-type="string"><text:p text:style-name="P355">Memetic algorithms</text:p></table:table-cell><table:table-cell table:style-name="Table1.C20" office:value-type="string"><text:p text:style-name="P378">МА</text:p></table:table-cell><table:table-cell table:style-name="Table1.D20" office:value-type="string"><text:p text:style-name="P378">Меметичен алгоритъм</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table1.A20" office:value-type="string"><text:p text:style-name="P372">LGP</text:p></table:table-cell><table:table-cell table:style-name="Table1.B20" office:value-type="string"><text:p text:style-name="P356">Linear Genetic Programming</text:p></table:table-cell><table:table-cell table:style-name="Table1.C20" office:value-type="string"><text:p text:style-name="P378">ЛГП</text:p></table:table-cell><table:table-cell table:style-name="Table1.D20" office:value-type="string"><text:p text:style-name="P378">Линейно генетично програмиране</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table1.A20" office:value-type="string"><text:p text:style-name="P373">MAPE</text:p></table:table-cell><table:table-cell table:style-name="Table1.B20" office:value-type="string"><text:p text:style-name="P357">Mean Absolute Percentage Error</text:p></table:table-cell><table:table-cell table:style-name="Table1.C20" office:value-type="string"><text:p text:style-name="P373">САПГ</text:p></table:table-cell><table:table-cell table:style-name="Table1.D20" office:value-type="string"><text:p text:style-name="P373">Средна абсолютна процентна грешка</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table1.A20" office:value-type="string"><text:p text:style-name="P374">ARIMA</text:p></table:table-cell><table:table-cell table:style-name="Table1.B20" office:value-type="string"><text:p text:style-name="P358">Autoregressive Integrated Moving Average</text:p></table:table-cell><table:table-cell table:style-name="Table1.C20" office:value-type="string"><text:p text:style-name="P374">АРИПС</text:p></table:table-cell><table:table-cell table:style-name="Table1.D20" office:value-type="string"><text:p text:style-name="P374">Авто регресивна интегрирана плъзгаща средна</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table1.A20" office:value-type="string"><text:p text:style-name="P375">GPU</text:p></table:table-cell><table:table-cell table:style-name="Table1.B20" office:value-type="string"><text:p text:style-name="P359">Graphic Processing Unit</text:p></table:table-cell><table:table-cell table:style-name="Table1.C20" office:value-type="string"><text:p text:style-name="P375">ГИЕ</text:p></table:table-cell><table:table-cell table:style-name="Table1.D20" office:value-type="string"><text:p text:style-name="P375">Графичен изчислителен елемент</text:p></table:table-cell></table:table-row></table:table><text:p text:style-name="P93"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc11368_1918512102"/><text:soft-page-break/>Речник на използваните термини<text:bookmark-end text:name="__RefHeading___Toc11368_1918512102"/></text:p><text:p text:style-name="P93"/><table:table table:name="Table2" table:style-name="Table2"><table:table-column table:style-name="Table2.A"/><table:table-column table:style-name="Table2.B"/><table:table-header-rows><table:table-row><table:table-cell table:style-name="Table2.A1" office:value-type="string"><text:p text:style-name="P418">Термин</text:p></table:table-cell><table:table-cell table:style-name="Table2.B1" office:value-type="string"><text:p text:style-name="P418">Значение</text:p></table:table-cell></table:table-row></table:table-header-rows><table:table-row><table:table-cell table:style-name="Table2.A5" office:value-type="string"><text:p text:style-name="P376"><text:span text:style-name="T179">b</text:span>ias</text:p></table:table-cell><table:table-cell table:style-name="Table2.B2" office:value-type="string"><text:p text:style-name="P376">В българската терминология се използва „отместване“. Невроните, задаващи отместването, винаги имат на своя изход сигнал за максимална активация. По този начин всички тегла, свързани с тези неврони, подават активационен сигнал към невроните с които са свързани. </text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table2.A5" office:value-type="string"><text:p text:style-name="P377">overfitting</text:p></table:table-cell><table:table-cell table:style-name="Table2.B3" office:value-type="string"><text:p text:style-name="P378">В българската <text:span text:style-name="T180">(а и в руската) терминология се използва „преобучение“. Това е ситуация при машинното обучение, когато системата много добре научава известните примери, но показва слаби резултати при непознати примери.</text:span></text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table2.A5" office:value-type="string"><text:p text:style-name="P378">дълга поръчка</text:p></table:table-cell><table:table-cell table:style-name="Table2.B4" office:value-type="string"><text:p text:style-name="P378">Извършване на търговска операция при която се залага на факта, че цената на търгуваната стока ще поскъпне.</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table2.A5" office:value-type="string"><text:p text:style-name="P378">къса поръчка</text:p></table:table-cell><table:table-cell table:style-name="Table2.B5" office:value-type="string"><text:p text:style-name="P378">Извършване на търговска операция при която се залага на факта, че цената на търгуваната стока ще поевтинее.</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table2.A10" office:value-type="string"><text:p text:style-name="P378">меметичен алгоритъм</text:p></table:table-cell><table:table-cell table:style-name="Table2.B10" office:value-type="string"><text:p text:style-name="P378">Алгоритъм основан на поведенчески модели. Най-често намира приложение в популационните и еволюционните алгоритми.</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table2.A10" office:value-type="string"><text:p text:style-name="P379"><text:span text:style-name="T249">w</text:span>avelet</text:p></table:table-cell><table:table-cell table:style-name="Table2.B10" office:value-type="string"><text:p text:style-name="P380">Математическа функция, която се използва за разлагането на функции или непрекъснати във времето сигнали по честотни елементи.</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table2.A10" office:value-type="string"><text:p text:style-name="P382">donated computing power</text:p></table:table-cell><table:table-cell table:style-name="Table2.B10" office:value-type="string"><text:p text:style-name="P380">Изчисления в разпределена среда, при които потребителите даряват <text:span text:style-name="T251">(без заплащане) изчислителни ресурси на личните си компютри.</text:span></text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table2.A10" office:value-type="string"><text:p text:style-name="P382">индикатор</text:p></table:table-cell><table:table-cell table:style-name="Table2.B10" office:value-type="string"><text:p text:style-name="P381">При търговията на Форекс често се използват инструменти за технически анализ. Една от големите групи инструменти се наричат „индикатори“. Индикаторът представлява математическо преобразуване на информацията от финансовия времеви ред. Съществуват индикатори базирани на статистически формули, формули от редицата на <text:span text:style-name="T283">Фибоначи</text:span> и други.</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table2.A10" office:value-type="string"><text:p text:style-name="P382">осцилатор</text:p></table:table-cell><table:table-cell table:style-name="Table2.B10" office:value-type="string"><text:p text:style-name="P381">Осцилаторите са вид инструменти в техническия анализ, които приличат на индикаторите, но най-често се визуализират в отделна графика спрямо финансовия времеви ред. Най-често се използват за обозначаване на „трептения“ в промяната на цената.</text:p></table:table-cell></table:table-row></table:table><text:p text:style-name="P180"/><text:section text:style-name="Sect1" text:name="Section1"><text:h text:style-name="P520" text:outline-level="1"><text:bookmark-start text:name="__RefHeading__146_63795308"/>Увод<text:bookmark-end text:name="__RefHeading__146_63795308"/></text:h><text:p text:style-name="Standard"/><text:p text:style-name="P139"><text:tab/>Множество задачи за планиране и анализ в метеорологията, икономиката, образованието, транспорта, екологията и други области могат да бъдат сведени до обработката и прогнозирането на времеви редове <text:span text:style-name="T167">[GEJE1976]</text:span>. Прогнозирането на времеви редове се подрежда на <text:span text:style-name="T44">3</text:span> място (от <text:span text:style-name="T47">4</text:span> възможни – категориини данни <text:span text:style-name="T192">(categorical data)</text:span>, много вариантна статистика <text:span text:style-name="T193">(multivariate statistics), времеви редове (time-series) и анализ на преживяването (survival analysis)</text:span>) по приоритет в изследователските направления на научната дисциплина <text:span text:style-name="T164">„Статистика“</text:span>. Анализът на времеви редове е свързан с корелационния анализ, регресионния анализ, статистическия извод, събирането на данни и дескриптивната статистика. Задачите за прогнозиране на времеви редове могат да бъдат разделени на <text:span text:style-name="T50">два</text:span><text:span text:style-name="T45"> </text:span>отделни класа, в зависимост от тяхната <text:span text:style-name="T164">формална</text:span> постановка: <text:span text:style-name="T191">1. Методи в честотната област; 2. Методи в времевата област.</text:span></text:p><text:p text:style-name="P6"/><text:p text:style-name="P6"><text:tab/>В дисертационната работа се разглеждат проблеми от втория клас, а именно със задачи за прогнозиране на времеви редове <text:span text:style-name="T164">от валутните пазари във времевата област.</text:span> При прогнозирането на времеви редове се определя стойност за наблюдаваната величина в бъдещи моменти от времето. В общия случай не съществува единствено решение което да гарантира абсолютна точност на прогнозата. Тъй като през <text:span text:style-name="T45">N </text:span>на брой точки в двумерното пространство могат да се прекарат безкраен брой криви, то от съществено значение са кривите които минимизират грешката от прогнозата и реалната величина. Намирането на подходяща крива предлагаща прогноза е едно-критериална оптимизационна задача в многомерното пространство. Броят параметри <text:span text:style-name="T282">(при използването на изкуствени невронни мрежи това е броят на теглата в мрежата)</text:span>, характеризиращи кривата съответстват на размерността, на пространството. Тегловните коефициенти в изкуствена невронна мрежа е основен подход за представяне на параметри за крива, преминаваща максимално близо до <text:span text:style-name="T45">N </text:span>на брой точки в двумерното пространство. </text:p><text:p text:style-name="P6"/><text:p text:style-name="P6"><text:tab/>Стойностите на теглата в изкуствената невронна мрежа се определят с помощта на точни оптимизационни числени методи или вероятностни (евристични) числени методи. Към групата на точните числени методи спада методът за обратно разпространение на грешката. <text:soft-page-break/>Обратно разпространение на грешката е градиентен оптимизационен метод целящ намаляването на грешката която мрежата допуска в изходния слой. Към групата на евристичните методи спадат популацион<text:span text:style-name="T153">н</text:span>ите алгоритми каквито са генетичните алгоритми и диференциалната еволюция. </text:p><text:p text:style-name="P6"/><text:p text:style-name="P6"><text:tab/>Основните резултати намерили място в дисертационната работа са свързани с прилагането на евристика (диференциална еволюция или известна също като еволюция на разликите) за обучение на изкуствени невронни мрежи, така че да пресмятат прогноза за предварително определен времеви ред.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P111"><text:tab/>Дисертационната работа се състои от четири глави и заключение. В първата глава е извършен анализ на съществуващите методи и подходи за решаване на задачи от прогнозирането на времеви редове. Във втора глава са описани разработените нови подходи за машинно обучение които разширяват възможностите за ускоряване на обучението и повишаване точността на прогнозите предлагани от изкуствени невронни мрежи. В трета глава са представени <text:span text:style-name="T46">два</text:span><text:span text:style-name="T45"> </text:span>метода и техните алгоритмични схеми които подобряват сходимостта в обучението на изкуствени невронни мрежи. В четвърта глава са описани предназначението, структурата, функциите и начинът на работа с разработената експериментална програмна система за прогнозиране на времеви редове. В заключението са изложени основните приноси от дисертационната работа.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6"><text:tab/>При описанието на текста в отделните глави на дисертационната работа са използвани стандартни математически означения. Номерацията на формулите, таблиците и фигурите се отнасят за отделните точки в съответната глава.</text:p><text:p text:style-name="P6"/><text:h text:style-name="P521" text:outline-level="1"><text:bookmark-start text:name="__RefHeading__148_63795308"/>Глава 1 - Обзор на системи за прогнозиране на времеви редове<text:bookmark-end text:name="__RefHeading__148_63795308"/></text:h><text:p text:style-name="P6"/><text:p text:style-name="P124"><text:tab/>Прогнозирането на времеви редове е сложна задача, която намира приложение в множество области в които по настояще усилено се работи. За създаването на прогнозиращи софтуерни системи се изискват множество знания и умения. Важността на задачите за прогнозиране е толкова голяма, че те намират приложение в почти всяка сфера от човешкия живот (температура, валежи, енергийни запаси и други). Подробен обзор за използването на изкуствени невронни мрежи, генетични алгоритми и размита логика за капиталовите пазари е представен в [SMSK2001]. Обзорът е съпроводен с кратко представяне на трите метода. Класификация на различни методи за прогнозиране на електрическото потребление е представено в [HAMN2002][JVGM2002] като също се разглеждат генетични алгоритми и изкуствени невронни мрежи. Обзор за използването на изкуствени невронни мрежи, генетични алгоритми и размита логика в областта на капиталовите пазари, с кратко представяне на методите, е достъпен в [ARSH2003]. Обзор за използваните алгоритми в икономиката <text:span text:style-name="T211">също е представен и в [EUVO2005]</text:span> <text:span text:style-name="T211">като е направено представяне на възможностите за прогнозиране с</text:span> изкуствени невронни мрежи и генетични алгоритми. При обзора на инструментите за прогнозиране на времеви редове с изкуствени невронни мрежи и еволюционни алгоритми е съществен аспектът за използването на съществуващи софтуерни решения описано в [RSQZ2006] и наличието на софтуерен пакети както описанията в [CDTY2006] <text:span text:style-name="T213">(пакет създаден на </text:span>програмния език С, за операционна система <text:span text:style-name="T213">Mac OS X</text:span> и след това е преработен за операционна система <text:span text:style-name="T213">Microsoft</text:span> <text:span text:style-name="T213">Windows)</text:span>. Задълбочен обзор на методите за съставяне на инвестиционен портфейл и начините по които изкуствени невронни мрежи или генетични алгоритми могат да се ползват при тази задача е представен в [MVDL2008]. Обзор на видовете изкуствени невронни мрежи се предлага в [YAHU2009]. Също така се предлагат начини за тяхното приложение в земеделието. В [MSMJ2009] се предлага обзор на видовете изкуствени невронни мрежи и приложението им в геотехническото инженерство. Споменават се практически насоки за избор на размер в скрития слой (примерно 75% от размера на входния слой). Другата препоръка е размерът на скрития слой да бъде между средното и сумата от размера на входния и изходния слой. Споменава се и стратегия в която <text:soft-page-break/>прогресивно се започва от малък брой елементи в скрития слой и се увеличава броят докато няма подобрение в параметрите за обучение на изкуствени невронни мрежи. Препоръките също са броят на тренировъчните примери драстично да надхвърля броя на елементите в скрития слой. В [MAWE2010] е изложен изключително подробен обзор на евристичните оптимизационни алгоритми. Описва се паралелна реализация на диференциална еволюция с централен възел който синхронизира миграцията между останалите възли. Топологията е кръгова и мигрантите преминават само в посока към следващия пряк съсед. Всичко това се синхронизира от централния възел който на практика прави топологията звездовидна. В [JMAM2012] се излага обзор на пул базираните еволюционни алгоритми за реализацията на разширяеми и асинхронни изчисления в разпределена среда. </text:p><text:p text:style-name="P6"/><text:h text:style-name="Heading_20_2" text:outline-level="2"><text:bookmark-start text:name="__RefHeading___Toc4533_1119578745"/><text:s text:c="2"/><text:span text:style-name="T176">1.1 Изкуствени невронни мрежи обучавани с евристични алгоритми</text:span><text:bookmark-end text:name="__RefHeading___Toc4533_1119578745"/></text:h><text:p text:style-name="P6"/><text:p text:style-name="P129"><text:tab/>Един от най-популярните подходи за оптимизация на теглата в многослойна изкуствена невронна мрежа е с помощта на генетични алгоритми. За потвърждаване на ефективността се прави сравнение с обратно разпространение на грешката и се показва ефективността на генетичните алгоритми пред алгоритъма за обучение с обратно разпространение на грешката. Има изследване на различни операции в генетичните алгоритми показано в [DMLD1989]. При някои модели, обучението на изкуствени невронни мрежи с фиксирана структура които са или еднопосочни или рекурентни се извършва с генетични алгоритми като се определя как да се променят теглата и отместванията <text:span text:style-name="T188">(bias)</text:span>, но не самите стойности теглата и отместванията [JRVC1998]. Правено е сравнение между симулирано закаляване и генетични алгоритми. Оптимизират се теглата на изкуствени невронни мрежи като за репродуциране се избират тези хромозоми които дадат най-ниска средно-квадратична грешка (хромозомите се зареждат в изкуствена невронна мрежа). Направени са шест теста като данните са нормализирани в интервал -1 до +1. Основен проблем при симулираното закаляване е, че се нуждае от твърде много ръчни настройки на използваните параметри. Резултатите от сравнението са представени в [RSRD1999]. Резултати от обучението на пълно свързани изкуствени невронни мрежи, на които теглата се кодират в генетичен алгоритъм са представени в [HARS2001]. При някои реализации на <text:soft-page-break/>процедура за оптимизация на теглата в изкуствени невронни мрежи с използването на генетични алгоритми се търсят точки в които може да се направят „къси“ или „дълги“ поръчки като на входа на изкуствени невронни мрежи се подават стойности от пълзящи средни както е описано в [ASIC2002]. Генетични алгоритми може да се използват както за оптимизиране на теглата на връзките между слоевете в изкуствени невронни мрежи но и за избор кои стойности от времевия ред да се използват, с цел редуциране на данните и използване само на силно значими стойности както е описано в [LHBB2002]. В някои случаи се избират отделни свойства при прогнозирането на времевите редове с помощта на компактен генетичен алгоритъм. Самото прогнозиране се извършва с изкуствени невронни мрежи, генетични алгоритми или статистически методи [WLRP2002]. Възможни са варианти в които генетични алгоритми се използва за оптимизиране на центровете и радиусите в радиално базова изкуствени невронни мрежи. При тази реализация за оптимизация на теглата се ползва разлагане на единична стойност (SVD) [SOCL2002]. При точните числени методи е възможно теглата на изкуствени невронни мрежи да се представят като хромозоми в генетични алгоритми. След това върху избрани седем функции се прави тест за обучение на изкуствени невронни мрежи с генетични алгоритми или с обратно разпространение на грешката. При този вариант се разчита на добре подбрани първоначални тегла преди действителното обучение. Тестовете се провеждат при идентични архитектури без да се набляга върху оптимизирането на самата архитектурата [SVEK2003]. В [HFJL2003] се прави сравнение между симулирано закаляване и генетични алгоритми. Оптимизират се теглата на изкуствени невронни мрежи като за репродуциране се избират тези хромозоми които дадат най-ниска средно-квадратична грешка. Направени са шест теста като данните са нормализирани в интервал -1 до +1. Симулираното закаляване се нуждае от твърде много ръчни настройки на използваните параметри. Модел на разпределени генетични алгоритми за обучение на фронтални изкуствени невронни мрежи е представен в [VLOL2004]. В [JLJL2005] е представен алгоритъм за диференциална еволюция с който се обучават радиално базисни изкуствени невронни мрежи. В [MDMP2006] са представени модели на пълно-свързани изкуствени невронни мрежи на които теглата се кодират в генетични алгоритми с цел обучение на мрежата. В [KYKI2006] генетичен алгоритъм оптимизира теглата на връзките между слоевете на изкуствени невронни мрежи. Също така, генетичен алгоритъм избира кои стойности от времевия ред да се използват. Това се прави с цел да се намалят данните, така че да се използват само силно значими стойности. В [AOAC2007] се предлага <text:soft-page-break/>изкуствена невронна мрежа обучавана с генетични алгоритми за прогнозиране на стоковата борса в Истанбул. В [GNYZ2007] диференциална еволюция се ползва за оптимизация на теглата в изкуствени невронни мрежи. Вероятността за мутация се настройва автоматично за да може в началото да схожда по-бързо и да не попада в локални екстремуми. Експериментите са направени с математически подбрани „гладки“ функции. В [JDDH2007] генерализиран вариант на диференциална еволюция се ползва за обучение на изкуствени невронни мрежи. Целта на мрежата е да класифицира листа на конкретни растения. В [ATPG2007] е направена модификация на диференциална еволюция за обучение на изкуствена невронна мрежа при която теглата са само цели числа. Тестовете са направени над три общо известни проблема от обучението на изкуствени невронни мрежи. В [SKHK2008] се представя обобщена регресионна изкуствена невронна мрежа. При нея генетични алгоритми се използват за оптимизиране на теглата в мрежата. Тази системата се използва за прогнозиране на водната циркулация между земята и атмосферата. В [MPAC2008] се предлага фина настройка на <text:s/>параметрите в диференциалната еволюция, така че максимално добре да оптимизира теглата на изкуствени невронни мрежи. В [ABWD2008] е представено изследване за трите алгоритъма - диференциална еволюция, генетични алгоритми и алгоритъм за рояка от частици. Целта е да се оптимизират теглата в изкуствени невронни мрежи (тоест обучение на мрежата). При това изследване диференциалната еволюция показва по-добри резултати от другите алгоритми. В [ASMB2008] диференциална еволюция за оптимизация на теглата в изкуствени невронни мрежи се сравнява с други два подхода. Интересното при това изследване е, че единственият параметър който се задава предварително на диференциалната еволюция е броят на индивидите в популацията. В [HMAB2009] се предлага изкуствени невронни мрежи обучавани с диференциална еволюция за метеорологични прогнози. <text:span text:style-name="T216">В [TTSS2009] се предлагат изкуствени невронни мрежи оптимизирани с диференциална еволюция която е модифицирана с дегенерация. Постига се с увреждане на гените и това води до дегенерацията им. В [IEMH2011] се представя рекурентна изкуствена невронна мрежа на която оптимизацията се прави с генетични алгоритми. Целта е да се прогнозира скоростта на вятъра за вятърни турбини които генерират ток. Този подход се сравнява с регресия от поддържащи вектори. В [NAFK2011] се предлага диференциална еволюция за обучение на изкуствени невронни мрежи които са базирани на куполовидни функции под формата на активационни функции. Прогнозира се силата на вятъра във ветрени полета. В [ABWD2011] се предлага смесен подход за диференциална </text:span><text:soft-page-break/><text:span text:style-name="T216">еволюция като оптимизация на параметрите в изкуствени невронни мрежи и на теглата. В [HSRG2011] се модифицира идеята за рояк от частици и се предлага изкуствена колония от пчели за обучение на изкуствени невронни мрежи. Моделът се използва при предсказанието на земетръсни времеви редове. </text:span></text:p><text:p text:style-name="P71"/><text:h text:style-name="Heading_20_2" text:outline-level="2"><text:bookmark-start text:name="__RefHeading___Toc4535_1119578745"/><text:s text:c="2"/><text:span text:style-name="T177">1.2 Използване на евристики за оптимизация на топологията, която изкуствените невронни мрежи използват</text:span><text:bookmark-end text:name="__RefHeading___Toc4535_1119578745"/></text:h><text:p text:style-name="P71"/><text:p text:style-name="P152"><text:tab/>При някои реализации не се оптимизират теглата в мрежата, а се оптимизира топологията <text:span text:style-name="T178">(връзките между възлите)</text:span> на изкуствени невронни мрежи. Освен топологията, често обект на оптимизация стават и параметри за обучение. При този подхода за обучение се наблюдава ефекта <text:span text:style-name="T178">overfitting. По-голям брой</text:span> неврони в скрития слой намалява обобщаващите свойства на мрежата като нараства приучаването към конкретните обучаващи примери [CHSL1990][PCJM1996a][ANWE1997]. Индиректно може да се повлияе на топологията в изкуствените невронни мрежи като с помощта на генетични алгоритми се редуцира множеството от входни данни. На практика, това влияе на броя входове в изкуствените невронни мрежи и съответно на топологията от страната на входния слой. Когато популацията на генетичния алгоритъм се разпределя на различни машини това води до изчисление в разпределена среда. Чрез контрол на връзките между възлите в изкуствените невронни мрежи допълнително се намали размерът на цялата изкуствена невронна мрежа [JORI1991]. При някои реализации на генетични алгоритми <text:span text:style-name="T182">(както е в [MAMA1995])</text:span> се кодирани параметрите за топологията на изкуствените невронни мрежи много по-подробно. Това включва информация за слоевете и връзките между тях <text:span text:style-name="T182">(</text:span>включително и обратни връзки<text:span text:style-name="T182">)</text:span> спрямо други предложени модели. Не само топологията на мрежата може да се оптимизира с генетични алгоритми, но също така и типът мрежа да бъде обект на оптимизацията както е представено в [BLLE1997]. В някои модели за оптимизация на топологията и параметрите на изкуствени невронни мрежи генетичните алгоритми се комбинират с допълнителни средства каквито са контекстно свободна граматика (граматична еволюция) описани в [XYYL1997]. В [ITDG2008a] и [ITDG2008b] също се предлага оптимизация на топологията и параметрите на изкуствени невронни мрежи с генетични алгоритми и контекстно свободна граматика (граматична еволюция). Използва се формална граматика (контекстно свободна) и се <text:soft-page-break/>предлага начин за разпределени изчисления. Табу търсене е друга възможност за оптимизация на <text:s/>параметрите на изкуствени невронни мрежи описана в [RSBA1998]. При някои реализации на генетични алгоритми се оптимизира структурата на изкуствени невронни мрежи (брой скрити слоеве и брой неврони в тях), но и параметрите за обучение като активационна функция за всеки слой, наличие/отсъствие на отместване <text:span text:style-name="T189">(bias) и</text:span> най-подходящ начин за корекция на теглата както е описано в [IDAD1998]. При някои реализации на генетични алгоритми за оптимизация на изкуствени невронни мрежи <text:span text:style-name="T190">(</text:span>типа на входовете, броя неврони в скрития слой и вида на връзките между слоевете<text:span text:style-name="T190">) е съществено</text:span> как влияе елитарността. Проверката при това изследване е направена над данни от валутния пазар и е представена в [MATO1999]. При добра дефиниция на времевите редове е възможно прилагането генетично базирани самоорганизиращи се изкуствени невронни мрежи описано в [KMKC2000]. При някои модели с генетични алгоритми се оптимизира топологията на изкуствени невронни мрежи, но и началните стойности на връзките. При този вариант изкуствени невронни мрежи се обучава с обратно разпространение на грешката за да се получи жизнената стойност на индивида в популацията [RSRD2000]. При някои модели топологията не се манипулира директно с генетични алгоритми, а генетичните алгоритми се използват за редукция на множеството от входни данни което индиректно влияе на броя входове в изкуствените невронни мрежи. При тези модели генетични алгоритми не се ползват за директна оптимизация на топологията или за оптимизация на теглата. При конкретната реализация описана в [VPMV2000] популацията на генетичните алгоритми се разпределя на различни машини което е вид изчисление в разпределена среда. Също така се контролират и връзките между възлите в изкуствените невронни мрежи, така че да се намали размерът на цялата мрежа. Използване на генетични алгоритми за постигане на оптимална топология на изкуствени невронни мрежи при прогнозиране на стойностите на стоковите пазари е представено в [EFKA2001]. Изследване за влиянието на елитарността в генетичните алгоритми при което се определя типа на входовете, броя неврони в скрития слой и вида на връзките между слоевете в изкуствени невронни мрежи е представено в [JARG2001]. Сравнителният анализ при тази разработка е над данни от валутните пазари. Възможно е в генетичните алгоритми да се кодират много по-подробно параметрите за топологията на изкуствени невронни мрежи (слоеве, връзки между слоевете, обратни връзки), както е представено в [RPTL2002]. Изкуствени невронни мрежи със забавяне във времето с цел попълване на липсващи данни при автомобилен трафик се проектират с генетични алгоритми <text:soft-page-break/>(определя се топологията), а обучението се извършва с обратно разпространение на грешката представено в [EAMT2002][MZPL2004]. В [JIJK2003] също се представят генетични алгоритми който оптимизира структурата на изкуствени невронни мрежи (брой скрити слоеве и брой неврони в тях) и параметрите за обучение (активационна функция за всеки слой, наличие/отсъствие на „отместване“ и най-подходящ начин за корекция на теглата). При прогнозирането на финансови времеви редове се ползват данни за отваряне, затваряне, най-ниска, най-висока и обем. При [DZDP2003] се прогнозира следващото ниво на отваряне като изкуствени невронни мрежи се обучава с обратно разпространение на грешката, но топологията се формира с еволюционен алгоритъм. При сравнителен анализ на многослойна изкуствена невронна мрежа <text:span text:style-name="T195">(</text:span>обучавана с обратно разпространение на грешката<text:span text:style-name="T195">)</text:span> с рекурентна изкуствена невронна мрежа <text:span text:style-name="T195">(</text:span>също се обучава с обратно разпространение на грешката<text:span text:style-name="T195">),</text:span> топологиите на мрежите могат да се формират с еволюционен алгоритъм както е представено в [DAZA2003]. На база превключващи елементи топологията на изкуствени невронни мрежи може да се оптимизира с генетични алгоритми което е представено в [JDKM2003]. Както е представено в [MVRB2004] с генетични алгоритми може се избират не само параметри на мрежата като тип мрежа, топология, но и параметри на обучаващо множество. Паралелен генетичен алгоритъм <text:span text:style-name="T197">описан в [HNTH2004] се използва за прогнозиране на замърсяването на въздуха на спирка от градския транспорт. При тази реализация генетични алгоритми се използва</text:span> за избор на входа и проектиране на архитектурата (брой скрити слоеве и техните размери) в пълно-свързана <text:span text:style-name="T294">(</text:span>между слоевете<text:span text:style-name="T294">)</text:span> изкуствени невронни мрежи. <text:span text:style-name="T198">Една от най-интересните разработки,представена в [EHMW2004] представлява г</text:span>енериране на изкуствени невронни мрежи с обратни връзки, чрез използване на еволюционни алгоритми<text:span text:style-name="T198">. Точно</text:span> преди да се добавят обратните връзки е проведено обучение с обратно разпространение на грешката както във <text:span text:style-name="T169">[ROBA2009]</text:span>. <text:span text:style-name="T198">При тази реализация изкуствена невронна мрежа</text:span> измерва и достоверността на прогнозата. Всяка стойност от исторически представените се подава на отделен входен елемент. Изходът се получава само в един <text:span text:style-name="T198">изходен </text:span>елемент. Достоверността на прогнозата се взема от допълнителен <text:span text:style-name="T198">изходен</text:span> елемент в изходния слой. <text:span text:style-name="T207">При [MASE2005] се п</text:span>рогнозира с ден напред цената на затваряне. <text:span text:style-name="T207">За целта се </text:span>използва изкуствена невронна мрежа и <text:span text:style-name="T197">генетични алгоритми</text:span> <text:span text:style-name="T207">като</text:span> <text:span text:style-name="T207">входните данни са</text:span> индикатори от техническия анализ. <text:span text:style-name="T207">Информацията от индикаторите се подава</text:span> на входа на изкуствени невронни мрежи. Топологията на изкуствените невронни мрежи също <text:span text:style-name="T207">подлежи на</text:span> оптимиз<text:span text:style-name="T207">ация</text:span> с <text:span text:style-name="T197">генетични алгоритми</text:span>. <text:span text:style-name="T210">В [RPSL2005] е представена изкуствена невронна мрежа</text:span> за прогнозиране на <text:soft-page-break/>локалната безработица в Германия. <text:span text:style-name="T210">При това изследване с</text:span>труктурата на изкуствените невронни мрежи се оптимизира с <text:span text:style-name="T197">генетични алгоритми</text:span>. Точна и ясна дефиниция на времевите редове и задачата за прогнозирането им е предложена в [LESP2006]. Моделът стъпва на генетично базирани самоорганизиращи се изкуствени невронни мрежи. При [SSST2006] многослойна изкуствена невронна мрежа се обучава с обратно разпространение на грешката и се сравнява с рекурентна изкуствена невронна мрежа която също се обучава с обратно разпространение на грешката. В работата е направен сравнителен анализ между двата вида мрежи като топологиите на мрежите са постигнати с еволюционни алгоритми. В [MHRK2009] се представят изкуствени невронни мрежи с превключващи елементи. Топологията на изкуствените невронни мрежи се оптимизира с <text:span text:style-name="T197">генетични алгоритми</text:span>. В [AYGU2009] се представя линейно генетично програмиране за прогнозиране на потока в речна станция. С <text:span text:style-name="T197">генетични алгоритми</text:span> се оптимизира топологията на изкуствени невронни мрежи. При извършения сравнителен анализ линейното генетично програмиране се представя по-добре от изкуствените невронни мрежи. В [JPGG2010b] се предлага генетичен алгоритъм за оптимизация на топологията на изкуствени невронни мрежи и началните стойности на връзките. Обучението на изкуствените невронни мрежи се извършва с обратно разпространение на грешката за да се получи жизнената стойност на индивида в популацията. <text:span text:style-name="T222">В [CLCW2011] се представя м</text:span>одифициран <text:span text:style-name="T222">алгоритъм за</text:span> диференциална еволюция. <text:span text:style-name="T222">Целта на изследването е чрез диференциална еволюция да се</text:span> проектира функционалн<text:span text:style-name="T222">о</text:span> размита рекурентна изкуствена невронна мрежа. <text:span text:style-name="T223">В [YLYL2011] се предлага диференциална еволюция</text:span> за оптимизация на изкуствени невронни мрежи. Архитектурата на изкуствените невронни мрежи може да се <text:span text:style-name="T223">приема</text:span> като целочислено оптимизиране, <text:span text:style-name="T223">тъй като</text:span> параметрите са цели числа. Получените изкуствени невронни мрежи се проверяват за ефективност с прогнозиране на времеви редове. </text:p><text:p text:style-name="P74"/><text:h text:style-name="Heading_20_2" text:outline-level="2"><text:bookmark-start text:name="__RefHeading___Toc4786_1119578745"/><text:s text:c="2"/><text:span text:style-name="T181">1.3 Едновременна оптимизация на теглата в изкуствените невронни мрежи и на топологията</text:span><text:bookmark-end text:name="__RefHeading___Toc4786_1119578745"/></text:h><text:p text:style-name="P72"/><text:p text:style-name="P125"><text:tab/>Възможно е оптимизацията на изкуствени невронни мрежи да протича и по двете направления <text:span text:style-name="T181">(тегла и топология). Когато обучението се извършва в хетерогенна мрежа от компютри се постига</text:span> разпределено обучение на изкуствени невронни мрежи с <text:span text:style-name="T197">генетични </text:span><text:soft-page-break/><text:span text:style-name="T197">алгоритми</text:span>. За целите на обучението са доказани съответните <text:s/>теореми в [SOMF1992]. При комбинираната оптимизация в последващи реализации паралелно на топологията се оптимизират и теглата, но с най-близкия съсед при изкачване по хълм . Целта е да се постигне минимално голяма изкуствена невронна мрежа която обаче запазва възможностите си за генерализиране. Изкуствените невронни мрежи се представя като дървовидна структура. Получава се така, че всеки изход на изкуствената неврона мрежа е дървовидна структура която представлява формална граматика [BZHM1993]. В [JERI1997] чисто формално под формата на теореми е доказана ефективността от разпределеното обучение на изкуствени невронни мрежи с <text:span text:style-name="T197">генетични алгоритми</text:span> като се оптимизира както топологията така и теглата. При модела описан в [RSNS2001] се използва изкуствена невронна мрежа в която с <text:span text:style-name="T197">генетични алгоритми</text:span> се оптимизират теглата. Ползват се двадесет индивида в популацията (десет стари и десет нови) и единична точка на срязване при кръстосването. Прилага се двустепенна мутация в която тегла се блокират на стойност 0 което на практика отрязва връзката между невроните и индиректно влияе на топологията. При този модел изкуствената невронна мрежа е с три слоя и скритият започва с 1 неврон като на всеки 100 цикъла обучение се добавя нов неврон в скрития слой. При три последователни добавяния на неврони, ако няма подобрение в обучението, то скритият слой се фиксира и се правят още 2500 цикъла на обучение. Възможни са реализации при които паралелно на топологията се оптимизират и теглата, но с най-близкия съсед при изкачване по хълм. В този случай целта е да се постигне минимално голяма изкуствена невронна мрежа със запазва възможностите за генерализиране. Всеки изход на изкуствената невронна мрежа се явява дървовидна структура от вид формална граматика [BCJB2003]. В [BYXH2006] се предлага диференциална еволюция за обучение на радиално базисни изкуствени невронни мрежи като се оптимизира архитектурата. В [ARGH2012] се прогнозират финансови времеви редове като от данните за отваряне, затваряне, най-ниска, най-висока и обем се прогнозира следващото ниво на отваряне. Изкуствена невронна мрежа се обучава с обратно разпространение на грешката, но топологията се формира с еволюционен алгоритъм. В [MDMB2012] се прогнозират валутни курсове с изкуствени невронни мрежи. Генетичен алгоритъм се ползва за оптимизиране на параметрите на изкуствени невронни мрежи, но самото обучение се извършва с обратно разпространение на грешката. </text:p><text:p text:style-name="P73"/><text:h text:style-name="P524" text:outline-level="2"><text:bookmark-start text:name="__RefHeading___Toc5046_650950105"/><text:soft-page-break/><text:s text:c="2"/>1.4 Хибридни модели с точни числени методи и/или евристични<text:bookmark-end text:name="__RefHeading___Toc5046_650950105"/></text:h><text:p text:style-name="P73"/><text:p text:style-name="P131"><text:tab/>В литературата са познати модели за обучение базирани на точни числени методи и евристични алгоритми за оптимизация. В [PCJM1996b] е представена пълно-свързана изкуствена невронна мрежа, обучавана с <text:span text:style-name="T197">генетични алгоритми</text:span> и обратно разпространение на грешката. При това изследване експериментите са направени с програми написани на програмните езиците С и <text:span text:style-name="T186">Prolog</text:span>. При един от хибридните подходи теглата на изкуствените невронни мрежи се представят като хромозоми в <text:span text:style-name="T197">генетични алгоритми</text:span>. Върху избрани <text:s/>функции се прави тест за изкуствени невронни мрежи обучавани с <text:span text:style-name="T197">генетични алгоритми</text:span> или с обратно разпространение на грешката. Разчита се на добре подбрани първоначални тегла за изкуствените невронни мрежи. Тестовете са проведени при идентични архитектури без да се набляга върху оптимизирането на архитектурата [RSRD1998]. Възможно е да се използва диференциална еволюция за обучение на изкуствени невронни мрежи като теглата са само цели числа описано е в [VPDS1998a]. Тестовете са направени над три общо известни проблема от обучението на изкуствени невронни мрежи. Хибридна оптимизация е възможна с локално търсене и клетъчен генетичен алгоритъм за обучение на рекурентни изкуствени невронни мрежи. При този вариант теглата на изкуствените невронни мрежи се кодират в <text:span text:style-name="T197">генетични алгоритми</text:span> както е описано в [VPDS1998b] и [KKMM1999]. Хибриден метод за оптимизация може да се базира на GMDH и <text:span text:style-name="T197">генетични алгоритми</text:span> като се търси първо оптимална стойност за броя на невроните в скрития слой на полиномиална мрежа, а след това оптимална стойност за теглата описано в [AMFO1999]. При хибридните реализации е възможно да се използва йерархия на две нива за конструиране на BRF мрежи на база комбиниран генетичен алгоритъм с регулиран ортогонален средно квадратичен алгоритъм (ROLS) представено в [SCYW1999]. При по-сложните хибридни реализации се среща използването на два типа изкуствени невронни мрежи - класическа (многослоен перцептрон) и само-организираща се карта. Само-организиращата се карта служи за предварително класифициране на входните нива в пет групи за които се ползват пет различни вида изкуствени невронни мрежи от тип многослоен перцептрон. При тази реализация се ползва размита логика и <text:span text:style-name="T197">генетични алгоритми</text:span> за да се комбинират прогнозите от изкуствените невронни мрежи и да се получи единна прогноза. Този модел успешно е използван за прогнозиране на наводнения и е представен в [LSSO1999]. Когато рекурентни изкуствени <text:soft-page-break/>невронни мрежи са тренирани с еволюционни алгоритми може да се оптимизира и топологията, а не само теглата на мрежата. В началото на обучението има предварително тренирана чрез обратно разпространение на грешката като изкуствената невронна мрежа е само с връзки напред [JYJH1999]. Възможно е използването на изкуствени невронни мрежи с обратно разпространение на грешката за прогнозиране на позициите в пространството на мобилен терминал като се използва хибриден алгоритъм с обратно разпространение на грешката и <text:span text:style-name="T197">генетични алгоритми</text:span> за модифициране на теглата [CDAH1999]. Възможни са модели базира на комбинация от изкуствени невронни мрежи, стационарни <text:span text:style-name="T248">wavelet</text:span> трансформации и статистически анализ на времеви редове както е представено в [EAJT1999]. При хибридните реализации на два типа изкуствени невронни мрежи - класическа (многослоен перцептрон) и само-организираща се карта, само-организиращата се карта предварително класифицира входните нива в групи. За всяка от групите се ползват различни вида изкуствени невронни мрежи от тип многослоен перцептрон. С помощта на размита логика и <text:span text:style-name="T197">генетични алгоритми</text:span> се комбинират прогнозите от няколко изкуствени невронни мрежи и се получи единна консолидирана прогноза. Този хибриден подход е приложен за прогнозиране на наводнения и е представен в [DIPI2002]. При трениране на рекурентни изкуствени невронни мрежи с еволюционни алгоритми може да се оптимизира и топологията заедно с теглата на мрежата. При разработката представена в [ERHU2004] началото на обучението има предварително тренирана изкуствена невронна мрежа <text:span text:style-name="T196">(</text:span>чрез обратно разпространение на грешката<text:span text:style-name="T196">)</text:span> като се ползват само връзките в права посока. <text:span text:style-name="T200">При по-сложните хибридни модели се съчетават няколко метода за обучение на</text:span> изкуствени невронни мрежи. <text:span text:style-name="T200">В [HIAL2004] е представен модел, който се базира на</text:span> диференциална еволюция, <text:span text:style-name="T197">генетични алгоритми</text:span>, обратно разпространение на грешката и симулирано закаляване. <text:span text:style-name="T208">В [DWFG2005] са представени рекурентни изкуствени невронни мрежи с оптимално линейно съпоставяне. В [MUAB2005] се ползва комбинация от изкуствени невронни мрежи и генетични алгоритми за апроксимация на липсващи стойности в база данни. Генетичен алгоритъм има за задача да предложи заместители на липсващите стойности. Целта на тази апроксимация е да се намали грешката допускана от изкуствените невронни мрежи. При изкуствените невронни мрежи които прогнозират времеви редове е нужно данните на входа да се нормализират. В [LOBO2004] се предлага най-често използваната формула за нормализация между 0 и 1. В [YCBY2005] са представени гъвкави невронни дървета за прогнозиране на времеви редове. Йерархичната структура е развита с помощта на </text:span><text:soft-page-break/><text:span text:style-name="T208">вероятностен програмен еволюционен алгоритъм. Финото настройване на параметрите се прави със симулирано закаляване. В [ZPLL2006] е представен хибриден алгоритъм с обратно разпространение на грешката и генетични алгоритми за модифициране на теглата. Системата се използва за прогнозиране на позициите в пространството на мобилен терминал. В [PDAA2006] се прави прогнозиране на продажбите с радиално базисни изкуствени невронни мрежи и генетични алгоритми. В [PGSC2007] се предлага трислойна изкуствена невронна мрежа която се обучава с обратно разпространение на грешката за прогнозиране на натоварването на електрическата система в щата Илинойс. В [NMMS2008] се използват изкуствени невронни мрежи с обратно разпространение на грешката за прогнозиране на парите налични в банкоматите. Използва се плъзгащ прозорец върху множеството от входни данни. В [XJHA2008] се предвиждат структурните измествания в конструкцията на сградите. Генетичен алгоритъм за намиране на оптимално управление на силите при високи сгради със стоманена конструкция. Генетичен алгоритъм се комбинира с размит динамичен wavelet невро-емулатор. В [BSDJ2008] е представен меметичен алгоритъм за диференциална еволюция (прилага се локално търсене в околност на индивидите). Локалното търсене се извършва с обратно разпространение на грешката и е в околностите на конкретния индивид. В [LMRB2009] се представя обобщен авторегресионен условен подбор на случайни променливи за захранване на изкуствени невронни мрежи с данни. В [JSKU1998] също се предлага обобщен авто регресивен условен подбор на случайни променливи за захранване на изкуствени невронни мрежи с данни. В [CHTA2009] се представя модел базиран на изкуствени невронни мрежи, стационарни wavelet трансформации и статистически анализ на времеви редове. В [TGTT2009] се представя изкуствена невронна мрежа написана на програмния език Python с библиотеката FANN за прогнозиране на водните ресурси в Кипър. В средния слой се добавят неврони и така мрежата нараства докато се обучава. В [MAHL2009] се предлагат изкуствени невронни мрежи с превключване на елементите. Използва се за дневните обороти на валута според особеностите на сезона (работни дни, почивки и други). В [BSDJ2009] се предлагат изкуствени невронни мрежи обучавани с диференциална еволюция за нелинейна идентификационна система като ползва хибриден модел с градиентен метод. В [SLKG2009] се предлага хибриден модел на изкуствени невронни мрежи с диференциална еволюция, така че се оптимизират описателните параметри на мрежата. Като параметри това са брой на елементите в скрития слой, активационна функция във входния слой, активационна функция в изходния слой и </text:span><text:soft-page-break/><text:span text:style-name="T208">коефициент за обучение (learning rate). В [KBWK2009] се предлага алгоритъм за обучение на изкуствени невронни мрежи с хибриден подход между диференциална еволюция и градиентен метод. След всяко кръстосване и мутация се пуска градиентен оптимизационен алгоритъм. Значително по-добре се избягва попадането в локален оптимум, но обучението е по-бавно от чисто градиентен метод. В [SDAA2009] се предлага хибридна схема за мутация. Изборът на вектор за мутацията се извършва в малка околна област от съседи в общата популация. В [JPGG2010a] се предлага подход за автоматизирано настройване на всички параметри които изкуствените невронни мрежи може да имат. Параметрите на изкуствените невронни мрежи се кодират в хромозомите на еволюционни алгоритми и се проверява коя изкуствена невронна мрежа ще постигне най-добри резултати след обучение с обратно разпространение на грешката. В [JDXL2011] също се предлага подход за автоматизирано настройване на всички параметри които изкуствени невронни мрежи може да имат. Параметрите на изкуствените невронни мрежи се кодират в хромозомите на еволюционни алгоритми и се проверява коя изкуствена невронна мрежа ще постигне най-добри резултати след обучение с обратно разпространение на грешката. В [MKMB2010] се предлага интегриран авто регресионен подход на пълзящи средни като на втора фаза се ползва изкуствена невронна мрежа. В [ANBG2011] също се предлага хибриден модел на изкуствени невронни мрежи с използването на авто регресивна интегрирана плъзгаща стойност (ARIMA). В [MKMB2011] се предлага комбинация между линеен модел на авто регресивна плъзгаща средна и нелинеен модел на изкуствени невронни мрежи за прогнозиране на финансови времеви редове. В [ABEB2012] се извършва прогнозиране на финансови времеви редове с хибридна комбинация от авторегресивни пълзящи средни и генетично програмиране при което индивидите в популацията са математически функции представени като символни низове. В [SKYS2010] се избират отделни свойства при прогнозирането на времеви редове с помощта на компактен генетичен алгоритъм. Самото прогнозирането се извършва с изкуствени невронни мрежи, генетични алгоритми или статистически методи. В [MOAW2010] се предлага генетични алгоритми за оптимизиране на центровете и радиусите в радиално базова изкуствена невронна мрежа. За оптимизация на теглата се ползва декомпозиция по сингулярни числа (SVD). В [MMMH2010] се предлага прогнозиране на индийския стоков пазар, стойност на затваряне с изкуствени невронни мрежи. Входната информация се мащабира в интервал от 0 до 1, като се ползва най-голямата и най-малката постигната стойност. Скритият слой е с по-малко на брой неврони спрямо входния слой. </text:span><text:soft-page-break/><text:span text:style-name="T208">Използва се само един неврон за изход. Точността на прогнозата се определя с нормализирана средно-квадратична грешка. В [RGAC2010] се предлага иновативен подход за обучаване на изкуствени невронни мрежи с модифициран оптимизационен алгоритъм, наречен инвазивна плевелна оптимизация. Индивидите в популацията се представят като плевели които разпръскват семена в околните точки в пространството на търсенето. Плевелите с най-голяма жизненост генерират най-много семена, а тези с най-ниска жизненост най-малко семена като разпределението на бройките семена е в линейна зависимост от най-ниска жизненост към най-висока жизненост. Интересна модификация за правило на разпръскването може да бъде интензивност с r^2 както е влиянието на гравитационното поле при планетите. Жизнеността на отделните индивиди може да служи като константа за гравитационно поле. В [JMAP2011] се представя сравнително изследване на четири различни модела изкуствени невронни мрежи за грешката която допускат при прогнозирането на времеви редове (рамките на 10%). Всичките изкуствени невронни мрежи са с дванадесет входа и един изход. За измерване на допуснатата грешка се ползва MAPE метрика. В [IVTL2011] се предлага многослойна изкуствена невронна мрежа към която се подават ограничен брой параметри. По-незначителните входни променливи се отсяват с хибридни методи. В [PPAM2011] се предлага еднослойна изкуствена невронна мрежа с един изходен неврон за прогнозиране на финансова информация. Скритият слой е премахнат заради функционално разпространение на входния шаблон. Използва се динамично настройване на коефициента за обучение. В [HTBM2011] също се предлага еднослойна нелинейна архитектура на изкуствени невронни мрежи с използване на нелинейно съпоставяне на входните сигнали. За обучението се използва диференциална еволюция като оптимизационен алгоритъм. В [YWWL2011] се представя хибриден модел състоящ се в комбинация между диференциална еволюция и оптимизация на рояка от частици. В [HKMS2012] се прави сравнение между диференциална еволюция и рояка от частици за обучение на изкуствени невронни мрежи. За нуждите на сравнителния анализ се прогнозират стокови и финансови инструменти. Диференциалната еволюция дава по-добри резултати като и при двата алгоритъма на входа на изкуствените невронни мрежи се подават стойностите на няколко индикатора. В [JNJS2011] се предлагат топологично активни мрежи за разпознаване на сегменти в изображения. Методът се комбинира с локални лакоми алгоритми. В [IBAT2012] се предлага оптимизиране на параметрите в wavelet и прогнозиране на времеви редове с изкуствени невронни мрежи. Теглата се кодират в хромозомите. Wavelet-ът се ползва </text:span><text:soft-page-break/><text:span text:style-name="T208">за предварителна обработка на входната информация и последваща обработка на изхода от мрежата. В [RAVA2012] се предлага интеграция между изкуствени невронни мрежи, wavelet функция и база знания с размита логика. В [RSKP1995] са представени мрежи с обратно разпространение на грешката за прогнозиране на парите налични в банкоматите. Използва се плъзгащ прозорец върху множеството от входни данни.</text:span></text:p><text:p text:style-name="P73"/><text:h text:style-name="Heading_20_2" text:outline-level="2"><text:bookmark-start text:name="__RefHeading___Toc5048_650950105"/><text:s text:c="2"/><text:span text:style-name="T187">1.5 Еволюционни и/или популационни алгоритми за прогнозиране, без използване на изкуствени неверонни мрежи</text:span><text:bookmark-end text:name="__RefHeading___Toc5048_650950105"/></text:h><text:p text:style-name="P73"/><text:p text:style-name="P126"><text:tab/>Съществуват и системи в които не се използват изкуствени невронни мрежи, но въпреки това еволюционните алгоритми намират приложение. Такава система е описана в [SMGM1996] и [FLHL2003] където генетичен алгоритъм оптимизира група от правила и реално се развива експертна система без да се използва експерт човек. При други реализации генетичен алгоритъм получава запис от времевия ред и предоставя вектор от подходящи характеристики (редуциране на данните). Прилага се генетично програмиране, а програмата създадена по този начин прави редуциране на характеристиките от входния времеви ред. Използват се двадесет операции и се строи дърво на изразите [DEDH2002] и [VPMV2002]. Когато става въпрос за пресмятания в разпределена среда то моделите за еволюционни алгоритми могат да бъдат приложени. Като пример в [CGMP2003a] се използва модел на изолирания остров. Еволюционният алгоритъм в [TBWK2003] е разделен на главен, който извършва операциите по еволюционния алгоритъм и подчинени в които се пресмята жизнената функция. Общата популация е разделена на под-популации и между тях се прави миграция на хромозоми. Динамично разпределение на размера от хромозоми под формата на главен-подчинен за множество разпределени еволюционни популации е представен в [CGMP2003b]. При този вариант изчисляването на жизнената функция се извършва на отдалечения възел. <text:span text:style-name="T199">В [JIHU2004] е представен генетичен алгоритъм</text:span> ко<text:span text:style-name="T199">йто</text:span> с ползва за намиране на коефициенти в ред на Тейлър. Този ред се <text:span text:style-name="T199">из</text:span>ползва като прогнозираща функция. <text:span text:style-name="T199">Този подход е сравнен с</text:span> алгоритъм <text:span text:style-name="T199">който</text:span> е комбинация между <text:span text:style-name="T197">генетични алгоритми</text:span> и изкуствени невронни мрежи. <text:span text:style-name="T199">При тази реализация изкуствени невронни мрежи</text:span> се ползват за определяне на това как двата родителя да се кръстосат в <text:span text:style-name="T197">генетични алгоритми</text:span>. Генетичен алгоритъм<text:span text:style-name="T199"> има за задача</text:span> <text:span text:style-name="T199">да определя и</text:span> размерът на скрития слой. Паралелен еволюционен <text:soft-page-break/>алгоритъм за откриване на правила за решения при анализ на големи по обем данни <text:span text:style-name="T206">е представен в [WOKW2004]</text:span>. Разпределянето на задачите за пресмятане е на принципа „главен-подчинен“. <text:span text:style-name="T206">В х</text:span>ромозомите <text:span text:style-name="T206">се</text:span> кодират множество от правила. Тъй като най-бавната част е изчислението на жизнената функция точно тя се възлага на подчинените възли. В [NPVP2006] се използва генетично програмиране за развитие на по-ефективни операции в диференциалната еволюция. Обстойно сравнение на осем вариации на диференциална еволюция е представено в [EMJV2006]. Сравнението е насочено в посока до колко ефективно различните вариации изпълняват глобална оптимизация. В [NWZM2007] се предлага динамично генетично програмиране за прогнозиране на брутния продукт и индекса на инфлация в САЩ. Алгоритъмът се адаптира по отношение на прозореца който се формира от входните исторически данни. Също така се ползва и предишно натрупано знание с цел по-бързо обучение. <text:span text:style-name="T215">В [DXSL2007] се предлага подобрение на диференциалната еволюция базирано на ALOPEX операция и селекция на памет. В [ASML2007] диференциална еволюция се модифицира, така че изборът на индивиди за диференциалния вектор да не става на равно-вероятностен принцип, а да се прилага стратегия за селекция. В [ZAKA2007] се развиват четири модификации на диференциална еволюция. Първият алгоритъм е с наказателна функция за управление на ограниченията. Вторият алгоритъм се базира на първия, но включва множество от филтри като механизъм за подобряване на разнообразието. Третият алгоритъм е базиран на диференциална еволюция, но включва локален алгоритъм за подобряване на решенията който се базира на техника за търсене на шаблони. Четвъртият алгоритъм комбинира множеството от филтри и техниката за търсене на шаблони. В [RTSY2007] е предложен само настройващ се алгоритъм за мутация в еволюционните алгоритми. Идеята е базирана на q-Гаусово разпределение. Параметърът q се кодира в хромозомата и също еволюира като по този начин променя формата на вероятностното разпределение. В [SDAA2008] се предлага настройка на скоростта в рояк от частици с помощта на диференциална еволюция. Целта е да се създаде по-ефективна евристика за глобална оптимизация. В [MEVP2008] се представя само-балансираща се хибридна операция за мутация в диференциална еволюция. В [SRHT2008] се представя подобряване на диференциална еволюция чрез опозиционно базирано обучение за подобряване на скоростта за оптимизация. Използват се противоположни числа вместо напълно случайни. За всяко открито решение се проверява и противоположното му като от двете се избира по-доброто. В [TCPL2009] се прави сравнение между еволюционните алгоритми и алгоритми за </text:span><text:soft-page-break/><text:span text:style-name="T215">прогнозирано разпределение. Вторият тип алгоритми дава по-добри резултати при търсене на под низове. В [WGAF2010] се предлага адаптивна стратегия за селекция в диференциална еволюция базирана на вероятностно съпоставяне и откриване на близост между индивидите. Прави се пул от възможни стратегии за селекция и се напасва коя от тях би била най-удачна за конкретния проблем който се решава. В [NNHI2010] се предлага клетъчна реализация на диференциална еволюция. При този вид организация генетичните операции се прилагат само върху индивиди които се намират близко едни до други в популацията. Идеята идва от разпределените реализации където се преследва по-добра ефективност в рамките на отделните изчислителни възли. При тази организация има малка площ на припокриване между отделните локални популации и това води до бавна дифузия на информацията. В [RMPS2010] се предлага пул от възможни стратегии за мутация, кръстосване и параметрите на диференциална еволюция (вероятност за кръстосване, множител за диференциалния вектор, размер на популацията). Използването на такъв пул е продиктувано от факта, че различните оптимизационни проблеми се решават различно ефективно при различни стратегии за кръстосване, мутация и контролни параметри. В [MEVO2011] се представя генетични алгоритми за подбор на множество от финансови индикатори които с добра ефективност показват сигнали за купуване или продаване. В [YGSG2011] се предлага модифицирана операция за мутация на диференциална еволюция която се комбинира със стратегия за разделянето на популацията по определен принцип и след това събиране на разделените части. Част от експериментите се извършват върху задача за прогнозиране на времеви редове. В [AIXL2011] се предлага модификация на диференциална еволюция, така че да има насоченост при подбора на следващи точки в пространството на търсене. В [WGZC2011] се предлага механизъм за адаптивна стратегия приложен върху диференциална еволюция. Различните стратегии се организират в пул от който се избират. В [YWZC2011] се предлагат три различни стратегии за генериране на пробен вектор и контролни параметри (размер на популацията, вероятност за кръстосване и фактор за преоразмеряване) в диференциална еволюция. Комбинацията между трите стратегии за създаване на пробен вектор и трите параметъра се избира на случаен принцип. В [PCPV2011] се предлага многокритериална оптимизация на мрежови графици с генетични алгоритми. В [AMJT2012] се предлага геометрична диференциална еволюция за дискретни и непрекъснати пространства. </text:span></text:p><text:p text:style-name="P73"/><text:h text:style-name="Heading_20_2" text:outline-level="2"><text:bookmark-start text:name="__RefHeading___Toc58948_484695892"/><text:soft-page-break/><text:s text:c="2"/><text:span text:style-name="T202">1.6 Алгоритми за пресмятане в разпределена среда</text:span><text:bookmark-end text:name="__RefHeading___Toc58948_484695892"/></text:h><text:p text:style-name="P73"/><text:p text:style-name="P141"><text:tab/><text:span text:style-name="T201">При използването на евристични методи за оптимизация е приложимо използването на изчисления</text:span> в разпределена среда. <text:span text:style-name="T201">Както е описано в [DTNP2004] п</text:span>од популациите <text:span text:style-name="T201">на диференциалната еволюция</text:span> са организирани в ринг и най-добрите индивиди от всяка популация могат да мигрират към следващия съсед. Диференциална еволюция която се ползва за откриването не само на един оптимум, но на множество оптимуми в разпределена среда <text:span text:style-name="T202">е представен в [DAZA2004a]</text:span>. <text:span text:style-name="T202">При тази реализация о</text:span>сновната цел е да се избягва<text:span text:style-name="T202">т</text:span> пресмята<text:span text:style-name="T202">нията</text:span> в централната популация. <text:span text:style-name="T203">Сравнителен анализ за</text:span> възможностите на различни разширения на диференциална еволюция да откриват и поддържат множество оптимуми <text:span text:style-name="T203">е представено в [DAZA2004b]</text:span>. <text:span text:style-name="T203">Х</text:span>ибридн<text:span text:style-name="T203">ите</text:span> подход за диференциална еволюция <text:span text:style-name="T203">се предлагат под формата на изчисления</text:span> в разпределена среда. <text:span text:style-name="T204">Когато оптимизацията се осъществява на повече от един компютър са актуални въпросите за миграцията на индивиди между отделните локални популации.</text:span> Изследване на степента за миграция и честотата на миграция в разпределена диференциална еволюция <text:span text:style-name="T204">е представено в </text:span>[EAGL2004]. <text:span text:style-name="T205">Реализация на</text:span> симулирано закаляване<text:span text:style-name="T205"> в разпределена среда е представено в [MATF2004]</text:span>. <text:span text:style-name="T205">При тази разработка, като изчисления</text:span> в разпределена среда е <text:span text:style-name="T205">използвана</text:span> паралелната <text:span text:style-name="T205">версия</text:span> на алгоритъма <text:span text:style-name="T205">за симулирано закаляване.</text:span> <text:span text:style-name="T205">Ц</text:span>елта <text:span text:style-name="T205">на изследването</text:span> е да се избегне изпадането в локален минимум и по-възможност да се ускори търсенето на оптимално решение. <text:span text:style-name="T209">В [BHKT2005] е представен е</text:span>волюционен Монте-Карло метод. <text:span text:style-name="T209">Реализацията е под формата на изчисления </text:span>в разпределена среда. <text:span text:style-name="T209">Като</text:span> база <text:span text:style-name="T209">на алгоритъма се използва</text:span> <text:span text:style-name="T209">вариация на</text:span> <text:span text:style-name="T197">генетични алгоритми</text:span>. Акцентът <text:span text:style-name="T209">при тази разработка</text:span> е върху алгоритъм за миграция на индивидите между отделните под популации. Паралелен алгоритъм за диференциална еволюция е приложен за обучение с учител на импулсни изкуствени невронни мрежи в [NPDT2005]. При импулсните изкуствени невронни мрежи възлите се активират в определен момент от времето <text:span text:style-name="T212">(като импулс</text:span>). Паралелната обработка се получава с отделни подмножества на популацията които се изпълняват независимо на отделни процесори. Миграцията на най-добрите индивиди се осъществява в кръгова топология. В [GWDG2005] се прави обобщено изследване за паралелните еволюционни алгоритми. Най-простият вариант е когато има една популация в главния възел, а само жизнената функция се пресмята в подчинените изчислителни възли. Вторият, малко по-сложен вариант, е разделяне на общата <text:soft-page-break/>популация в множество по-малки популации които се изпращат на изчислителните възли. При този модел се извършва миграция между възлите. Третия модел отново има множество изчислителни възли и те държат малко на брой индивиди от популацията, но рекомбинацията между индивидите става глобално. Четвъртият вариант е хибриден и представлява комбинации от първите три. Разпределена система за класификация с <text:span text:style-name="T197">генетични алгоритми</text:span> е представена в [VBGM2006]. Системата използва изкуствена невронна мрежа която оценява параметри от класификацията като оценката е жизнена функция за генетичния алгоритъм. В [KKAS2006] се предлага модификация на стратегията за миграция при паралелна реализация на диференциална еволюция. Паралелна имплементация на диференциална еволюция е с цел подобряване на скоростта за търсене на оптимално решение. Използва се конкретна схема за миграция между възлите. Организацията на пресмятанията е в кръгова топология на миграция. При миграцията най-добрият индивид замества най-стария индивид в локалната популация на съответния следващ възел. В [DZGC2006] на база мембранните системи се предлага подход по който се прилагат операциите в еволюционните алгоритми. Всяка операция се прилага с избиране от вероятностно разпределение. Популацията е с променлив размер като нараства при кръстосване и мутация и намалява при селекция. Също се предлага и обогатяване на популацията със случайно генерирани индивиди. Идеите от мембранните изчисления се прилагат при стратегиите за миграция в разпределени еволюционни алгоритми. В [WRWI2006] е представена децентрализиран еволюционни алгоритми в peer-to-peer архитектура. Използва се задачата за осемте царици, така че да се провери ефективността на разпределената реализация на алгоритъма. Същата идея е доразвита в [WWMS2007] като разпределен еволюционен алгоритъм с адаптивна автономна селекция. Упражнява се стриктен контрол върху размера на популацията, така че да не се предизвика експлозия или имплозия. Задачата за осемте царици се използва за потвърждение на надеждността в peer-to-peer реализацията без наличието на какъвто и да било централизиран възел. Хронологичен обзор на паралелните <text:span text:style-name="T197">генетични алгоритми</text:span> е предложен в [MICE2006]. Авторите предлагат паралелна имплементация на самоорганизиращ се миграционен алгоритъм който е сравнен с диференциална еволюция. При избора на конкретен програмен език за реализиране на разпределени <text:span text:style-name="T197">генетични алгоритми</text:span> една от възможностите е представена в [SIHA2006] и се базира на Mono-C#. Модел за прогнозиране на натоварването в клъстер предвиден за еволюционни пресмятания е предложен в [MDCG2006]. Разработката представлява клиент-сървър архитектура като има една централна популация, а на <text:soft-page-break/>отдалечените възли само се пресмята жизнената функция. Прогнозирането на натоварването е нужно за да се подобри разширяемостта на разпределената система. В [JMAM2007] е представена уеб базирана система за пресмятане на еволюционни алгоритми в разпределена среда. Разработката е базирана на Ruby on Rails и адресира възможностите за по-голяма разширяемост на системата. В [TJGC2007] се представя стратегия за управление на миграцията в разпределени <text:span text:style-name="T197">генетични алгоритми</text:span> която се базира на променлив брой острови. Броят острови варира с времето. В [GDAM2008] е представено обучение на изкуствени невронни мрежи в разпределена среда на клъстерна система. Прави се пълно копие на изкуствената невронна мрежа във всеки възел на клъстера. Всеки възел тренира мрежата на подмножество от тренировъчните примери за всяка епоха. При всеки рунд на обучение възлите си разменят теглата и обновяват локалните им стойности. Описва се и подход за обучение на изкуствени невронни мрежи с <text:span text:style-name="T197">генетични алгоритми</text:span>. В [KSSL2008] се представя опортюнистична еволюция в разпределена среда. Централният възел изпраща индивиди на подчинените възли. Те пресмятат жизнеността, но не връщат веднага резултата на централния възел, а правят допълнителна локална оптимизация. Всеки подчинен възел пресмята група от индивиди. Глобалните оптимизационни евристики, базирани на популация и/или еволюция са едни от подходящите за реализация в разпределена среда от тип „тока-в-точка“. В [JLAE2008] се представя разпределен еволюционен алгоритъм. За целите на комуникацията се използват newcast и gossiping протоколите в peer-to-peer архитектурата. В [JLPC2008] идеята се разширява и се анализира поведението на системата при включвания и изключвания на възли. Също се ползват newcast и gossiping протоколите за комуникация в разпределената среда. <text:span text:style-name="T219">В [JULA2010] също се предлага п</text:span>аралелен еволюционен алгоритъм, който се реализира в peer-to-peer архитектура. В [LAJM2009] се предлага сравнение между политиките за миграция в разпределените еволюционни алгоритми. Предлага се алгоритъм за подбор на мигрантите според това те да са максимално различни спрямо популацията към която биват изпращани. В [SREN2010] се предлага паралелна реализация на диференциална еволюция с използване на островния модел и миграция на елементи между островите. Предложеният модел се прилага за проблема на завършените корелационни матрици. В [KTTI2010a] се предлага паралелна реализация на последователен вариант на диференциална еволюция. Предложението е за реализация на компютърна система с многоядрени процесори. Използва се модел за паралелна обработка наречен MapReduce който в общи линии се базира на принципа &quot;разделяй и владей&quot;. С развитието на графичните процесори актуални стават и <text:soft-page-break/>възможностите да се реализират глобални оптимизационни алгоритми с използването на графичните ускорители. На тази основа в [RCAD2010] се предлага реализация на диференциална еволюция работеща на GPU. <text:span text:style-name="T224">В [SGNB2011] също се предлага </text:span>GPU реализация на изцяло паралелна диференциална еволюция. <text:span text:style-name="T225">В [PKJP2011a] се извършва с</text:span>равнение между <text:span text:style-name="T197">генетични алгоритми</text:span> и диференциална еволюция реализ<text:span text:style-name="T225">ирани</text:span> <text:span text:style-name="T225">з</text:span>а GPU. Сравнението се <text:span text:style-name="T225">извършва</text:span> със задача за планиране на ресурси. <text:span text:style-name="T225">Като резултати диференциалната еволюция</text:span> предоставя значително по-добри решения за фиксиран интервал от време. <text:span text:style-name="T225">В [PKJP2011b] се предлага </text:span>GPU реализация на диференциална еволюция която се ползва за решаване на задачата за разпределение на ресурси. <text:span text:style-name="T225">В [LRCC2011] се разглеждат възможностите за използване </text:span>GPU реализация на диференциална еволюция за оптимизация на проблеми от био-информатиката. В [DDJG2012] се предлага GPU реализация на диференциална еволюция за оптимизиране на график. В [FFRK2012] е представена GPU реализация на сдвоена диференциална еволюция за решаване на min-max задачи. <text:span text:style-name="T217">В [KTTI2010b] се предлага п</text:span>аралелна имплементация на последовател<text:span text:style-name="T217">ен алгоритъм за</text:span> диференциална еволюция. При последователна<text:span text:style-name="T217">та реализация на</text:span> диференциална еволюция новосъздаденият вектор се сравнява с родителя и ако е по-добър веднага го замества в популацията. <text:span text:style-name="T218">В [TDDA2010] се прави детайлно с</text:span>равнение между различни евристични алгоритми приложени в различни системи за паралелни пресмятания. Опитите са направени в многоядрени системи, хомогенни клъст<text:span text:style-name="T218">ъ</text:span>ри и хетерогенна разпределена система в Интернет. Акцентът е върху резултатите при хетерогенната разпределена система в Интернет където някои еволюционни алгоритми не успяват да открият оптимумите на тестовите функции, а друг еволюционни алгоритми откриват оптимуми които в другите реализации не успяват. <text:span text:style-name="T220">Една относително малка част от изчисленията в разпределена среда се извършват с и</text:span>зползване<text:span text:style-name="T220">то</text:span> на дарена изчислителна мощност <text:span text:style-name="T250">(donated computing power)</text:span>. <text:span text:style-name="T220">В [NCTD2010] се представя</text:span> пресмятане на еволюционни алгоритми <text:span text:style-name="T220">като дарена изчислителна мощност</text:span> през инфраструктурата на BOINC <text:span text:style-name="T66">[SINI2011][HREL2011]</text:span>. <text:span text:style-name="T221">В [TDMM2010] се представя в</text:span>алидиране не резултатите от еволюционни алгоритми в разпределени системи с участници на доброволни начала. На практика еволюционните алгоритми продуцират резултати които дори не валидирани лесно отпадат при слаби жизнени функции на следващи етапи от оптимизацията. <text:span text:style-name="T221">Това е възможно тъй като при еволюционните алгоритми голяма част от междините резултати не се съхраняват до достигането на крайно решение. При изчисленията в разпределени среди (особено когато става въпрос за дарена изчислителна мощност) няма </text:span><text:soft-page-break/><text:span text:style-name="T221">гаранция за надеждността на резултатите получени на изчислителни машини под чужд контрол </text:span><text:span text:style-name="T170">[TEGE1994]</text:span><text:span text:style-name="T221">. За алгоритми различни от еволюционните алгоритми този факт представлява сериозен проблем и се разработват различни подходи за борбата с такъв вид компрометиране на изчисленията. Най-често прилаганият способ е едно и също пресмятане да се извършва на няколко независими, отдалечени машини. Това е ефективен подход, но идва с цената на загубена изчислителна мощност. В случая на еволюционните алгоритми, компрометиране на пресмятанията (дори с изцяло злонамерена цел) не само, че не води до проблем в дългосрочен план, но дори може да бъде полезно тъй като би въвело разнообразие в еволюционния процес. В [MWFN2011] се предлага паралелна имплементация на диференциална еволюция. Използва се случайно разбъркване на индивидите в под популациите. Втората предложена модификация е промяна на фактора за преоразмеряване в под популациите. При разбъркването индивидите от отделните популации се смесват и формират нови под популации. Коефициентът за преоразмеряване се променя по случаен принцип в различните популации. В [PEBU2011] се предлага адаптивна паралелна реализация на диференциална еволюция базирана на процеса за миграция. В това изследване топологията звезда дава по-добри резултати от миграцията спрямо кръговата топология. В [JOTT2011] се предлага хибриден паралелен асинхронен метод за глобална оптимизация базиран на симулирано закаляване и елементи от диференциалната еволюция. При асинхронната паралелна реализация всеки работен възел извършва изчисления и докладва резултата без да се интересува на какъв етап от изчисленията са останалите работни възли. В [KTTI2011] се предлага паралелна реализация на диференциална еволюция за решаване на проблеми с висока степен на несигурност. При някои проблеми с висока степен на несигурност се използват Монте-Карло симулации. В [MDRT2011] се предлага паралелна диференциална еволюция за многоцелева оптимизация еднакво добре приложим в хомогенна или хетерогенна паралелна архитектура от изчислителни възли. Базира се на клиент-сървър организация и прилага асинхронна комуникация между възлите в компютърната мрежа </text:span><text:span text:style-name="T171">[ATHA2004][GAVI2002]</text:span><text:span text:style-name="T221">. В [EZMT2011] се предлага комбинация на множество еволюционни алгоритми (генетични алгоритми, диференциална еволюция, рояк от частици, еволюционни стратегии) в множество изчислителни възли. Различните възли извършват различен еволюционен алгоритъм което дава богато разнообразие за изследване на пространството от решенията. Различните оптимизационни алгоритми се комбинират с три различни стратегии за периодична миграция. В [MGJM2011] се представят еволюционни изчисления в </text:span><text:soft-page-break/><text:span text:style-name="T221">разпределена среда базирани на облачна инфраструктура (в случая Dropbox). Отделните възли в изчислението са хетерогенни което означава различни операционни системи. Облачната среда се ползва предимно като хранилище на файлове върху различните възли участващи в изчислението. В [JMMG2011] също се предлага облачно базирана реализация на еволюционни алгоритми в разпределена среда с помощта на Dropbox. В [KITA2012] се предлага сравнителен анализ за паралелна реализация на диференциална еволюция. Изследването е направено на многоядрени машини, като се сравняват две модификации. Моделът с динамично заделяне на задачите се представя по-добре от модела със статично заделяне на задачите. В [DXLD2012] се предлага само адаптираща се паралелна версия на диференциална еволюция. Параметрите на диференциалната еволюция (фактор за преоразмеряване и вероятност за кръстосване) се кодират в самите индивиди от популацията. Популацията се разделя на множество сегменти и се имитира кръгова топология с миграция. В [DLHL2012] се предлага модификация на диференциална еволюция в областта за избор на оператор за мутация. Подобрението е в следствие посоката на отместване както е представено в [PRST2005][FEOK2006][STOR1996][JLAM2002]. Реализират се няколко паралелни популации на диференциална еволюция в които се пазят няколко различни атрактора (най-добри намерени решения). В [ERFO1993] се предлагат разпределени генетични алгоритми за обучение на фронтални изкуствени невронни мрежи. </text:span></text:p><text:p text:style-name="P73"/><text:h text:style-name="Heading_20_2" text:outline-level="2"><text:bookmark-start text:name="__RefHeading___Toc4788_1119578745"/><text:s text:c="2"/><text:span text:style-name="T194">1.7 </text:span>Анализ, проблеми, цели и задачи<text:bookmark-end text:name="__RefHeading___Toc4788_1119578745"/></text:h><text:p text:style-name="P6"/><text:p text:style-name="P6"><text:tab/>В резултат на направения обзор могат да се формулират група проблеми които да бъдат заложени като цели на дисертационния труд, а самите цели да се разбият на задачи, решението на които да доведат до постигане на поставените цели. </text:p><text:p text:style-name="P6"/><text:h text:style-name="Heading_20_3" text:outline-level="3"><text:bookmark-start text:name="__RefHeading___Toc4790_1119578745"/><text:s text:c="4"/><text:span text:style-name="T194">1.7.1 </text:span>Анализ<text:bookmark-end text:name="__RefHeading___Toc4790_1119578745"/></text:h><text:p text:style-name="P6"/><text:p text:style-name="P140"><text:tab/>Основен недостатък на разгледаните решения за обучение на изкуствени невронни мрежи с еволюционни алгоритми е фактът, че почти не се срещат реализации на пълно-свързани изкуствени невронни мрежи. Вторият основен недостатък на разгледаните <text:soft-page-break/>съществуващи решения е, че масово изкуствени невронни мрежи се използват на две фази - обучение и експлоатация. При проблемите описвани с времеви редове е характерно с напредване на времето времевия ред да нараства и е съвсем естествено изкуствени невронни мрежи да бъде преобучавани спрямо новопостъпилата информация. Използването на точни числени методи <text:span text:style-name="T183">(като най-популярният обратно разпространение на грешката </text:span><text:span text:style-name="T168">[BILL1998]</text:span><text:span text:style-name="T183">) е ефективно, но относително неприложимо при изкуствени невронни мрежи с пълно-свързана топология. В литературата са представени множество хибридни модели за обучение на изкуствени невронни мрежи с точни числени методи в комбинация с методи за евристична оптимизация. Трети, макар и второстепенен проблем, е правилното избиране на подходящи точни и евристични методи за извършването на хибридно обучение. В проучените информационни източници се забелязва относително слабо застъпване на възможностите изкуствени невронни мрежи да се обучават в условията на разпределена среда, така че максимално да се ползват възможностите за паралелна реализация на оптимизационните алгоритми от групата на еволюционните алгоритми и популационните алгоритми.</text:span></text:p><text:p text:style-name="P133"/><text:p text:style-name="P133"><text:tab/>Приложението на изкуствени невронни мрежи при прогнозирането на времеви редове в икономиката се разглежда от различни автори, някои от които са Dunis <text:span text:style-name="T165">[DUWI2002]</text:span>, Giles <text:span text:style-name="T165">[GILA2001]</text:span> и Moody <text:span text:style-name="T165">[MOOD1995]</text:span>. Като основен модел се използват така наречените Feed Forward Neural Networks (виж Haykin <text:span text:style-name="T165">[HAYK1999]</text:span>). Мрежите от тип FFNN са много ефективни, но страдат от основен недостатък свързан с липсата на кратковременна памет. Избягването на този проблем се осъществява с използването на така наречените Recurrent Neural Networks. Основната трудност при RNN идва от невъзможността за тяхното обучение да се използват точни градиентни методи (виж Werbos <text:span text:style-name="T165">[WERB1990]</text:span>). Комбиниран подход за обучение на изкуствени невронни мрежи с помощта на еволюционни алгоритми е предложен от Yao <text:span text:style-name="T165">[YAOX1999]</text:span> и други автори. Еволюционните алгоритми дават значително по-добри резултати за търсене на оптимуми в сложни многомерни пространства с наличие на множество локални оптимуми, в които градиентните методи не дават добри резултати (виж Holland <text:span text:style-name="T166">[HOLL1975]</text:span>).</text:p><text:p text:style-name="P133"/><text:h text:style-name="P532" text:outline-level="3"><text:bookmark-start text:name="__RefHeading___Toc4790_11195787451"/><text:s text:c="4"/><text:span text:style-name="T194">1.7.2 Проблеми</text:span><text:bookmark-end text:name="__RefHeading___Toc4790_11195787451"/></text:h><text:p text:style-name="P109"/><text:p text:style-name="P109"><text:soft-page-break/><text:tab/><text:span text:style-name="T262">При търговията с финансови инструменти са важни три основни параметъра:</text:span></text:p><text:p text:style-name="P109"/><text:p text:style-name="P109"><text:tab/><text:span text:style-name="T262">1.</text:span> <text:span text:style-name="T262">В коя посока ще се промени цената (повишение или намаление);</text:span></text:p><text:p text:style-name="P109"><text:tab/><text:span text:style-name="T262">2. Колко време ще продължи това нарастване или намаляване;</text:span></text:p><text:p text:style-name="P109"><text:tab/><text:span text:style-name="T263">3. Какъв да бъде обемът на дългата или късата поръчка;</text:span></text:p><text:p text:style-name="P109"/><text:p text:style-name="P140"><text:tab/><text:span text:style-name="T264">Тъй като търговията носи своите рискове посредниците/брокерите се налага да правят ежедневни анализи на световната икономическа обстановка. В общия случай на отговорно управление те инвестират средства на свои клиенти (физически или юридически лица). При подбирането на инструменти в които да се реализират инвестициите посредниците най-вече се интересуват от посоката в която ще се промени цената. Търгуващите на глобалния пазар условно се разделят на две групи „мечки“ и „бикове“. Метафората за названието на тези две групи идва от факта, че мечката напада противника си опитвайки се да го захлупи с лапите си, а бикът напада противника си опитвайки се да го промуши с рогата си отдолу нагоре. Двете групи търгуващи са в постоянно противопоставяне и по този начин влияят на пазара, така че той да повишава цените си или да намалява цените си, в зависимост от това коя от двете групи надделява в конкретния момент </text:span><text:span text:style-name="T168">[GENE2000]</text:span><text:span text:style-name="T264">. Вторият съществен параметър е колко дълго ще продължи едно повишение или намаляване на цената. След като посредникът е отворил своята позиция и успешно е предвидил посоката на промяна става актуален въпросът колко дълго тази позиция да бъде отворена. Отговорът на този въпрос е пряко свързан с размера на печалбата която конкретната позиция ще реализира. Ако позицията бъде затворена твърде рано то тя ще има нереализирана печалба. Ако позицията бъде затворена твърде късно е възможно акумулирана печалба да се изгуби. Най-оптималният момент за затваряне на една отворена позиция е когато движението на цената от възходящо стане низходящо или обратното. Последният, трети параметър, е свързан с размера на поемания риск. Опита на посредниците бързо ги учи, че наличните активи не се инвестират само в един финансов инструмент, а в цяла група инструменти наречена „инвестиционен портфейл“. Желанието на всеки търгуващ е да инвестира колкото се може по-голяма част от активите в печеливши позиции. Това което ограничава посредниците да инвестират всичко в един конкретен инструмент и една конкретна позиция е рискът да не разпознаят правилно посоката в която ще се промени цената и продължителността на съответното увеличение или намаление.</text:span></text:p><text:p text:style-name="P109"><text:soft-page-break/></text:p><text:p text:style-name="P109"><text:tab/><text:span text:style-name="T265">Ако бъде направено погрешно решение за инвестиране (посока, продължителност, обем) могат да последват значителни загуби за съответната позиция. Проблемите, които търгуващите на свободните пазари срещат са свързани точно с прогнозиране на посоката и продължителността в промяната на цените. Решението за търгувания обем е задача от областта управление на финансов портфейл.</text:span></text:p><text:p text:style-name="P109"/><text:p text:style-name="P153"><text:tab/>В подкрепа на идеите за разработката на дисертационния труд са две частни търговски инициативи. На първо място е пакетът от решения <text:span text:style-name="T268">TradingSolutions на фирмата NeuroDimension Inc.</text:span></text:p><text:p text:style-name="P153"/><table:table table:name="Table42" table:style-name="Table42"><table:table-column table:style-name="Table42.A"/><table:table-row><table:table-cell table:style-name="Table42.A1" office:value-type="string"><text:p text:style-name="P153"><draw:frame draw:style-name="fr2" draw:name="Image19" text:anchor-type="as-char" svg:width="6.5984in" svg:height="3.1598in" draw:z-index="12"><draw:image xlink:href="Pictures/10000201000003DA0000017C0DB10591AA4C90EE.png" xlink:type="simple" xlink:show="embed" xlink:actuate="onLoad"/></draw:frame></text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table42.A1" office:value-type="string"><text:p text:style-name="P407"><text:span text:style-name="T4">Фиг. </text:span><text:span text:style-name="T36">1</text:span><text:span text:style-name="T4">.</text:span><text:span text:style-name="T36">1</text:span> <text:span text:style-name="T269">TradingSolutions на фирмата NeuroDimension Inc</text:span>.</text:p></table:table-cell></table:table-row></table:table><text:p text:style-name="P109"/><text:p text:style-name="P109"><text:tab/>Серията продукти <text:span text:style-name="T270">TradingSolutions са насочени към прогнозиране на валути и акции (Фиг. 1.1). В основата на тези продукти са заложени алгоритми от областта на изкуствения интелект. Основно се залага на изкуствени невронни мрежи и генетични алгоритми.</text:span></text:p><text:p text:style-name="P109"/><table:table table:name="Table43" table:style-name="Table43"><table:table-column table:style-name="Table43.A"/><text:soft-page-break/><table:table-row><table:table-cell table:style-name="Table43.A1" office:value-type="string"><text:p text:style-name="P156"><draw:frame draw:style-name="fr3" draw:name="Image20" text:anchor-type="as-char" svg:width="4.1839in" svg:height="3.4898in" draw:z-index="13"><draw:image xlink:href="Pictures/10000201000001E000000190705C7BED8A4C1DE5.png" xlink:type="simple" xlink:show="embed" xlink:actuate="onLoad"/></draw:frame></text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table43.A1" office:value-type="string"><text:p text:style-name="P408"><text:span text:style-name="T4">Фиг. </text:span><text:span text:style-name="T36">1</text:span><text:span text:style-name="T4">.</text:span><text:span text:style-name="T37">2</text:span> <text:span text:style-name="T269">MoneyBee на фирмата </text:span><text:span text:style-name="T123">i42 GmbH</text:span>.</text:p></table:table-cell></table:table-row></table:table><text:p text:style-name="P135"/><text:p text:style-name="P135"><text:tab/>На второ място е системата <text:span text:style-name="T271">MoneyBee. Системата е разработена от фирмата i42 GmbH. </text:span>Системата <text:span text:style-name="T272">MoneyBee основно се състои от screen saver (Фиг. 1.2). Когато screen saver-ът бъде активиран върху компютърната система на потребителя той извършва обучение на изкуствени неверонни мрежи, така че да прогнозират финансови времеви редове. Самият screen saver разчита на дарена от потребителите изчислителна мощност. Резултатите от извършените изчисления се предават на централизиран сървър.</text:span></text:p><text:p text:style-name="P134"/><text:h text:style-name="Heading_20_3" text:outline-level="3"><text:bookmark-start text:name="__RefHeading___Toc4792_1119578745"/><text:s text:c="4"/><text:span text:style-name="T194">1.7.3 </text:span>Цели<text:bookmark-end text:name="__RefHeading___Toc4792_1119578745"/></text:h><text:p text:style-name="P6"/><text:p text:style-name="P112"><text:tab/><text:span text:style-name="T184">1.</text:span> Да се изследват и предложат подобрени модели за обучение на пълно-свързани изкуствени невронни мрежи.</text:p><text:p text:style-name="P113"><text:tab/><text:span text:style-name="T184">2.</text:span> Да се изследват и предложат подобрени алгоритми за непрекъснато обучение, дори в процеса на експлоатация на изкуствените невронни мрежи.</text:p><text:p text:style-name="P113"><text:tab/><text:span text:style-name="T184">3.</text:span> Да се изследват и предложат подобрени хибридни комбинаци от представените в литературата точни и евристични алгоритми за обучение на изкуствени невронни мрежи.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6"><text:soft-page-break/></text:p><text:h text:style-name="Heading_20_3" text:outline-level="3"><text:bookmark-start text:name="__RefHeading___Toc4794_1119578745"/><text:s text:c="4"/><text:span text:style-name="T194">1.7.4 </text:span>Задачи<text:bookmark-end text:name="__RefHeading___Toc4794_1119578745"/></text:h><text:p text:style-name="P6"/><text:p text:style-name="P136"><text:span text:style-name="T274"><text:tab/>1.</text:span> Реализацията на софтуер за обучение на изкуствени невронни мрежи в разпределена изчислителна среда. Обучението на мрежите да се осъществи във вид на С<text:span text:style-name="T184">++ и JavaScript програма.</text:span></text:p><text:p text:style-name="P137"><text:tab/><text:tab/>а) Реализация на клиентско приложение.</text:p><text:p text:style-name="P137"><text:tab/><text:tab/>б) Реализация на сървър приложение. </text:p><text:p text:style-name="P6"/><text:p text:style-name="P136"><text:span text:style-name="T274"><text:tab/>2. Реализация на</text:span> непрекъснато обучение на предложения пълно-свързан модел на изкуствени невронни мрежи. Обучението трябва да протича в непрекъснат <text:span text:style-name="T185">24/7 цикъл</text:span></text:p><text:p text:style-name="P138"><text:tab/><text:tab/>а) Реализация на алгоритми за непрекъснато разпределяне на задачи от сървъра към клиентските приложения. </text:p><text:p text:style-name="P138"><text:tab/><text:tab/>б) Реализация на непрекъснато обучение за локалните копия на изкуствените невронни мрежи които клиентските машини поддържат.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P127"><text:tab/><text:span text:style-name="T274">3. Реализиране на</text:span> комбинация от алгоритми като <text:span text:style-name="T197">генетични алгоритми</text:span> и диференциална еволюция с алгоритми като обратно разпространение на грешката, така че времетраенето на обучението на изкуствени невронни мрежи да бъде намалено. </text:p><text:p text:style-name="P6"/><text:p text:style-name="P6"><text:tab/><text:span text:style-name="T274">4.</text:span> Техническата реализация на системата за изчисления в разпределена среда и провеждането на необходимите експерименти за потвърждаване на ефективността с която тя работи.</text:p><text:p text:style-name="P6"/><text:h text:style-name="P521" text:outline-level="1"><text:bookmark-start text:name="__RefHeading__150_63795308"/>Глава 2 - Модел за прогнозиране на времеви редове с изкуствени невронни мрежи, обучавани с еволюционни алгоритми<text:bookmark-end text:name="__RefHeading__150_63795308"/></text:h><text:p text:style-name="P6"/><text:p text:style-name="P114"><text:tab/>Настоящото изложение представя модел за прогнозиране на времеви редове, базиран на изкуствени невронни мрежи, обучавани с алгоритъм за диференциална еволюция, в разпределена среда. Сложността на задачата за прогнозиране на времеви редове изисква разработването на по-бързо действащи алгоритми, които водят до прогнози с по-голяма точност. В основата на изкуствените невронни мрежи за прогнозиране е заложена идеята за обучение, на база последователност от данни за изминал период. Изборът на обучаващ алгоритъм може да бъде направен от две основни направления - точни числени методи и евристични оптимизационни метод. Прилагането на подходящи евристични алгоритми може да доведе до използването им в разпределена среда и значително ускоряване на процеса за обучение. </text:p><text:p text:style-name="P6"/><text:h text:style-name="Heading_20_2" text:outline-level="2"><text:bookmark-start text:name="__RefHeading__2955_724005782"/><text:s text:c="2"/>2.1 Определяне на потребителските потребности<text:bookmark-end text:name="__RefHeading__2955_724005782"/></text:h><text:p text:style-name="Standard"/><text:p text:style-name="Standard"><text:tab/>Прогнозирането на времеви редове е задача, в която по зададени хронологични данни, трябва да се направи прогноза за данни в предстоящ период от времето. Когато става въпрос за финансови инструменти дял от науката, наречена „Иконометрия”, се занимава с разработка на алгоритми, финансови индикатори и осцилатори, с помощта на които да се анализират данните. Създаването на ефективни и надеждни средства за финансово прогнозиране е трудоемка и сложна задача. Поради тази причина много актуална е областта за разработка на самоорганизиращи се или самообучаващи се системи за прогнозиране. </text:p><text:p text:style-name="P6"/><text:p text:style-name="P6"><text:tab/>В настоящото изложение се представя модел на самообучаваща се система за прогнозиране движението на валутните пазари. Последователно се разглеждат концепциите за времеви редове, изкуствени невронни мрежи, диференциална еволюция, предложение за <text:soft-page-break/>модел и проблеми, които да бъдат изследвани.</text:p><text:p text:style-name="P6"/><text:h text:style-name="Heading_20_2" text:outline-level="2"><text:bookmark-start text:name="__RefHeading__2957_724005782"/><text:s text:c="2"/>2.2 Времеви редове<text:bookmark-end text:name="__RefHeading__2957_724005782"/></text:h><text:p text:style-name="P6"/><text:p text:style-name="P70"><text:tab/>Времевите редове представляват последователност от данни, събрани на равни или неравни интервали от време. В общия случай на всяка стойност от времето може да се съпостави стойност на определена величина:</text:p><text:p text:style-name="P6"><draw:frame draw:style-name="fr4" draw:name="graphics1" text:anchor-type="paragraph" svg:x="2.7209in" svg:y="0.1417in" svg:width="1.2508in" svg:height="0.4484in" draw:z-index="1"><draw:image xlink:href="Pictures/2000000900000C6800000473F1F10ED770F4DC51.svm" xlink:type="simple" xlink:show="embed" xlink:actuate="onLoad"/></draw:frame></text:p><text:p text:style-name="P75">(1)</text:p><text:p text:style-name="P6"/><text:p text:style-name="P96"><text:tab/>Основна характеристика на времевите редове е, че всяка следваща стойност е в зависимост от предходните стойности. Тази зависимост може да описва лесно предсказуем процес, но и чисто хаотичен процес. Пример за времеви ред е средната дневна температура в рамките на една година. В <text:span text:style-name="T236">дисертационния труд</text:span> се разглеждат времеви редове на валутните пазари. Цената на отделните валути варира във всеки един момент от времето, под влиянието на купувачите и продавачите на пазара.</text:p><text:p text:style-name="P6"/><text:h text:style-name="Heading_20_2" text:outline-level="2"><text:bookmark-start text:name="__RefHeading__2959_724005782"/><text:s text:c="2"/>2.3 Изкуствени невронни мрежи<text:bookmark-end text:name="__RefHeading__2959_724005782"/></text:h><text:p text:style-name="P6"/><text:p text:style-name="P114"><text:tab/>В класическият вариант изкуствени невронни мрежи представляват насочен тегловен граф. Всеки възел в графа реализира изчислителен процес, по аналогия на естествените невронни системи. Теглата на връзките, между отделните невронни възли, определят нивото на влияние по между им. Спрямо мрежата първа група невронни възли се използват за получаване на входна информация, втора група невронни възли се използват за представяне на изход, а трета група невронни възли обработват информацията в скритите слоеве. Целта на всяка една изкуствена невронна мрежа е да изгради функционална зависимост между входните и изходните данни.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P123"><text:tab/>Настоящото изложение разглежда класически изкуствени невронни мрежи, които се <text:soft-page-break/>използват с алгоритъм за обратно разпространение на грешката. Структурата по която са свързват отделните невронни възли определя топологията на изкуствените невронни мрежи. При мрежите с обратно разпространение на грешката най-разпространената топология е с три слоя. В този вариант връзки има само между два съседни слоя. Алгоритъмът за обучение с обратно разпространение на грешката по своята същност е точен числен, градиентен метод който се стреми да минимизира грешката допусната в изходния слой на мрежата. До момента алгоритъмът с обратно разпространение на грешката дава най-добра скорост за обучение, в процеса на обучение, но притежава няколко много сериозни недостатъка: 1) Подходът за корекция на теглата може да доведе до често попадане в локален екстремум; 2) Корекцията на теглата може да доведе до преобучение на мрежата (състояние на катастрофално забравяне); 3) Трудно се обучават изкуствени невронни мрежи с обратни връзки, тъй като не може да се пресметне грешката в изходния слой и след това грешката да се разпространи обратно по слоевете. При прогнозирането на времеви редове с изкуствени невронни мрежи е съществено да има елемент на кратковременна памет, която се постига с обратни връзки в мрежата. </text:p><text:p text:style-name="P6"/><text:p text:style-name="P115"><text:tab/>Идеята за прогнозиране на времеви редове с изкуствени невронни мрежи се състои в подаване на последователност от данни за отминал период от време на входа на изкуствената невронна мрежа и получаване на прогноза която мрежата предлага в изхода.</text:p><text:p text:style-name="P6"/><text:h text:style-name="Heading_20_2" text:outline-level="2"><text:bookmark-start text:name="__RefHeading__2961_724005782"/><text:s text:c="2"/>2.4 Диференциална еволюция<text:bookmark-end text:name="__RefHeading__2961_724005782"/></text:h><text:p text:style-name="P6"/><text:p text:style-name="P128"><text:tab/>Диференциалната еволюция представлява популационен евристичен оптимизационен алгоритъм с общо предназначение. Разработен е на основата на генетичните алгоритми, като основните разлики се изразяват в операцията по мутация. В алгоритъма първоначално се прилага класическо кръстосване. Кръстосването е познато в <text:span text:style-name="T197">генетичните алгоритми</text:span> като то може да бъде в една точка или многоточково. За мутацията се използва претеглен диференциален вектор вместо единична промяна на някой от гените във вече кръстосаната хромозома. Претегленият диференциален вектор се изчислява от две случайно избрани хромозоми чрез изваждане на единия вектор от другия и умножаването му с тегловен <text:soft-page-break/>коефициент. Същественото подобрение при диференциалната еволюция, спрямо <text:span text:style-name="T197">генетичните алгоритми</text:span> се състои в това, че мутацията води до малка стъпка в околността на точката представяща решението като стъпката се прави във всички посоки на N-мерното пространство. При <text:span text:style-name="T197">генетичните алгоритми</text:span> стъпка в околността на точката представяща решението се прави само по една от координатите на N-мерното пространство<text:span text:style-name="T175">.</text:span></text:p><text:p text:style-name="P170"/><text:p text:style-name="P170"><text:tab/>В настоящото изложение диференциалната еволюция е избрана с цел подобряване сходимостта на процеса за обучение и заради идеалните възможности на алгоритъма да бъде реализиран в разпределена среда. Всяка хромозома в диференциалната еволюция кодира един комплект тегла за изкуствената невронна мрежа. Оценката за жизнеността на хромозомите се определя според успеваемостта за прогнозиране на подаваните обучаващи примери. Възможността да се изпълняват отделни копия на диференциалната еволюция на различни изчислителни машини позволява пространството на решенията да бъде по-подробно изследвано. Получава се така, че всяко локално копие работи в определен регион на това пространство.</text:p><text:p text:style-name="P6"/><text:h text:style-name="Heading_20_2" text:outline-level="2"><text:bookmark-start text:name="__RefHeading__2963_724005782"/><text:s text:c="2"/>2.5 Изчисления в разпределена среда<text:bookmark-end text:name="__RefHeading__2963_724005782"/></text:h><text:p text:style-name="P6"/><text:p text:style-name="P130"><text:tab/>При изчисленията в разпределена среда се изпълняват паралелни алгоритми, като за разлика от паралелното програмиране, пресмятанията се извършват на различни изчислителни машини. Разликите между разпределените системи и многопроцесорните системи е изключително малка и не е толкова концептуална, а чисто техническа. Многопроцесорните системи са под контрола на институцията, която ги притежава, докато разпределените системи се изпълняват на хардуер който е под контрола на различни хора или институции. Този факт води до първия проблем свързан с надеждността на извършените изчисления и с възможностите за злонамерено манипулиране на получените резултати. Втората основна разлика е латентността на компютърната мрежа която води до забавяне при предаването на задачи за изчисление и връщане на резултатите. Като част от този проблем е и ситуацията в която въобще не се връща резултат за възложено изчисление. При многопроцесорните системи този проблем не съществува, тъй като комуникацията е в <text:soft-page-break/>рамките на системната шина или в рамките на високо скоростна и надеждна вътрешна компютърна мрежа. Поради посочените проблеми проектирането на системи за изчисления в разпределена среда е по-сложно отколкото създаването на паралелни програми за многопроцесорни системи. Тази допълнителна сложност най-често се отразява в крайната производствена цена на съответния софтуер. </text:p><text:p text:style-name="P6"/><text:p text:style-name="P6"><text:tab/>Разпределените изчисления намират съществено приложение при повишаване на ефективността от пресмятанията. Основно предимство на този вид изчисления пред използването на супер компютър е драстичното понижаване на разходите за хардуер, тоест на цената на масово достъпна компютърна система (служеща за сървър) може да се получи изчислителната мощ на супер компютър от по-нисък клас. Второто предимство е възможността чрез локалните копия да се изследват различни части от пространството на решенията. Същият ефект може да се постигне и с многопроцесорна система, но на по-висока цена. Използването на евристичен оптимизационен алгоритъм води до извършването на множество изчисления повечето от които нямат директно приложение, а служат само за получаване на междинни резултати. Наличието на междинни пресмятания води до идеята за тяхната реализация да се използват съществуващите изчислителни ресурси при клиентите. Обичайно клиентските компютърни системи работят неефективно и в голяма част от времето не се натоварват с полезни изчисления. Ако пресмятанията се извършват на супер компютър, то изчислителните ресурси също така не се използват ефективно, тъй като голяма част от междинните пресмятания не се използват пряко в крайните резултати. </text:p><text:p text:style-name="P6"/><text:h text:style-name="Heading_20_2" text:outline-level="2"><text:bookmark-start text:name="__RefHeading__2965_724005782"/><text:s text:c="2"/>2.6 Предложение за прогнозираща разпределена изчислителна система<text:bookmark-end text:name="__RefHeading__2965_724005782"/></text:h><text:p text:style-name="P6"/><text:p text:style-name="P130"><text:tab/>В <text:span text:style-name="T237">дисертационния труд</text:span> е предложено за целите на прогнозирането да се използва математически модел базиран на изкуствени невронни мрежи, чието обучение се извършва с диференциална еволюция, под формата на изчисления в разпределена среда. Топологията на изкуствените невронни мрежи представлява изследователски интерес и за това в софтуерната система топологията се определя от оператор на отдалечения сървър. Допустимите видове <text:soft-page-break/>топологии са: 1) Многослойни; 2) Многослойни с обратна връзка; 3) Пълно-свързани. Предложеният модел е базиран на класическа мрежа, каквито се използват в моделите с обратно разпространение на грешката. Като сумираща функция е прието да се използва линейна функция:</text:p><text:p text:style-name="P130"><draw:frame draw:style-name="fr5" draw:name="graphics2" text:anchor-type="paragraph" svg:x="2.3563in" svg:y="0.1161in" svg:width="1.9799in" svg:height="0.5728in" draw:z-index="2"><draw:image xlink:href="Pictures/20000009000013A4000005B0912C11677E2C2C50.svm" xlink:type="simple" xlink:show="embed" xlink:actuate="onLoad"/></draw:frame></text:p><text:p text:style-name="P76">(2)</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6"/><text:p text:style-name="P6"><text:tab/>Където <text:span text:style-name="T254">i</text:span><text:span text:style-name="T252"> обозначава индексът на конкретния неврон, а </text:span><text:span text:style-name="T254">j</text:span><text:span text:style-name="T252"> индексите на невроните с които е свързан. Сумиращата</text:span> функция определя начина, по който входните сигнали, в комбинация с тегловните коефициенти, ще влияят върху активността на съответния неврон. Известни са и други видове сумиращи функции, но за сега изследванията ще са насочени само към линейна функция тъй като тя е най-често използвана от други автори в областта.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6"><text:tab/>Резултатът от сумиращата функция е необходимо да се нормира с помощта на нормираща функция <text:span text:style-name="T290">(прагова функция).</text:span> В избрания модел е предпочетена сигмоидна функция със стойности в диапазона от 0.<text:span text:style-name="T290">0</text:span> до 1.<text:span text:style-name="T290">0</text:span>, тъй като различният брой връзки при различните неврони биха повлияли различно, ако не се нормира сумата.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6"><draw:frame draw:style-name="fr5" draw:name="graphics3" text:anchor-type="paragraph" svg:x="2.4709in" svg:y="-0.0846in" svg:width="1.7508in" svg:height="0.8756in" draw:z-index="3"><draw:image xlink:href="Pictures/200000090000115E000008B0EF25806EDFC52602.svm" xlink:type="simple" xlink:show="embed" xlink:actuate="onLoad"/></draw:frame></text:p><text:p text:style-name="P77">(3)</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6"/><text:p text:style-name="P6"><text:tab/>Сигмоидната функция е избрана за нормираща функция поради нейните свойства по отношение на диференцируемост и асимптотичност. Възможно е използването на двоична функция или линейна функция (с цел подобряване на бързодействието), но техните свойства влошават резултатите (примерно линейна функция). Ако мрежата работи със стойности от -1 до +1, то като нормираща функция може да се използва хиперболичен тангенс.</text:p><text:p text:style-name="P6"/><table:table table:name="Table44" table:style-name="Table44"><table:table-column table:style-name="Table44.A"/><text:soft-page-break/><table:table-row><table:table-cell table:style-name="Table44.A1" office:value-type="string"><text:p text:style-name="P155"><draw:frame draw:style-name="fr6" draw:name="graphics4" text:anchor-type="as-char" svg:width="6.6925in" svg:height="3.5193in" draw:z-index="14"><draw:image xlink:href="Pictures/2000000900007F8900004314AA000618B48B96D5.svm" xlink:type="simple" xlink:show="embed" xlink:actuate="onLoad"/></draw:frame></text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table44.A1" office:value-type="string"><text:p text:style-name="Illustration"><text:span text:style-name="T4">Фиг. 2.1</text:span> Система за обучение на изкуствени невронни мрежи с диференциална еволюция, в разпределена среда.</text:p></table:table-cell></table:table-row></table:table><text:p text:style-name="P127"/><text:p text:style-name="P127"><text:tab/>Обучението на изкуствени невронни мрежи се осъществява с помощта на диференциална еволюция. В рамките на алгоритъма диференциална еволюция всяка хромозома представя един комплект тегла за конкретна топология изкуствени невронни мрежи към която се отнасят определен брой обучаващи примери. Последователно отделните хромозоми (комплекти тегла) се зареждат в структурата на изкуствената невронна мрежа след което се подават обучаващите примери. Следва изчисляване на грешката която изкуствената невронна мрежа допуска за всеки пример. След това се сумират грешките от отделните примери и се определя коефициент за жизнеспособност на хромозомата (комплект тегла). Начинът по който се определя коефициентът на жизнеспособност е един от най-ключовите стъпки от които зависи успехът на цялостното прогнозиране. При времевите редове е необходимо обучаващите примери да се подават в хронологична последователност което създава затруднения при изкуствени невронни мрежи обучавани с алгоритъм за обратно разпространение на грешката. Също така, отдалечените във времето обучаващи примери е необходимо да оказват по-малко влияние при формирането на коефициента за жизнеспособност. След като бъдат оценени отделните хромозоми те влизат в изчислителната <text:soft-page-break/>схема на диференциалната еволюция като над тях се извършва селекция, кръстосване и мутация. </text:p><text:p text:style-name="P6"/><text:p text:style-name="P130"><text:tab/>При паралелния вариант на алгоритъма за диференциална еволюция се създават локални копия на изкуствената невронна мрежа и на диференциалната еволюция <text:span text:style-name="T266">[BAZA2010]</text:span>. Обучението протича локално като всяка хромозома в популацията обозначава отделна точка (индивид) в пространството на търсене. Макар и различни индивидите се групират относително близко един до друг в това пространство. При разделяне на изчисленията върху множество изчислителни машини подобно групиране на индивиди може да доведе до локално изследване на различни области от пространството на решенията (пространството на търсене) <text:span text:style-name="T232">[BATO2011]</text:span>. В този аспект най-съществена е политиката за синхронизиране като процеса на синхронизиране включва излъчването на най-добрите индивиди и събирането им на едно централизирано място (клиент-сървър архитектура). Това множество на глобално най-устойчивите индивиди може да се използва при създаването на следващи локални ареали. Освен клиент-сървър архитектура е възможно да се реализира peer-to-peer решение, при което отсъства централизиран сървър, а всяко локално работещо приложение се грижи за комуникацията с други локално работещи приложения. Основно предимство на предложената клиент-сървър система за изчисления в разпределена среда е нейната изключително висока степен на скалируемост (изключително улеснено включване на допълнителни компютърни системи в системата за разпределени изчисления) <text:span text:style-name="T232">[BAZA2011]</text:span>. Честотата на комуникация между клиентите и сървъра може да се регулира прецизно, като за интервали може да се ползват часове, седмица и дори месеци. При наличие на голям брой клиенти, натоварването на сървъра може да се компенсира с намаляване честотата на комуникация с клиентите. </text:p><text:p text:style-name="P6"/><text:p text:style-name="P127"><text:tab/>Първото предимство на предложения модел се състои в използването на диференциална еволюция за обучението на изкуствени невронни мрежи като по този начин се избяга опасността от преобучение <text:span text:style-name="T104">[BATO2015]</text:span>. Второто предимство е възможността чрез диференциална еволюция да се обучават изкуствени невронни мрежи с обратни връзки. Третото предимство е възможността чрез диференциална еволюция да се обучават изкуствени невронни мрежи без да е от значение редът по който се подават обучаващите <text:soft-page-break/>примери. Четвъртото предимство е възможността да се обучават различни копия на изкуствени невронни мрежи и това да става паралелно водещо до подобряване на бързодействието и по-добро покритие на пространството за търсене. При евентуални злонамерени клиенти които изпращат некоректна информация към сървъра (комплекти тегла), то тази информация може да се провери лесно. От друга страна некоректната информация получена от злонамерени клиенти може да се използва в неподправен вид за обогатяване генетичния фонд на сървъра. Минимална бройка злонамерените клиенти не представляват проблем за предложения модел дори ако не се вземат специални мерки за борба с тях. При постъпване на злонамерено увредени данни в глобалната популация те биват валидирани още при първото оценяване в локалните популации и биха изпаднали от списъка на индивидите в популацията на диференциялната еволюция.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P130"><text:tab/>Освен предимства предложеният модел има и следните недостатъци: Използването на изкуствени невронни мрежи е свързано с бавно обучение. Макар и много ефективни изкуствените невронни мрежи изискват големи количества изчислителни ресурси основно във фазата на обучение. Използването на диференциална еволюция значително забавя процеса на обучение в сравнение с алгоритъма за обратно разпространение на грешката, но поради множеството изброени предимства диференциална еволюция е предпочитан пред обратно разпространение на грешката. Интересен би бил модел в който диференциална еволюция се комбинира с обратно разпространение на грешката макар и това да не може да се постигне без някакъв компромис по отношение топологията на изкуствените невронни мрежи. Разработването на програми за изчисления в разпределена среда е по-сложно от писането на строго последователни или паралелни програми.</text:p><text:p text:style-name="P6"/><text:h text:style-name="Heading_20_3" text:outline-level="3"><text:bookmark-start text:name="__RefHeading__3314_724005782"/><text:s text:c="4"/>2.6.1 Структура на изкуствена невронна мрежа<text:bookmark-end text:name="__RefHeading__3314_724005782"/></text:h><text:p text:style-name="P6"/><text:p text:style-name="P161"><text:tab/>Изкуствената невронна мрежа се състоят от следните основни компоненти - неврони за входна информация, неврони в скритите слоеве, неврони за изходна информация и тегла на връзките между отделните неврони. За избор на структура на изкуствени невронни мрежи се разглежда мрежа с 3 входа, 4 възела в скрития слой и 2 изхода.</text:p><text:p text:style-name="P161"><text:soft-page-break/></text:p><table:table table:name="Table45" table:style-name="Table45"><table:table-column table:style-name="Table45.A"/><table:table-row><table:table-cell office:value-type="string"><text:p text:style-name="P157"><draw:frame draw:style-name="fr6" draw:name="graphics5" text:anchor-type="as-char" svg:width="6.3862in" svg:height="4.7602in" draw:z-index="15"><draw:image xlink:href="Pictures/2000000900003F5C00002F3C9F34CF68920B9C4C.svm" xlink:type="simple" xlink:show="embed" xlink:actuate="onLoad"/></draw:frame></text:p></table:table-cell></table:table-row><table:table-row><table:table-cell office:value-type="string"><text:p text:style-name="Illustration"><text:span text:style-name="T4">Фиг. 2.2</text:span> Изкуствена невронна мрежа с топология 3-4-2.</text:p></table:table-cell></table:table-row></table:table><text:p text:style-name="P6"/><text:p text:style-name="P6"><text:tab/>Всеки неврон е обозначен със своята изходна стойност от x1 до x9, а теглата на връзките между невроните със стойност wij, където i е индекс на източник, а j е индекс на получател. В конкретния пример, входната информация се записва в x1, x2 и x3, а изходната информация се получава в x8 и x9. Стойностите на невроните могат да се представят като вектор:</text:p><text:p text:style-name="P6"><draw:frame draw:style-name="fr5" draw:name="graphics6" text:anchor-type="paragraph" svg:x="1.2256in" svg:y="0.1016in" svg:width="4.2402in" svg:height="0.5217in" draw:z-index="4"><draw:image xlink:href="Pictures/2000000900002A120000052C5BC11FF2B043ACAB.svm" xlink:type="simple" xlink:show="embed" xlink:actuate="onLoad"/></draw:frame></text:p><text:p text:style-name="P78">(4)</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6"><text:tab/>Където векторът <text:span text:style-name="T255">x</text:span><text:span text:style-name="T258"> е с размер 9, тъй като на Фиг. 2.2 е представена мрежа с 9 възела. </text:span>В матрична форма теглата на изкуствената невронна мрежа могат да се представят с квадратна матрица която има размер <text:span text:style-name="T238">n*n (където n е</text:span> броят неврони в мрежата<text:span text:style-name="T238">)</text:span>:</text:p><text:p text:style-name="P6"><draw:frame draw:style-name="fr5" draw:name="graphics7" text:anchor-type="paragraph" svg:x="1.7264in" svg:y="0.0953in" svg:width="3.4165in" svg:height="2.2602in" draw:z-index="5"><draw:image xlink:href="Pictures/20000009000021E70000166E66FA84D54A287356.svm" xlink:type="simple" xlink:show="embed" xlink:actuate="onLoad"/></draw:frame><text:soft-page-break/></text:p><text:p text:style-name="P6"/><text:p text:style-name="P6"/><text:p text:style-name="P6"/><text:p text:style-name="P79">(5)</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6"/><text:p text:style-name="P6"/><text:p text:style-name="P6"/><text:p text:style-name="P6"/><text:p text:style-name="P6"><text:tab/>Матрицата <text:span text:style-name="T256">w</text:span><text:span text:style-name="T259"> е с размери 9x9, тъй като отразява силата на връзки между възлите, в мрежата представени на Фиг. 2.2 (матрица на съседство от теория на графите). </text:span>Силата на връзките между невронните се регулира с матрица на свързаност като тази матрица определя и топологията на изкуствената невронна мрежа (тоест кой възел с кои други възли е свързан):</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6"><draw:frame draw:style-name="fr5" draw:name="graphics8" text:anchor-type="paragraph" svg:x="1.7882in" svg:y="-0.0626in" svg:width="3.1154in" svg:height="2.2602in" draw:z-index="6"><draw:image xlink:href="Pictures/2000000900001EE80000166E4541FDBED8DF8D74.svm" xlink:type="simple" xlink:show="embed" xlink:actuate="onLoad"/></draw:frame></text:p><text:p text:style-name="P6"/><text:p text:style-name="P6"/><text:p text:style-name="P80">(6)</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6"/><text:p text:style-name="P6"/><text:p text:style-name="P6"/><text:p text:style-name="P6"/><text:p text:style-name="P6"><text:tab/>Матрицата <text:span text:style-name="T257">a</text:span><text:span text:style-name="T260"> също има размери 9x9. </text:span>С помощта на матрицата за свързаност може да се регулира кои връзки между невроните ще вземат участие във формирането на изхода на изкуствената невронна мрежа. Чрез подходящо подбиране на активности на теглата могат да се зададат топологии само с връзки напред, с връзки назад или с връзки на всеки възел към всеки друг.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P171"><text:tab/>Матриците <text:span text:style-name="T273">(5) и (6) пряко отразяват връзките в мрежата представена на Фиг. 2.2. </text:span><text:soft-page-break/><text:span text:style-name="T273">Наличието на редове и стълбове с нули в тези две матрици се дължи на факта, че според фигурата не съществува връзка между съответните неврони. Ако онагледим една изкуствена невронна мрежа с водоснабдителната система на един град то матрицата (6) онагледява максималният дебит вода който може да премине през тръбите, а матрицата (5) онагледява за какъв моментен дебит са настроени тръбите. </text:span></text:p><text:p text:style-name="P6"/><text:h text:style-name="Heading_20_3" text:outline-level="3"><text:bookmark-start text:name="__RefHeading__3316_724005782"/><text:s text:c="4"/>2.6.2 Изчисления от входа към изхода<text:bookmark-end text:name="__RefHeading__3316_724005782"/></text:h><text:p text:style-name="P6"/><text:p text:style-name="P6"><text:tab/>Пресмятането на стойностите за невроните, при разпространението на входните сигнали в права посока, може да се представи по следния начин:</text:p><text:p text:style-name="P81"><draw:frame draw:style-name="fr5" draw:name="graphics9" text:anchor-type="paragraph" svg:x="2.778in" svg:y="0.0591in" svg:width="1.1362in" svg:height="0.4484in" draw:z-index="7"><draw:image xlink:href="Pictures/2000000900000B45000004736C1BF3D90D0AA412.svm" xlink:type="simple" xlink:show="embed" xlink:actuate="onLoad"/></draw:frame></text:p><text:p text:style-name="P86">(7)</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6"><text:tab/>Умножението на вектора <text:span text:style-name="T253">x</text:span> с матрицата <text:span text:style-name="T253">w</text:span> представлява сумирането на претеглените входни сигнали. Преди да бъде извършено умножението в матрицата <text:span text:style-name="T253">w</text:span> към нулса се отвеждат елементите според зададените нули в матрицата <text:span text:style-name="T253">a</text:span>.</text:p><text:p text:style-name="P6"><draw:frame draw:style-name="fr5" draw:name="graphics10" text:anchor-type="paragraph" svg:x="2.4709in" svg:y="0.0193in" svg:width="1.7508in" svg:height="0.8756in" draw:z-index="8"><draw:image xlink:href="Pictures/200000090000115E000008B0C2A16C0AF8CC200F.svm" xlink:type="simple" xlink:show="embed" xlink:actuate="onLoad"/></draw:frame></text:p><text:p text:style-name="P82">(8)</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6"/><text:p text:style-name="P6"><text:tab/>След сумирането на претеглените входни сигнали следва те да се нормират, така че да бъдат в желания диапазон от <text:span text:style-name="T291">(</text:span>0.0-1.0<text:span text:style-name="T291">)</text:span>. Интервалът е отворен, тъй като сигмоидната функция има асимптотична сходимост към нула и единициа в двата си края.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P83"><draw:frame draw:style-name="fr5" draw:name="graphics11" text:anchor-type="paragraph" svg:x="2.9398in" svg:y="-0.0898in" svg:width="0.8134in" svg:height="0.3957in" draw:z-index="9"><draw:image xlink:href="Pictures/2000000900000811000003EE105AE4F4C01F15F9.svm" xlink:type="simple" xlink:show="embed" xlink:actuate="onLoad"/></draw:frame>(9)</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6"><text:tab/>Преди да се извърши пресмятането в елементите x1, x2 и x3 се записват стойностите на входните сигнали, които трябва да са в диапазона <text:span text:style-name="T291">(</text:span>0.0-1.0<text:span text:style-name="T291">)</text:span>. Резултатът от работата на мрежата се получава в елементите x8 и x9 като също са в диапазона <text:span text:style-name="T291">(</text:span>0.0-1.0<text:span text:style-name="T291">)</text:span>.</text:p><text:p text:style-name="P6"/><text:h text:style-name="P533" text:outline-level="3"><text:bookmark-start text:name="__RefHeading__3318_724005782"/><text:soft-page-break/><text:s text:c="4"/>2.6.3 Манипулация на теглата в изкуствените невронни мрежи с диференциална еволюция<text:bookmark-end text:name="__RefHeading__3318_724005782"/></text:h><text:p text:style-name="P6"/><text:p text:style-name="P127"><text:tab/>Целта при обучението на изкуствени невронни мрежи е да се намери подходящ комплект тегла, така че мрежата да наподобява функцията, която изразява движението на цената, спрямо времето. Когато се използва диференциална еволюция, за разлика от обратно разпространение на грешката, в процеса на обучение няма обратен пас за разпространение на информация в мрежата. По своята същност обучението с диференциална еволюция представлява изпробване на относително случайно комбинирани комплекти тегла (индивиди в термините на <text:span text:style-name="T197">генетичните алгоритми</text:span>). На база на резултатите които постигат отделните комплекти се прилага стратегия за отсяване на по-добре представилите се тегла от по-зле представилите се. След отсяването по-добре представилите се комплекти се използват за рекомбинация и получаване на нови комплекти. Броят на комплектите тегла които участват в изчислението се нарича размер на популацията. Всяка популация се състои от индивиди в настоящото поколение (генерация) и индивиди в новото поколение.</text:p><text:p text:style-name="P127"/><table:table table:name="Table46" table:style-name="Table46"><table:table-column table:style-name="Table46.A"/><text:soft-page-break/><table:table-row><table:table-cell office:value-type="string"><text:p text:style-name="P158"><draw:frame draw:style-name="fr6" draw:name="graphics12" text:anchor-type="as-char" svg:width="6.0102in" svg:height="5.6362in" draw:z-index="16"><draw:image xlink:href="Pictures/2000000900003BA3000037EBF631B04520D5CDFC.svm" xlink:type="simple" xlink:show="embed" xlink:actuate="onLoad"/></draw:frame></text:p></table:table-cell></table:table-row><table:table-row><table:table-cell office:value-type="string"><text:p text:style-name="Illustration"><text:span text:style-name="T4">Фиг. 2.3</text:span> Кръстосване на комплекти тегла.</text:p></table:table-cell></table:table-row></table:table><text:p text:style-name="P6"/><text:p text:style-name="P6"><text:tab/>При кръстосването популацията условно се разделя на стара генерация (I, II, III и IV) и нова генерация (V, VI, VII и VIII). За да се формира новата генерация се избират два индивида (комплекти тегла) по случаен принцип (в примера I и IV, като първа група, a II и III, като втора група). На случайно избраните родителски индивиди се избира случайна точка на срязване (точка на кръстосване). От двата родителски индивида се получават два нови индивида (V и VI, от първа група, a VII и VIII, от втора група). Освен една точка на кръстосване е възможно да се използват две или повече точки, както и равномерно кръстосване. Операцията по кръстосване може да има и по-сложен вид, като дори може да се използват случайно избрани елементи от двамата родители, без те да са последователни.</text:p><text:p text:style-name="P6"><text:soft-page-break/></text:p><table:table table:name="Table47" table:style-name="Table47"><table:table-column table:style-name="Table47.A"/><table:table-row><table:table-cell office:value-type="string"><text:p text:style-name="P155"><draw:frame draw:style-name="fr6" draw:name="graphics13" text:anchor-type="as-char" svg:width="6.6925in" svg:height="5.7307in" draw:z-index="17"><draw:image xlink:href="Pictures/2000000900004D00000041F17F08ED39CFE737D8.svm" xlink:type="simple" xlink:show="embed" xlink:actuate="onLoad"/></draw:frame></text:p></table:table-cell></table:table-row><table:table-row><table:table-cell office:value-type="string"><text:p text:style-name="Illustration"><text:span text:style-name="T4">Фиг. 2.4</text:span> Мутация на комплекти тегла.</text:p></table:table-cell></table:table-row></table:table><text:p text:style-name="P6"/><text:p text:style-name="P6"><text:tab/>За целите на мутацията се формира претеглен диференциален вектор, който след това се събира с предварително кръстосания индивид. Диференциалният вектор се получава като разлика от два индивида, а след това се претегля, като се умножи с число α в диапазона [0.0-1.0]. Изборът на α се определя експериментално, като използването на динамична промяна може да подобри сходимостта на алгоритъма.</text:p><text:p text:style-name="P6"/><text:h text:style-name="P533" text:outline-level="3"><text:bookmark-start text:name="__RefHeading__3320_724005782"/><text:soft-page-break/><text:s text:c="4"/>2.6.4 Представяне на входните и изходните данни<text:bookmark-end text:name="__RefHeading__3320_724005782"/></text:h><text:p text:style-name="P6"/><text:p text:style-name="P6"><text:tab/>Възможни са различни варианти за представяне на входната и изходната информация. В случая изборът е в<text:span text:style-name="T158">ходните данни да се мащабират спрямо най-голямата и най-малката стойност във времевия ред. Множеството от стойности във времевия ред се разделя условно на две под множества – прозорец от минали стойности и прозорец от стойности в бъдещето (lag frame и lead frame).</text:span> </text:p><text:p text:style-name="P6"/><text:p text:style-name="P116"><text:tab/>От начина, по който се представят входните и изходните данни зависи какъв брой неврони ще участват във входния и изходния слой. Намирането на подходящ баланс за броя входни и изходни възли е от съществено значение за броя на връзките в изкуствените невронни мрежи, респективно на теглата които се подлагат на оптимизация. </text:p><text:p text:style-name="P6"/><text:h text:style-name="P533" text:outline-level="3"><text:bookmark-start text:name="__RefHeading__1941_564051341"/><text:s text:c="4"/>2.6.5 Оценка на индивидите в популацията<text:bookmark-end text:name="__RefHeading__1941_564051341"/></text:h><text:p text:style-name="P419"/><table:table table:name="Table48" table:style-name="Table48"><table:table-column table:style-name="Table48.A"/><text:soft-page-break/><table:table-row><table:table-cell office:value-type="string"><text:p text:style-name="P421"><draw:frame draw:style-name="fr6" draw:name="graphics14" text:anchor-type="as-char" svg:width="6.6925in" svg:height="4.2244in" draw:z-index="18"><draw:image xlink:href="Pictures/20000009000050B9000032F5A276B15FA7714614.svm" xlink:type="simple" xlink:show="embed" xlink:actuate="onLoad"/></draw:frame></text:p></table:table-cell></table:table-row><table:table-row><table:table-cell office:value-type="string"><text:p text:style-name="Illustration"><text:span text:style-name="T4">Фиг. 2.5</text:span> Процедура за оценка на комплектите тегла.</text:p></table:table-cell></table:table-row></table:table><text:p text:style-name="P6"/><text:p text:style-name="P6"><text:tab/>За да се оценят комплектите тегла, то всеки комплект трябва да се зареди в мрежата (стъпка 1). При заредена мрежа многократно се подават входните данни (стъпка 2). Многократно сигналът от входа се предава към изхода (стъпка 3). След което, за всеки пример се оценява до колко добре мрежата прогнозира изходните данни (стъпка 4). Като оценка за грешката на конкретна двойка входно-изходни данни k се използва разстояние между два вектора (прогноза и реална стойност) в евклидово пространство:</text:p><text:p text:style-name="P6"/><text:p text:style-name="P172"><draw:frame draw:style-name="fr5" draw:name="graphics15" text:anchor-type="paragraph" svg:x="2.002in" svg:y="0.0346in" svg:width="2.6874in" svg:height="0.678in" draw:z-index="10"><draw:image xlink:href="Pictures/2000000900001AAB000006B904C7B6400E50EDFB.svm" xlink:type="simple" xlink:show="embed" xlink:actuate="onLoad"/></draw:frame></text:p><text:p text:style-name="P84">(10)</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6"/><text:p text:style-name="P6"><text:tab/>Данните условно се разделят на данни от минал период и данни от бъдещ период. Разделението е условно защото по своята същност данните са от вече отминал период. </text:p><text:p text:style-name="P6"/><text:p text:style-name="P6"><text:soft-page-break/><text:tab/>Цялостната грешка, която изкуствената невронна мрежа допуска със заредения комплект тегла се получава като средно аритметично от грешките за всяка двойка входно изходни данни (n на брой):</text:p><text:p text:style-name="P6"><draw:frame draw:style-name="fr5" draw:name="graphics16" text:anchor-type="paragraph" svg:x="2.6528in" svg:y="0.1311in" svg:width="1.3862in" svg:height="0.9583in" draw:z-index="11"><draw:image xlink:href="Pictures/2000000900000DC000000983114AE5BD1D2D1A51.svm" xlink:type="simple" xlink:show="embed" xlink:actuate="onLoad"/></draw:frame></text:p><text:p text:style-name="P6"/><text:p text:style-name="P85">(11)</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6"/><text:p text:style-name="P127"><text:tab/>Сумарната грешка на комплекта тегла се разделя на броя входно-изходни примери за да може да се сравняват комплекти тегла оценени при различен брой входно-изходни примери. Общата грешка на изкуствената невронна мрежа се предава еднократно като жизнена стойност за конкретния комплект тегла в диференциалната еволюция (стъпка 5). </text:p><text:p text:style-name="P6"/><text:p text:style-name="P6"><text:tab/>Тъй като обучението в представения модел е непрекъснато, то броят входно-изходни данни постоянно нараства. Възможно е да се въведат тегловни коефициенти на входно-изходните примери, така че данните от по-старите периоди време да оказват по-малко влияние за формирането на общата грешка която изкуствената невронна мрежа натрупва. С подобен механизъм може да се отчете фактът, че по-старите данни по-малко влияят върху това което предстои да се случи.</text:p><text:p text:style-name="P6"/><text:h text:style-name="P533" text:outline-level="3"><text:bookmark-start text:name="__RefHeading__1943_564051341"/><text:s text:c="4"/>2.6.6 Хибридна реализация с диференциална еволюция и обратно разпространение на грешката<text:bookmark-end text:name="__RefHeading__1943_564051341"/></text:h><text:p text:style-name="P419"/><table:table table:name="Table49" table:style-name="Table49"><table:table-column table:style-name="Table49.A"/><text:soft-page-break/><table:table-row><table:table-cell office:value-type="string"><text:p text:style-name="P421"><draw:frame draw:style-name="fr6" draw:name="graphics17" text:anchor-type="as-char" svg:width="5.3862in" svg:height="2.6362in" draw:z-index="19"><draw:image xlink:href="Pictures/200000090000357000001A27A3B0C4019E20747C.svm" xlink:type="simple" xlink:show="embed" xlink:actuate="onLoad"/></draw:frame></text:p></table:table-cell></table:table-row><table:table-row><table:table-cell office:value-type="string"><text:p text:style-name="Illustration"><text:span text:style-name="T4">Фиг. 2.6</text:span> Промяна на топологията в изкуствената невронна мрежа за нуждите на алгоритъма за обратно разпространение на грешката.</text:p></table:table-cell></table:table-row></table:table><text:p text:style-name="P127"/><text:p text:style-name="P127"><text:tab/>Самостоятелното използване на диференциална еволюция, като обучаващ алгоритъм изисква твърде много машинно време извършване на обучението. С цел ускоряване на тази обучението диференциалната еволюция може да се комбинира с обратно разпространение на грешката. Когато се преминава от обучение с диференциална еволюция към обучение с обратно разпространение на грешката трябва да се изключат всички обратни връзки в мрежата. Изключването на връзки в изкуствената невронна мрежа означава промяна на топологията. Обучението с обратно разпространение на грешката ще засяга единствено теглата участващи във връзки от входа, към изхода. Подобен вид модификация на топологията и корекция на част от теглата може да се разглежда като допълнителен вид мутация в диференциалната еволюция. </text:p><text:p text:style-name="P6"/><text:h text:style-name="P533" text:outline-level="3"><text:bookmark-start text:name="__RefHeading__1945_564051341"/><text:s text:c="4"/>2.6.7 Обучение на изкуствени невронни мрежи с диференциална еволюция в разпределена среда<text:bookmark-end text:name="__RefHeading__1945_564051341"/></text:h><text:p text:style-name="P419"/><table:table table:name="Table50" table:style-name="Table50"><table:table-column table:style-name="Table50.A"/><text:soft-page-break/><table:table-row><table:table-cell office:value-type="string"><text:p text:style-name="P421"><draw:frame draw:style-name="fr6" draw:name="graphics18" text:anchor-type="as-char" svg:width="6.6925in" svg:height="3.8126in" draw:z-index="20"><draw:image xlink:href="Pictures/200000090000480A000029096BF8782AC4DDD449.svm" xlink:type="simple" xlink:show="embed" xlink:actuate="onLoad"/></draw:frame></text:p></table:table-cell></table:table-row><table:table-row><table:table-cell office:value-type="string"><text:p text:style-name="Illustration"><text:span text:style-name="T4">Фиг. 2.7</text:span> Обмен на задачи в система за изчисления в разпределена среда.</text:p></table:table-cell></table:table-row></table:table><text:p text:style-name="P130"/><text:p text:style-name="P130"><text:tab/>При системите за изчисления в разпределена среда централизиран сървър разпределя задания за изчисление на отдалечени компютри (стъпка 1). В някакъв период от време отдалечените компютри изпълняват заданието (стъпка 2). Заданията могат да са оформени като пакети за пресмятане в рамките на няколко минути, но може да са оформени и в пакети за пресмятане в рамките на седмица или месец. Периодът за продължителност на пресмятането силно зависи от естеството на изчисленията които трябва да се извършат. Чрез подходящо регулиране на периода за пресмятане може да се постигне оптимално натоварване на сървъра и максимална актуалност на информацията която сървърът съхранява с цел синхронизиране на разпределения изчислителен процес. Когато клиентът приключи изчислението на възложеното задание връща резултата на сървъра (стъпка 3). Трите основни стъпки в този процес се повтарят докато има работещ сървър и клиентски компютри закачени за него.</text:p><text:p text:style-name="P6"/><text:h text:style-name="P525" text:outline-level="2"><text:bookmark-start text:name="__RefHeading__2965_7240057821"/><text:soft-page-break/><text:s text:c="2"/>2.<text:span text:style-name="T276">7</text:span> Обобщение<text:bookmark-end text:name="__RefHeading__2965_7240057821"/></text:h><text:p text:style-name="P142"/><text:p text:style-name="P142"><text:tab/>Като кратко обобщение може да се отбележи, че предложения модел за обучение на изкуствени невронни мрежи има редица предимства когато обучението се извършва с диеференциална еволюция която се изпълнява на множество изчислителни машини, а получените резултати се синхронизират на централизиран сървър. </text:p><text:p text:style-name="P142"/><text:p text:style-name="P142"><text:tab/>В резултат на научноизследователската работа изложена в тази глава са постигнати следните приноси:</text:p><text:p text:style-name="P6"/><text:p text:style-name="P143"><text:tab/>1. Предложен е ефективен начин за разделяне на търсенето в пространството на решенията върху различни изчислителни машини;</text:p><text:p text:style-name="P6"><text:tab/><text:span text:style-name="T277">2. Предложен е ефективен начин за оптимизацията на теглата в изкуствена невронна мрежа, чрез диференциална еволюция;</text:span></text:p><text:p text:style-name="P150"><text:tab/>3. Предложена е модификация на топологията на изкуствена невронна мрежа с обратни връзки, така че да се изпълнява комбинирано обучение с обратно разпространение на грешката и диференциална еволюция;</text:p><text:p text:style-name="P6"/><text:p text:style-name="P146"><text:tab/>Моделът за обучение в разпределена среда е представен в „Работни статии на ИИТ“, на „Ю<text:span text:style-name="T278">билейна научна конференция - 40 години катедра Автоматизация на производството” и на International Conference on Large-Scale Scientific Computations. Тези публикации са цитирани в дисертационния труд като референции [BAZA2010], [BATO2011] и [BAZA2011].</text:span></text:p><text:p text:style-name="P6"/><text:h text:style-name="P522" text:outline-level="1"><text:bookmark-start text:name="__RefHeading___Toc1979_1885221179"/>Глава 3 - Софтуерна система за прогнозиране на времеви редове с изкуствени невронни мрежи и еволюционни алгоритми<text:bookmark-end text:name="__RefHeading___Toc1979_1885221179"/></text:h><text:p text:style-name="Standard"/><text:p text:style-name="Standard"><text:tab/>Основен фактор при практическата реализация е наличието на подходящи експериментални данни. Развитието на финансовите пазари, през последните две десетилетия дава изключително добър избор от времево зависима информация. Цената на националните валути се оповестява на така наречения <text:span text:style-name="T57">foreign exchange market (FOREX). Търгуването на валутните пазари изключително се улеснява с услугите които предлагат инвестиционните посредници. Самата търговия се извършва с помощта на търговски софтуер наречен търговски терминал. За Източна Европа най-разпространената търговска платформа е MetaTrader 4, произведена от фирмата MetaQuotes Software Corp. [MTMQ2015]. </text:span></text:p><text:p text:style-name="Standard"/><text:p text:style-name="Standard"><text:tab/>В платформата <text:span text:style-name="T60">MetaTrader 4 валутната информация е представена под формата на времеви ред онагледен графично с нива на отваряне, нива на затваряне, нива за най-висока достигната цена и нива на най-ниска достигната цена (Фиг. 3.1). Цялата тази информация е програмно достъпна със средствата на вградения в MetaTrader 4 програмен език, наречен MQL4. Търговският терминал на MetaTrader 4 дава възможност за визуализиране на информацията от времевия ред на няколко различни, равни по дължина, времеви интервала, като следва: M1 - всеки бар отразява една минута, М5 - всеки бар отразява пет минути, М15 - всеки бар отразява петнадесет минути, М30 - всеки бар отразява тридесет минути, H1 - всеки бар отразява един час, H4 - всеки бар отразява четири часа, D1 - всеки бар отразява един ден, W1 - всеки бар отразява една седмица, MN - всеки бар отразява един месец. От ляво на всеки бар (Фиг. 3.1) присъства хоризонтална черта която символизира нивото при което барът е бил отворен. От дясно на всеки бар има втора хоризонтална черта която символизира нивото на което е бил затворен. Долният край на всеки бар показва най-ниското ниво постигнато в рамките на времевия интервал за който се отнася барът. Горният край на всеки бар показва най-високото ниво постигнато в рамките на времевия интервал за който се отнася барът. </text:span></text:p><text:p text:style-name="Standard"/><table:table table:name="Table51" table:style-name="Table51"><table:table-column table:style-name="Table51.A"/><text:soft-page-break/><table:table-row><table:table-cell office:value-type="string"><text:p text:style-name="Standard"><draw:frame draw:style-name="fr7" draw:name="Image1" text:anchor-type="as-char" svg:width="6.6925in" svg:height="3.0362in" draw:z-index="31"><draw:image xlink:href="Pictures/10000000000005520000026AD2F0988687A34534.png" xlink:type="simple" xlink:show="embed" xlink:actuate="onLoad"/></draw:frame></text:p></table:table-cell></table:table-row><table:table-row><table:table-cell office:value-type="string"><text:p text:style-name="Illustration"><text:span text:style-name="T108">Фиг. </text:span><text:span text:style-name="T109">3</text:span><text:span text:style-name="T108">.</text:span><text:span text:style-name="T109">1</text:span><text:span text:style-name="T107"> Котировки </text:span><text:span text:style-name="T111">EUR/USD в MetaTrader 4</text:span><text:span text:style-name="T107">.</text:span></text:p></table:table-cell></table:table-row></table:table><text:p text:style-name="Text_20_body"/><text:h text:style-name="Heading_20_2" text:outline-level="2"><text:bookmark-start text:name="__RefHeading___Toc2209_325322275"/><text:s text:c="2"/><text:span text:style-name="T61">3.1 Входна информация в разработената система</text:span><text:bookmark-end text:name="__RefHeading___Toc2209_325322275"/></text:h><text:p text:style-name="Standard"/><text:p text:style-name="P184"><text:tab/>Програмните средства на <text:span text:style-name="T62">MetaTrader 4, чрез вградения език MQL4, позволяват котировките за всяка валутна двойка да бъдат предоставени извън рамките на търговския терминал. Извеждането на информацията може да стане по няколко различни начина като най-удачен за дисертационния труд е записът на информацията в текстов файл. </text:span>Преди информацията за всеки бар от графиката с котировките да бъде изведена от търговския терминал информацията се нормализира. На графиката се определя най-високото постигнато ниво, след това най-ниското постигнато ниво и стойностите на всеки бар се нормализират в диапазона <text:span text:style-name="T292">[0.0-1.0]. Тази стъпка за нормализация се налага тъй като използваната изкуствена невронна мрежа работи със сигнали нормализирани в диапазона (0.0-1.0). Втората причина за извършването на нормализация е наличието на множество валутни двойки които имат различни номинални стойности. Примерно, отношението EUR/USD е от порядъка на 1.13510 (информация към дата 20.10.2015), докато отношението USD/JPY е от порядъка на 119.830 (информация към дата 20.10.2015). След като изкуствената невронна мрежа предложи своята прогноза се извършва обратната операция по мащабиране на изхода спрямо минималната и </text:span><text:soft-page-break/><text:span text:style-name="T292">максималната стойност на графиката. </text:span></text:p><text:p text:style-name="Standard"/><text:h text:style-name="Heading_20_2" text:outline-level="2"><text:bookmark-start text:name="__RefHeading___Toc2227_325322275"/><text:s text:c="2"/><text:span text:style-name="T63">3.2 Изчисления в разпределена среда</text:span><text:bookmark-end text:name="__RefHeading___Toc2227_325322275"/></text:h><text:p text:style-name="Standard"/><text:p text:style-name="P187"><text:tab/>По своята същност, <text:span text:style-name="T64">MetaTrader 4 е търговски терминал със софтуерна архитектура от тип „клиент-сървър“. Търгуващите клиенти (хора, наречени на професионален жаргон трейдър) получават котировките на валутните двойки от централизиран сървър, управляван от инвестиционния посредник. Тази организация позволява на компютъра, на всеки трейдър да се стартира допълнителен модул за пресмятания (модул предложен в дисертационния труд) който да извършва изчисления по обучението на </text:span><text:span text:style-name="T119">изкуствени невронни мрежи</text:span><text:span text:style-name="T64">. Предложеният изчислителен модул представлява стандартен изпълним файл който прочита котировките записани от MQL4 в текстовите файлове. Обучението на конкретна топология </text:span><text:span text:style-name="T119">изкуствени невронни мрежи</text:span><text:span text:style-name="T64"> за конкретни котировки на конкретен времеви интервал може да се разпредели между множество компютри. </text:span></text:p><text:p text:style-name="Standard"/><text:h text:style-name="P526" text:outline-level="2"><text:bookmark-start text:name="__RefHeading___Toc2955_2025852820"/><text:s text:c="2"/>3.3 Развойни средства<text:bookmark-end text:name="__RefHeading___Toc2955_2025852820"/></text:h><text:p text:style-name="Standard"/><text:p text:style-name="Standard"><text:tab/>Тъй като системата е разделена на няколко логически обособени части, за всяка част са подходящи различни развойни инструменти. </text:p><text:p text:style-name="Standard"/><text:h text:style-name="Heading_20_3" text:outline-level="3"><text:bookmark-start text:name="__RefHeading___Toc12989_1666585142"/><text:s text:c="4"/><text:span text:style-name="T67">3.3.1 Клиентско приложение</text:span><text:bookmark-end text:name="__RefHeading___Toc12989_1666585142"/></text:h><text:p text:style-name="Standard"/><text:p text:style-name="P187"><text:tab/>За разработката на програмния код се използват група инструменти за разработка. От страна на <text:span text:style-name="T65">MetaTrader 4 естественият програмен език е вградения в търговската платформа MQL4. Малък софтуерен под модул написан на MQL4 има за задача да извежда информацията за времевите редове в текстови файлове и да чете прогнозите генерирани от </text:span><text:span text:style-name="T120">изкуствените невронни мрежи</text:span><text:span text:style-name="T65">. Също така MQL4 под модулът има задача да визуализира прогнозата в подходяща форма за разчитане от крайните потребители. </text:span></text:p><text:p text:style-name="Standard"><text:soft-page-break/></text:p><text:p text:style-name="P178"><text:tab/>По отношение на разработения в този дисертационен труд софтуерен модул съществуват набор от алтернативи за избор на програмен език. Най-популярните програми езици са: <text:span text:style-name="T66">C/C++, Java, C#. За разработката е избран С/С++. Аргументите в негова полза са, че това е програмен език който не е доминиран от конкретна корпоративна фирма, има изключително добра поддръжка на различни операционни системи (MS Windows, Mac OS X, Linux). Изборът е аргументиран и с това, че езикът има добра поддръжка за супер компютри (Open MPI) както и за графични ускорители от тип GPU. Важно е да се отбележи и относителното бързодействие с което се изпълнява програмния код тъй като се свежда до асемблера на конкретната хардуерна архитектура. Не на последно място С/С++ е основният език в платформата BOINC (Berkeley Open Infrastructure for Network Computing) която е една от най-разпространените платформи за изчисления в разпределена среда. Придържайки се към концепцията за пресмятания в BOINC е възможно да се създадат собствени решения за пресмятане в разпределена среда. </text:span></text:p><text:p text:style-name="Standard"/><text:h text:style-name="P534" text:outline-level="3"><text:bookmark-start text:name="__RefHeading___Toc12991_1666585142"/><text:s text:c="4"/><text:span text:style-name="T67">3.3.2 Сървър приложение</text:span><text:bookmark-end text:name="__RefHeading___Toc12991_1666585142"/></text:h><text:p text:style-name="Standard"/><text:p text:style-name="P185"><text:tab/>Тъй като основната идея за пресмятане в разпределена среда е изчисленията основно да се извършват на клиентските машини, то за сървър е удачно да се подберат най-<text:span text:style-name="T68">олекотените</text:span> технологии и инструменти за разработка. Съобщенията разменяни между клиентските компютри и сървъра са в структуриран формат <text:span text:style-name="T69">JSON. След 1992 година един от най-широко разпространените комуникационни протоколи е HTTP и това е причината той да бъде избран в дисертационния труд. За обработката на HTTP заявки от страната на сървъра е необходимо постоянно да работи софтуерно приложение наречено уеб сървър. Най-популярните възможности за уеб сървър са Apache, Tomcat и Microsoft IIS. С цел намаляване на финансовите разходи от страна на сървъра за нуждите на дисертационния труд е избран уеб сървър Apache. Уеб сървърът Apache може да се инсталира на множество операционни системи тъй като представлява софтуер с отворен код. </text:span></text:p><text:p text:style-name="Standard"/><text:p text:style-name="P186"><text:tab/>Изборът на <text:span text:style-name="T70">Apache уеб сървър е обвързано и с избора на програмен език от страна на </text:span><text:soft-page-break/><text:span text:style-name="T70">сървъра. Най-разпространените програмни езици за сървърни приложения са PHP, JSP и ASP. В дисертационния труд е избран PHP тъй като е език с основно предназначение за разработка на сървърни скриптове. </text:span></text:p><text:p text:style-name="Standard"/><text:p text:style-name="P186"><text:tab/>Слоят за трайно съхранение на данните от страна на сървъра е представен от релационна система за управление на бази от данни<text:span text:style-name="T71">. Най-популярните възможни алтернативи са Oracle, MS SQL Server, PostgreSQL и MySQL. Изборът е MySQL който е значително по-лесна за използване в сравнение с останалите. Компанията Oracle притежава правата над MySQL (към 20.10.2015) което е своеобразна гаранция за стабилното поддържане на тази система за управление на бази от данни. </text:span></text:p><text:p text:style-name="Standard"/><text:h text:style-name="Heading_20_2" text:outline-level="2"><text:bookmark-start text:name="__RefHeading___Toc12993_1666585142"/><text:s text:c="2"/><text:span text:style-name="T72">3.4 Обектно-ориентирана структура на програмния код от страна на клиента</text:span><text:bookmark-end text:name="__RefHeading___Toc12993_1666585142"/></text:h><text:p text:style-name="Standard"/><text:p text:style-name="P192"><text:tab/>Програмният код работещ от страната на клиентските компютри представлява група класове, компилиращи се до самостоятелен изпълним файл. От класовете в паметта на компютъра се създават обекти. По време на работа вътрешното състояние на обектите се променя. Тази промяна на обектите се съхранява в енергийно независима памет под формата на релационна база данни. За целта се извършва обектно-релационно напасване. <text:s/></text:p><text:p text:style-name="P192"/><table:table table:name="Table52" table:style-name="Table52"><table:table-column table:style-name="Table52.A"/><text:soft-page-break/><table:table-row><table:table-cell office:value-type="string"><text:p text:style-name="P192"><draw:frame draw:style-name="fr6" draw:name="Image21" text:anchor-type="as-char" svg:width="6.6925in" svg:height="5.6138in" draw:z-index="21"><draw:image xlink:href="Pictures/10000201000004AA000003478F3C1418AB0055E2.png" xlink:type="simple" xlink:show="embed" xlink:actuate="onLoad"/></draw:frame></text:p></table:table-cell></table:table-row><table:table-row><table:table-cell office:value-type="string"><text:p text:style-name="P409"><text:span text:style-name="T4">Фиг. </text:span><text:span text:style-name="T6">3.2</text:span><text:span text:style-name="T106"> Диаграма на класовете.</text:span></text:p></table:table-cell></table:table-row></table:table><text:p text:style-name="P192"/><text:p text:style-name="P192"><text:tab/>За онагледяване на обектно-ориентираната структура, всеки клас е представен със <text:span text:style-name="T73">CRC карта (Class Responsibility Collaboration), а връзката между класовете с клас диаграма Фиг. 3.2.</text:span></text:p><text:p text:style-name="Standard"/><text:p text:style-name="Table"><text:span text:style-name="T4">Таб. 3.1</text:span> Отговорници и сътрудници на класа описващ изкуствена невронна мрежа.</text:p><table:table table:name="Table3" table:style-name="Table3"><table:table-column table:style-name="Table3.A"/><table:table-column table:style-name="Table3.B"/><table:table-row><table:table-cell table:style-name="Table3.A1" table:number-columns-spanned="2" office:value-type="string"><text:p text:style-name="P197">ANN</text:p></table:table-cell><table:covered-table-cell/></table:table-row><table:table-row><table:table-cell table:style-name="Table3.A2" office:value-type="string"><text:p text:style-name="P229">Отговорности</text:p></table:table-cell><table:table-cell table:style-name="Table3.B2" office:value-type="string"><text:p text:style-name="P229">Сътрудници</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table3.A3" office:value-type="string"><text:p text:style-name="P306">* Представяне на ИНМ.</text:p><text:p text:style-name="P306">* Приемане на входната за ИНМ информация.</text:p><text:p text:style-name="P306">* Извеждане на изходната за ИНМ информация.</text:p><text:p text:style-name="P306"><text:soft-page-break/>* Пресмятане на правия пас при разпространение на информацията от входа, към изхода.</text:p><text:p text:style-name="P306">* Пресмятане на обратния пас, за обучението с ОРГ.</text:p></table:table-cell><table:table-cell table:style-name="Table3.B3" office:value-type="string"><text:p text:style-name="P307">NuronsList</text:p><text:p text:style-name="P307">ActivitiesMatrix</text:p><text:p text:style-name="P307">WeightsMatrix</text:p><text:p text:style-name="P307"><text:soft-page-break/>Counter</text:p><text:p text:style-name="P307">TrainingSet</text:p><text:p text:style-name="P328">TimePeriod</text:p><text:p text:style-name="P329">ANNIO</text:p></table:table-cell></table:table-row></table:table><text:p text:style-name="Standard"/><text:p text:style-name="Standard"><text:tab/>Основният клас в програмата описва изкуствена невронна мрежа което включва вътрешно представяне на мрежата и алгоритми за обработка на постъпващата и излизащата информация. </text:p><text:p text:style-name="Standard"/><text:p text:style-name="P384"><text:span text:style-name="T4">Таб. 3.</text:span><text:span text:style-name="T18">2</text:span> Отговорници и сътрудници на класа описващ входа и изхода в изкуствената невронна мрежа.</text:p><table:table table:name="Table4" table:style-name="Table4"><table:table-column table:style-name="Table4.A"/><table:table-column table:style-name="Table4.B"/><table:table-row><table:table-cell table:style-name="Table4.A1" table:number-columns-spanned="2" office:value-type="string"><text:p text:style-name="P198">ANN<text:span text:style-name="T74">IO</text:span></text:p></table:table-cell><table:covered-table-cell/></table:table-row><table:table-row><table:table-cell table:style-name="Table4.A2" office:value-type="string"><text:p text:style-name="P230">Отговорности</text:p></table:table-cell><table:table-cell table:style-name="Table4.B2" office:value-type="string"><text:p text:style-name="P230">Сътрудници</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table4.A3" office:value-type="string"><text:p text:style-name="P261">* Служи като контейнер за вектори от входни/изходни данни към/от ИНМ.</text:p></table:table-cell><table:table-cell table:style-name="Table4.B3" office:value-type="string"><text:p text:style-name="P261">-</text:p></table:table-cell></table:table-row></table:table><text:p text:style-name="P6"/><text:p text:style-name="P6"><text:tab/>Входно-изходната информация представлява вектор от реални числа, а който е предназначен отделен базов клас.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P385"><text:span text:style-name="T4">Таб. 3.</text:span><text:span text:style-name="T19">3</text:span> Отговорници и сътрудници на класа описващ входа в изкуствената невронна мрежа.</text:p><table:table table:name="Table5" table:style-name="Table5"><table:table-column table:style-name="Table5.A"/><table:table-column table:style-name="Table5.B"/><table:table-row><table:table-cell table:style-name="Table5.A1" table:number-columns-spanned="2" office:value-type="string"><text:p text:style-name="P199">ANN<text:span text:style-name="T75">Input</text:span></text:p></table:table-cell><table:covered-table-cell/></table:table-row><table:table-row><table:table-cell table:style-name="Table5.A2" office:value-type="string"><text:p text:style-name="P231">Отговорности</text:p></table:table-cell><table:table-cell table:style-name="Table5.B2" office:value-type="string"><text:p text:style-name="P231">Сътрудници</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table5.A3" office:value-type="string"><text:p text:style-name="P262">* Контейнер за входни данни към ИНМ.</text:p></table:table-cell><table:table-cell table:style-name="Table5.B3" office:value-type="string"><text:p text:style-name="P330">ANNIO</text:p></table:table-cell></table:table-row></table:table><text:p text:style-name="P13"/><text:p text:style-name="P13"><text:tab/>Входната информация е вектор от реални числа и представлява част от входно-изходен вектор.</text:p><text:p text:style-name="P13"/><text:p text:style-name="P386"><text:span text:style-name="T4">Таб. 3.</text:span><text:span text:style-name="T20">4</text:span> Отговорници и сътрудници на класа описващ изхода от изкуствената невронна мрежа.</text:p><table:table table:name="Table6" table:style-name="Table6"><table:table-column table:style-name="Table6.A"/><table:table-column table:style-name="Table6.B"/><table:table-row><table:table-cell table:style-name="Table6.A1" table:number-columns-spanned="2" office:value-type="string"><text:p text:style-name="P200">ANN<text:span text:style-name="T76">Output</text:span></text:p></table:table-cell><table:covered-table-cell/></table:table-row><table:table-row><table:table-cell table:style-name="Table6.A2" office:value-type="string"><text:p text:style-name="P232">Отговорности</text:p></table:table-cell><table:table-cell table:style-name="Table6.B2" office:value-type="string"><text:p text:style-name="P232">Сътрудници</text:p></table:table-cell></table:table-row><text:soft-page-break/><table:table-row><table:table-cell table:style-name="Table6.A3" office:value-type="string"><text:p text:style-name="P263">* Контейнер за изходни данни от ИНМ.</text:p></table:table-cell><table:table-cell table:style-name="Table6.B3" office:value-type="string"><text:p text:style-name="P331">ANNIO</text:p></table:table-cell></table:table-row></table:table><text:p text:style-name="P41"/><text:p text:style-name="P41"><text:tab/>Изходната информация е вектор от реални числа и представлява част от входно-изходен вектор.</text:p><text:p text:style-name="P41"/><text:p text:style-name="P403"><text:span text:style-name="T4">Таб. 3.</text:span><text:span text:style-name="T21">5</text:span> Отговорници и сътрудници на класа описващ статичните връзки в изкуствената невронна мрежа.</text:p><table:table table:name="Table7" table:style-name="Table7"><table:table-column table:style-name="Table7.A"/><table:table-column table:style-name="Table7.B"/><table:table-row><table:table-cell table:style-name="Table7.A1" table:number-columns-spanned="2" office:value-type="string"><text:p text:style-name="P201">Activit<text:span text:style-name="T77">ies</text:span>Matrix</text:p></table:table-cell><table:covered-table-cell/></table:table-row><table:table-row><table:table-cell table:style-name="Table7.A2" office:value-type="string"><text:p text:style-name="P233">Отговорности</text:p></table:table-cell><table:table-cell table:style-name="Table7.B2" office:value-type="string"><text:p text:style-name="P233">Сътрудници</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table7.A3" office:value-type="string"><text:p text:style-name="P264">* Определя матрица на съседство между възлите на ИНМ. Числено представя топологията, заложена в ИНМ.</text:p></table:table-cell><table:table-cell table:style-name="Table7.B3" office:value-type="string"><text:p text:style-name="P332">GraphMatrix</text:p></table:table-cell></table:table-row></table:table><text:p text:style-name="P14"/><text:p text:style-name="P117"><text:tab/>Матрицата за свързаност на възлите в изкуствените невронни мрежи е двумерен масив от реални числа който определя матрицата на съседство. Използва се за определяне на силата на връзките в изкуствените невронни мрежи като по този начин определя топологията която мрежата има. </text:p><text:p text:style-name="P14"/><text:p text:style-name="P387"><text:span text:style-name="T4">Таб. 3.</text:span><text:span text:style-name="T22">6</text:span> Отговорници и сътрудници на класа описващ хромозомите в диференциалната еволюция.</text:p><table:table table:name="Table8" table:style-name="Table8"><table:table-column table:style-name="Table8.A"/><table:table-column table:style-name="Table8.B"/><table:table-row><table:table-cell table:style-name="Table8.A1" table:number-columns-spanned="2" office:value-type="string"><text:p text:style-name="P202">Chromosome</text:p></table:table-cell><table:covered-table-cell/></table:table-row><table:table-row><table:table-cell table:style-name="Table8.A2" office:value-type="string"><text:p text:style-name="P234">Отговорности</text:p></table:table-cell><table:table-cell table:style-name="Table8.B2" office:value-type="string"><text:p text:style-name="P234">Сътрудници</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table8.A3" office:value-type="string"><text:p text:style-name="P265">* Представя хромозома в популацията на ДЕ <text:span text:style-name="T79">(матрица с тегла на ИНМ)</text:span>.</text:p><text:p text:style-name="P265">* Носи информация за жизнеността си.</text:p><text:p text:style-name="P265">* Генерира хромозома със случайни числа. </text:p></table:table-cell><table:table-cell table:style-name="Table8.B3" office:value-type="string"><text:p text:style-name="P308">WeightsMatrix</text:p></table:table-cell></table:table-row></table:table><text:p text:style-name="P15"/><text:p text:style-name="P127"><text:tab/>Хромозомите са обекти които изграждат популацията на диференциалната еволюция. Всяка хромозома представлява комплект тегла за изкуствена невронна мрежа и има допълнителна характеристика за жизнена стойност на хромозомата. </text:p><text:p text:style-name="P15"/><text:p text:style-name="P388"><text:span text:style-name="T4">Таб. 3.</text:span><text:span text:style-name="T23">7</text:span> Отговорници и сътрудници на базов клас за осъществяване на комуникацията.</text:p><table:table table:name="Table9" table:style-name="Table9"><table:table-column table:style-name="Table9.A"/><table:table-column table:style-name="Table9.B"/><text:soft-page-break/><table:table-row><table:table-cell table:style-name="Table9.A1" table:number-columns-spanned="2" office:value-type="string"><text:p text:style-name="P203">Communicator</text:p></table:table-cell><table:covered-table-cell/></table:table-row><table:table-row><table:table-cell table:style-name="Table9.A2" office:value-type="string"><text:p text:style-name="P235">Отговорности</text:p></table:table-cell><table:table-cell table:style-name="Table9.B2" office:value-type="string"><text:p text:style-name="P235">Сътрудници</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table9.A3" office:value-type="string"><text:p text:style-name="P266">* Задава базова рамка за комуникационен интерфейс <text:span text:style-name="T80">(служи за наследяване).</text:span></text:p></table:table-cell><table:table-cell table:style-name="Table9.B3" office:value-type="string"><text:p text:style-name="P311">DE</text:p><text:p text:style-name="P311">ANN</text:p><text:p text:style-name="P309">NeuronList</text:p><text:p text:style-name="P309">WeightMatrix</text:p><text:p text:style-name="P309">ActivitiesMatrix</text:p><text:p text:style-name="P311">ModelParameters</text:p><text:p text:style-name="P333">TimePeriod</text:p><text:p text:style-name="P311">RateInfo</text:p><text:p text:style-name="P310">Counter</text:p></table:table-cell></table:table-row></table:table><text:p text:style-name="P16"/><text:p text:style-name="P16"><text:tab/>Комуникацията с отдалечения сървър е поверена на група класове които са организирани в йерархия от наследявания. Този подход е избран за да бъде възможно разширяване на системата с допълнителни комуникационни протоколи. <text:span text:style-name="T93">Communicator е базов клас наследен от по-специфични реализации на комуникационната функционалност. </text:span></text:p><text:p text:style-name="P16"/><text:p text:style-name="P389"><text:span text:style-name="T4">Таб. 3.</text:span><text:span text:style-name="T24">8</text:span> Отговорници и сътрудници на класа описващ броячите за събиране на статистика.</text:p><table:table table:name="Table10" table:style-name="Table10"><table:table-column table:style-name="Table10.A"/><table:table-column table:style-name="Table10.B"/><table:table-row><table:table-cell table:style-name="Table10.A1" table:number-columns-spanned="2" office:value-type="string"><text:p text:style-name="P204">Counter</text:p></table:table-cell><table:covered-table-cell/></table:table-row><table:table-row><table:table-cell table:style-name="Table10.A2" office:value-type="string"><text:p text:style-name="P236">Отговорности</text:p></table:table-cell><table:table-cell table:style-name="Table10.B2" office:value-type="string"><text:p text:style-name="P236">Сътрудници</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table10.A3" office:value-type="string"><text:p text:style-name="P267">* Натрупва статистическа информация за работата на системата.</text:p><text:p text:style-name="P267">* Поддържа броячи под формата на ключ-стойност двойки.</text:p></table:table-cell><table:table-cell table:style-name="Table10.B3" office:value-type="string"><text:p text:style-name="P267">-</text:p></table:table-cell></table:table-row></table:table><text:p text:style-name="P17"/><text:p text:style-name="P17"><text:tab/>За да се събира статистика по време на работа за системата е представен контейнер с броячи. На база на информацията от броячите се прави статистическа оценка за ефективността на обучението и точността на прогнозите.</text:p><text:p text:style-name="P17"/><text:p text:style-name="P390"><text:span text:style-name="T4">Таб. 3.</text:span><text:span text:style-name="T25">9</text:span> Отговорници и сътрудници на класа описващ типовете кръстосване.</text:p><table:table table:name="Table11" table:style-name="Table11"><table:table-column table:style-name="Table11.A"/><table:table-column table:style-name="Table11.B"/><table:table-row><table:table-cell table:style-name="Table11.A1" table:number-columns-spanned="2" office:value-type="string"><text:p text:style-name="P205">CrossoverType</text:p></table:table-cell><table:covered-table-cell/></table:table-row><table:table-row><table:table-cell table:style-name="Table11.A2" office:value-type="string"><text:p text:style-name="P237">Отговорности</text:p></table:table-cell><table:table-cell table:style-name="Table11.B2" office:value-type="string"><text:p text:style-name="P237">Сътрудници</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table11.A3" office:value-type="string"><text:p text:style-name="P268">* Задава различни възможности за операцията по кръстосване в ДЕ.</text:p></table:table-cell><table:table-cell table:style-name="Table11.B3" office:value-type="string"><text:p text:style-name="P268">-</text:p></table:table-cell></table:table-row></table:table><text:p text:style-name="P18"/><text:p text:style-name="P127"><text:tab/>В алгоритъма за диференциална еволюция могат да се приложат различни типове <text:soft-page-break/>кръстосване което често зависи от избраната топология на изкуствената невронна мрежа.</text:p><text:p text:style-name="P18"/><text:p text:style-name="P404"><text:span text:style-name="T4">Таб. 3.1</text:span><text:span text:style-name="T26">0</text:span> Отговорници и сътрудници на класа описващ диференциалната еволюция.</text:p><table:table table:name="Table12" table:style-name="Table12"><table:table-column table:style-name="Table12.A"/><table:table-column table:style-name="Table12.B"/><table:table-row><table:table-cell table:style-name="Table12.A1" table:number-columns-spanned="2" office:value-type="string"><text:p text:style-name="P206">DE</text:p></table:table-cell><table:covered-table-cell/></table:table-row><table:table-row><table:table-cell table:style-name="Table12.A2" office:value-type="string"><text:p text:style-name="P238">Отговорности</text:p></table:table-cell><table:table-cell table:style-name="Table12.B2" office:value-type="string"><text:p text:style-name="P238">Сътрудници</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table12.A3" office:value-type="string"><text:p text:style-name="P269">* Реализира алгоритъма на ДЕ.</text:p><text:p text:style-name="P269">* Изпълнява операцията по селекция в ДЕ.</text:p><text:p text:style-name="P269">* Изпълнява операцията за рекомбинация в ДЕ.</text:p></table:table-cell><table:table-cell table:style-name="Table12.B3" office:value-type="string"><text:p text:style-name="P315">Population</text:p><text:p text:style-name="P316">Counter</text:p><text:p text:style-name="P316">ANN</text:p><text:p text:style-name="P334">CrossoverType</text:p></table:table-cell></table:table-row></table:table><text:p text:style-name="P19"/><text:p text:style-name="P127"><text:tab/>Алгоритъмът за диференциална еволюция е реализиран в отделен клас който има отговорност да извършва селекцията, рекомбинацията и оценката на отделните индивиди в популацията.</text:p><text:p text:style-name="P19"/><text:p text:style-name="P391"><text:span text:style-name="T4">Таб. 3.1</text:span><text:span text:style-name="T27">1</text:span> Отговорници и сътрудници на класа описващ матрица на съседство.</text:p><table:table table:name="Table13" table:style-name="Table13"><table:table-column table:style-name="Table13.A"/><table:table-column table:style-name="Table13.B"/><table:table-row><table:table-cell table:style-name="Table13.A1" table:number-columns-spanned="2" office:value-type="string"><text:p text:style-name="P207">GraphMatrix</text:p></table:table-cell><table:covered-table-cell/></table:table-row><table:table-row><table:table-cell table:style-name="Table13.A2" office:value-type="string"><text:p text:style-name="P239">Отговорности</text:p></table:table-cell><table:table-cell table:style-name="Table13.B2" office:value-type="string"><text:p text:style-name="P239">Сътрудници</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table13.A3" office:value-type="string"><text:p text:style-name="P270">* Задава матрица на съседство в насочен тегловен граф <text:span text:style-name="T81">(служи за наследяване)</text:span>.</text:p></table:table-cell><table:table-cell table:style-name="Table13.B3" office:value-type="string"><text:p text:style-name="P270">-</text:p></table:table-cell></table:table-row></table:table><text:p text:style-name="P20"/><text:p text:style-name="P118"><text:tab/>Тъй като теглата и активностите на връзките в изкуствените невронни мрежи се моделират с матрица на съседство е удачно залагането на базов клас който да бъде наследен.</text:p><text:p text:style-name="P20"/><text:p text:style-name="P392"><text:span text:style-name="T4">Таб. 3.1</text:span><text:span text:style-name="T27">2</text:span> Отговорници и сътрудници на класа описващ комуникация по <text:span text:style-name="T160">HTTP протокола</text:span>.</text:p><table:table table:name="Table14" table:style-name="Table14"><table:table-column table:style-name="Table14.A"/><table:table-column table:style-name="Table14.B"/><table:table-row><table:table-cell table:style-name="Table14.A1" table:number-columns-spanned="2" office:value-type="string"><text:p text:style-name="P208">HttpCommunicator</text:p></table:table-cell><table:covered-table-cell/></table:table-row><table:table-row><table:table-cell table:style-name="Table14.A2" office:value-type="string"><text:p text:style-name="P240">Отговорности</text:p></table:table-cell><table:table-cell table:style-name="Table14.B2" office:value-type="string"><text:p text:style-name="P240">Сътрудници</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table14.A3" office:value-type="string"><text:p text:style-name="P271">* Комуникация с отдалечен уеб сървър, с базов протокол <text:span text:style-name="T82">HTTP.</text:span></text:p><text:p text:style-name="P271">* Синтактичен анализ <text:span text:style-name="T83">(парсване)</text:span> на неструктурирана информация, която се обменя към и от уеб сървъра.</text:p></table:table-cell><table:table-cell table:style-name="Table14.B3" office:value-type="string"><text:p text:style-name="P312">DE</text:p><text:p text:style-name="P312">ANN</text:p><text:p text:style-name="P312">NeuronList</text:p><text:p text:style-name="P312">WeightMatrix</text:p><text:p text:style-name="P335">Communicator</text:p><text:p text:style-name="P313">ActivitiesMatrix</text:p><text:p text:style-name="P312">ModelParameters</text:p><text:p text:style-name="P337">TimePeriod</text:p><text:p text:style-name="P312">RateInfo</text:p><text:p text:style-name="P312">Counter</text:p></table:table-cell></table:table-row></table:table><text:p text:style-name="P21"><text:soft-page-break/></text:p><text:p text:style-name="P21"><text:tab/>Един от най-разпространените комуникационни протоколи е <text:span text:style-name="T94">HTTP което е основна аргументация в системата да бъде предоставена възможност за обмен на съобщения между клиента и сървъра точно на основата на HTTP протокола.</text:span></text:p><text:p text:style-name="P21"/><text:p text:style-name="P393"><text:span text:style-name="T4">Таб. 3.1</text:span><text:span text:style-name="T27">3</text:span> Отговорници и сътрудници на класа описващ параметри за инициализация на системата.</text:p><table:table table:name="Table15" table:style-name="Table15"><table:table-column table:style-name="Table15.A"/><table:table-column table:style-name="Table15.B"/><table:table-row><table:table-cell table:style-name="Table15.A1" table:number-columns-spanned="2" office:value-type="string"><text:p text:style-name="P209">Init</text:p></table:table-cell><table:covered-table-cell/></table:table-row><table:table-row><table:table-cell table:style-name="Table15.A2" office:value-type="string"><text:p text:style-name="P241">Отговорности</text:p></table:table-cell><table:table-cell table:style-name="Table15.B2" office:value-type="string"><text:p text:style-name="P241">Сътрудници</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table15.A3" office:value-type="string"><text:p text:style-name="P272">* Зареждане на параметри за настройката на системата от инициализационен файл.</text:p></table:table-cell><table:table-cell table:style-name="Table15.B3" office:value-type="string"><text:p text:style-name="P272">-</text:p></table:table-cell></table:table-row></table:table><text:p text:style-name="P22"/><text:p text:style-name="P118"><text:tab/>При зареждане на системата без наличие на връзка към сървъра е важно параметрите за обучение на изкуствените невронни мрежи да бъдат инициализирани и поради тази причина е въведена възможността инициализацията да се извърши от инициализационен файл.</text:p><text:p text:style-name="P22"/><text:p text:style-name="P394"><text:span text:style-name="T4">Таб. 3.1</text:span><text:span text:style-name="T28">4</text:span> Отговорници и сътрудници на класа описващ <text:span text:style-name="T161">JSON базирана комуникация по HTTP комуникационен протокол</text:span>.</text:p><table:table table:name="Table16" table:style-name="Table16"><table:table-column table:style-name="Table16.A"/><table:table-column table:style-name="Table16.B"/><table:table-row><table:table-cell table:style-name="Table16.A1" table:number-columns-spanned="2" office:value-type="string"><text:p text:style-name="P210">JsonHttpCommunicator</text:p></table:table-cell><table:covered-table-cell/></table:table-row><table:table-row><table:table-cell table:style-name="Table16.A2" office:value-type="string"><text:p text:style-name="P242">Отговорности</text:p></table:table-cell><table:table-cell table:style-name="Table16.B2" office:value-type="string"><text:p text:style-name="P242">Сътрудници</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table16.A3" office:value-type="string"><text:p text:style-name="P317">* Комуникация с отдалечен уеб сървър, с базов протокол <text:span text:style-name="T82">HTTP.</text:span></text:p><text:p text:style-name="P317">* Синтактичен анализ <text:span text:style-name="T83">(парсване)</text:span> на <text:span text:style-name="T84">JSON</text:span> структурирана информация, която се обменя към и от уеб сървъра.</text:p></table:table-cell><table:table-cell table:style-name="Table16.B3" office:value-type="string"><text:p text:style-name="P314">DE</text:p><text:p text:style-name="P314">ANN</text:p><text:p text:style-name="P314">NeuronList</text:p><text:p text:style-name="P314">WeightMatrix</text:p><text:p text:style-name="P336">Communicator</text:p><text:p text:style-name="P314">ActivitiesMatrix</text:p><text:p text:style-name="P314">ModelParameters</text:p><text:p text:style-name="P338">TimePeriod</text:p><text:p text:style-name="P314">RateInfo</text:p><text:p text:style-name="P314">Counter</text:p></table:table-cell></table:table-row></table:table><text:p text:style-name="P23"/><text:p text:style-name="P23"><text:tab/>При комуникация по протокола <text:span text:style-name="T95">HTTP е възможно информацията да бъде предавана в текстов вид без да бъде структурирана но много по-ефективно и защитено от грешки е, ако информацията бъде пакетирана в JSON съобщения. В този аспект е добавена възможност за </text:span><text:soft-page-break/><text:span text:style-name="T95">комуникация между клиента и сървъра на база HTTP+JSON.</text:span></text:p><text:p text:style-name="P23"/><text:p text:style-name="P395"><text:span text:style-name="T4">Таб. 3.1</text:span><text:span text:style-name="T29">5</text:span> Отговорници и сътрудници на класа описващ параметрите на модела.</text:p><table:table table:name="Table17" table:style-name="Table17"><table:table-column table:style-name="Table17.A"/><table:table-column table:style-name="Table17.B"/><table:table-row><table:table-cell table:style-name="Table17.A1" table:number-columns-spanned="2" office:value-type="string"><text:p text:style-name="P211">ModelParameters</text:p></table:table-cell><table:covered-table-cell/></table:table-row><table:table-row><table:table-cell table:style-name="Table17.A2" office:value-type="string"><text:p text:style-name="P243">Отговорности</text:p></table:table-cell><table:table-cell table:style-name="Table17.B2" office:value-type="string"><text:p text:style-name="P243">Сътрудници</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table17.A3" office:value-type="string"><text:p text:style-name="P273">* Задава стойности на параметрите, които има финансовият ред, който ще бъде прогнозиран, както и параметрите на ИНМ/ДЕ, използвани при прогнозирането.</text:p></table:table-cell><table:table-cell table:style-name="Table17.B3" office:value-type="string"><text:p text:style-name="P339">TimePeriod</text:p></table:table-cell></table:table-row></table:table><text:p text:style-name="P24"/><text:p text:style-name="P24"><text:tab/>Параметрите на всеки модел <text:span text:style-name="T96">(ИНМ+ДЕ+ВР) се обработват от помощен клас, така че методите да получават само един обект, а не серия от параметри. </text:span></text:p><text:p text:style-name="P24"/><text:p text:style-name="P396"><text:span text:style-name="T4">Таб. 3.1</text:span><text:span text:style-name="T30">6</text:span> Отговорници и сътрудници на класа описващ неврон в изкуствената невронна мрежа.</text:p><table:table table:name="Table18" table:style-name="Table18"><table:table-column table:style-name="Table18.A"/><table:table-column table:style-name="Table18.B"/><table:table-row><table:table-cell table:style-name="Table18.A1" table:number-columns-spanned="2" office:value-type="string"><text:p text:style-name="P212">Neuron</text:p></table:table-cell><table:covered-table-cell/></table:table-row><table:table-row><table:table-cell table:style-name="Table18.A2" office:value-type="string"><text:p text:style-name="P244">Отговорности</text:p></table:table-cell><table:table-cell table:style-name="Table18.B2" office:value-type="string"><text:p text:style-name="P244">Сътрудници</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table18.A3" office:value-type="string"><text:p text:style-name="P274">* Представя невроните в ИНМ.</text:p><text:p text:style-name="P274">* Поддържа различни типове неврони.</text:p><text:p text:style-name="P274">* Поддържа стойност на изходния сигнал.</text:p><text:p text:style-name="P274">* Поддържа стойност на грешката, за неврона, при обратния пас от обучението на ИНМ с ОРГ.</text:p></table:table-cell><table:table-cell table:style-name="Table18.B3" office:value-type="string"><text:p text:style-name="P318">NeuronType</text:p></table:table-cell></table:table-row></table:table><text:p text:style-name="P25"/><text:p text:style-name="P25"><text:tab/>Отделен клас моделира поведението на невроните. Методите на този клас имат задача да извършват пресмятанията и да запазват вътрешното състояние на неврона.</text:p><text:p text:style-name="P25"/><text:p text:style-name="P397"><text:span text:style-name="T4">Таб. 3.1</text:span><text:span text:style-name="T31">7</text:span> Отговорници и сътрудници на класа описващ типове неврони в изкуствената невронна мрежа.</text:p><table:table table:name="Table19" table:style-name="Table19"><table:table-column table:style-name="Table19.A"/><table:table-column table:style-name="Table19.B"/><table:table-row><table:table-cell table:style-name="Table19.A1" table:number-columns-spanned="2" office:value-type="string"><text:p text:style-name="P213">NeuronType</text:p></table:table-cell><table:covered-table-cell/></table:table-row><table:table-row><table:table-cell table:style-name="Table19.A2" office:value-type="string"><text:p text:style-name="P245">Отговорности</text:p></table:table-cell><table:table-cell table:style-name="Table19.B2" office:value-type="string"><text:p text:style-name="P245">Сътрудници</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table19.A3" office:value-type="string"><text:p text:style-name="P275">* Задава различните възможности за типове неврони. </text:p></table:table-cell><table:table-cell table:style-name="Table19.B3" office:value-type="string"><text:p text:style-name="P275">-</text:p></table:table-cell></table:table-row></table:table><text:p text:style-name="P26"/><text:p text:style-name="P26"><text:tab/>Основните типове неврони биват - обикновени, входящи, изходящ и <text:span text:style-name="T261">bias (отместващи)</text:span>. Според своя тип всеки неврон изпълнява различна роля в мрежата. Възможно <text:soft-page-break/>е неврони да съчетават повече от една функция <text:span text:style-name="T97">(примерно, неврон който е входен, а в същото време и изходен за мрежата).</text:span></text:p><text:p text:style-name="P26"/><text:p text:style-name="P398"><text:span text:style-name="T4">Таб. 3.</text:span><text:span text:style-name="T32">18</text:span> Отговорници и сътрудници на класа описващ списък от неврони.</text:p><table:table table:name="Table20" table:style-name="Table20"><table:table-column table:style-name="Table20.A"/><table:table-column table:style-name="Table20.B"/><table:table-row><table:table-cell table:style-name="Table20.A1" table:number-columns-spanned="2" office:value-type="string"><text:p text:style-name="P214">NeuronsList</text:p></table:table-cell><table:covered-table-cell/></table:table-row><table:table-row><table:table-cell table:style-name="Table20.A2" office:value-type="string"><text:p text:style-name="P246">Отговорности</text:p></table:table-cell><table:table-cell table:style-name="Table20.B2" office:value-type="string"><text:p text:style-name="P246">Сътрудници</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table20.A3" office:value-type="string"><text:p text:style-name="P276">* Поддържа списък с всички неврони в ИНМ.</text:p><text:p text:style-name="P276">* Поддържа информация за броя неврони от различен тип.</text:p></table:table-cell><table:table-cell table:style-name="Table20.B3" office:value-type="string"><text:p text:style-name="P319">Neuron</text:p></table:table-cell></table:table-row></table:table><text:p text:style-name="P27"/><text:p text:style-name="P27"><text:tab/>Всяка мрежа е представена неврони и тегла за връзките между тях. В паметта на компютъра се използва списък от неврони като контейнер за обектите от тип неврон.</text:p><text:p text:style-name="P27"/><text:p text:style-name="P399"><text:span text:style-name="T4">Таб. 3.</text:span><text:span text:style-name="T32">19</text:span> Отговорници и сътрудници на класа описващ популацията в диференциалната еволюция.</text:p><table:table table:name="Table21" table:style-name="Table21"><table:table-column table:style-name="Table21.A"/><table:table-column table:style-name="Table21.B"/><table:table-row><table:table-cell table:style-name="Table21.A1" table:number-columns-spanned="2" office:value-type="string"><text:p text:style-name="P215">Population</text:p></table:table-cell><table:covered-table-cell/></table:table-row><table:table-row><table:table-cell table:style-name="Table21.A2" office:value-type="string"><text:p text:style-name="P247">Отговорности</text:p></table:table-cell><table:table-cell table:style-name="Table21.B2" office:value-type="string"><text:p text:style-name="P247">Сътрудници</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table21.A3" office:value-type="string"><text:p text:style-name="P277">* Поддържа популацията за ДЕ.</text:p><text:p text:style-name="P277">* Инициализира популация със случайни числа.</text:p><text:p text:style-name="P277">* Поддържа информация за най-добрия индивид в популацията. </text:p></table:table-cell><table:table-cell table:style-name="Table21.B3" office:value-type="string"><text:p text:style-name="P320">Chromosome</text:p></table:table-cell></table:table-row></table:table><text:p text:style-name="P28"/><text:p text:style-name="P28"><text:tab/>Популацията е представена в паметта на компютъра като контейнер от обекти тип хромозома. </text:p><text:p text:style-name="P28"/><text:p text:style-name="P398"><text:span text:style-name="T4">Таб. 3.</text:span><text:span text:style-name="T32">20</text:span> Отговорници и сътрудници на класа описващ информацията за котировките.</text:p><table:table table:name="Table22" table:style-name="Table22"><table:table-column table:style-name="Table22.A"/><table:table-column table:style-name="Table22.B"/><table:table-row><table:table-cell table:style-name="Table22.A1" table:number-columns-spanned="2" office:value-type="string"><text:p text:style-name="P216">RateInfo</text:p></table:table-cell><table:covered-table-cell/></table:table-row><table:table-row><table:table-cell table:style-name="Table22.A2" office:value-type="string"><text:p text:style-name="P248">Отговорности</text:p></table:table-cell><table:table-cell table:style-name="Table22.B2" office:value-type="string"><text:p text:style-name="P248">Сътрудници</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table22.A3" office:value-type="string"><text:p text:style-name="P278">* Съхранява информация за един бар от графиката на времевия ред <text:span text:style-name="T85">(нива на - отваряне, най-ниска постигната, най-висока постигната, затваряне, търгуван обем, момент от времето).</text:span></text:p></table:table-cell><table:table-cell table:style-name="Table22.B3" office:value-type="string"><text:p text:style-name="P278">-</text:p></table:table-cell></table:table-row></table:table><text:p text:style-name="P29"/><text:p text:style-name="P29"><text:tab/>Времевия ред за стойността на валутните двойки се представя под формата на графика <text:soft-page-break/>с барове. Всеки бар носи информация за котировката на валутите в конкретен момент от времето. </text:p><text:p text:style-name="P29"/><text:p text:style-name="P398"><text:span text:style-name="T4">Таб. 3.</text:span><text:span text:style-name="T32">21</text:span> Отговорници и сътрудници на класа описващ времевите периоди на котировките.</text:p><table:table table:name="Table23" table:style-name="Table23"><table:table-column table:style-name="Table23.A"/><table:table-column table:style-name="Table23.B"/><table:table-row><table:table-cell table:style-name="Table23.A1" table:number-columns-spanned="2" office:value-type="string"><text:p text:style-name="P217">TimePeriod</text:p></table:table-cell><table:covered-table-cell/></table:table-row><table:table-row><table:table-cell table:style-name="Table23.A2" office:value-type="string"><text:p text:style-name="P249">Отговорности</text:p></table:table-cell><table:table-cell table:style-name="Table23.B2" office:value-type="string"><text:p text:style-name="P249">Сътрудници</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table23.A3" office:value-type="string"><text:p text:style-name="P279">* Задава възможните времеви период за които има събрани исторически данни <text:span text:style-name="T86">(съответстват на брой минути)</text:span>.</text:p></table:table-cell><table:table-cell table:style-name="Table23.B3" office:value-type="string"><text:p text:style-name="P279">-</text:p></table:table-cell></table:table-row></table:table><text:p text:style-name="P30"/><text:p text:style-name="P42"><text:tab/>В програмата <text:span text:style-name="T98">MetaTrader4 времевите редове са организирани на равни интервали от време. Програмата дава възможност финансовата информация да бъде представяна във времеви редове с различен период, между отделните отчитания. Времевите периоди са както следва: M1 (една минута), M5 (пет минути), M15 (петнадесет минути), M30 (тридесет минути), H1 (един час), H4 (четири часа), D1 (един ден), W1 (една седмица), MN1 (един месец).</text:span></text:p><text:p text:style-name="P30"/><text:p text:style-name="P398"><text:span text:style-name="T4">Таб. 3.</text:span><text:span text:style-name="T32">22</text:span> Отговорници и сътрудници на класа описващ процеса на обучение.</text:p><table:table table:name="Table24" table:style-name="Table24"><table:table-column table:style-name="Table24.A"/><table:table-column table:style-name="Table24.B"/><table:table-row><table:table-cell table:style-name="Table24.A1" table:number-columns-spanned="2" office:value-type="string"><text:p text:style-name="P218">Trainer</text:p></table:table-cell><table:covered-table-cell/></table:table-row><table:table-row><table:table-cell table:style-name="Table24.A2" office:value-type="string"><text:p text:style-name="P250">Отговорности</text:p></table:table-cell><table:table-cell table:style-name="Table24.B2" office:value-type="string"><text:p text:style-name="P250">Сътрудници</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table24.A3" office:value-type="string"><text:p text:style-name="P280">* Извършва процеса по обучение на ИНМ.</text:p><text:p text:style-name="P280">* Използва се за извличане на прогнози.</text:p><text:p text:style-name="P280">* Обновява обучаващото множество.</text:p><text:p text:style-name="P280">* Докладва за най-доброто намерено решение.</text:p></table:table-cell><table:table-cell table:style-name="Table24.B3" office:value-type="string"><text:p text:style-name="P321">TimePeriod</text:p><text:p text:style-name="P321">Counter</text:p><text:p text:style-name="P321">ANN</text:p><text:p text:style-name="P321">DE</text:p><text:p text:style-name="P321">TrainingSet</text:p><text:p text:style-name="P321">JsonHttpCommunicator</text:p></table:table-cell></table:table-row></table:table><text:p text:style-name="P31"/><text:p text:style-name="P127"><text:tab/>Множеството от обекти за изкуствена невронна мрежа, диференциалната еволюция, обучаващо множество, комуникационен обект и броячи се помества в обект от класа за трениране на мрежата. Задачата на този клас е да служи като контейнер от високо ниво за останалите обекти. </text:p><text:p text:style-name="P31"/><text:p text:style-name="P398"><text:span text:style-name="T4">Таб. 3.</text:span><text:span text:style-name="T32">23</text:span> Отговорници и сътрудници на класа описващ тренировъчните примери.</text:p><table:table table:name="Table25" table:style-name="Table25"><table:table-column table:style-name="Table25.A"/><table:table-column table:style-name="Table25.B"/><text:soft-page-break/><table:table-row><table:table-cell table:style-name="Table25.A1" table:number-columns-spanned="2" office:value-type="string"><text:p text:style-name="P219">TrainingExample</text:p></table:table-cell><table:covered-table-cell/></table:table-row><table:table-row><table:table-cell table:style-name="Table25.A2" office:value-type="string"><text:p text:style-name="P251">Отговорности</text:p></table:table-cell><table:table-cell table:style-name="Table25.B2" office:value-type="string"><text:p text:style-name="P251">Сътрудници</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table25.A3" office:value-type="string"><text:p text:style-name="P281">* Представя тренировъчните примери за ИНМ, които включват вход, изход и очакван изход.</text:p></table:table-cell><table:table-cell table:style-name="Table25.B3" office:value-type="string"><text:p text:style-name="P322">ANNIO</text:p></table:table-cell></table:table-row></table:table><text:p text:style-name="P32"/><text:p text:style-name="P119"><text:tab/>Тренировъчнят пример е стойност на невроните, както следва: входни сигнали в изкуствени невронни мрежи, изходни сигнали от изкуствени невронни мрежи и очаквани изходни сигнали от изкуствени невронни мрежи.</text:p><text:p text:style-name="P32"/><text:p text:style-name="P398"><text:span text:style-name="T4">Таб. 3.</text:span><text:span text:style-name="T32">24</text:span> Отговорници и сътрудници на класа описващ тренировъчното множество.</text:p><table:table table:name="Table26" table:style-name="Table26"><table:table-column table:style-name="Table26.A"/><table:table-column table:style-name="Table26.B"/><table:table-row><table:table-cell table:style-name="Table26.A1" table:number-columns-spanned="2" office:value-type="string"><text:p text:style-name="P220">TrainingSet</text:p></table:table-cell><table:covered-table-cell/></table:table-row><table:table-row><table:table-cell table:style-name="Table26.A2" office:value-type="string"><text:p text:style-name="P252">Отговорности</text:p></table:table-cell><table:table-cell table:style-name="Table26.B2" office:value-type="string"><text:p text:style-name="P252">Сътрудници</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table26.A3" office:value-type="string"><text:p text:style-name="P282">* Съдържа набор от тренировъчни примери.</text:p><text:p text:style-name="P282">* Трансформира информацията от външната среда във вид подходящ за въвеждане в и извеждане от ИНМ.</text:p></table:table-cell><table:table-cell table:style-name="Table26.B3" office:value-type="string"><text:p text:style-name="P323">RateInfo</text:p><text:p text:style-name="P323">TrainingExample</text:p><text:p text:style-name="P324">ANNIO</text:p><text:p text:style-name="P325">TrainingSet</text:p></table:table-cell></table:table-row></table:table><text:p text:style-name="P43"/><text:p text:style-name="P120"><text:tab/>Обучаващото множество е последователност от три паралелни масива както следва: вход в изкуствени невронни мрежи, изход на изкуствени невронни мрежи и очаквана стойност на изхода на изкуствени невронни мрежи.</text:p><text:p text:style-name="P43"/><text:p text:style-name="P398"><text:span text:style-name="T4">Таб. 3.</text:span><text:span text:style-name="T32">25</text:span> Отговорници и сътрудници на класа описващ теглата в изкуствената невронна мрежа.</text:p><table:table table:name="Table27" table:style-name="Table27"><table:table-column table:style-name="Table27.A"/><table:table-column table:style-name="Table27.B"/><table:table-row><table:table-cell table:style-name="Table27.A1" table:number-columns-spanned="2" office:value-type="string"><text:p text:style-name="P221">WeightsMatrix</text:p></table:table-cell><table:covered-table-cell/></table:table-row><table:table-row><table:table-cell table:style-name="Table27.A2" office:value-type="string"><text:p text:style-name="P253">Отговорности</text:p></table:table-cell><table:table-cell table:style-name="Table27.B2" office:value-type="string"><text:p text:style-name="P253">Сътрудници</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table27.A3" office:value-type="string"><text:p text:style-name="P326">* Определя матрица на съседство между възлите на ИНМ. Числено представя обучените тегла на ИНМ.</text:p></table:table-cell><table:table-cell table:style-name="Table27.B3" office:value-type="string"><text:p text:style-name="P327">GraphMatrix</text:p></table:table-cell></table:table-row></table:table><text:p text:style-name="P44"/><text:p text:style-name="P121"><text:tab/>Матрицата за теглата на връзките в изкуствена невронна мрежа е двумерен масив от реални числа който определя матрицата на съседство. Използва се за определяне на силата на сигналите между невроните в изкуствени невронни мрежи като по този начин определя знанието което мрежата има. </text:p><text:p text:style-name="P33"/><text:h text:style-name="Heading_20_2" text:outline-level="2"><text:bookmark-start text:name="__RefHeading___Toc12995_1666585142"/><text:soft-page-break/><text:s text:c="2"/>3.5 Релационен модел за съхранение на данните от страна на сървъра<text:bookmark-end text:name="__RefHeading___Toc12995_1666585142"/></text:h><text:p text:style-name="Standard"/><text:p text:style-name="P193"><text:tab/>Съхранението на информацията в системата се извършва на централизирания сървър с помощта на система за управление на бази от данни, в която данните са моделирани под формата на същности и релации, изобразени на Фиг. <text:span text:style-name="T275">3.3 като диаграма на базата данни</text:span>. </text:p><text:p text:style-name="P193"/><table:table table:name="Table53" table:style-name="Table53"><table:table-column table:style-name="Table53.A"/><table:table-row><table:table-cell office:value-type="string"><text:p text:style-name="P193"><draw:frame draw:style-name="fr7" draw:name="Image22" text:anchor-type="as-char" svg:width="6.6925in" svg:height="3.0362in" draw:z-index="22"><draw:image xlink:href="Pictures/10000201000004440000028ED47D725AD44816BA.png" xlink:type="simple" xlink:show="embed" xlink:actuate="onLoad"/></draw:frame></text:p></table:table-cell></table:table-row><table:table-row><table:table-cell office:value-type="string"><text:p text:style-name="P410"><text:span text:style-name="T108">Фиг. </text:span><text:span text:style-name="T109">3</text:span><text:span text:style-name="T108">.</text:span><text:span text:style-name="T110">3</text:span><text:span text:style-name="T107"> </text:span><text:span text:style-name="T124">Диаграма на базата данни.</text:span><text:span text:style-name="T107">.</text:span></text:p></table:table-cell></table:table-row></table:table><text:p text:style-name="P193"/><text:p text:style-name="P193"><text:tab/>В термините на системите за управление на бази от данни същностите и релациите се представят под формата на таблици в базата данни, както следва:</text:p><text:p text:style-name="Standard"/><text:p text:style-name="P398"><text:span text:style-name="T4">Таб. 3.</text:span><text:span text:style-name="T32">26</text:span> Таблица в базата данни, описваща конкретна изкуствена неверонна мрежа.</text:p><table:table table:name="Table28" table:style-name="Table28"><table:table-column table:style-name="Table28.A"/><table:table-column table:style-name="Table28.B"/><table:table-row><table:table-cell table:style-name="Table28.A1" table:number-columns-spanned="2" office:value-type="string"><text:p text:style-name="P222">ann</text:p></table:table-cell><table:covered-table-cell/></table:table-row><table:table-row><table:table-cell table:style-name="Table28.A2" office:value-type="string"><text:p text:style-name="P254">Атрибути</text:p></table:table-cell><table:table-cell table:style-name="Table28.B2" office:value-type="string"><text:p text:style-name="P254">Връзки</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table28.A7" office:value-type="string"><text:p text:style-name="P284">id</text:p></table:table-cell><table:table-cell table:style-name="Table28.B3" office:value-type="string"><text:p text:style-name="P283"/></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table28.A7" office:value-type="string"><text:p text:style-name="P284">ann_kind_id</text:p></table:table-cell><table:table-cell table:style-name="Table28.B7" office:value-type="string"><text:p text:style-name="P284">ann_kind.<text:span text:style-name="T78">id</text:span></text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table28.A7" office:value-type="string"><text:p text:style-name="P284">fitness</text:p></table:table-cell><table:table-cell table:style-name="Table28.B7" office:value-type="string"><text:p text:style-name="P283"/></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table28.A7" office:value-type="string"><text:p text:style-name="P284">weights</text:p></table:table-cell><table:table-cell table:style-name="Table28.B7" office:value-type="string"><text:p text:style-name="P283"/></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table28.A7" office:value-type="string"><text:p text:style-name="P285">happened</text:p></table:table-cell><table:table-cell table:style-name="Table28.B7" office:value-type="string"><text:p text:style-name="P283"/></table:table-cell></table:table-row></table:table><text:p text:style-name="Standard"><text:soft-page-break/></text:p><text:p text:style-name="P191"><text:tab/>Всяка изкуствена невронна мрежа е описана с матрица на съседство <text:span text:style-name="T87">(полето wights)</text:span> която съдържа теглата на връзките в мрежата. Различните мрежи имат различен комплект тегла и съответно биха дали различна точност при прогнозирането. Общата допусната грешка при прогнозирането се използва за жизнена стойност в алгоритъма за <text:span text:style-name="T107">диференциална еволюция</text:span> <text:span text:style-name="T87">(полето fitness). Различните </text:span><text:span text:style-name="T121">изкуствени невронни мрежи</text:span><text:span text:style-name="T87"> се характеризират с тип на мрежата и това се отразява с помощна таблица връзката към която е полето ann_kind_id.</text:span></text:p><text:p text:style-name="Standard"/><text:p text:style-name="P399"><text:span text:style-name="T4">Таб. 3.</text:span><text:span text:style-name="T32">27</text:span> Таблица в базата данни, описваща типовете изкуствена неверонна мрежа.</text:p><table:table table:name="Table29" table:style-name="Table29"><table:table-column table:style-name="Table29.A"/><table:table-column table:style-name="Table29.B"/><table:table-row><table:table-cell table:style-name="Table29.A1" table:number-columns-spanned="2" office:value-type="string"><text:p text:style-name="P223">ann_kind</text:p></table:table-cell><table:covered-table-cell/></table:table-row><table:table-row><table:table-cell table:style-name="Table29.A2" office:value-type="string"><text:p text:style-name="P287">Атрибути</text:p></table:table-cell><table:table-cell table:style-name="Table29.B2" office:value-type="string"><text:p text:style-name="P255">Връзки</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table29.A8" office:value-type="string"><text:p text:style-name="P298">id</text:p></table:table-cell><table:table-cell table:style-name="Table29.B3" office:value-type="string"><text:p text:style-name="P286"/></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table29.A8" office:value-type="string"><text:p text:style-name="P299">currency_pairs_id</text:p></table:table-cell><table:table-cell table:style-name="Table29.B8" office:value-type="string"><text:p text:style-name="P299">currency_paris.id</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table29.A8" office:value-type="string"><text:p text:style-name="P299">number_of_neurons</text:p></table:table-cell><table:table-cell table:style-name="Table29.B8" office:value-type="string"><text:p text:style-name="P286"/></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table29.A8" office:value-type="string"><text:p text:style-name="P299">flags</text:p></table:table-cell><table:table-cell table:style-name="Table29.B8" office:value-type="string"><text:p text:style-name="P286"/></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table29.A8" office:value-type="string"><text:p text:style-name="P299">activities</text:p></table:table-cell><table:table-cell table:style-name="Table29.B8" office:value-type="string"><text:p text:style-name="P286"/></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table29.A8" office:value-type="string"><text:p text:style-name="P299">happened</text:p></table:table-cell><table:table-cell table:style-name="Table29.B8" office:value-type="string"><text:p text:style-name="P286"/></table:table-cell></table:table-row></table:table><text:p text:style-name="P34"/><text:p text:style-name="P121"><text:tab/>Видовете изкуствени невронни мрежи основно се описват с топология на възлите и силата на връзките между отделните възли <text:span text:style-name="T88">(полето activities). Полето activiteis също представлява матрица на съседство и определя дали между два възела (включително и примките) съществува връзка и колко силна е тази връзка. Всеки вид изкуствена невронна мрежа има определен брой неврони (полето number_of_neurons) и информация какъв тип е всеки от невроните (полето flags). Тъй като не се търсят връзки между отделни валутни двойки, всеки вид изкуствена невронна мрежа се отнася само за конкретна валутна двойка и конкретен период на времевия ред (външна връзка през полето currency_pairs_id).</text:span></text:p><text:p text:style-name="P34"/><text:p text:style-name="P398"><text:span text:style-name="T4">Таб. 3.</text:span><text:span text:style-name="T32">28</text:span> Таблица в базата данни, описваща валутните двойки.</text:p><table:table table:name="Table30" table:style-name="Table30"><table:table-column table:style-name="Table30.A"/><table:table-column table:style-name="Table30.B"/><table:table-row><table:table-cell table:style-name="Table30.A1" table:number-columns-spanned="2" office:value-type="string"><text:p text:style-name="P224">currency_pairs</text:p></table:table-cell><table:covered-table-cell/></table:table-row><table:table-row><table:table-cell table:style-name="Table30.A2" office:value-type="string"><text:p text:style-name="P288">Атрибути</text:p></table:table-cell><table:table-cell table:style-name="Table30.B2" office:value-type="string"><text:p text:style-name="P256">Връзки</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table30.A9" office:value-type="string"><text:p text:style-name="P300">id</text:p></table:table-cell><table:table-cell table:style-name="Table30.B3" office:value-type="string"><text:p text:style-name="P293"/></table:table-cell></table:table-row><text:soft-page-break/><table:table-row><table:table-cell table:style-name="Table30.A9" office:value-type="string"><text:p text:style-name="P300">symbol</text:p></table:table-cell><table:table-cell table:style-name="Table30.B9" office:value-type="string"><text:p text:style-name="P293"/></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table30.A9" office:value-type="string"><text:p text:style-name="P300">period_id</text:p></table:table-cell><table:table-cell table:style-name="Table30.B9" office:value-type="string"><text:p text:style-name="P300">time_periods.id</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table30.A9" office:value-type="string"><text:p text:style-name="P300">offset</text:p></table:table-cell><table:table-cell table:style-name="Table30.B9" office:value-type="string"><text:p text:style-name="P293"/></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table30.A9" office:value-type="string"><text:p text:style-name="P300">scale</text:p></table:table-cell><table:table-cell table:style-name="Table30.B9" office:value-type="string"><text:p text:style-name="P293"/></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table30.A9" office:value-type="string"><text:p text:style-name="P300">description</text:p></table:table-cell><table:table-cell table:style-name="Table30.B9" office:value-type="string"><text:p text:style-name="P293"/></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table30.A9" office:value-type="string"><text:p text:style-name="P300">happened</text:p></table:table-cell><table:table-cell table:style-name="Table30.B9" office:value-type="string"><text:p text:style-name="P293"/></table:table-cell></table:table-row></table:table><text:p text:style-name="P35"/><text:p text:style-name="P35"><text:tab/>Всеки времеви ред в системата отразява информацията за една валутна двойка. Валутните двойки се характеризират със символно название <text:span text:style-name="T89">(примерно EURUSD, полето symbol). Втората характеристика на времевия ред е периодът (външна връзка през полето period_id).</text:span></text:p><text:p text:style-name="P35"/><text:p text:style-name="P398"><text:span text:style-name="T4">Таб. 3.</text:span><text:span text:style-name="T32">29</text:span> Таблица в базата данни, описваща координатите на невроните при визуализация.</text:p><table:table table:name="Table31" table:style-name="Table31"><table:table-column table:style-name="Table31.A"/><table:table-column table:style-name="Table31.B"/><table:table-row><table:table-cell table:style-name="Table31.A1" table:number-columns-spanned="2" office:value-type="string"><text:p text:style-name="P225">neurons_coordinates</text:p></table:table-cell><table:covered-table-cell/></table:table-row><table:table-row><table:table-cell table:style-name="Table31.A2" office:value-type="string"><text:p text:style-name="P289">Атрибути</text:p></table:table-cell><table:table-cell table:style-name="Table31.B2" office:value-type="string"><text:p text:style-name="P257">Връзки</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table31.A6" office:value-type="string"><text:p text:style-name="P301">id</text:p></table:table-cell><table:table-cell table:style-name="Table31.B3" office:value-type="string"><text:p text:style-name="P294"/></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table31.A6" office:value-type="string"><text:p text:style-name="P301">ann_id</text:p></table:table-cell><table:table-cell table:style-name="Table31.B6" office:value-type="string"><text:p text:style-name="P301">ann.id</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table31.A6" office:value-type="string"><text:p text:style-name="P301">coordinates</text:p></table:table-cell><table:table-cell table:style-name="Table31.B6" office:value-type="string"><text:p text:style-name="P294"/></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table31.A6" office:value-type="string"><text:p text:style-name="P301">happened</text:p></table:table-cell><table:table-cell table:style-name="Table31.B6" office:value-type="string"><text:p text:style-name="P294"/></table:table-cell></table:table-row></table:table><text:p text:style-name="P36"/><text:p text:style-name="P36"><text:tab/>За целите на системната администрация, всяка изкуствена невронна мрежа се визуализира в административен панел. На практика се изобразяват невроните като възли в граф и теглата като ребра на графа. За да се осъществи визуализацията всеки неврон се описва с координати в двумерната равнина <text:span text:style-name="T90">(полето coordinates). </text:span></text:p><text:p text:style-name="P36"/><text:p text:style-name="P400"><text:span text:style-name="T4">Таб. 3.</text:span><text:span text:style-name="T32">30</text:span> Таблица в базата данни, описваща времевите периоди на котировките.</text:p><table:table table:name="Table32" table:style-name="Table32"><table:table-column table:style-name="Table32.A"/><table:table-column table:style-name="Table32.B"/><table:table-row><table:table-cell table:style-name="Table32.A1" table:number-columns-spanned="2" office:value-type="string"><text:p text:style-name="P226">time_periods</text:p></table:table-cell><table:covered-table-cell/></table:table-row><table:table-row><table:table-cell table:style-name="Table32.A2" office:value-type="string"><text:p text:style-name="P290">Атрибути</text:p></table:table-cell><table:table-cell table:style-name="Table32.B2" office:value-type="string"><text:p text:style-name="P258">Връзки</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table32.A5" office:value-type="string"><text:p text:style-name="P303">id</text:p></table:table-cell><table:table-cell table:style-name="Table32.B3" office:value-type="string"><text:p text:style-name="P295"/></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table32.A5" office:value-type="string"><text:p text:style-name="P302">minutes</text:p></table:table-cell><table:table-cell table:style-name="Table32.B5" office:value-type="string"><text:p text:style-name="P295"/></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table32.A5" office:value-type="string"><text:p text:style-name="P302">period</text:p></table:table-cell><table:table-cell table:style-name="Table32.B5" office:value-type="string"><text:p text:style-name="P295"/></table:table-cell></table:table-row></table:table><text:p text:style-name="P37"/><text:p text:style-name="P37"><text:tab/>В програмата <text:span text:style-name="T91">MetaTrader4 са заложени няколко стандартни времеви интервала за </text:span><text:soft-page-break/><text:span text:style-name="T91">времевите редове. Интервалите се описват със символно название (полето period) и брой минути на които отговаря интервалът (полето minutes).</text:span></text:p><text:p text:style-name="P37"/><text:p text:style-name="P400"><text:span text:style-name="T4">Таб. 3.</text:span><text:span text:style-name="T32">31</text:span> Таблица в базата данни, описваща параметрите на обучението.</text:p><table:table table:name="Table33" table:style-name="Table33"><table:table-column table:style-name="Table33.A"/><table:table-column table:style-name="Table33.B"/><table:table-row><table:table-cell table:style-name="Table33.A1" table:number-columns-spanned="2" office:value-type="string"><text:p text:style-name="P227">training_options</text:p></table:table-cell><table:covered-table-cell/></table:table-row><table:table-row><table:table-cell table:style-name="Table33.A2" office:value-type="string"><text:p text:style-name="P291">Атрибути</text:p></table:table-cell><table:table-cell table:style-name="Table33.B2" office:value-type="string"><text:p text:style-name="P259">Връзки</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table33.A7" office:value-type="string"><text:p text:style-name="P304">id</text:p></table:table-cell><table:table-cell table:style-name="Table33.B3" office:value-type="string"><text:p text:style-name="P296"/></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table33.A7" office:value-type="string"><text:p text:style-name="P304">ann_id</text:p></table:table-cell><table:table-cell table:style-name="Table33.B7" office:value-type="string"><text:p text:style-name="P304">ann.id</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table33.A7" office:value-type="string"><text:p text:style-name="P304">de_population_size</text:p></table:table-cell><table:table-cell table:style-name="Table33.B7" office:value-type="string"><text:p text:style-name="P296"/></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table33.A7" office:value-type="string"><text:p text:style-name="P304">number_of_training_bars</text:p></table:table-cell><table:table-cell table:style-name="Table33.B7" office:value-type="string"><text:p text:style-name="P296"/></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table33.A7" office:value-type="string"><text:p text:style-name="P304">after_bars_prediction</text:p></table:table-cell><table:table-cell table:style-name="Table33.B7" office:value-type="string"><text:p text:style-name="P296"/></table:table-cell></table:table-row></table:table><text:p text:style-name="P38"/><text:p text:style-name="P127"><text:tab/>Системата би могла да определя параметри за обучението на изкуствени невронни мрежи с отделна таблица в релационната база данни. Като параметри на обучението се използват броят индивиди в диференциалната еволюция, броят барове за вход в мрежата, броят барове за изход от мрежата и кой вид мрежа ще се обучава.</text:p><text:p text:style-name="P38"/><text:p text:style-name="P400"><text:span text:style-name="T4">Таб. 3.</text:span><text:span text:style-name="T32">32</text:span> Таблица в базата данни, описваща обучаващото множество.</text:p><table:table table:name="Table34" table:style-name="Table34"><table:table-column table:style-name="Table34.A"/><table:table-column table:style-name="Table34.B"/><table:table-row><table:table-cell table:style-name="Table34.A1" table:number-columns-spanned="2" office:value-type="string"><text:p text:style-name="P228">training_set</text:p></table:table-cell><table:covered-table-cell/></table:table-row><table:table-row><table:table-cell table:style-name="Table34.A2" office:value-type="string"><text:p text:style-name="P292">Атрибути</text:p></table:table-cell><table:table-cell table:style-name="Table34.B2" office:value-type="string"><text:p text:style-name="P260">Връзки</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table34.A12" office:value-type="string"><text:p text:style-name="P305">id</text:p></table:table-cell><table:table-cell table:style-name="Table34.B3" office:value-type="string"><text:p text:style-name="P297"/></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table34.A12" office:value-type="string"><text:p text:style-name="P305">currency_pairs_id</text:p></table:table-cell><table:table-cell table:style-name="Table34.B12" office:value-type="string"><text:p text:style-name="P305">currency_pairs.id</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table34.A12" office:value-type="string"><text:p text:style-name="P305">number_of_examples</text:p></table:table-cell><table:table-cell table:style-name="Table34.B12" office:value-type="string"><text:p text:style-name="P297"/></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table34.A12" office:value-type="string"><text:p text:style-name="P305">time</text:p></table:table-cell><table:table-cell table:style-name="Table34.B12" office:value-type="string"><text:p text:style-name="P297"/></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table34.A12" office:value-type="string"><text:p text:style-name="P305">open</text:p></table:table-cell><table:table-cell table:style-name="Table34.B12" office:value-type="string"><text:p text:style-name="P297"/></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table34.A12" office:value-type="string"><text:p text:style-name="P305">low</text:p></table:table-cell><table:table-cell table:style-name="Table34.B12" office:value-type="string"><text:p text:style-name="P297"/></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table34.A12" office:value-type="string"><text:p text:style-name="P305">high</text:p></table:table-cell><table:table-cell table:style-name="Table34.B12" office:value-type="string"><text:p text:style-name="P297"/></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table34.A12" office:value-type="string"><text:p text:style-name="P305">close</text:p></table:table-cell><table:table-cell table:style-name="Table34.B12" office:value-type="string"><text:p text:style-name="P297"/></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table34.A12" office:value-type="string"><text:p text:style-name="P305">volume</text:p></table:table-cell><table:table-cell table:style-name="Table34.B12" office:value-type="string"><text:p text:style-name="P297"/></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table34.A12" office:value-type="string"><text:p text:style-name="P305">happened</text:p></table:table-cell><table:table-cell table:style-name="Table34.B12" office:value-type="string"><text:p text:style-name="P297"/></table:table-cell></table:table-row></table:table><text:p text:style-name="Standard"/><text:p text:style-name="Standard"><text:tab/>Тренировъчните примери за изкуствената невронна мрежа представляват самия времеви ред който постъпва в системата от изхода на програмата <text:span text:style-name="T92">MetaTrader4. Времевият ред </text:span><text:soft-page-break/><text:span text:style-name="T92">съдържа информация за валутната двойка, периода на времевия ред, колко стойности от времевия ред са представени и група паралелни масиви които имат следното значение: time - момент във времето за който се отнася стойността, open - ниво на отваряне за съответния интервал, close - ниво на затваряне за съответния интервал, low - най-ниско постигнато ниво за съответния интервал, high - най-високо ниво постигнато за съответния интервал, volume - изтъргуван обем в конкретния времеви интервал. </text:span></text:p><text:p text:style-name="Standard"/><text:p text:style-name="Standard"><text:tab/><text:span text:style-name="T87">Полетата id са служебни полета и служат за номерация на записите в таблиците. При представения модел всичките id полета са с характеристика за автоматично увеличаване на номерацията и са заложени да бъдат първични ключове. Полето happened е помощно поле което записва time stamp информация за момента от времето в който е направен съответният запис в съответната таблица от базата данни.</text:span></text:p><text:p text:style-name="Standard"/><text:h text:style-name="Heading_20_2" text:outline-level="2"><text:bookmark-start text:name="__RefHeading___Toc10174_594487062"/><text:s text:c="2"/>3.6 Административен модул за наблюдение и настройване на системата<text:bookmark-end text:name="__RefHeading___Toc10174_594487062"/></text:h><text:p text:style-name="Standard"/><text:p text:style-name="P188"><text:tab/>Модулът за наблюдение и настройване на системата се ползва за задаване на параметри при които протича обучението на <text:span text:style-name="T107">изкуствени невронни мрежи</text:span>. Модулът е разработен под формата на <text:span text:style-name="T105">Java Applet за да бъде достъпен от различни компютърни системи, използващи стандартен уеб браузър. Модулът е реализиран под формата на двуслойна софтуерна архитектура (потребителски интерфейс - база данни). Системата за сигурност (автентификация и авторизация) е изцяло базирана на системата за сигурност, която предоставя системата за управление на бази от данни. Административният модул е предназначен единствено за операторите на системата които са в ролята на доверени лица. Допълнително нивото на сигурност в системата за управление на бази от данни ограничава достъпа до данните само в рамките на локалната мрежова инфраструктура.</text:span></text:p><text:p text:style-name="P188"/><table:table table:name="Table54" table:style-name="Table54"><table:table-column table:style-name="Table54.A"/><table:table-column table:style-name="Table54.B"/><text:soft-page-break/><table:table-row><table:table-cell table:style-name="Table54.A1" office:value-type="string"><text:p text:style-name="P188"><draw:frame draw:style-name="fr8" draw:name="Image2" text:anchor-type="as-char" svg:y="-1.2299in" svg:width="3in" svg:height="2.5201in" draw:z-index="32"><draw:image xlink:href="Pictures/1000020100000327000002A559764768B696EDA6.png" xlink:type="simple" xlink:show="embed" xlink:actuate="onLoad"/></draw:frame></text:p></table:table-cell><table:table-cell table:style-name="Table54.A1" office:value-type="string"><text:p text:style-name="P188"><draw:frame draw:style-name="fr6" draw:name="Image3" text:anchor-type="as-char" svg:width="3in" svg:height="2.5201in" draw:z-index="33"><draw:image xlink:href="Pictures/1000020100000326000002A5E43FFFE516AE1CA1.png" xlink:type="simple" xlink:show="embed" xlink:actuate="onLoad"/></draw:frame></text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table54.A1" table:number-columns-spanned="2" office:value-type="string"><text:p text:style-name="P414"><text:span text:style-name="T4">Фиг. </text:span><text:span text:style-name="T6">3.</text:span><text:span text:style-name="T38">4</text:span><text:span text:style-name="T106"> Екран за вход в административната система [NIRA2012][ANMO2011] (ляво) и екран за създаване на нова изкуствена невронна мрежа в базата данни [NIRA2012][ANMO2011] (дясно).</text:span></text:p></table:table-cell><table:covered-table-cell/></table:table-row></table:table><text:p text:style-name="P188"/><text:p text:style-name="P188"><text:tab/>Основна задача на модула за администриране е да осъществява връзка с базата данни <text:span text:style-name="T127">(Фиг. 3.4 - ляво)</text:span> и да предоставя в разбираем за оператора графичен вид, информацията за различните <text:span text:style-name="T107">изкуствени невронни мрежи</text:span>, съхранени в енергийно независимата памет. Административният модул дава възможности за създаване на нови записи в базата данни, които да отразяват информацията за съответен вид изкуствена невронна мрежа <text:span text:style-name="T128">(Фиг. 3.4 - дясно).</text:span></text:p><text:p text:style-name="Standard"/><table:table table:name="Table56" table:style-name="Table56"><table:table-column table:style-name="Table56.A"/><table:table-column table:style-name="Table56.B"/><text:soft-page-break/><table:table-row><table:table-cell office:value-type="string"><text:p text:style-name="Standard"><draw:frame draw:style-name="fr6" draw:name="Image4" text:anchor-type="as-char" svg:width="3in" svg:height="2.5098in" draw:z-index="34"><draw:image xlink:href="Pictures/1000020100000327000002A20E89EFE8A59E9A99.png" xlink:type="simple" xlink:show="embed" xlink:actuate="onLoad"/></draw:frame></text:p></table:table-cell><table:table-cell office:value-type="string"><text:p text:style-name="Standard"><draw:frame draw:style-name="fr6" draw:name="Image5" text:anchor-type="as-char" svg:width="3in" svg:height="2.5098in" draw:z-index="35"><draw:image xlink:href="Pictures/1000020100000327000002A31B0FFCA68A46D1BC.png" xlink:type="simple" xlink:show="embed" xlink:actuate="onLoad"/></draw:frame></text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:number-columns-spanned="2" office:value-type="string"><text:p text:style-name="P415"><text:span text:style-name="T4">Фиг. </text:span><text:span text:style-name="T7">3.</text:span><text:span text:style-name="T39">5</text:span><text:span text:style-name="T125"> Екран за избор на изкуствена невронна мрежа, съхранена в базата данни [NIRA2012][ANMO2011] (ляво) и екран за изтриване на изкуствена невронна мрежа от базата данни [NIRA2012][ANMO2011] (дясно).</text:span></text:p></table:table-cell><table:covered-table-cell/></table:table-row></table:table><text:p text:style-name="P194"/><text:p text:style-name="P194"><text:tab/>Съществуващите записи на изкуствени невронни мрежи в базата данни могат да бъдат зареждани и визуализирани в административната система <text:span text:style-name="T129">(Фиг. 3.5 - ляво). </text:span>Записани <text:span text:style-name="T107">изкуствени невронни мрежи</text:span> в базата данни могат да бъдат изтривани с помощта на административната система <text:span text:style-name="T130">(Фиг. 3.5 - дясно).</text:span></text:p><text:p text:style-name="P189"/><table:table table:name="Table58" table:style-name="Table58"><table:table-column table:style-name="Table58.A"/><table:table-column table:style-name="Table58.B"/><table:table-row><table:table-cell office:value-type="string"><text:p text:style-name="P189"><draw:frame draw:style-name="fr6" draw:name="Image6" text:anchor-type="as-char" svg:width="3in" svg:height="2.5098in" draw:z-index="36"><draw:image xlink:href="Pictures/1000020100000328000002A39CCB5202274271DB.png" xlink:type="simple" xlink:show="embed" xlink:actuate="onLoad"/></draw:frame></text:p></table:table-cell><table:table-cell office:value-type="string"><text:p text:style-name="P189"><draw:frame draw:style-name="fr6" draw:name="Image7" text:anchor-type="as-char" svg:width="3in" svg:height="2.5098in" draw:z-index="37"><draw:image xlink:href="Pictures/1000020100000326000002A2F2C6C245EF26FB3F.png" xlink:type="simple" xlink:show="embed" xlink:actuate="onLoad"/></draw:frame></text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:number-columns-spanned="2" office:value-type="string"><text:p text:style-name="P416"><text:span text:style-name="T4">Фиг. </text:span><text:span text:style-name="T8">3.</text:span><text:span text:style-name="T40">6</text:span><text:span text:style-name="T126"> Екран за настройка на опциите в административния модул [NIRA2012][ANMO2011] (ляво) и eкран за визуализация на изкуствена невронна мрежа [NIRA2012][ANMO2011] (дясно).</text:span></text:p></table:table-cell><table:covered-table-cell/></table:table-row></table:table><text:p text:style-name="P190"/><text:p text:style-name="P190"><text:soft-page-break/><text:tab/>За визуализацията на различните компоненти от <text:span text:style-name="T107">изкуствените невронни мрежи</text:span> <text:span text:style-name="T131">(тегла и неврони с различно предназначение) се използват набор от опции, които могат да се настройват в специално изработена диалогова кутия (Фиг. 3.6 - ляво). </text:span>Най-съществената възможност на административната система е визуализирането на <text:span text:style-name="T107">изкуствени невронни мрежи</text:span> с всички връзки, както под формата на тегла, така и под формата на активности. Невроните в мрежата се изобразяват с различни цветове, спрямо ролята, която изпълняват в мрежата <text:span text:style-name="T132">(входни, изходни, вътрешни или отместващи). Разположение на невроните върху визуалното пространство може да се променя, с помощта на мишката и клавиатурата (Фиг. 3.6 - дясно).</text:span></text:p><text:p text:style-name="P194"/><text:h text:style-name="P527" text:outline-level="2"><text:bookmark-start text:name="__RefHeading___Toc10176_594487062"/><text:s text:c="2"/>3.<text:span text:style-name="T133">7</text:span> Публичен модул за информация от системата<text:bookmark-end text:name="__RefHeading___Toc10176_594487062"/></text:h><text:p text:style-name="Standard"/><text:p text:style-name="P190"><text:tab/>Публичният модул представлява уеб сайт, разработен с <text:span text:style-name="T133">HTML, CSS, PHP. Целта на публичния модул е да представя информация от системата, която е за публично ползване. Публичната информация включва списък на различните </text:span><text:span text:style-name="T122">изкуствени невронни мрежи</text:span><text:span text:style-name="T133"> в базата данни, различната ефективност до която отделните мрежи са обучени и техния служебен идентификатор в рамките на базата данни (Фиг. 3.7 - ляво).</text:span></text:p><text:p text:style-name="P190"/><table:table table:name="Table60" table:style-name="Table60"><table:table-column table:style-name="Table60.A"/><table:table-column table:style-name="Table60.B"/><text:soft-page-break/><table:table-row><table:table-cell office:value-type="string"><text:p text:style-name="P190"><draw:frame draw:style-name="fr8" draw:name="Image8" text:anchor-type="as-char" svg:y="-1.2701in" svg:width="3in" svg:height="2.5402in" draw:z-index="38"><draw:image xlink:href="Pictures/10000201000004280000038414DBC335A68944BF.png" xlink:type="simple" xlink:show="embed" xlink:actuate="onLoad"/></draw:frame></text:p></table:table-cell><table:table-cell office:value-type="string"><text:p text:style-name="P190"><draw:frame draw:style-name="fr6" draw:name="Image9" text:anchor-type="as-char" svg:width="3in" svg:height="2.5402in" draw:z-index="39"><draw:image xlink:href="Pictures/100002010000042800000384F4ED653F1B24763B.png" xlink:type="simple" xlink:show="embed" xlink:actuate="onLoad"/></draw:frame></text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:number-columns-spanned="2" office:value-type="string"><text:p text:style-name="P417"><text:span text:style-name="T4">Фиг. </text:span><text:span text:style-name="T9">3.</text:span><text:span text:style-name="T41">7</text:span><text:span text:style-name="T134"> Основна уеб страница за публикуване на публично достъпна информация от системата (ляво) и уеб страница със списък на всички публично достъпни модули от системата (дясно).</text:span></text:p></table:table-cell><table:covered-table-cell/></table:table-row></table:table><text:p text:style-name="Standard"/><text:p text:style-name="Standard"><text:tab/>Цялостната система включва различни модули, част от които са достъпни за публично ползване. Списък с публично достъпните модули е представен в допълнителна уеб страница <text:span text:style-name="T135">(Фиг. 3.7 - дясно).</text:span></text:p><text:p text:style-name="Standard"/><table:table table:name="Table62" table:style-name="Table62"><table:table-column table:style-name="Table62.A"/><table:table-column table:style-name="Table62.B"/><table:table-row><table:table-cell office:value-type="string"><text:p text:style-name="Standard"><draw:frame draw:style-name="fr6" draw:name="Image10" text:anchor-type="as-char" svg:width="3in" svg:height="2.5402in" draw:z-index="40"><draw:image xlink:href="Pictures/100002010000042800000384D9D396B05C57048D.png" xlink:type="simple" xlink:show="embed" xlink:actuate="onLoad"/></draw:frame></text:p></table:table-cell><table:table-cell office:value-type="string"><text:p text:style-name="Standard"/></table:table-cell></table:table-row><table:table-row><table:table-cell table:number-columns-spanned="2" office:value-type="string"><text:p text:style-name="Illustration"><text:span text:style-name="T4">Фиг. </text:span><text:span text:style-name="T10">3.</text:span><text:span text:style-name="T42">8</text:span><text:span text:style-name="T136"> Уеб страница с информация за контакт.</text:span></text:p></table:table-cell><table:covered-table-cell/></table:table-row></table:table><text:p text:style-name="Standard"/><text:p text:style-name="Standard"><text:tab/>Публичният модул съдържа и уеб страница с информация за контакт <text:span text:style-name="T136">(Фиг. 3.8).</text:span></text:p><text:p text:style-name="P147"/><text:h text:style-name="P528" text:outline-level="2"><text:bookmark-start text:name="__RefHeading__2965_72400578211"/><text:soft-page-break/><text:s text:c="2"/><text:span text:style-name="T279">3</text:span>.<text:span text:style-name="T279">8</text:span> Обобщение<text:bookmark-end text:name="__RefHeading__2965_72400578211"/></text:h><text:p text:style-name="P147"/><text:p text:style-name="P147"><text:tab/>Като кратко обобщение може да се отбележи, че предложеното софтуерно решение за обучение на изкуствени невронни мрежи има редица предимства, като - ниска себестойност за опериране на системата, висока надеждност за непрекъсната работа на системата и висока степен на разширяемост. </text:p><text:p text:style-name="P147"/><text:p text:style-name="P147"><text:tab/>В резултат на научноизследователската работа изложена в тази глава са постигнати следните приноси:</text:p><text:p text:style-name="P147"/><text:p text:style-name="P144"><text:tab/>1. Разработен е обектно-ориентиран програмен код за пресмятане от страната на клиента;</text:p><text:p text:style-name="P147"><text:tab/><text:span text:style-name="T277">2. Разработена е оптимизирана релационна база данни за ефективно съхранение на изчислените резултати;</text:span></text:p><text:p text:style-name="P151"><text:tab/>3. Разработен е изчистен и ефективен за използване графичен потребителски интерфейс;</text:p><text:p text:style-name="P147"/><text:p text:style-name="P147"><text:tab/>Програмният код на системата е достъпен за свободен достъп, а<text:span text:style-name="T278"> части от системата са представени в публикации референции [ANMO2011] и [NIRA2012].</text:span></text:p><text:p text:style-name="P147"/><text:h text:style-name="P521" text:outline-level="1"><text:bookmark-start text:name="__RefHeading__152_63795308"/>Глава <text:span text:style-name="T56">4 -</text:span> Приложение на системата за прогнозиране и анализ на експериментални резултати<text:bookmark-end text:name="__RefHeading__152_63795308"/></text:h><text:p text:style-name="Standard"/><text:p text:style-name="Standard"><text:tab/>Сложността при прогнозирането на валутните пазари се дължи на динамиката в изменението на пазарните процеси и множеството фактори, оказващи влияние върху цената. Предложеният теоретичен модел и конкретната му софтуерна реализация ще послужат за изследване на проблемите разгледани по-долу в текста.</text:p><text:p text:style-name="Standard"/><text:p text:style-name="P190"><text:tab/>При нарастване броя на възлите в <text:span text:style-name="T107">изкуствените невронни мрежи</text:span> броят на теглата се увеличава значително което може допълнително да затрудни процеса на обучение, особено при по-сложна топология на <text:span text:style-name="T107">изкуствени невронни мрежи</text:span>. Първото направление за изследване е каква топология на <text:span text:style-name="T107">изкуствени невронни мрежи</text:span> би била най-ефективна за целите на прогнозирането. Разгледани са класическа трислойна <text:span text:style-name="T107">изкуствена невронна мрежа</text:span>, многослойна изкуствена неврона мрежа с обратни връзки и пълно-свързана изкуствена невронна мрежа. Освен броят слоеве и конкретният набор връзки между тях от съществено значение е и общият брой неврони. </text:p><text:p text:style-name="Standard"/><text:p text:style-name="P190"><text:tab/>Съществен момент в изследването е изборът на вида на входно-изходните данни при работа с <text:span text:style-name="T107">изкуствени невронни мрежи</text:span>. По отношение на изхода, желателно е да се получава директно прогнозна стойност (конкретно число или разлика на прогнозирания момент, спрямо текущия). По отношение на входните данни са на лице следните възможности: 1. Да се подава стойност за време; 2. Да се подава стойност на величината от предходен момент; 3. Да се подава съвкупност от стойности на величината в предходни моменти; 4. Да се подават разлики в стойността на величината от предходни моменти; 5. Да се подава комбинация от предходни стойности на величината и информация за времето.</text:p><text:p text:style-name="Standard"/><text:p text:style-name="P190"><text:tab/>Освен с данни за време и стойност на величина <text:span text:style-name="T107">изкуствените невронни мрежи</text:span> може да се обучава за класифициране на „истински” и „фалшиви” сигнали подавани от финансови индикатори и/или осцилатори. При този вариант самото прогнозиране се получава от комбинация индикатор/осцилатор и <text:span text:style-name="T107">изкуствени невронни мрежи</text:span> която потвърждава <text:soft-page-break/>достоверността на подаваните сигнали.</text:p><text:p text:style-name="P6"/><text:h text:style-name="P529" text:outline-level="2"><text:bookmark-start text:name="__RefHeading___Toc3705_327085497"/><text:s text:c="2"/>4.1 Инцидентно участие на възли в система за разпределени изчисления<text:bookmark-end text:name="__RefHeading___Toc3705_327085497"/></text:h><text:p text:style-name="P6"/><text:p text:style-name="P154"><text:tab/>В предложената система за разпределени изчисления, основната популация се намира на един централен възел <text:span text:style-name="T137">(сървър). Всеки клиент се закача към системата и получава подмножество от глобалната популация (Фиг. 4.1). След тази първоначална инициализация оптимизацията протича на локално ниво като към централния възел се изпращат само индивиди от локалната популация които имат по-добра жизнена стойност спрямо вече известната най-добра глобална жизнена стойност. По този начин на сървъра се образува един своеобразен елит от индивиди. В същото време сървърът разполага с механизми да подбира индивиди от този елит, но също така да инициализира и случайна локална популация.</text:span></text:p><text:p text:style-name="P154"/><table:table table:name="Table63" table:style-name="Table63"><table:table-column table:style-name="Table63.A"/><table:table-row><table:table-cell office:value-type="string"><text:p text:style-name="P159"><draw:frame draw:style-name="fr9" draw:name="Image11" text:anchor-type="as-char" svg:width="3.4366in" svg:height="3.1256in" draw:z-index="23"><draw:image xlink:href="Pictures/100002010000029400000258AE98662224E9B0F4.png" xlink:type="simple" xlink:show="embed" xlink:actuate="onLoad"/></draw:frame></text:p></table:table-cell></table:table-row><table:table-row><table:table-cell office:value-type="string"><text:p text:style-name="P411"><text:span text:style-name="T4">Фиг. </text:span><text:span text:style-name="T11">4.1</text:span><text:span text:style-name="T138"> Инцидентно включване на възли в разпределената система.</text:span></text:p></table:table-cell></table:table-row></table:table><text:p text:style-name="P154"/><text:p text:style-name="P154"><text:span text:style-name="T137"><text:tab/>На практика, централният възел служи за хранилище на индивидите с най-добра постигната жизненост от локалните процедури за оптимизация (своеобразна форма на елитаризъм). Тази част от системата за обмен на индивиди между отделните изчислителни </text:span><text:soft-page-break/><text:span text:style-name="T137">възли е разгледана в изолиран вариант в [TBIZ2015] като е направено сравнение между възли с инцидентно включване и изключване и обмен на информация по кръгова топология. </text:span></text:p><text:p text:style-name="P154"/><table:table table:name="Table64" table:style-name="Table64"><table:table-column table:style-name="Table64.A"/><table:table-row><table:table-cell office:value-type="string"><text:p text:style-name="P159"><draw:frame draw:style-name="fr10" draw:name="Image12" text:anchor-type="as-char" svg:width="4.1339in" svg:height="3.8862in" draw:z-index="24"><draw:image xlink:href="Pictures/100002010000035C000003288CD25501882931A1.png" xlink:type="simple" xlink:show="embed" xlink:actuate="onLoad"/></draw:frame></text:p></table:table-cell></table:table-row><table:table-row><table:table-cell office:value-type="string"><text:p text:style-name="Illustration"><text:span text:style-name="T4">Фиг. </text:span><text:span text:style-name="T12">4.2</text:span><text:span text:style-name="T139"> Сравнение между инцидентно включване на възли и кръгова топология. </text:span></text:p></table:table-cell></table:table-row></table:table><text:p text:style-name="P6"/><text:p text:style-name="P6"><text:tab/>Като експериментални данни са използвани котировките <text:span text:style-name="T289">EUR/USD, при дневен интервал, за периода 01.01.2014 до 31.03.2014 (Приложение А).</text:span> От проведените експерименти се вижда, че при инцидентно включване на възлите сходимостта на оптимизационният процес е по-добра <text:span text:style-name="T140">(Фиг. 4.2).</text:span></text:p><text:p text:style-name="P6"/><text:h text:style-name="Heading_20_2" text:outline-level="2"><text:bookmark-start text:name="__RefHeading___Toc3707_327085497"/><text:s text:c="2"/><text:span text:style-name="T143">4.2 Сравнение между C++ и JavaScript, при правия пас на изкуствена невронна мрежа</text:span><text:bookmark-end text:name="__RefHeading___Toc3707_327085497"/></text:h><text:p text:style-name="P6"/><text:p text:style-name="P51"><text:tab/>В настоящото изследване <text:span text:style-name="T172">[BAGE2016a]</text:span> е представен модел за обучение на изкуствени невронни мрежи с помощта на обучаващ алгоритъм - диференциална еволюция който е от групата на еволюционните алгоритми. Обучението на изкуствени невронни мрежи се осъществява в разпределена среда като мрежата е представена във вид на JavaScript <text:soft-page-break/>програмен код, а комуникацията с централния възел се извършва с помощта на AJAX асинхронни заявки. Целта за обучение на изкуствени невронни мрежи е прогнозиране на стойностите за различни валутни двойки на глобалния валутен пазар.</text:p><text:p text:style-name="P50"/><text:p text:style-name="P53"><text:tab/>За целите на прогнозирането се използва математически модел базиран на изкуствени невронни мрежи, чието обучение се извършва с диференциална еволюция, под формата на изчисления в разпределена среда. Топологията на изкуствените невронни мрежи е обект на научно изследване и поради тази причина в разработената система топологията се въвежда от оператора на системата. Допустимите видове топологии са: многослойни, многослойни с обратна връзка и пълно-свързани. Моделът е базиран на класическа изкуствена невронна мрежа, каквито се използват в моделите с обратно разпространение на грешката. Като предавателна функция се използва линейна предавателна функция:</text:p><text:p text:style-name="P50"/><text:p text:style-name="P50">(<text:span text:style-name="T214">12</text:span>)<text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>u[i] = sum(w[i][j]*x[j])</text:p><text:p text:style-name="P50"/><text:p text:style-name="P50"><text:tab/>Предавателната функция определя по какъв начин входните сигнали в комбинация с тегловните коефициенти, ще влияят върху активността на съответния неврон. Макар и да са възможни модели с друг вид предавателни функции на този етап предпочитанията са в ползата на най-опростения модел базиран на линейността. </text:p><text:p text:style-name="P50"/><text:p text:style-name="P50"><text:tab/>Резултатът от предавателната функция е необходимо да се нормализира с помощта на прагова функция (в избрания модел сигмоидна функция със стойности в интервала от 0 до 1), тъй като различният брой връзки при различните неврони би влиял различно, ако не се нормализира.</text:p><text:p text:style-name="P50"/><text:p text:style-name="P50">(<text:span text:style-name="T214">13</text:span>)<text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>x[i] = 1 / (1 + exp(-u[i]))</text:p><text:p text:style-name="P50"/><text:p text:style-name="P50"><text:tab/>Сигмоидната функция е предпочитана за прагова функция поради нейните подходящи свойства по отношение на диференцируемост и асимптотичност за плюс безкрайност и минус безкрайност. Възможно е използването на двоична функция или линейна функция (с цел подобряване на бързодействието), но техните свойства влошават резултатите, които изкуствената невронна мрежа може да постигне. Ако мрежата работи със стойности от -1 до <text:soft-page-break/>+1 то може да се използва хиперболичен тангенс като прагова функция. </text:p><text:p text:style-name="P50"/><text:p text:style-name="P54"><text:tab/>Обучението на изкуствени невронни мрежи се осъществява с помощта на диференциална еволюция. В рамките на алгоритъма диференциална еволюция всяка хромозома представя един комплект тегла за конкретна топология изкуствена невронна мрежа към която се отнасят определен брой обучаващи примери. Последователно отделните хромозоми (комплекти тегла) се зареждат в структурата на изкуствената невронна мрежа, след което се подават обучаващите примери, изчислява се грешката, която мрежата допуска за всеки пример, сумират се грешките от отделните примери и се определя коефициент за жизнеспособност на хромозомата (комплекта тегла). Начинът по който се определя коефициентът на жизнеспособност е един от най-ключовите проблеми от които зависи успехът на цялостното прогнозиране. При времевите редове е разумно обучаващите примери да се подават в хронологична последователност което би било проблем при мрежи обучавани с алгоритъм за обратно разпространение на грешката. Също така, разумно е хронологично по-старите обучаващи примери да оказват по-малко влияние при формирането на коефициента за жизнеспособност <text:span text:style-name="T293">(схеми за „стареене“ на данните)</text:span>. След като бъдат оценени отделните хромозоми те влизат в изчислителната схема на диференциалната еволюция като над тях се извършва селекция, кръстосване и мутация.</text:p><text:p text:style-name="P50"/><text:p text:style-name="P52"><text:tab/>При паралелния вариант на алгоритъма за диференциална еволюция се създават локални копия на изкуствените невронни мрежи и на диференциалната еволюция. Обучението протича локално като всяка хромозома в популацията обозначава отделен индивид в пространството на търсенето. Макар и различни индивидите се „скупчват“ относително близко един до друг в това пространство. При разделяне на изчисленията върху множество изчислителни машини подобно „скупчване“ на индивидите може да доведе до локално изследване на различни области от пространството на решенията. В този контекст от съществено значение е политиката за синхронизиране. Процесът на синхронизиране включва излъчването на най-добрите индивиди и събирането им на едно общо централизирано място (клиент-сървър архитектура). Това множество на глобално най-устойчивите индивиди се използва при създаването на следващи локални популации. Освен клиент-сървър архитектура е възможно да се реализират и решения от тип „точка-в-точка“. При такива решения отсъства централизиран възле, а всяко локално работещо приложение се грижи за комуникацията с <text:soft-page-break/>други локално работещи приложения. Основно предимство на предложената разпределена система е нейната изключително висока степен на разширяемост.</text:p><text:p text:style-name="P50"/><text:p text:style-name="P52"><text:tab/>Предимствата на предложения модел се състоят в това, че чрез използването на диференциална еволюция за обучението на изкуствени невронни мрежи се избяга опасността от катастрофално забравяне което е възможно при обучение с обратно разпространение на грешката. Второто предимство е възможността чрез диференциална еволюция да се обучават изкуствени невронни мрежи с разнообразни връзки. Третото предимство е възможността чрез диференциална еволюция да се обучават изкуствени невронни мрежи без да е от значение редът по който се подават обучаващите примери <text:span text:style-name="T293">(избягва се заучаването на реда за подаване на примерите)</text:span>. Четвъртото предимство е възможността да се обучават различни копия на изкуствени невронни мрежи и това да става паралелно водещо до подобряване на бързодействието и по-добро покритие на пространството за търсене.</text:p><text:p text:style-name="P50"/><text:p text:style-name="P53"><text:tab/>Използването на изкуствени невронни мрежи независимо за решението на каква задача е свързано с много бавен и труден процес на обучение <text:span text:style-name="T293">(основен недостатък)</text:span>. Макар и много ефективни след като бъдат обучени изкуствените невронни мрежи за обучението им се изискват значителни изчислителни ресурси. Използването на диференциална еволюция забавя процеса на обучение в сравнение с алгоритъма за обратно разпространение на грешката, но поради множеството изброени предимства диференциалната еволюция е предпочитан пред обратно разпространение на грешката. Хибридният модел в който диференциална еволюция се комбинира с обратно разпространение на грешката води до компромис по отношение топологията на изкуствените невронни мрежи. Чисто технологично разработването на системи за изчисления в разпределена среда е значително по-сложно от писането на линейни програми и дори по-сложно от писането на паралелни програми.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P55"><text:tab/>Бързодействието, при изпълнението на JavaScript, е основният аргумент езикът да се избягва при извършването на големи по обем изчисления или при изчисления, които изискват голяма точност. JavaScript попада в групата на скриптовите езици, чийто код не се компилира до инструкции за процесора, а се интерпретира от програмни модули наречени интерпретатори.</text:p><text:p text:style-name="P55"/><table:table table:name="Table65" table:style-name="Table65"><table:table-column table:style-name="Table65.A"/><text:soft-page-break/><table:table-row><table:table-cell office:value-type="string"><text:p text:style-name="P57"><draw:frame draw:style-name="fr10" draw:name="Image13" text:anchor-type="as-char" svg:width="4.6398in" svg:height="3.7126in" draw:z-index="25"><draw:image xlink:href="Pictures/10000201000002C20000023664078534518C51F2.png" xlink:type="simple" xlink:show="embed" xlink:actuate="onLoad"/></draw:frame></text:p></table:table-cell></table:table-row><table:table-row><table:table-cell office:value-type="string"><text:p text:style-name="P413"><text:span text:style-name="T4">Фиг. </text:span><text:span text:style-name="T13">4.3</text:span> Сравнение в бързодействието при разпространение на информацията в изкуствена невронна мрежа, по време на правия пас, между C++ и JavaScript. По оста X са броят неврони, а по оста Y е бързодействието в милисекунди.</text:p></table:table-cell></table:table-row></table:table><text:p text:style-name="P56"/><text:p text:style-name="P58"><text:tab/>Във всеки един момент интерпретаторът може да прекрати изпълнението на програмния код и поради тази причина не може да се гарантира достатъчна надеждност на изчисленията. За да се провери разликата в бързодействието на предложеното AJAX-JavaScript решение са извършени серия експерименти с разпространение на информацията в изкуствена невронна мрежа при правия пас. Алгоритъмът за правия пас е кодиран в два отделни модула на системата VitoshaTrade - съответно модул на C++ и модул на JavaScript. Както е видно от Фиг. <text:span text:style-name="T144">4.3</text:span>, бързодействието е съизмеримо за мрежи от 10 до 100 неврона. Всеки експеримент е изпълнен 30 пъти и средните стойности са представени на фигурата <text:span text:style-name="T232">[BAKE2016]</text:span>. Като експериментални данни са използвани котировките <text:span text:style-name="T289">EUR/USD, при дневен интервал, за периода 01.01.2015 до 31.03.2015 (Приложение А).</text:span></text:p><text:p text:style-name="P56"/><table:table table:name="Table66" table:style-name="Table66"><table:table-column table:style-name="Table66.A"/><text:soft-page-break/><table:table-row><table:table-cell office:value-type="string"><text:p text:style-name="P182"><draw:frame draw:style-name="fr6" draw:name="Image14" text:anchor-type="as-char" svg:width="4.5909in" svg:height="3.6807in" draw:z-index="26"><draw:image xlink:href="Pictures/10000201000002C200000236A8661E5E66756215.png" xlink:type="simple" xlink:show="embed" xlink:actuate="onLoad"/></draw:frame></text:p></table:table-cell></table:table-row><table:table-row><table:table-cell office:value-type="string"><text:p text:style-name="P412"><text:span text:style-name="T4">Фиг. </text:span><text:span text:style-name="T13">4.4</text:span> Стандартно отклонение по време при разпространение на информацията в изкуствена невронна мрежа, по време на правия пас, между C++ и JavaScript. По оста X е броят неврони, а по оста Y е стандартното отклонение.</text:p></table:table-cell></table:table-row></table:table><text:p text:style-name="P55"/><text:p text:style-name="P55"><text:tab/>По отношение на бързодействието езиците C++ и JavaScript са съизмерими, но устойчивостта на изчислителния процес е по-добре при C++, което е видно на Фиг. <text:span text:style-name="T144">4.4</text:span>, която отразява средното квадратично отклонение на времето нужно за изчисление. Тази разлика се дължи основно на наличието на интерпретатор и уеб браузър, нещо което не присъства при изчисленията в C++. При езици от категорията на C++ програмата първоначално се транслира до асемблерен език, а след това и до машинен код. </text:p><text:p text:style-name="P6"/><text:p text:style-name="P59"><text:tab/>Реализацията на изчисления в разпределена среда, под формата на <text:span text:style-name="T293">JavaScript-</text:span>AJAX уеб базирана система води до още по-висока степен на разширяемост в системата спрямо <text:span text:style-name="T293">C</text:span>/<text:span text:style-name="T293">C++ варианта</text:span>. Практически, разпределените изчисления могат да се стартират на всяко устройство поддържащо съвременен уеб браузър способен да стартира JavaScript и AJAX. Тъй като изчислението се извършва в рамките на уеб браузъра, който от своя страна е процес в адресното пространство на операционната система, а тя от своя страна се изпълнява на физическия хардуер, макар и съизмерими по бързодействие, изчисленията са по-ненадеждни (наличие на интерпретатор) отколкото биха били при реализация на езици като C/C++ или <text:soft-page-break/>Assembler. </text:p><text:p text:style-name="P6"/><text:h text:style-name="Heading_20_2" text:outline-level="2"><text:bookmark-start text:name="__RefHeading___Toc3709_327085497"/><text:s text:c="2"/><text:span text:style-name="T141">4.3 Сравнение между различни топологии на изкуствени неверонни мрежи</text:span><text:bookmark-end text:name="__RefHeading___Toc3709_327085497"/></text:h><text:p text:style-name="P6"/><text:p text:style-name="P169"><text:tab/>При прогнозирането на времеви редове с изкуствени невронни мрежи двата най-актуални модела мрежи са класическа трислойна мрежа, без обратни връзки и мрежа с обратни връзки. Проведените експерименти са с трислойни мрежи, които имат различен размер на скрития слой и пълно свързани мрежи <text:span text:style-name="T145">(всеки възел е свързан с всеки останал, включително и със себе си). При пълната свързаност се цели ефект на кратковременна памет в мрежата. Като експериментални данни са използвани собствени данни за брой изминати крачки на ден (Приложение А). Тестовете на топологиите са реализирани в изолиран софтуерен проект поради сложността на експерименталната постановка. </text:span></text:p><text:p text:style-name="P6"/><text:h text:style-name="P535" text:outline-level="3"><text:bookmark-start text:name="__RefHeading___Toc3711_327085497"/><text:s text:c="4"/>4.<text:span text:style-name="T143">3</text:span>.1 Сравнение между пълно-свързана и трислойна изкуствена невронна мрежа<text:bookmark-end text:name="__RefHeading___Toc3711_327085497"/></text:h><text:p text:style-name="P6"/><text:p text:style-name="P60"><text:tab/><text:span text:style-name="T154">За сравнението между пълно-свързана и трислойна мрежа е избрана трислойна топология 28-12-5. Пълно свързаната мрежа се състои от 45 възела. И двата вида мрежи са обучени с генетични алгоритми при следните параметри за генетичния алгоритъм:</text:span></text:p><text:p text:style-name="P60"/><text:p text:style-name="P401"><text:span text:style-name="T4">Таб. </text:span><text:span text:style-name="T33">4</text:span><text:span text:style-name="T4">.</text:span><text:span text:style-name="T32">1</text:span> <text:span text:style-name="T162">Параметри на генетичния алгоритъм</text:span>.</text:p><table:table table:name="Table35" table:style-name="Table35"><table:table-column table:style-name="Table35.A"/><table:table-column table:style-name="Table35.B"/><table:table-row><table:table-cell table:style-name="Table35.A1" office:value-type="string"><text:p text:style-name="P61">Размер на популацията:</text:p></table:table-cell><table:table-cell table:style-name="Table35.B1" office:value-type="string"><text:p text:style-name="P61">37</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table35.A2" office:value-type="string"><text:p text:style-name="P62">Вероятност за кръстосване:</text:p></table:table-cell><table:table-cell table:style-name="Table35.B2" office:value-type="string"><text:p text:style-name="P62">0.9</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table35.A2" office:value-type="string"><text:p text:style-name="P62">Вероятност за мутация:</text:p></table:table-cell><table:table-cell table:style-name="Table35.B2" office:value-type="string"><text:p text:style-name="P62">0.03</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table35.A2" office:value-type="string"><text:p text:style-name="P62">Дял елитни елементи:</text:p></table:table-cell><table:table-cell table:style-name="Table35.B2" office:value-type="string"><text:p text:style-name="P62">0.1</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table35.A2" office:value-type="string"><text:p text:style-name="P63">Аргумент<text:span text:style-name="T155">и</text:span> за състезателна селекция:</text:p></table:table-cell><table:table-cell table:style-name="Table35.B2" office:value-type="string"><text:p text:style-name="P63">2</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table35.A2" office:value-type="string"><text:p text:style-name="P64">Вид кръстосване:</text:p></table:table-cell><table:table-cell table:style-name="Table35.B2" office:value-type="string"><text:p text:style-name="P64">бинарно</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table35.A2" office:value-type="string"><text:p text:style-name="P64">Вид мутация:</text:p></table:table-cell><table:table-cell table:style-name="Table35.B2" office:value-type="string"><text:p text:style-name="P64"><text:span text:style-name="T156">случаен </text:span>делта вектор</text:p></table:table-cell></table:table-row><text:soft-page-break/><table:table-row><table:table-cell table:style-name="Table35.A2" office:value-type="string"><text:p text:style-name="P65">Условие за край:</text:p></table:table-cell><table:table-cell table:style-name="Table35.B2" office:value-type="string"><text:p text:style-name="P65">24 часа</text:p></table:table-cell></table:table-row></table:table><text:p text:style-name="P60"/><text:p text:style-name="P60"><text:tab/><text:span text:style-name="T156">И двете мрежи са обучени, при равни други условя. Условието за край на обучението е изтичането на фиксиран период от време, а именно 24 часа. В резултат на обучението пълно-свързаната мрежа показва по-добри параметри за по-малко епохи обучение:</text:span></text:p><text:p text:style-name="P60"/><text:p text:style-name="P402"><text:span text:style-name="T4">Таб. </text:span><text:span text:style-name="T33">4</text:span><text:span text:style-name="T4">.</text:span><text:span text:style-name="T34">2</text:span> <text:span text:style-name="T163">Сравнение между трислойна и пълно-свързана изкуствена невронна мрежа</text:span>.</text:p><table:table table:name="Table36" table:style-name="Table36"><table:table-column table:style-name="Table36.A"/><table:table-column table:style-name="Table36.B"/><table:table-column table:style-name="Table36.C"/><table:table-row><table:table-cell table:style-name="Table36.A1" office:value-type="string"><text:p text:style-name="P66">Вид мрежа:</text:p></table:table-cell><table:table-cell table:style-name="Table36.A1" office:value-type="string"><text:p text:style-name="P67">Трислойна</text:p></table:table-cell><table:table-cell table:style-name="Table36.C1" office:value-type="string"><text:p text:style-name="P67">Пълно-свързана</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table36.A2" office:value-type="string"><text:p text:style-name="P66">Брой епохи:</text:p></table:table-cell><table:table-cell table:style-name="Table36.A2" office:value-type="string"><text:p text:style-name="P66">296037</text:p></table:table-cell><table:table-cell table:style-name="Table36.C2" office:value-type="string"><text:p text:style-name="P66">294003</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table36.A2" office:value-type="string"><text:p text:style-name="P66">Жизненост на най-добрия индивид в популацията:</text:p></table:table-cell><table:table-cell table:style-name="Table36.A2" office:value-type="string"><text:p text:style-name="P66">656.1699030329493</text:p></table:table-cell><table:table-cell table:style-name="Table36.C2" office:value-type="string"><text:p text:style-name="P66">656.169903010489</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table36.A2" office:value-type="string"><text:p text:style-name="P66">Грешка на ИНМ при тестовото множество:</text:p></table:table-cell><table:table-cell table:style-name="Table36.A2" office:value-type="string"><text:p text:style-name="P66">317.7286234453099</text:p></table:table-cell><table:table-cell table:style-name="Table36.C2" office:value-type="string"><text:p text:style-name="P66">317.0226357675591</text:p></table:table-cell></table:table-row></table:table><text:p text:style-name="P60"/><text:p text:style-name="P122"><text:tab/><text:span text:style-name="T157">Наличието на повече тегла при една пълно-свързана мрежа води до известно забавяне на обучението, но наличието на обратни връзки позволява формирането на кратковременна памет в изкуствените невронни мрежи и при по-дълго обучение това дава предимство на този модел. </text:span></text:p><text:p text:style-name="P60"/><text:h text:style-name="P536" text:outline-level="3"><text:bookmark-start text:name="__RefHeading___Toc3713_327085497"/><text:s text:c="4"/><text:span text:style-name="T142">4.3.2 Сравнение между трислойни изкуствени невронни мрежи с различен размер в скрития слой</text:span><text:bookmark-end text:name="__RefHeading___Toc3713_327085497"/></text:h><text:p text:style-name="P60"/><text:p text:style-name="P6"><text:tab/>Проведените експерименти са извършени с трислойни мрежи, като на входа се подават <text:span text:style-name="T146">25 стойности от изминал период, а на изхода се очакват 5 стойности в бъдещ период. За целите на експеримента данните условно са разделени в три под множества: 1. Данни за обучение; 2. Данни за валидация; 3. Данни за тестване. Изпробвани са топологии с размер на скрития слой от 30 възела до 1 възел. Всички експерименти са извършени при еднакъв интервал от врем. Фиг. 4.5 показва разликата в броя епохи, спрямо размера на скрития слой.</text:span></text:p><table:table table:name="Table67" table:style-name="Table67"><table:table-column table:style-name="Table67.A"/><text:soft-page-break/><table:table-row><table:table-cell office:value-type="string"><text:p text:style-name="Standard"><draw:frame draw:style-name="fr6" draw:name="Image15" text:anchor-type="as-char" svg:width="6.6929in" svg:height="4.4618in" draw:z-index="27"><draw:image xlink:href="Pictures/1000020100000360000002404AC2FDB14F14A8B6.png" xlink:type="simple" xlink:show="embed" xlink:actuate="onLoad"/></draw:frame></text:p></table:table-cell></table:table-row><table:table-row><table:table-cell office:value-type="string"><text:p text:style-name="Illustration"><text:span text:style-name="T15">Фиг. </text:span><text:span text:style-name="T13">4.</text:span><text:span text:style-name="T14">5</text:span><text:span text:style-name="T147"> Брой епохи за обучение, при еднакъв времеви интервал, за обучението, но различен размер на скрития слой.</text:span></text:p></table:table-cell></table:table-row></table:table><text:p text:style-name="P6"/><text:p text:style-name="P6"><text:tab/>В експериментите е оценена средната грешка, която допускат мрежите с различна топология. Целта е да се установи при кои стойности за размера на скрития слой мрежата е най-ефективна. Изчисляването на грешката е извършено само с използване на данните от подмножеството за тестване. Това са данни, които не са използвани в процеса за обучение и валидация.</text:p><text:p text:style-name="P6"/><table:table table:name="Table68" table:style-name="Table68"><table:table-column table:style-name="Table68.A"/><text:soft-page-break/><table:table-row><table:table-cell office:value-type="string"><text:p text:style-name="P182"><draw:frame draw:style-name="fr10" draw:name="Image16" text:anchor-type="as-char" svg:width="6.6929in" svg:height="4.4618in" draw:z-index="28"><draw:image xlink:href="Pictures/10000201000003600000024047DF4D2EFF79AE86.png" xlink:type="simple" xlink:show="embed" xlink:actuate="onLoad"/></draw:frame></text:p></table:table-cell></table:table-row><table:table-row><table:table-cell office:value-type="string"><text:p text:style-name="Illustration"><text:span text:style-name="T15">Фиг. </text:span><text:span text:style-name="T13">4.</text:span><text:span text:style-name="T14">6</text:span><text:span text:style-name="T147"> Средна грешка, допускана от изкуствената невронна мрежа, при обучение на мрежи с топология от три слоя, в които размерът на скрития слой варира от 30 до 1.</text:span></text:p></table:table-cell></table:table-row></table:table><text:p text:style-name="P6"/><text:p text:style-name="P6"><text:tab/>От Фиг. <text:span text:style-name="T148">4.6 ясно се вижда, че най-перспективни са моделите с 22, 12 и 9 елемента в скрития слой което съответства на топологии мрежи: 1. 25-22-5; 2. 25-12-5; 3. 25-9-5.</text:span></text:p><text:p text:style-name="P6"/><text:h text:style-name="Heading_20_2" text:outline-level="2"><text:bookmark-start text:name="__RefHeading___Toc3715_327085497"/><text:s text:c="2"/><text:span text:style-name="T141">4.4 Сравнение за ефективност на прогнозирането при различен прозорец от входни данни</text:span><text:bookmark-end text:name="__RefHeading___Toc3715_327085497"/></text:h><text:p text:style-name="P6"/><text:p text:style-name="P6"><text:tab/>За трите най-ефективни модела, определени на Фиг. <text:span text:style-name="T149">4.6, са извършени допълнителни експерименти с изменение на размера който има времевия прозорец от отминалите периоди. Размерът на времевия прозорец е изследван от 35 до 5 стойности като прозореца за прогнозиране на бъдещите резултати е фиксиран само на 5 стойности. </text:span></text:p><table:table table:name="Table69" table:style-name="Table69"><table:table-column table:style-name="Table69.A"/><text:soft-page-break/><table:table-row><table:table-cell office:value-type="string"><text:p text:style-name="P182"><draw:frame draw:style-name="fr10" draw:name="Image17" text:anchor-type="as-char" svg:width="6.2516in" svg:height="3.5016in" draw:z-index="29"><draw:image xlink:href="Pictures/10000000000002590000015178651C9C2E616285.png" xlink:type="simple" xlink:show="embed" xlink:actuate="onLoad"/></draw:frame></text:p></table:table-cell></table:table-row><table:table-row><table:table-cell office:value-type="string"><text:p text:style-name="Illustration"><text:span text:style-name="T15">Фиг. </text:span><text:span text:style-name="T13">4.</text:span><text:span text:style-name="T16">7</text:span><text:span text:style-name="T147"> Брой епохи за обучение, при еднакъв времеви интервал, за обучението, но различен размер на входния слой (прозорец от данни в миналото).</text:span></text:p></table:table-cell></table:table-row></table:table><text:p text:style-name="P162"/><text:p text:style-name="P162"><text:tab/>От Фиг. <text:span text:style-name="T151">4.7 ясно се вижда, че размерът на входния слой почти не оказва влияние в броя епохи през които протича обучението за фиксиран интервал от време (в случая 1 час). Също така ясно се забелязва, че размерът на скрития слой оказва пряко влияние на броя епохи за обучение при фиксиран интервал от време. Най-бавно протича обучението при скрит слой от 22 елемента, а най-бърз протича обучението при скрит слой от 9 елемента.</text:span></text:p><text:p text:style-name="P162"/><table:table table:name="Table70" table:style-name="Table70"><table:table-column table:style-name="Table70.A"/><text:soft-page-break/><table:table-row><table:table-cell office:value-type="string"><text:p text:style-name="P160"><draw:frame draw:style-name="fr10" draw:name="Image18" text:anchor-type="as-char" svg:width="6.2516in" svg:height="3.5016in" draw:z-index="30"><draw:image xlink:href="Pictures/100000000000025900000151DAA24226150E0D6E.png" xlink:type="simple" xlink:show="embed" xlink:actuate="onLoad"/></draw:frame></text:p></table:table-cell></table:table-row><table:table-row><table:table-cell office:value-type="string"><text:p text:style-name="Illustration"><text:span text:style-name="T15">Фиг. </text:span><text:span text:style-name="T13">4.</text:span><text:span text:style-name="T17">8</text:span><text:span text:style-name="T147"> Средна грешка, допускана от изкуствената неверонна мрежа, при обучение на мрежи с топология от три слоя, в които размерът на входния слой варира от 35 до 5.</text:span></text:p></table:table-cell></table:table-row></table:table><text:p text:style-name="P6"/><text:p text:style-name="P6"><text:tab/>На Фиг. <text:span text:style-name="T152">4.8 ясно се вижда при кои стойности на входния слой изкуствената невронна мрежа е постигнала най-малка грешка за предложената прогноза. За размер на скрития слой от 22 елемента най-ефективният входен слой е 29 елемента. При скрит слой от 12 елемента, най-ефективният входен слой е 28 елемента. И при скрит слой от 9 елемента, най-ефективният входен слой е 26 елемента. От трите възможности най-добри резултати се получават при скрит слой от 12 елемента, което е около половината от входния слой.</text:span></text:p><text:p text:style-name="P6"/><text:h text:style-name="P530" text:outline-level="2"><text:bookmark-start text:name="__RefHeading__2965_724005782111"/><text:s text:c="2"/><text:span text:style-name="T280">4</text:span>.<text:span text:style-name="T280">5</text:span> Обобщение<text:bookmark-end text:name="__RefHeading__2965_724005782111"/></text:h><text:p text:style-name="P148"/><text:p text:style-name="P148"><text:tab/>Като кратко обобщение може да се отбележи, че след извършените експерименти за обучение на изкуствени невронни мрежи в разпределена среда има подобрена ефективност когато обучението протича паралелно и е базирано на ефективна миграция между възлите. </text:p><text:p text:style-name="P148"/><text:p text:style-name="P148"><text:tab/>В резултат на научноизследователската работа изложена в тази глава са постигнати следните приноси:</text:p><text:p text:style-name="P148"><text:soft-page-break/></text:p><text:p text:style-name="P145"><text:tab/>1. Представени са резултати за подобрено бързодействие на обучението при използване на алгоритъм за инцидентно включване на възли;</text:p><text:p text:style-name="P148"><text:tab/><text:span text:style-name="T277">2. Представени са резултати за съизмеримо бързодействие при обучението на изкуствени невронни мрежи с пълна свързаност на невроните и трислойни изкуствени невронни мрежи;</text:span></text:p><text:p text:style-name="P148"/><text:p text:style-name="P149"><text:tab/>Резултатите от проведените експерименти са представени на „<text:span text:style-name="T281">XXII Международен симпозиум Управление на енергийни, индустриални и екологични системи</text:span>“, „<text:span text:style-name="T281">XXIV Международен симпозиум Управление на топло енергийни обекти и системи, Управление на енергийни, индустриални и екологични системи</text:span>“ и <text:span text:style-name="T281">International Conference on Large-Scale Scientific Computations</text:span>, а<text:span text:style-name="T278"> публикациите са цитирани в дисертационния труд като референции [BATO2015], [BAZA2015] и [BAGE2016a].</text:span></text:p><text:p text:style-name="P148"/><text:h text:style-name="P521" text:outline-level="1"><text:bookmark-start text:name="__RefHeading__158_63795308"/>Заключение<text:bookmark-end text:name="__RefHeading__158_63795308"/></text:h><text:p text:style-name="P6"/><text:p text:style-name="P122"><text:tab/>В дисертационната работа са представени основни резултати получени от проведените изследвания в областта на методите за прогнозиране на времеви редове, алгоритми и програмни системи за решаване на задачи в областта на прогнозирането. Целта на тези изследвания е разработката на евристичните подходи за машинно самообучение разширяващи възможностите за прогнозиране на времеви редове. На основата на тези евристични подходи са предложени евристични методи и алгоритми подобряващи бързодействието в машинното самообучение на изкуствени невронни мрежи. Ускоряването на бързодействието в обучението на изкуствени невронни мрежи е особено важно при прогнозирането на времеви редове, тъй като фазата на обучение е значително по-бавна отколкото фазата на самото прогнозиране. Характеристиките на тези методи и алгоритми, качеството на предложения дизайн както и добрата програмна реализация са в основата за създаването на една ефективна програмна система за прогнозиране на времеви редове в сферата на валутните пазари. </text:p><text:p text:style-name="P6"/><text:p text:style-name="P6"><text:tab/>Основните резултати, получени при разработката на дисертационната работа, са докладвани на научни семинари в ИИКТ-БАН, както и на <text:span text:style-name="T49">9</text:span><text:span text:style-name="T45"> </text:span>специализирани конференции (някои от които с международно участие) по машинно самообучение.</text:p><text:p text:style-name="P101"/><text:p text:style-name="P106"><text:tab/>* <text:span text:style-name="T247">International Conference AUTOMATICS AND INFORMATICS, Sofia, Bulgaria, 2016</text:span></text:p><text:p text:style-name="P106"><text:tab/>* <text:span text:style-name="T247">International Conference InfoTech16, Varna - St. St. Constantine and Elena, Bulgaria. 2016</text:span></text:p><text:p text:style-name="P105"><text:tab/>* <text:span text:style-name="T246">XXIV Международен симпозиум по управление на топло енергийни обекти и системи, Управление на енергийни, индустриални и екологични системи, Банкя, България, 2016</text:span></text:p><text:p text:style-name="P104"><text:tab/>* <text:span text:style-name="T245">International Conference on Large-Scale Scientific Computing, Sozopol, Bulgaria, 2015</text:span></text:p><text:p text:style-name="P103"><text:tab/>* <text:span text:style-name="T244">International Scientific Conference UniTech15, <text:s/>Gabrovo, Bulgaria, 2015</text:span></text:p><text:p text:style-name="P102"><text:tab/>* <text:span text:style-name="T243">XXIII Международен симпозиум по управление на енергийни, индустриални и екологични системи, Банкя, България, 2015</text:span></text:p><text:p text:style-name="P101"><text:tab/>* <text:span text:style-name="T242">Първа национална тематична школа и борса за научни идеи в областта на </text:span><text:soft-page-break/><text:span text:style-name="T242">информационните и комуникационни технологии, Русенски университет &quot;Ангел Кънчев&quot;, Русе, България, 2013</text:span></text:p><text:p text:style-name="P100"><text:tab/>* <text:span text:style-name="T241">International Conference on Large-Scale Scientific Computing, Sozopol, Bulgaria, 2011</text:span></text:p><text:p text:style-name="P99"><text:tab/>* <text:span text:style-name="T240">A</text:span><text:span text:style-name="T54">nniversary Scientific Conference 40 Years Department of Industrial Automation, Sofia, </text:span><text:span text:style-name="T55">Bulgaria</text:span><text:span text:style-name="T54">, 2011</text:span></text:p><text:p text:style-name="P97"/><text:p text:style-name="P6"><text:tab/>Изследванията от дисертационния труд са отразени в <text:span text:style-name="T52">8 </text:span>публикации, <text:span text:style-name="T53">2 </text:span>от които са самостоятелни. За самостоятелните публикации не са забелязани цитирания<text:span text:style-name="T164">. За публикациите в съавторство са забелязани </text:span><text:span text:style-name="T174">4</text:span><text:span text:style-name="T173"> цитирания.</text:span></text:p><text:p text:style-name="P6"/><text:p text:style-name="P6"><text:tab/>Част от получените резултати са включени в отчетите на <text:span text:style-name="T48">2</text:span><text:span text:style-name="T45"> </text:span>научно-изследователски теми от вътрешния план на ИИТ-БАН и ИИКТ-БАН <text:span text:style-name="T239">(приемник на ИИТ)</text:span>:</text:p><text:p text:style-name="P6"/><text:p text:style-name="P107"><text:span text:style-name="T164"><text:tab/>* </text:span><text:span text:style-name="T173">Изследване, разработка и приложение на ефективни методи за трудно решими едно- и много критериални задачи. По договор с Институт по информационни и комуникационни технологии - БАН, 2010-2011</text:span></text:p><text:p text:style-name="P98"><text:tab/>* <text:span text:style-name="T239">Методи и системи за оптимизация. По договор с Института по информационни технологии - БАН. 2007-2009</text:span></text:p><text:p text:style-name="P6"/><text:p text:style-name="P6"><text:tab/>Друга част от резултатите са отразени в отчетите на съвместните научно-изследователски проекти между ИИКТ-БАН, Фонд научни изследвания и Европейския социален фонд:</text:p><text:p text:style-name="P108"/><text:p text:style-name="P108"><text:tab/>* ДФНИ И02/20 Ефективни паралелни алгоритми за големи изчислителни задачи, 2015-2016</text:p><text:p text:style-name="P108"><text:tab/>* ДФНИ И02/5 Интеркритериален анализ - нов подход за вземане на решения, 2015-2016</text:p><text:p text:style-name="P108"><text:tab/>* BG051PO001-3.3.06-00 Изграждане и развитие на млади висококвалифицирани изследователи за ефективно прилагане на биомедицинските изследвания за подобряване качеството на живот, Оперативна програма „Развитие на човешките ресурси” 2007-2013, МОНМ и Европейския социален фонд на Европейския съюз. 2012-2015</text:p><text:p text:style-name="P108"><text:tab/>* BG051PO001-3.3.06-0048 по схемата за предоставяне на безвъзмездна финансова <text:soft-page-break/>помощ “Подкрепа за развитието на докторанти, постдокторанти, специализанти и млади учени”</text:p><text:p text:style-name="P108"><text:tab/>* BG051PO001-3.3.04/40: Изграждане на висококвалифицирани млади изследователи по съвременни информационни технологии за оптимизация, разпознаване на образи и подпомагане вземането на решения. 2009-2011</text:p><text:p text:style-name="P108"><text:tab/>* ДTK 02/71 УЕБ-базирана интерактивна система,подпомагаща построяването на модели и решаването на задачи за оптимизация и вземане на решения, 2009-2013</text:p><text:p text:style-name="P108"><text:tab/>* МУ02-63-МИ-09-000 Консолидиране и обработване на параметри за пожари в горски масиви на територията на България чрез прилагане на модела WEATHER RESEARCH AND FORECASTING MODEL – FIRE (WRF-FIRE), 2010-2011</text:p><text:p text:style-name="P107"/><text:h text:style-name="P531" text:outline-level="2"><text:bookmark-start text:name="__RefHeading___Toc59109_1762457734"/><text:s text:c="2"/>Приноси<text:bookmark-end text:name="__RefHeading___Toc59109_1762457734"/></text:h><text:p text:style-name="P88"/><text:h text:style-name="Heading_20_3" text:outline-level="3"><text:bookmark-start text:name="__RefHeading___Toc59318_608630531"/><text:s text:c="4"/>Н<text:span text:style-name="T285">аучни приноси</text:span><text:bookmark-end text:name="__RefHeading___Toc59318_608630531"/></text:h><text:p text:style-name="P88"/><text:p text:style-name="P163"><text:tab/>1. Предложен е евристичен подход за обучение на пълно свързани невронни мрежи в разпределена среда, базиран на инцидентно включване на възли;</text:p><text:p text:style-name="P163"><text:tab/>2. Предложен е евристичен подход за обучение на пълно свързани невронни мрежи в разпределена среда, базиран на диференциална еволюция;</text:p><text:p text:style-name="P163"><text:tab/>3. Разработен е метод за машинно обучение на пълно свързани невронни мрежи в разпределена среда, базиран на предложения евристичен подход за обучение с инцидентно включване на възли;</text:p><text:p text:style-name="P163"><text:tab/>4. Разработен е метод за машинно обучение на пълно свързани невронни мрежи в разпределена среда, базиран на предложения евристичен подход за обучение с диференциална еволюция;</text:p><text:p text:style-name="P88"/><text:h text:style-name="Heading_20_3" text:outline-level="3"><text:bookmark-start text:name="__RefHeading___Toc59320_608630531"/><text:s text:c="4"/>Научно-приложни приноси<text:bookmark-end text:name="__RefHeading___Toc59320_608630531"/></text:h><text:p text:style-name="P88"/><text:p text:style-name="P164"><text:tab/>5. Предложени са алгоритми за прогнозиране на времеви редове с използване на пълно <text:soft-page-break/>свързани невронни мрежи, обучавани с предложения евристичен подход с инцидентно включване на възли;</text:p><text:p text:style-name="P164"><text:tab/>6. Предложени са алгоритми за прогнозиране на времеви редове с използване на пълно свързани невронни мрежи, обучавани с предложения евристичен подход с диференциална еволюция;</text:p><text:p text:style-name="P88"/><text:h text:style-name="Heading_20_3" text:outline-level="3"><text:bookmark-start text:name="__RefHeading___Toc59322_608630531"/><text:s text:c="4"/>Приложни приноси<text:bookmark-end text:name="__RefHeading___Toc59322_608630531"/></text:h><text:p text:style-name="P88"/><text:p text:style-name="P164"><text:tab/>7. Изследвани са и са експериментално оценени предложените подходи, методи и алгоритми за прогнозиране на времеви редове с данни от валутни пазари.</text:p><text:p text:style-name="P88"/><text:h text:style-name="Heading_20_2" text:outline-level="2"><text:bookmark-start text:name="__RefHeading___Toc59111_1762457734"/><text:s text:c="2"/><text:span text:style-name="T230">Планове за бъдеща разработка</text:span><text:bookmark-end text:name="__RefHeading___Toc59111_1762457734"/></text:h><text:p text:style-name="P90"/><text:p text:style-name="P107"><text:tab/>Постигнатите резултати в дисертационната работа очертават следните насоки за бъдещи изследвания:</text:p><text:p text:style-name="P107"/><text:p text:style-name="P107"><text:tab/>* Да се изследват предложените евристични подходи за търсене на прогнози в други области, а не само по отношение на валутните пазари.</text:p><text:p text:style-name="P90"><text:tab/>* Да се разшири програмната система, като се включат и други методи за прогнозиране на времеви редове, с цел по-ефективен сравнителен анализ.</text:p><text:p text:style-name="P110"><text:tab/>* Да се разширят възможностите на уеб базирания интерфейс в системата и дори осъществяване на изчисления в разпределена среда, базиращи се на пресмятания върху мобилни устройства <text:span text:style-name="T232">[BAGE2016b]</text:span>.</text:p><text:p text:style-name="P90"/><text:p text:style-name="P405">Благодарности</text:p><text:p text:style-name="P422"/><text:p text:style-name="P422"><text:tab/>Благодаря на колегите от ИИТ-БАН и ИИКТ-БАН, които бяха редом до мен през годините и спомогнаха за моята работа. </text:p><text:p text:style-name="P422"/><text:p text:style-name="P422"><text:bookmark-start text:name="__RefHeading___Toc58936_137680543"/><text:tab/>Бих искал да благодаря на трима човека, моето семейство, без подкрепата на които тази работа не би била възможна. На първо място, това са моите родители Здравка и Димитър. Без всичките техни усилия и десетките години на безкористна подкрепа аз не бих имал шансовете да постигна всичко, което съм постигнал в живота. На второ място, това е моят брат Лъчезар, който е единственият човек, на когото съм разчитал в трудни моменти.<text:bookmark-end text:name="__RefHeading___Toc58936_137680543"/></text:p><text:p text:style-name="P422"/><text:p text:style-name="P422"><text:bookmark-start text:name="__RefHeading___Toc58938_137680543"/><text:tab/>Смятам и трима ви за част от този труд.<text:bookmark-end text:name="__RefHeading___Toc58938_137680543"/></text:p><text:p text:style-name="P422"><text:bookmark-start text:name="__RefHeading___Toc58940_137680543"/><text:tab/>Благодаря!<text:bookmark-end text:name="__RefHeading___Toc58940_137680543"/></text:p><text:p text:style-name="P420"/><text:h text:style-name="P521" text:outline-level="1"><text:bookmark-start text:name="__RefHeading___Toc59050_2051044689"/>Декларация за оригиналност на резултатите<text:bookmark-end text:name="__RefHeading___Toc59050_2051044689"/></text:h><text:p text:style-name="P6"/><text:p text:style-name="P87"><text:tab/>Декларирам, че настоящата дисертация съдържа оригинални резултати, получени при проведени от мен научни изследвания (с подкрепата и съдействието на консултанта и научния ми ръководител). Резултатите, които са получени, описани и/или публикувани от други учени, са надлежно и подробно цитирани в библиографията.</text:p><text:p text:style-name="P87"/><text:p text:style-name="P87"><text:tab/>Настоящата дисертация не е прилагана за придобиване на научна степен в</text:p><text:p text:style-name="P87">друго висше училище, университет или научен институт.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:span text:style-name="T229">Подпис:</text:span></text:p><text:p text:style-name="P6"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:span text:style-name="T229">Тодор Димитров Балабанов</text:span></text:p><text:p text:style-name="P6"/><text:h text:style-name="P521" text:outline-level="1"><text:bookmark-start text:name="__RefHeading__160_63795308"/>Библиография<text:bookmark-end text:name="__RefHeading__160_63795308"/></text:h><text:p text:style-name="P6"/><text:p text:style-name="P6">1. [JDXL2011] J. P. Donate, X. Li, G. G. Sanchez, A. S. de Miguel, Time series forecasting by evolving artificial neural networks with genetic algorithms, differential evolution and estimation of distribution algorithm, Neural Comput &amp; Applic, DOI 10.1007/s00521-011-0741-0, Springer-Verlag London Limited 2011, 14 Oct 2011.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">2. <text:span text:style-name="T45">[JPGG2010a]</text:span> J. Peralta, G. Gutierrez, A. Sanchis, Time series forecasting by evolving artificial neural networks using genetic algorithms and estimation of distribution algorithms, In Proceedings of IJCNN. 2010, 1-8.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">3. [PCJM1996<text:span text:style-name="T45">a</text:span>] P. Cortez, J, Machado, J. Neves, An Evolutionary Artificial Neural Network Time Series Forecasting System, International Conference on Artificial Intelligence, Expert Systems and Neural Networks, Honolulu, Hawaii, 1996.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">4. [AMFO1999] A. Foka, Time Series Prediction Using Evolving Polynomial Neural Networks, A dissertation submitted to the University of Manchester Institute of Science and Technology for the degree of MSc, 1999.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">5. [VBGM2006] V. Bevilacqua, G. Mastronardi, F. Menolascina, A. Paradiso, S. Tommasi, Genetic Algorithms and Artificial Neural Networks in Microarray Data Analysis: a Distributed Approach, Engineering Letters - Special Issue on Bioinformatics - ISSN: 1816-0948 13: 3. 335-343, 04 Nov 2006.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">6. [VLOL2004] V. Olej, Distributed Genetic and Eugenic Algorithms for Prediction of Gross Domestic Product Development by Frontal Neural Network, Proc. of the IEEE 4-th International Conference on Intelligent Systems Design and Applications, ISDA 04, Budapest, Hungary, 2004, 7-13.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">7. [MASE2005] M. Setati, Machine Learning for Decision-Support in Distributed Networks, A dissertation submitted to the Faculty of Engineering and the Build Environment, University of the <text:soft-page-break/>Witwatersrand, Johannesburg, in fulfilment of the requirements for the degree of Master of Science, Dec 2005.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">8. [NMMS2008] N. Mirarmandehi, M. Saboorian, A. Ghodrati, Time-Series Prediction using Neural Networks, http://ce.sharif.edu/~armandeh/Publish/ANN/TS.pdf.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">9. [PCJM1996<text:span text:style-name="T45">b</text:span>] P. Cortez, J. Machado, J. Neves, Time Series Forecasting in a Distributed Environment, Ibero-American Conference On Artificial Intelligence (IBERAMIA 96), 5, Cholula, Puebla, Mexico, 1996. [S.l.] : Limusa Noriega Editores, 1996. p. 68-77.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">10. [IBAT2012] Ismail B, Ataulla, M. Yunus, Time Series Forecasting Using Undecimated Wavelets, Neural Networks and Genetic Algorithm, International Journal of Electronics and Computer Science Engineering, Vol. 1, Num. 3, ISSN- 2277-1956, p. 1404-1415, 2012.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">11. [RSQZ2006] R. Segall, Q. Zhang, Applications of Neural Network and Genetic Algorithm Data Mining Techniques in Bioinformatics Knowledge Discovery - A Preliminary Study, Proceedings of the Thirty-seventh Annual Conference of the Southwest Decision Sciences Institute, p. 278-285, 2006.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">12. [CDTY2006] C. Dawson, T. Young, J. Allen, Machine Intelligence Genetic Algorithm Neural Network System for the Engineered Wood Industry, USDA SBIR Phase-I Final Report, Jul 2006.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">13. [MVRB2004] M. Versace, R. Bhatt, O. Hinds, M. Shiffer, Predicting the exchange traded fund DIA with a combination of genetic algorithms and neural networks, Expert Systems with Applications 27 (2004) 417–425, p. 417-425.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">14. [SOMF1992] S. Oliker, M. Furst, O. Maimon, A Distributed Genetic Algorithm for Neural Network Design and Training, Complex Systems 6 (1992) 459-477, p. 459-477.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">15. <text:span text:style-name="T45">[ITDG2008a]</text:span> I. Tsoulos, D. Gavrilis, E. Glavas, Neural network construction and training using grammatical evolution, Neurocomputing, 72(1-3) 269-277.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6"><text:soft-page-break/>16. [RAVA2012] R. Abiyev, V. Abiyev, Differential Evaluation Learning of Fuzzy Wavelet Neural Networks for Stock Price Prediction, Journal of Information and Computing Science, Vol. 7, No. 2, p.121-130, 2012.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">17. [DWFG2005] D. Wierstra, F. Gomez, J. Schmidhuber, Modeling Systems with Internal State using Evolino, In Proc. of the 2005 conference on genetic and evolutionary computation (GECCO), Washington, D. C., pp. 1795-1802, ACM Press, New York, NY, USA, 2005.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">18. [MKMB2010] M. Khashei, M. Bijari, An artificial neural network (p, d,q) model for timeseries forecasting, Expert Systems with Applications: An International Journal Vol. 37 Issue 1, January, p. 479-489, 2010.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">19. [ANWE1997] A. Weigend, Data Mining in Finance: Report From The Post-Nncm-96 Workshop on Teaching Computer Intensive Methods for Financial Modeling and Data Analysis, Decision Technologies for Financial Engineering (Proceedings of the Fourth International Conference on Neural Networks in the Capital Markets, NNCM-96), pp. 399-412, 1997.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">20. [LMRB2009] L. Maciel, R. Ballini, Design a Neural Network for Time Series Financial Forecasting: Accuracy and Robustness Analisys, XXIII International Congress of Applied Economics - ASEPELT&apos;09,Covilhp, Portugal, Jun 2009.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">21. <text:span text:style-name="T45">[ITDG2008b]</text:span> I. Tsoulos, D. Gavrilis, E. Glavas, Neural Network Construction and Training using Grammatical Evolution, Neurocomputing Vol. 72 Issue 1-3, p. 269-277, Dec 2008 .</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">22. [KKMM1999] KW. Ku, MW. Mak, WC. Siu, Adding Learning to Cellular Genetic Algorithms for Training Recurrent Neural Networks, IEEE Trans Neural Netw. 10(2), p.239-252, 1999.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">23. [DMLD1989] D. Montana, L. Davis, Training Feedforward Neural Networks Using Genetic Algorithms, IJCAI&apos;89 Proceedings of the 11th international joint conference on Artificial intelligence - Vol. 1, p.762-767, 1989.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">24. [EFKA2001] E. Kalyvas, Using Neural Networks and Genetic Algorithms to Predict Stock <text:soft-page-break/>Market Returns, A Thesis Submitted to the University of Manchester for The Degree of Master of Science in Advanced Computer Science in the Faculty of Science and Engineering, Oct 2001.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">25. [SCYW1999] S. Chen, Y. Wu, B. L. Luk, Combined Genetic Algorithm Optimization and Regularized Orthogonal Least Squares Learning for Radial Basis Function Networks, IEEE Transactions on Neural Networks, Vol. 10, No. 5, p.1239-1243, Sep 1999.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">26. [RSBA1998] R. Sexton, B. Alidaee, R. Dorsey, J. Johnson, Global Optimization for Artificial Neural Networks: A Tabu Search Application, European Journal of Operational Research, Vol. 106, Num. 2, pp. 570-584(15), 16 Apr 1998.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">27. [BHKT2005] B. Hu and KW. Tsui, Distributed Evolutionary Monte Carlo with Applications to Bayesian Analysis, University of Wisconsin - Madison, Technical Report NO. 1112, Nov 10, 2005.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">28. [ERHU2004] E. Hulthen, Improving Time Series Prediction Using Recurrent Neural Networks and Evolutionary Algorithms, Thesis For The Degree of Master of Science, Division of Mechatronics ,Department of Machine and Vehicle Systems, Chalmers University of Technology, Goteborg, Sweden, 2004.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">29. [ZPLL2006] Z. Ping, L. Ling-yan, S. Hao-shan, A Hybrid Location Algorithm Based on BP Neural Networks for Mobile Position Estimation, IJCSNS International Journal of Computer Science and Network Security, Vol.6 No.7A, p.162-167, Jul 2006.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">30. [JARG2001] J. Arifovica , R. Gencay, Using genetic algorithms to select architecture of a feedforward articial neural network, Physica A, Vol. 289, Issues 3-4, p.574-594, 15 Jan 2001.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">31. [CHTA2009] C. Tan, Financial Time Series Forecasting Using Improved Wavelet Neural Network, Master&apos;s Thesis, promoter Prof. Christian Norgaard Storm Pedersen, Bioinformatics Research Center, Aarhus University, Denmark, 31 May 2009.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">32. [LESP2006] L. Ekonomou SSP. Pappas, Implementation of Artificial Intelligence in the Time Series Prediction Problem, Proceedings of the 6th WSEAS International Conference on Simulation, <text:soft-page-break/>Modelling and Optimization, Lisbon, Portugal, September 22-24, 2006.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">33. <text:span text:style-name="T45">[JPGG2010b]</text:span> J. Peralta, G. Gutierrez, A. Sanchis, Automatic Design of Artificial Neural Networks to Forecast Time Series, Actas del V Simposio de Teoria y Aplicaciones de Mineria de Datos, III Congreso Espanol de Informatica. CEDI, ISBN 978-84-92812-62-2, 2010.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">34. [JORI1991] J. Riordan, A Neurla Network Based Distributed System for Forecasting the Stock Market, Subbmited to the Department of Electrical Engineering and Computer Science for the degree of Bachelor of Science in Computer Science and Engineering at the Massachusetts Institute of Technology, May 1991.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">35. [ASIC2002] A. Skabar, I. Cloete , Neural Networks, Financial Trading and the Efficient Markets Hypothesis, In ACSC &apos;02 Proceedings of the twenty-fifth Australasian conference on Computer science - Vol. 4, p.241-249, Australia 2002.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">36. [RSNS2001] R. Sexton, N. Sikander, Data Mining Using a Genetic Algorithm Trained Neural Network, Int. Syst. in Accounting, Finance and Management, p.201-210, 2001.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">37. [JRVC1998] J. Riley, V. Ciesielski, An Evolutionary Approach to Training Feed-Forward and Recurrent Neural Networks, In Proceedings of the Second International Conference on Knowledge Based Intelligent Electronic Systems (KES&apos;98), p.596-602, 1998.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">38. [ARSH2003] A. Shapiro , Capital Market Applications of Neural Networks, Fuzzy Logic and Genetic Algorithms, 13th International AFIR Colloquium, Vol. 1, p.493-514, 2003.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">39. [MDMP2006] M. Delgado, MC. Pegalajar, MP. Cuellar, Evolutionary Training for Dynamical Recurrent Neural Networks: An Application in Finantial Time Series Prediction, Mathware &amp; Soft Computing, Vol. 13, Num. 2, p.89-110, 2006.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">40. [JMAP2011] JJ. Moreno, A. Pol, P. Gracia, Artifi cial neural networks applied to forecasting time series, Psicothema, ISSN: 0214-9915, Vol. 23, Num. 2, pp. 322-329, 2011.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6"><text:soft-page-break/>41. [TGTT2009] T. Glezakos, T. Tsiligiridis, L. Iliadis, C. Yialouris, F. Maris, K. Ferentinos, Feature Extraction for Time Series Data: an Artificial Neural Network Evolutionary Training Model for the Management of Mountainous Watersheds, Neurocomputing, Vol. 73, Issues 1-3, p.49–59, Dec 2009.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">42. [CHSL1990] C. Slim, A genetic Neural Network approach applied to Forecast the volatility of financial time series, CiteSeerX, 10.1.1.89.7183.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">43. [KYKI2006] K. Kim, Artificial neural networks with evolutionary instance selection for financial forecasting, Expert Systems with Applications, Vol .30, Issue 3, p.519–526, Apr 2006.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">44. [HAMN2002] H. Alfares, M. Nazeeruddin, Electric load forecasting: literature survey and classi®cation of methods, International Journal of Systems Science, vol. 33, Num. 1, p.23-34, 2002.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">45. [MAMA1995] M. Mandischer, Evolving Recurrent Neural Networks with Non-binary Encoding, In Proceedings of the 2nd IEEE Conference on Evolutionary Computation (ICEC), p.584-589, 1995.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">46. [LSSO1999] L. See, S. Openshaw, Applying soft computing approaches to river level forecasting, Hydrological Sciences-Journal-des Sciences Hydrologiques, 44(5), p.763-778, Oct 1999.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">47. [SKYS2010] S. Khmylovyy, Y. Skobtsov, Feature Selection for Time-series Prediction in Case of Nondetermined Estimation, In Proceedings of Donetsk National Technical University, Num. 1, p.63-74, 2010.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">48. [DEDH2002] D. Eads, D. Hill, S. Davis, S. Perkins, J. Ma, R. Porter, J. Theiler, Genetic Algorithms and Support Vector Machines for Time Series Classication, In Society of Photo-Optical Instrumentation Engineers (SPIE) Conference Series, Vol. 4787, pp. 74–85, 2002.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">49. [MOAW2010] M. Awad, Optimization RBFNNs Parameters Using Genetic Algorithms: Applied on Function Approximation, International Journal of Computer Science and Security, Vol.4, Issue 3, <text:soft-page-break/>p.295-307, 2010.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">50. [MZPL2004] M. Zhong, P. Lingras, S. Sharma, Estimation of missing traffic counts using factor, genetic, neural, and regression techniques, Transportation Research Part C: Emerging Technologies, No. 12, p.139–166, 2004.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">51. [ANBG2011] A. Nor, B. Gharleghi, K. Omar, T. Sarmidi, A Novel Artificial Neural Network Model for Exchange Rate Forecasting, In Proceeding of 2nd International Conference on Business and Economic Research (2nd ICBER 2011), p.99-108, 2011.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">52. [RSRD1998] R. Sexton, R. Dorsey, J. Johnson, Toward Global Optimization of Neural Networks: A Comparison of the Genetic Algorithm and Backpropagation, Decision Support Systems, Vol. 22, No. 2, p.171-185, 1998.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">53. [BZHM1993] BT. Zhang, H. Muhlenbein, Evolving Optimal Neural Networks Using Genetic Algorithms with Occam&apos;s Razor, Complex Systems, Vol. 7, Num. 3, p.199-220, 1993.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">54. [IDAD1998] I. De Falco, A. Della Cioppa, A. Iazzetta, P. Natale, E. Tarantino, Optimizing Neural Networks for Time Series Prediction, In Procedding of Third World Conference on Soft Computing (WSC3): Engineering Design and Manifacturing, Jul 1998.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">55. [RSRD1999] R. Sexton, R. Dorsey, J. Johnson, Optimization of Neural Networks: A Comparative Analysis of the Genetic Algorithm and Simulated Annealing, European Journal of Operational Research, Vol. 114, Issue 3, p.589-601, 1999.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">56. [ARGH2012] A. Ghosh, Comparative study of Financial Time Series Prediction By Artificial Neural Network with Gradient Descent Learning, International Journal Of Scientific &amp; Engineering Research, Vol. 3 Issue 1, Jan 2012.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">57. [SSST2006] S. Sirakaya, S. Turnovsky, M. Alemdar, Feedback Approximation of the Stochastic Growth Model by Genetic Neural Networks, Computational Economics, Vol. 27, p.185-206, 2006.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6"><text:soft-page-break/>58. [SMGM1996] S. Mahfoud, G. Mani, Financial Forecasting Using Genetic Algorithms, Applied Artificial Intelligence, Vol. 10, p.543-565, 1996.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">59. [MHRK2009] M. Hlavacek, R. Kalous, F. Hakl, Neural network with cooperative switching units with application to time series forecasting, Computer Science and Information Engineering, 2009 WRI World Congress on Computer Science and Information Engineering, Vol. 5, p.676-682, 2009.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">60. [HNTH2004] H. Niska, T. Hiltunen, A. Karppinen, J. Ruuskanen, M. Kolehmainen, Evolving the neural network model for forecasting air pollution time series, Engineering Applications of Artificial Intelligence, Vol. 17, Num. 2, p.159–167, 2004.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">61. [MEVO2011] M. Vora, Genetic Algorithm for Trading Signal Generation: Solution to trader’s dilemma: Is it right time to trade?, 2010 International Conference on Business and Economics Research, Vol.1,IACSIT Press, Kuala Lumpur, Malaysia, 2011.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">62. [RPSL2005] R. Patuelli, S. Longhi, A. Reggiani, P. Nijkamp, Forecasting Regional Employment in Germany by Means of Neural Networks and Genetic Algorithms, Computational Economics 0511002, EconWPA, 2005.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">63. [KMKC2000] KZ. Mao, KC. Tan, W. Ser, Probabilistic Neural-Network Structure Determination for Pattern Classification, IEEE Transactions on Neural Networks, Vol. 11, No. 4, Jul 2000.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">64. [AYGU2009] A. Guven, Linear genetic programming for time-series modelling of daily flow rate, Journal of Earth System Science, Vol.118, No. 2, p.137–146, Apr 2009.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">65. [SVEK2003] S. Eklund, Time Series Forecasting using Massively Parallel Genetic Programming, International Parallel and Distributed Processing Symposium (IPDPS&apos;03), pp.143a, 2003.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">66. [BCJB2003] B. Chramcov, J. Balati, Prediction of the Heat Supply Daily Diagram via Artificial <text:soft-page-break/>Neural Network, In Proceedings of the 4th International Carpathian Control Conference ICCC 2003, p.703-706, 2003.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">67. [LHBB2002] L. Hamm, B. Brorsen, Global Optimization Methods, Paper presented at the Western Agricultural Economics Association Annual Meetings, Long Beach, CA, Jul 2002.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">68. [ABEB2012] A. Barbulescu, E. Bautu, A Hybrid Approach for Modeling Financial Time Series, The International Arab Journal of Information Technology, Vol. 9, No. 4, p.327-335, Jul 2012.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">69. [PDAA2006] P. Doganis, A. Alexandridis, P. Patrinos, H. Sarimveis, Time series sales forecasting for short shelf-life food products based on artificial neural networks and evolutionary computing, Journal of Food Engineering, Vol. 75(2), p.196–204, 2006.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">70. [ERFO1993] E. Foster, Commodity Futures Price Prediction, an Artificial Intelligence Approach, A Thesis Submitted to the Graduate Faculty of The University of Georgia in Partial Fulfillment of the Requirements for the Degree Master of Science Athens, Georgia.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">71. [JVGM2002] J. Valdes, G. Mateescu, Time Series Model Mining with Similarity-Based Neuro-Fuzzy Networks and Genetic Algorithms: A Parallel Implementation, In Proceedings of the RSCTC&apos;02, Special Session on Distributed andCollaborative Data Mining, Pennsylvania. October 2002. NRC 44933.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">72. [JSKU1998] J. Kutsurelis, Forecasting Financial Markets Using Neural Networks: An Analysis of Methods and Accuracy, Submitted in partial fulfillment of the requirements for the degree of Master of Science in Management from the Naval Postgraduate School, Sep 1998.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">73. [SMSK2001] SW. Moon, SG. Kong, Block-Based Neural Networks, IEEE Transactions On Neural Networks, Vol. 12, No. 2, Mar 2001.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">74. [RSRD2000] R. Sexton, R. Dorsey, Reliable classification using neural networks: a genetic algorithm and backpropagation comparison, Decision Support Systems, Vol. 30, p.11–22, 2000.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6"><text:soft-page-break/>75. [MUAB2005] M. Abdella, The Use of Genetic Algorithms and Neural Networks to Approximate Missing Data in Database, A research report submitted to the Faculty of Engineering and Built Environment, University of the Witwatersrand, Johannesburg, in partial fulfilment of the requirements for the degree of Master of Science in Engineering by coursework and research report, Jan 2005.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">76. [RPTL2002] R. Prudencio, T. Ludermir, Neural Network Hybrid Learning: Genetic Algorithms &amp; Levenberg-Marquardt, In Proceedings of Between Data Science And Applied Data Analysis, Part III, p.464, 2002.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">77. [YAHU2009] Y. Huang, Advances in Artificial Neural Networks – Methodological Development and Application, Algorithms, Vol.2, No.3, p.973-1007, 2009.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">78. [EUVO2005] E. Vogel, Complex Indicators: Nonlinear Pricing and Reflexivity, Department of Informatics, St. Petersburg State University of Economics and Finance, 191023, Saint-Petersburg, Russia, 2005.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">79. [IVTL2011] I. Valenca, T. Lucas, T. Ludermir, Selecting Variables With Search Algorithms and Neural Networks to Improve the Process of Time Series Forecasting, International Journal of Hybrid Intelligent Systems - Feature and algorithm selection with Hybrid Intelligent Techniques, Vol. 8, Issue 3, p.129-141, Aug 2011.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">80. [YCBY2005] Y. Chen, B. Yang, J. Dong, A. Abraham, Time-series forecasting using flexible neural tree model, Information Sciences: an International Journal, Vol. 174, Issue 3-4, p. 219-235, 11 Aug 2005.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">81. [PGSC2007] P. Gautham, S. Chandrasekar, O. Piyush, Artificial Neural Network Based Short Term Load Forecasting for the Distribution Utilities, National Conference on Distribution Automation, CPRI, Bangalore, 2007.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">82. [BLLE1997] B. LeBaron, An Evolutionary Bootstrap Approach to Neural Network Pruning and Generalization, Unpublished working paper, SSRI working papers, 9718, 1997.</text:p><text:p text:style-name="P6"><text:soft-page-break/></text:p><text:p text:style-name="P6">83. [JYJH1999] JM. Yang, JT. Horng, CY. Kao, Incorporation Family Competition into Gaussian and Cauchy Mutations to Training Neural Networks Using an Evolutionary Algorithm, In Proceedings of the 1999 Congress on Evolutionary Computation (CEC 99), Vol. 3, p.1994-2001, Jul 1999.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">84. [PPAM2011] P. Padhiary, A. Mishra, Development of Improved Artificial Neural Network Model for Stock Market Prediction, International Journal of Engineering Science and Technology (IJEST), Vol. 3, No. 2, p.1576-1581, Feb 2011.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">85. [AOAC2007] A. Ozuna, A. Cifter, Nonlinear Combination of Financial Forecast with Genetic Algorithm, MPRA Paper No. 2488, posted 07, Nov 2007.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">86. [GDAM2008] G. Dahl, A. McAvinney, T. Newhall, Parallelizing Neural Network Training for Cluster Systems, PDCN&apos;08 Proceedings of the IASTED International Conference on Parallel and Distributed Computing and Networks, p.220-225, 2008.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">87. [XJHA2008] X. Jiang, H. Adeli, Neuro-genetic algorithm for non-linear active control of structures, International Journal for Numerical Methods in Engineering, Vol. 75, Issue 7, p.770-786, Aug 2008.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">88. [MVDL2008] M. Vasquez, D. Losada, F. Osorio, Exploiting Stock Data: A Survey Of Computational Techniques for Generating Portfolio Beliefs, Aceptado para publicar en Vol. 28, No. 1. Revista Ingenieria e Investigacion Facultad de Ingenieria, Apr 2008.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">89. [EHMW2004] E. Hulthen, M. Wahde, Improved time series prediction using evolutionary algorithms for the generation of feedback connections in neural networks, In Proceedings of Computational Finance and its Applications, ISBN/ISSN: 1-85312-709-4, 2004.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">90. [IEMH2011] I. Espino, M. Hernandez, Short-Term Wind Speed Forecasting Model based on Banks of Support Vector Regressors, 14th Conferencia de la Asociacion Española Para la Inteligencia Artificial (CAEPIA&apos;11) San Cristobal de La Laguna, Tenerife, Espana, Vol. 1, Nov. <text:soft-page-break/>2011.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">91. [DIPI2002] D. Pissarenko, Neural Networks For Financial Time Series Prediction: Overview Over Recent Research, A project completed as part of the requirements for the BSc (Hons) Computer Studies at the University of Derby in Austria, 2001-2002.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">92. [CDAH1999] C. Dunis, A. Harris, S. Leong, P. Nacaskul, Optimising Intraday Trading Models with Genetic Algorithms, Neural Network World, No 9/3, p.193-223, 1999.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">93. [MAHL2009] M. Hlavacek, Seasonal Time Series Modeling via Neural Networks with Switching Units, PhD Thesis, Faculty of Nuclear Sciences and Physical Engineering, Czech Technical University, Prague, Sep 2009.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">94. [NWZM2007] N. Wagner, Z. Michalewicz, M. Khouja, RR. McGregor, Time Series Forecasting for Dynamic Environments: the DyFor Genetic Program Model, IEEE Transactions on Evolutionary Computation, Vol. 11, Issue 4, p.433-452, Aug 2007.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">95. [LOBO2004] L. Bodis, Financial Time Series Forecasting Using Artificial Neural Networks, Master Thesis, Babes-Bolyai University, Faculty of Mathematics and Computer Science, Department of Computer Science, 2004.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">96. [MKMB2011] M. Khashei, M. Bijari, Which Methodology is Better for Combining Linear and Nonlinear Models for Time Series Forecasting?, Journal of Industrial and Systems Engineering, Vol. 4, No. 4, p.265-285, 2011.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">97. [MDMB2012] M. Djennas, M. Benbouziane, M. Djennas, A Neural Network and Genetic Algorithm Hybrid Model for Modeling Exchange Rate: The Dollar – Kuwaiti Dinar Case, International Research Journal of Finance and Economics, Issue 92, p.141-162, Jun 2012.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">98. [SKHK2008] S. Kim, HS. Kim, Neural networks and genetic algorithm approach for nonlinear evaporation and evapotranspiration modeling, Journal of Hydrology, Vol. 351, Issues 3–4, p.299–317, Apr 2008.</text:p><text:p text:style-name="P6"><text:soft-page-break/></text:p><text:p text:style-name="P6">99. [JERI1997] J. Riley, An Evolutionary Approach to Training Feed-Forward and Recurrent Neural Networks, A minor thesis submitted in partial fulfilment of the requirements for the degree of Master of Applied Science in Information Technology, Department of Computer Science, Royal Melbourne Institute of Technology, Australia, Nov 1997.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">100. [XYYL1997] X. Yao, Y. Liu, A New Evolutionary System for Evolving Artificial Neural Networks, IEEE Transactions On Neural Networks, Vol. 8, No. 3, May 1997.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">101. [MMMH2010] M. Majumder, MD. Hussian, Forecasting of Indian Stock Market Index Using Artificial Neural Network, National Stock Exchange of India Limited, NSE Newsletter, Jul 2010.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">102. [MSMJ2009] M. Shahi, M. Jaksa, H. Maier, State of the Art of Artificial Neural Networks in Geotechnical Engineering, Advances in Artificial Neural Systems (Bouquet 08), Vol. 2009, Article No. 5, 2009.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">103. [WLRP2002] W. Leigh, R. Purvis, J. Ragusa, Forecasting the NYSE composite index with technical analysis, pattern recognizer, neural network, and genetic algorithm: a case study in romantic decision support, Decision Support Systems, Vol. 32, Issue 4, p.361–377, Mar 2002.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">104. [JIHU2004] J. Huang, Genetic Algorithms with Functional Mutation and Mating Operators in Time Series Data Mining, A Thesis in Computer Science Submitted to the Graduate Faculty of Texas Tech University in Partial Fulfillment of the Requirements for the Degree of Master of Science, 2004.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">105. [MPAC2008] ME. Pedersen, A. Chipperfield, Tuning Differential Evolution For Artificial Neural Networks, Hvass Laboratories Technical Report no. HL0803 (Nova Publishers 2011), 2008.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">106. [BSDJ2009] B. Subudhi, D. Jena, An Improved Differential Evolution Trained Neural Network Scheme for Nonlinear System Identification, International Journal of Automation and Computing, Vol. 6, No. 2, p.137-144, May 2009.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6"><text:soft-page-break/>107. [GNYZ2007] G. Ning, Y. Zhou, A Modified Differential Evolution Algorithm for Optimization Neural Network, In Proceedings of ISKE-2007, Advances in Intelligent Systems Research, Oct 2007.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">108. [ABWD2008] AS. Wdaa, Differential Evolution for Neural Networks Learning Enhancement, A project report submitted in partial fulfillment of the requirements for the award of the degree of Master of Science (Computer Science), Faculty of Computer Science and Information System, Universiti Teknologi Malaysia, Oct 2008.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">109. [ASMB2008] A. Slowik, M. Bialko, Training of Artificial Neural Networks Using Differential Evolution Algorithm, Conference on Human System Interactions (HSI08), Krakow, Poland, p.60-65, May 2008.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">110. [HMAB2009] HM. Abdul Kader, Neural Networks Training Based on Differential Evolution Algorithm Compared with Other Architectures for Weather Forecasting34, IJCSNS International Journal of Computer Science and Network Security, Vol.9 No.3, p.92-99, Mar 2009.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">111. [BYXH2006] B. Yu , X. He, Training Radial Basis Function Networks with Differential Evolution, In Proceeding of IEEE International Conference on Granular Computing (GrC&apos;06), p.369-372, May 2006.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">112. [JIJK2003] J. Ilonen, JI. Kamarainen, J. Lampinen, Differential Evolution Training Algorithm for Feed-Forward Neural Networks, Neural Process Letters, Vol.17, No.1, p.93–105, 2003.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">113. [TTSS2009] T. Takahama, S. Sakai, A. Hara, N. Iwane, Predicting Stock Price Using Neural Networks Optimized by Differential Evolution with Degeneration, International Journal of Innovative Computing, Information and Control, Vol. 5, No. 12(B), p.5021–5031, Dec 2009.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">114. [BSDJ2008] B. Subudhi, D. Jena, M. Gupta, Memetic Differential Evolution Trained Neural Networks For Nonlinear System Identification, In Proceedings of the IEEE Region 10 Colloquium and the Third International Conference on Industrial and Information Systems (ICIIS 2008), Kharagpur, India, p.1-6, Dec 2008.</text:p><text:p text:style-name="P6"><text:soft-page-break/></text:p><text:p text:style-name="P6">115. [YWWL2011] YC. Wu, WP. Lee, CW. Chien, Modified the Performance of Differential Evolution Algorithm with Dual Evolution Strategy, In Proceeding of 2009 International Conference on Machine Learning and Computing IPCSIT, Vol.3 (2011), p.57-63, IACSIT Press, Singapore, 2011.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">116. [HKMS2012] H. Kader, M. Salam, Evaluation of Differential Evolution and Particle Swarm Optimization Algorithms at Training of Neural Network for Stock Prediction, International Arab Jurnal of e-Technology, Vol. 2, No. 3, p.145-151, Jan 2012.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">117. <text:span text:style-name="T45">[VPDS1998a]</text:span> V. Plagianakos, D. Sotiropoulos, M. Vrahatis, Integer weight training by differential evolution algorithms, Recent Advances in Circuits and Systems, p.327-331, 1998.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">118. [ABWD2011] AS. Wdaa, Differential evolution for neural networks learning enhancement, Jurnal of university of anbar for pure science, Vol.5, No.2, p.79-84, 2011.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">119. [SDAA2008] S. Das, A. Abraham, A. Konar, Particle Swarm Optimization and Differential Evolution Algorithms: Technical Analysis, Applications and Hybridization Perspectives, Advances of Computational Intelligence in Industrial Systems, Studies in Computational Intelligence (SCI), Vol.116, p.1-38, 2008.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">120. [SLKG2009] S. Lahiri, K.Ghanta, Artificial neural network model with the parameter tuning assisted by a differential evolution technique: The study of the hold up of the slurry flow in a pipeline, Chemical Industry &amp; Chemical Engineering Quarterly, Vol. 15, No. 2, p.103−117, 2009.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">121. [KBWK2009] K. Bandurski, W. Kwedlo, Training neural networks with a hybrid differential evolution algorithm, Zeszyty Naukowe Politechniki Bialostockiej, Informatyka, Z. 4, p5-17, Bibliogr. 16 poz., Wykr. 2009.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">122. [JLJL2005] J. Liu, J. Lampinen, A Differential Evolution Based Incremental Training Method for RBF Networks, In Proceedings of the 2005 conference on Genetic and evolutionary computation (GECCO’05), p.881-888, Jun 2005.</text:p><text:p text:style-name="P6"><text:soft-page-break/></text:p><text:p text:style-name="P6">123. [JDDH2007] JX. Du, DS. Huang, XF. Wang, X. Gu, Shape recognition based on neural networks trained by differential evolution algorithm, Neurocomputing, Vol. 70, Issue 4-6, p.896–903, Jan 2007.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">124. [HSRG2011] H. Shah, R. Ghazali, N. Nawi, Using Artificial Bee Colony Algorithm for MLP Training on Earthquake Time Series Data Prediction, In Proceedings of CoRR, Vol. 3, Issue 6, p.135-142, 2011.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">125. [CLCW2011] CJ. Lin, CF. Wu, CY. Lee, Design of a Recurrent Functional Neural Fuzzy Network Using Modified Differential Evolution, International Journal of Innovative Computing, Information and Control, Vol. 7, No. 2, p.669-683, Feb 2011.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">126. [NAFK2011] N. Amjady, F. Keynia, H. Zareipour, Short-term wind power forecasting using ridgelet neural network, Electric Power Systems Research, Vol. 81, No.12, p.2099–2107, Dec 2011.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">127. [VPMV2002] V. Plagianakos, M. Vrahatis, Parallel evolutionary training algorithms for “hardware-friendly” neural networks, Natural Computing, Vol. 1, Issue 2-3, p.307–322, Jun 2002.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">128. <text:span text:style-name="T45">[VPDS1998b]</text:span> V. Plagianakos, D. Sotiropoulos, M. Vrahatis, Evolutionary Algorithms for Integer Weight Neural Network Training, Technical Report No.TR98-04, University of Patras, Greece, 1998.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">129. [HARS2001] H. Abbass, R. Sarker, Simultaneous Evolution of Architectures and Connection Weights in ANNs, In Proceedings of 5th Biannual Conference on Artificial Neural Networks and Expert Systems (ANNES 2001), Dunedin, New Zealand, p.16-21, 2001.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">130. [VPMV2000] V. Plagianakos, M. Vrahatis, Training Neural Networks with Threshold Activation Functions and Constrained Integer Weights, In Proceedings of IEEE-INNS-ENNS International Joint Conference on Neural Networks (IJCNN&apos;00), Vol. 5, p.161-166, 2000.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">131. [HFJL2003] HY. Fan, J. Lampinen, G. Dulikravich, Improvements to Mutation Donor <text:soft-page-break/>Formulation of Differential Evolution, International Congress on Evolutionary Methods for Design Optimization and Control with Applications to Industrial Problems EUROGEN03, p. 1-12, 2003.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">132. [HTBM2011] H. Thethi, B. Majhi, G. Panda, Efficient System Identification using a Low Complexity Nonlinear Network with Differential Evolution and its variant based Training Schemes, International Journal of Computer Applications, Vol. 31, No. 8, p.38-46, Oct 2011.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">133. [DXSL2007] D. Xu, S. Li, F. Qian, An Improved Differential Evolution Algorithm and its Application in Reaction Kinetic Parameters Estimation, ISKE-2007 Proceedings, Advances in Intelligent Systems Research, Oct 2007.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">134. [HIAL2004] H. Al-Hindi, Approximation of a Discrete Event Stochastic Simulation Using an Evolutionary Artificial Neural Network, Journal of King Abdulaziz University, Engineering Sciences, Vol. 15, No. 1, p.125-138, 2004.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">135. [RGAC2010] R. Giri, A. Chowdhury, A. Ghosh, S. Das, A. Abraham, V. Snasel, A Modified Invasive Weed Optimization Algorithm for Training of Feed-Forward Neural Networks, In Proceedings of Proceedings of the IEEE International Conference on Systems, Man and Cybernetics (SMC10), p.3166-3173, 2010.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">136. [YLYL2011] YC. Lin, YC. Lin, WC. Chang, KL. Su, Evolutionary Neural Networks with Mixed-Integer Hybrid Differential Evolution, Journal of Computers, Vol. 6, No. 8, p.1591-1596, Aug 2011.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">137. [WGAF2010] W. Gong, A. Fialho, Z. Cai, Adaptive Strategy Selection in Differential Evolution, In Proceedings of Genetic and Evolutionary Computation Conference (GECCO10), p.409-416, 2010.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">138. [JNJS2011] J. Novo, J. Santos, M. Penedo, Optimization of Topological Active Nets with Differential Evolution, In Proceedings of the 10th international conference on Adaptive and natural computing algorithms (ICANNGA11), Vol. 6593, p.350-360, 2011.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6"><text:soft-page-break/>139. [DTNP2004] D. Tasoulis, N. Pavlidis, V. Plagianakos, M. Vrahatis, Parallel Differential Evolution, In Proceedings of IEEE Congress on Evolutionary Computation (CEC 2004), p. 2023-2029, 2004.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">140. [KKAS2006] K. Kozlov, A. Samsonov, New migration scheme for parallel differential evolution, In Proceedings of the Fifth International Conference on Bioinformatics of Genome Regulation and Structure, p.141–144, 2006.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">141. [SGNB2011] S. Gonzalez, N. Barriga, Fully Parallel Differential Evolution, In Competition of GPUs for Genetic and Evolutionary Computation at the 2011 Genetic and Evolutionary Computation Conference (GECCO’2011), Dublin, Ireland, Jul 2011.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">142. [DZDP2003] D. Zaharie, D. Petcu, Parallel implementation of multi-population differential evolution, In Proceedings of the NATO Advanced Research Workshop on Concurrent Information Processing and Computing (IOS Press, 2003), p. 223-232, 2003.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">143. [MWFN2011] M. Weber, F. Neri, V. Tirronen, Shuffle Or Update Parallel Differential Evolution for Large Scale Optimization, Soft Computing, Vol. 15, Issue 11, p. 2089-2107, Nov 2011.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">144. [PEBU2011] P. Bujok, Parallel Models of Adaptive Differential Evolution Based on Migration Process, Aplimat - Journal of Applied Mathematics, Vol. 4, No. 2, p.347-356, 2011.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">145. [RSKP1995] R. Storn, K. Price, Differential Evolution - A simple and efficient adaptive scheme for global optimization over continuous spaces, Technical Report TR-95-012, ICSI, Berkeley, Mar 1995.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">146. <text:span text:style-name="T45">[PKJP2011a]</text:span> P. Kromer, J. Platos, V. Snasel, A. Abraham, A Comparison of Many-threaded Differential Evolution and Genetic Algorithms on CUDA, In Proceedings of Third World Congress on Nature and Biologically Inspired Computing (NaBIC), p.509-514, 2011.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">147. <text:span text:style-name="T45">[DAZA2004a]</text:span> D. Zaharie, A multipopulation differential evolution algorithm for multimodal <text:soft-page-break/>optimization, In Proceedings of Mendel, 10th International Conference on Soft Computing, p. 17-22, 2004.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">148. [LRCC2011] L. Ramirez-Chavez, C. Coello, E. Rodriguez-Tello, A GPU-Based Implementation of Differential Evolution for Solving the Gene Regulatory Network Model Inference Problem, In Proceedings of the Fourth International Workshop on Parallel Architectures and Bioinspired Algorithms (WPABA&apos;11), Oct 2011.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">149. [SREN2010] S. Enaganti, Solving Correlation Matrix Completion Problems using Parallel Differential Evolution, A Thesis Submitted in Partial Fulfillment of the Requirements for the Degree of Master of Science in The University Of British Columbia, Nov 2010.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">150. [JOTT2011] J. Olensek, T. Tuma, J. Puhan, A. Burmen, A new asynchronous parallel global optimization method based on simulated annealing and differential evolution, Applied Soft Computing, Vol. 11, Issue 1, p. 1481-1489, Jan 2011 .</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">151. [KITA2012] K. Tagawa, A Statistical Study of Concurrent Differential Evolution on Multi-core CPUs, In Proceedings of the Italian Workshop on Artificial Life, Evolution and Complexity (WIVACE 2012), 2012.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">152. [DAZA2003] D. Zaharie, Control of Population Diversity and Adaptation in Differential Evolution Algorithms, In Proceedings of the 9th International Conference on Soft Computing (MENDEL 2003), p.41–46, Jun 2003.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">153. [DXLD2012] D. Xie, L. Ding, X. Du, Y. Hu, S. Wang, Self-adaptive Pseudo-parallel Differential Evolution Algorithm, Journal of Computational Information Systems, Vol. 8, No. 8, p.3403-3411, 2012.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">154. [ASML2007] A. Sutton, M. Lunacek, L. Whitley, Differential Evolution and Non-separability: Using selective pressure to focus search, In Proceedings of Genetic and Evolutionary Computation Conference (GECCO-07), p. 1428-1435, Jul 2007.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6"><text:soft-page-break/>155. [MAWE2010] M. Weber, Parallel Global Optimization, Structuring Populations in Differential Evolution, Dissertation in Faculty of Information Technology of the University of Jyvaskyla, Nov 2010.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">156. <text:span text:style-name="T45">[KTTI2010a]</text:span> K. Tagawa, T. Ishimizu, Concurrent Differential Evolution Based on MapReduce, International Journal Of Computers, Vol. 4, No. 4, p. 161-168, 2010.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">157. [MEVP2008] M. Epitropakis, V. Plagianakos, M. Vrahatis, Balancing the exploration and exploitation capabilities of the Differential Evolution Algorithm, In Proceedings of the IEEE Congress on Evolutionary Computation (CEC 2008), p. 2686-2693, Jun 2008.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">158. [SRHT2008] S. Rahnamayan, H. Tizhoosh, M. Salama, Opposition-Based Differential Evolution, In Proceedings of IEEE Transactions On Evolutionary Computation, Vol. 12, No. 1, p. 64-79, Feb 2008.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">159. [RCAD2010] R. Cabido, A. Duarte, A. Montemayor, J. Pantrigo, Differential Evolution for Global Optimization on GPU, In Proceedings of the 3rd International Conference on Metaheuristics and Nature Inspired Computing (META&apos;10), Oct 2010.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">160. [NPVP2006] N. Pavlidis, V. Plagianakos, D. Tasoulis, M. Vrahatis, Human Designed Vs. Genetically Programmed Differential Evolution Operators, In Proceedings of IEEE Congress on Evolutionary Computation (CEC 2006), p.1880-1886, Jul 2006.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">161. [DDJG2012] D. Davendra, J. Gaura, M. Bialic-Davendra, R. Senkerik, CUDA Based Enhanced Differential Evolution: a Computational Analysis, In Proceedings of the 26th European Conference on Modelling and Simulation (ECMS 2012), May 2012.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">162. <text:span text:style-name="T45">[PKJP2011b]</text:span> P. Kromer, J. Platos, V. Snasel, A. Abraham, An Implementation of Differential Evolution for Independent Tasks Scheduling on GPU, In Proceedings of the 6th international conference on Hybrid artificial intelligent systems (HAIS&apos;11), Vol. 1, p. 372-379, 2011.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">163. [DLHL2012] DH. Lim, H. Luong, C. Ahn, A Novel Differential Evolution Using Multiple-<text:soft-page-break/>Deme Based Mutation, International Journal of Innovative Computing, Information and Control (IJICIC), Vol. 8, No. 5A. p. 3049-3060, May 2012.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">164. [YGSG2011] Y. Gao, S. Gong, Ge Zhao , A Novel and Robust Evolution Algorithm for Optimizing Complicated Functions, In Proceedings of the Fourth International Workshop on Advanced Computational Intelligence (IWACI), p. 370-373, Oct 2011.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">165. [NNHI2010] N. Noman, H. Iba, Cellular Differential Evolution Algorithm, In Proceedings of the 3rd Australasian Joint Conference Adelaide, Advances in Artificial Intelligence, p. 293-302, Dec 2010.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">166. [NPDT2005] N. Pavlidis, D. Tasoulis, V. Plagianakos, M. Vrahatis, Spiking Neural Network Training Using Evolutionary Algorithms, In Proceedings of International Joint Conference on Neural Networks (IJCNN’05), Poznan University of Technology, Institute of Control and Information Engineering, p. 2190-2194, 2005.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">167. [RMPS2010] R. Mallipeddi, P. Suganthan, Differential Evolution Algorithm with Ensemble of Parameters and Mutation and Crossover Strategies, In Proceedings of the First International Conference on Swarm, Evolutionary, and Memetic Computing (SEMCCO10), Vol. 6466, p. 71-78, Dec 2010.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">168. <text:span text:style-name="T45">[KTTI2010b]</text:span> K. Tagawa, T. Ishimizu, Concurrent Implementation of Differential Evolution, In Proceedings of the 10th WSEAS international conference on Systems theory and scientific computation (ISTASC&apos;10), p. 65-70, 2010.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">169. [KTTI2011] K. Tagawa, T. Ishimizu, Concurrent Differential Evolution for Uncertain Optimization Problems, In Proceedeings of The Fifth International Conference on Advanced Engineering Computing and Applications in Sciences (ADVCOMP11), p. 48-53, Nov 2011.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">170. [MDRT2011] M. Depolli, R. Trobec, B. Filipic, Parallel Evolutionary Algorithm for Heterogeneous Computer Systems, In Proceedings of PARNUM 2011 International Workshop on Parallel Numerics 11, Oct 2011.</text:p><text:p text:style-name="P6"><text:soft-page-break/></text:p><text:p text:style-name="P6">171. [TDDA2010] T. Desell, D. Anderson, M. Magdon-Ismail, H. Newberg, B. Szymanski, C. Varela, An Analysis of Massively Distributed Evolutionary Algorithms, In Proceedings of the IEEE Congress on Evolutionary Computation (IEEE CEC 2010), p. 1-8, Jul 2010.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">172. [EZMT2011] E. Zaferani, M. Teshnehlab, The Parallel Evaluation Strategy Approach to Solving Optimization Problems, In Proceedings of the International Conference on Computer and Software Modeling (IPCSIT11), Vol. 14, p.123-127, 2011.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">173. <text:span text:style-name="T45">[DAZA2004b]</text:span> D. Zaharie, Extensions of Differential Evolution Algorithms for Multimodal Optimization, In Proceedings of the 6th International Symposium of Symbolic and Numeric Algorithms for Scientific Computing (SYNASC’04), Vol. 42, No. 3, p. 523-534, 2004.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">174. [FLHL2003] F. Leung, H. Lam, S. Ling, P. Tam, Tuning of the Structure and Parameters of a Neural Network Using an Improved Genetic Algorithm, IEEE Transactions on Neural Networks, Vol. 14, No. 1, p. 79-88, Jan 2003.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">175. [DZGC2006] D. Zaharie, G. Ciobanu, Distributed Evolutionary Algorithms Inspired by Membranes in Solving Continuous Optimization Problems, In Proceedings of the 7th international conference on Membrane Computing (WMC&apos;06), p. 536-553, 2006.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">176. [FFRK2012] F. Fabris, R. Krohling, A Co-evolutionary Differential Evolution algorithm for solving Min-Max problem: An implementation on the GPU with C-CUDA, Expert Systems with Applications, Vol. 39, No. 12, p. 10324–10333, Sep 2012.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">177. [SDAA2009] S. Das, A. Abraham, U. Chakraborty, A. Konar, Differential Evolution Using a Neighborhood-based Mutation Operator, IEEE Transactions on Evolutionary Computation, Vol. 13, No. 3, p. 526-553, Jun 2009.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">178. [EMJV2006] E. Mezura-Montes, J. Velazquez-Reyes, C. Coello-Coello, A Comparative Study of Differential Evolution Variants for Global Optimization, In Proceedings of the 8th annual conference on Genetic and evolutionary computation (GECCO&apos;06), p. 485-492, 2006.</text:p><text:p text:style-name="P6"><text:soft-page-break/></text:p><text:p text:style-name="P6">179. [AIXL2011] A. Iorio, X. Li, Improving the performance and scalability of Differential Evolution on problems exhibiting parameter interactions, Soft Computing, Vol. 15, No. 9, p. 1769-1792, Sep 2011.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">180. [WGZC2011] W. Gong, Z. Cai, C. Ling, H. Li, Enhanced Differential Evolution with Adaptive Strategies for Numerical Optimization, IEEE Transactions on Systems, Man, and Cybernetics, Part B: Cybernetics, Vol. 41, No. 2, p. 397-413, 2011.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">181. [YWZC2011] Y. Wang, Z. Cai, Q. Zhang, Differential Evolution with Composite Trial Vector Generation Strategies and Control Parameters, IEEE Transactions on Evolutionary Computation, Vol. 15, No. 1, p. 55-66, 2011.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">182. [AMJT2012] A. Moraglio, J. Togelius, S. Silva, Geometric Differential Evolution for Combinatorial and Programs Spaces, Evolutionary Computation Journal (accepted for publication), Technical Report in School of Computing, University of Kent, Canterbury, 2012 .</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">183. [ZAKA2007] Z. Kajee-Bagdadi, Differential Evolution Algorithms for Constrained Global Optimization, A thesis submitted to the Faculty of Science, University of the Witwatersrand, Johannesburg in fulfillment of the requirements for the degree of Master of Science, 2007.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">184. [MATO1999] M. Tomassini, Parallel and Distributed Evolutionary Algorithms: A Review, Chapter 7 in Miettinen et al. (Eds) Evolutionary Algorithms in Engineering and Science, Wiley, p. 113-133, 1999.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">185. [WRWI2006] W. Wickramasinghe, Adaptive Distributed Evolutionary Algorithms, A thesis submitted for the degree of Masters in Parallel and Distributed Computer Systems, Department of Computer Science Vrije Universiteit, Amsterdam, The Netherlands, Jul 2006.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">186. [MICE2006] M. Cervenka, Distributed Evolutionary Algorithms, Doctoral Thesis, Tomas Bata University in Zlin Faculty of Applied Informatics, Zlin, 2006.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6"><text:soft-page-break/>187. [EAGL2004] E. Alba, G. Luque, Growth Curves and Takeover Time in Distributed Evolutionary Algorithms, In Proceedings of the Genetic and Evolutionary Computation Conference (GECCO 2004), p. 864-876, 2004.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">188. [JMAM2007] J. Merelo, A. Mora-García, J. Laredo, J. Lupion, F. Tricas, Browser-based Distributed Evolutionary Computation: Performance and Scaling Behavior, In Proceedings of the 2007 GECCO conference companion on Genetic and evolutionary computation (GECCO&apos;07), p 2851-2858, 2007.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">189. [SIHA2006] S. Harding, A Distributed Evolutionary Algorithm Using C# and Mono, Technical Report, Department Of Computer Science at Memorial University, Jun 2006.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">190. [LAJM2009] L. Araujo, J. Merelo-Guervos, Multikulti Algorithm: using genotypic differences in adaptive distributed evolutionary algorithm migration policies, In Proceedings of the IEEE Congress on Evolutionary Computation (CEC&apos;09), p. 2858-2865, May 2009.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">191. [MGJM2011] M. Garcia-Arenas, J. Merelo, A. Mora, P. Castillo, G. Romero, J. Laredo, Assessing Speed-ups In Commodity Cloud Storage Services For Distributed Evolutionary Algorithms, In Proceedings of the IEEE Congress on Evolutionary Computation, p. 304-311, 2011.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">192. [WWMS2007] W. Wickramasinghe, M van Steen, A. Eiben, Peer-to-peer evolutionary algorithms with adaptive autonomous selection, In Proceedings of the 9th annual conference on Genetic and evolutionary computation (GECCO&apos;07), p. 1460-1467, 2007.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">193. [PCPV2011] P. Chitra, P. Venkatesh, R. Rajaram, Comparison of evolutionary computation algorithms for solving bi-objective task scheduling problem on heterogeneous distributed computing systems, Journal Sadhana, Indian Academy of Sciences, Vol. 36, No. 2, p. 167–180, Apr 2011.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">194. [SOCL2002] SK. Oh, CY. Lee, JJ. Lee, A New Distributed Evolutionary Algorithm for Optimization in Nonstationary Environments, In Proceedings of the 2002 Congress on Evolutionary Computation (CEC&apos;02), Vol. 1, p. 378-383, May 2002.</text:p><text:p text:style-name="P6"><text:soft-page-break/></text:p><text:p text:style-name="P6">195. [JDKM2003] J. Digalakis, K. Margaritis, Parallel Evolutionary Algorithms on Message-Passing Clusters, In Proceedings of Parallel Computing Conference, 2003.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">196. [KSSL2008] K. Sullivan, S. Luke, C. Larock, S. Cier, S. Armentrout, Opportunistic Evolution: Efficient Evolutionary Computation on Large-Scale Computational Grids, In Proceedings of the 2008 GECCO conference companion on Genetic and evolutionary computation (GECCO&apos;08), p. 2227-2232, 2008.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">197. [MDCG2006] M. Dubreuil, C. Gagne, M. Parizeau, Analysis of a Master-Slave Architecture for Distributed Evolutionary Computations, IEEE Transactions on Systems, Man and Cybernetics, Part B, Vol. 36, No. 1, p. 229-235, Feb 2006.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">198. <text:span text:style-name="T45">[CGMP2003a]</text:span> C. Gagne, M. Parizeau, M. Dubreuil, Distributed Beagle: An Environment for Parallel and Distributed Evolutionary Computations, In Proceedings of the 17 th Annual International Symposium on High Performance Computing Systems and Applications (HPCS), p. 201-208, May 2002.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">199. [JMMG2011] J. Merelo, M. Garcia-Arenas, A. Mora, P. Castillo, G. Romero, J. Laredo, Cloud-based Evolutionary Algorithms: An algorithmic study, In Proceedings of Computing Research Repository (CORR), Vol. abs/1105.6, 2011.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">200. [JLAE2008] J. Laredo, A. Eiben, M. van Steen, P. Castillo, A. Mora, J. Merelo, P2P Evolutionary Algorithms: A Suitable Approach for Tackling Large Instances in Hard Optimization Problems, In Proceedings of Euro-Par 2008 - Parallel Processing, 14th International Euro-Par Conference, Vol. 5168, p. 622-631, 2008.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">201. [RTSY2007] R. Tinos, S. Yang, Self-Adaptation of Mutation Distribution in Evolutionary Algorithms, In Proceedings of IEEE Congress on Evolutionary Computation (CEC 2007), p. 79-86, Sep 2007.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">202. [JLPC2008] J. Laredo, P. Castillo, A. Mora, C. Fernandes, J. Merelo, Resilience to Churn of a <text:soft-page-break/>Peer-to-Peer Evolutionary Algorithm, International Journal of High Performance Systems Architecture, Vol. 1, No. 4, p. 260-268, Mar 2008.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">203. [TBWK2003] T. Burczynski, W. Kus, Distributed Evolutionary Algorithm with Master – Co-Evolutionary Algorithm and Slaves – Fitness Function Evaluators, In Proceedings of the 6th National Conference on Evolutionary Computation and Global Optimization, p. 33-39, May 2003.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">204. [GWDG2005] G. Winter, D. Greiner, B. Galvan, Parallel Evolutionary Computation, CEANI (Evolutionary Computation and Applications) Division of the Institute of Intelligent Systems and Numerical Applications in Engineering (IUSIANI), University of Las Palmas de Gran Canaria, Spain, 2005.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">205. [JULA2010] J. Laredo, Peer-to-Peer Evolutionary Computation: A Study of Viability, Tesis Doctoral, Universidad de Granada, Departamento de Arquitectura y Tecnologia de Computadores, Granada, 2010.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">206. [ATPG2007] A. Tallon-Ballesteros, P. Gutierrez-Pena, C. Hervas-Martinez, Distribution of the search of evolutionary product unit neural networks for classification, In Proceedings of the IADIS International Conference Applied Computing, p. 266-273, 2007.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">207. [NCTD2010] N. Cole, T. Desell, D. Gonzalez, F. de Vega, M. Magdon-Ismail, H. Newberg, B. Szymanski, C. Varela, Evolutionary Algorithms on Volunteer Computing Platforms: The MilkyWay@Home Project, Parallel and Distributed Computational Intellligence, Vol. 269, p. 63-90, 2010.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">208. <text:span text:style-name="T45">[CGMP2003b]</text:span> C. Gagne, M. Parizeau, M. Dubreuil, A Robust Master-Slave Distribution Architecture for Evolutionary Computations, In Proceedings of Genetic and Evolutionary Computation COnference (GECCO&apos;03), p. 80-87, Jul 2003.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">209. [TDMM2010] T. Desell, M. Magdon-Ismail, B. Szymanski, C. Varela, H. Newberg, D. Anderson, Validating Evolutionary Algorithms on Volunteer Computing Grids, In Proceedings of the 10th IFIP international conference on distributed applications and interoperable systems <text:soft-page-break/>(DAIS), p. 29-41, Jun 2010.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">210. [EAJT1999] E. Alba, J. Troya, A Survey of Parallel Distributed Genetic Algorithms, Complexity, Vol. 4, No. 4, p. 31-52, 1999.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">211. [JMAM2012] J. Merelo, A. Mora, C. Fernandes, M. Arenas, A. Esparcia-Alcazar, Using pool-based evolutionary algorithms for scalable and asynchronous distributed computing, In Proceedings of the 12th International Conference on Parallel Problem Solving From Nature (PPSN 2012), Sep 2012.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">212. [TCPL2009] T. Chen, P. Lehre, K. Tang, X. Yao, When Is an Estimation of Distribution Algorithm Better than an Evolutionary Algorithm?, In Proceedings of the 10th IEEE Congress on Evolutionary Computation (CEC 2009), p. 1470-1477, May 2009.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">213. [TJGC2007] T. Jumonji, G. Chakraborty, H. Mabuchi, M. Matsuhara, A Novel Distributed Genetic Algorithm Implementation with Variable Number of Islands, In Proceedings of IEEE Congress on Evolutionary Computation, p. 4698-4705, 2007.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">214. [MATF2004] M. Aydin, T. Fogarty, A Distributed Evolutionary Simulated Annealing Algorithm for Combinatorial Optimisation Problems, Journal of Heuristics, Vol. 10, No. 3, p.269–292, May 2004.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">215. [EAMT2002] E. Alba, M. Tomassini, Parallelism and Evolutionary Algorithms, IEEE Transactions on Evolutionary Computation, Vol. 6, No. 5, p. 443-462, Oct 2002.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P6">216. [WOKW2004] W. Kwedlo, A Parallel Evolutionary Algorithm for Discovery of Decision Rules, Parallel Processing and Applied Mathematics Lecture Notes in Computer Science, Vol. 3019, p 580-585, 2004.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P12">217. [<text:span text:style-name="T59">MTMQ2015</text:span>] <text:span text:style-name="T58">MetaTrader 4, MetaQuotes Software Corp., (2015, October 20)</text:span> <text:span text:style-name="T58">http://www.metatrader4.com/</text:span></text:p><text:p text:style-name="P6"/><text:p text:style-name="P132"><text:soft-page-break/>218 [TBIZ2015] Balabanov, T., Zankinski, I., Barova, M., Distributed Evolutionary Computing Migration Strategy by Incident Node Participation. Large-Scale Scientific Computing, Lecture Notes in Computer Science, 9374, Springer International Publishing Switzerland, ISBN:978-3-319-26520-9, DOI:10.1007, p 203-209, 2015.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P69">219 [ATHA2004] Attiya, Hagit and Welch, Jennifer (2004). Distributed Computing: Fundamentals, Simulations, and Advanced Topics. Wiley-Interscience. <text:s/>ISBN 0471453242.</text:p><text:p text:style-name="P69"/><text:p text:style-name="P69">220 [JLAM2002] Bibliography on DE from 1995 to 2002, http://www.lut.fi/~jlampine/debiblio.htm</text:p><text:p text:style-name="P69"/><text:p text:style-name="P69">221 [GEJE1976] Box, George; Jenkins, Gwilym (1976), Time series analysis: forecasting and control, rev. ed., Oakland, California: Holden-Day </text:p><text:p text:style-name="P69"/><text:p text:style-name="P69">222 [STOR1996] DE Algorithms&apos; Home Page, http://www.icsi.berkeley.edu/~storn/code.html</text:p><text:p text:style-name="P69"/><text:p text:style-name="P69">223 [DUWI2002] Dunis, C.L. &amp; Williams, M., Modelling and trading the eur/usd exchange rate: Do neural network models perform better? Derivatives Use, Trading and Regulation, 8(3), pp. 211–239, 2002.</text:p><text:p text:style-name="P69"/><text:p text:style-name="P69">224 [FEOK2006] Feoktistov V., Differential Evolution In Search of Solutions, 2006, XII, 196 p. 73 illus., Hardcover, ISBN: 978-0-387-36895-5.</text:p><text:p text:style-name="P69"/><text:p text:style-name="P69">225 [GAVI2002] Garg, Vijay K. (2002). Elements of Distributed Computing. Wiley-IEEE Press. ISBN 0471036005.</text:p><text:p text:style-name="P69"/><text:p text:style-name="P69">226 [GENE2000] Gershenfeld, Neil (2000), The nature of mathematical modeling, Cambridge: Cambridge Univ. Press, ISBN 978-0521570954, OCLC 174825352.</text:p><text:p text:style-name="P69"/><text:p text:style-name="P69">227 [GILA2001] Giles, C.L., Lawrence, S. &amp; Tsoi, A.C., Noisy time series prediction using a recurrent neural network and grammatical inference. Machine Learning, 44(1/2), pp. 161–183, 2001.</text:p><text:p text:style-name="P69"/><text:p text:style-name="P69"><text:soft-page-break/>228 [HAYK1999] Haykin, S., Neural Networks, A Comprehensive Foundation. Prentice-Hall, Inc., 2nd edition, 1999.</text:p><text:p text:style-name="P69"/><text:p text:style-name="P69">229 [HOLL1975] Holland, J., Adaptation In Natural and Artificial Systems. The University of Michigan Press, 1975.</text:p><text:p text:style-name="P69"/><text:p text:style-name="P69">230 [MOOD1995] Moody, J.E., Economic forecasting: Challenges and neural network solutions. Proceedings of the International Symposium on Artificial Neural Networks, Hsinchu, Taiwan, 1995.</text:p><text:p text:style-name="P69"/><text:p text:style-name="P69">231 [PRST2005] Price, Kenneth, Storn, Rainer M., Lampinen, Jouni A., Differential Evolution A Practical Approach to Global Optimization, 2005, XX, 538 p. 292 illus. With CD-ROM., Hardcover, ISBN: 978-3-540-20950-8.</text:p><text:p text:style-name="P69"/><text:p text:style-name="P69">232 [ROBA2009] Roman M. Balabin, Ekaterina I. Lomakina (2009). &quot;Neural network approach to quantum-chemistry data: Accurate prediction of density functional theory energies&quot;. J. Chem. Phys. 131 (7): 074104. doi:10.1063/1.3206326. </text:p><text:p text:style-name="P69"/><text:p text:style-name="P69">233 [TEGE1994] Tel, Gerard (1994). Introduction to Distributed Algorithms. Cambridge University Press. </text:p><text:p text:style-name="P69"/><text:p text:style-name="P69">234 [BILL1998] The Machine Learning Dictionary. http://www.cse.unsw.edu.au/~billw/mldict.html#activnfn. </text:p><text:p text:style-name="P69"/><text:p text:style-name="P69">235 [WERB1990] Werbos, P., Backpropagation through time: what it does and how to do it. Proceedings of the IEEE, 78(10), pp. 1550–1560, 1990.</text:p><text:p text:style-name="P69"/><text:p text:style-name="P69">236 [YAOX1999] Yao, X., Evolving artificial neural networks. Proc of the IEEE, 87(9), pp. 1423–1447, 1999.</text:p><text:p text:style-name="P6"/><text:p text:style-name="P91"><text:span text:style-name="T234">237 [NIRA2012]</text:span> Николова, Р., Разработка на система за графично изобразяване и визуално манипулиране на изкуствени невронни мрежи, НБУ-София, <text:span text:style-name="T231">2012.</text:span></text:p><text:p text:style-name="P91"/><text:p text:style-name="P91"><text:soft-page-break/>2<text:span text:style-name="T234">38 [ANMO2011]</text:span> Аначков, <text:span text:style-name="T267">M.</text:span>, Система за визуализиране и манипулиране на изкуствени невронни мрежи“, ТУЕС към ТУ-София, <text:span text:style-name="T231">2011.</text:span></text:p><text:p text:style-name="P91"/><text:p text:style-name="P91"><text:span text:style-name="T234">239 [SINI2011]</text:span> Симеонов, Н., Мултимедиен скрийнсейвър за Windows, подходящ за вграждане в проекти за разпределени изчисления, ТУЕС към ТУ-София, <text:span text:style-name="T231">2011.</text:span></text:p><text:p text:style-name="P91"/><text:p text:style-name="P91"><text:span text:style-name="T234">2</text:span>4<text:span text:style-name="T234">0 [HREL2011]</text:span> Христова, Е., Мултимедиен скрийнсейвър за Linux, подходящ за вграждане в проекти за разпределени изчисления, ТУЕС към ТУ-София, <text:span text:style-name="T231">2011.</text:span></text:p><text:p text:style-name="P92"/><text:h text:style-name="P521" text:outline-level="1"><text:bookmark-start text:name="__RefHeading__162_63795308"/>Списък с публикациите по дисертационната работа<text:bookmark-end text:name="__RefHeading__162_63795308"/></text:h><text:p text:style-name="P6"/><text:p text:style-name="P49">1 <text:span text:style-name="T232">[BAZA2010]</text:span> Балабанов Т., Занкински И., Симеонова В., Прогнозиране на времеви редове с изкуствени невронни мрежи и диференциална еволюция в разпределена среда, Работни статии на ИИТ, IIT/WP-268B, <text:span text:style-name="T104">ISSN:1310-652X</text:span>, 2010.</text:p><text:p text:style-name="P47"/><text:p text:style-name="P48">2 <text:span text:style-name="T232">[BATO2011]</text:span> Балабанов. Т., Прогнозиране с евристични подходи в разпределена среда, <text:span text:style-name="T102">Proceedings of </text:span>Anniversary Scientific Conference 40 Years Department of Industrial Automation, <text:span text:style-name="T103">ISBN:978-954-465-043-8</text:span>, 163-<text:span text:style-name="T102">166</text:span>, 2011.</text:p><text:p text:style-name="P47"/><text:p text:style-name="P48">3 <text:span text:style-name="T232">[BAZA2011]</text:span> <text:span text:style-name="T99">Balabanov. T., Zankinski I., Dobrinkova N., </text:span>Time Series Prediction by Artificial Neural Networks and Differential Evolution in Distributed Environment, <text:span text:style-name="T100">Large-Scale Scientific Computing, Lecture Notes in Computer Science, vol. 7116, ISBN:978-3-642-29842-4, DOI:10.1007/978-3-642-29843-1_22, 198-205, 2011.</text:span></text:p><text:p text:style-name="P6"/><text:p text:style-name="P89"><text:span text:style-name="T104">4 [BATO2015]</text:span> Балабанов, Т., Избягване на локални оптимуми при евристични популационни алгоритми в разпределена среда, Сборник с доклади от XXII Международен симпозиум Управление на енергийни, индустриални и екологични системи, ISSN:1313-2237, 83 - 86, 2015.</text:p><text:p text:style-name="P45"/><text:p text:style-name="P46"><text:span text:style-name="T104">5 [BAZA2015]</text:span> Balabanov, T., Zankinski, I., Barova, M.. Distributed Evolutionary Computing Migration Strategy by Incident Node Participation. Large-Scale Scientific Computing, Lecture Notes in Computer Science, 9374, Springer International Publishing Switzerland, ISBN:978-3-319-26520-9, DOI:10.1007, 203 - 209, <text:span text:style-name="T101">2015.</text:span></text:p><text:p text:style-name="Standard"/><text:p text:style-name="P175">6<text:span text:style-name="T112"> </text:span><text:span text:style-name="T113">[</text:span><text:span text:style-name="T115">BAGE2016</text:span><text:span text:style-name="T116">a</text:span><text:span text:style-name="T113">]</text:span> Балабанов, Т., Генова, К., <text:span text:style-name="T150">AJAX разпределена система за обучение на изкуствени невронни мрежи с еволюционни алгоритми, Сборник с доклади от XXIV Международен симпозиум Управление на топло енергийни обекти и системи, Управление на енергийни, индустриални и екологични системи, ISSN:1313-2237, 49 - 52, 2016.</text:span></text:p><text:p text:style-name="Standard"/><text:p text:style-name="P177">7<text:span text:style-name="T112"> </text:span><text:span text:style-name="T113">[</text:span><text:span text:style-name="T114">BAKE2016</text:span><text:span text:style-name="T113">]</text:span> <text:span text:style-name="T226">Balabanov T., Keremedchiev D., Goranov I., Web Distributed Computing For </text:span><text:soft-page-break/><text:span text:style-name="T226">Evolutionary Training Of Artificial Neural Networks, International Conference InfoTech-2016, Varna - St. St. Constantine and Elena resort, Bulgaria, ISSN:1314-1023, 210-216, 2016.</text:span></text:p><text:p text:style-name="Standard"/><text:p text:style-name="P176"><text:span text:style-name="T117">8</text:span><text:span text:style-name="T112"> </text:span><text:span text:style-name="T113">[</text:span><text:span text:style-name="T115">BAGE2016</text:span><text:span text:style-name="T116">b</text:span><text:span text:style-name="T113">]</text:span> Балабанов, Т., Генова, К., <text:span text:style-name="T233">Разпределена система за обучение на изкуствени невронни мрежи, базирана на мобилни устройства, Proceedings of International Conference Automatics and Informatics’2016, ISSN:1313-1850, 49 - 52, 2016.</text:span></text:p><text:p text:style-name="Standard"/><text:h text:style-name="P521" text:outline-level="1"><text:bookmark-start text:name="__RefHeading__725_533363062"/>Списък с цитирания и реферирания<text:bookmark-end text:name="__RefHeading__725_533363062"/></text:h><table:table table:name="Table37" table:style-name="Table37"><table:table-column table:style-name="Table37.A"/><table:table-column table:style-name="Table37.B"/><table:table-row><table:table-cell table:style-name="Table37.A1" table:number-columns-spanned="2" office:value-type="string"><text:p text:style-name="P6">Balabanov, T., Zankinski, I., Barova, M., Strategy for Individuals Distribution by Incident Nodes Participation in Star Topology of Distributed Evolutionary Algorithms, Cybernetics and Information Technologies, Vol. 16 No 1, ISSN: 1314-4081, 2016.</text:p></table:table-cell><table:covered-table-cell/></table:table-row><table:table-row><table:table-cell table:style-name="Table37.A1" office:value-type="string"><text:p text:style-name="Table_20_Contents"/></table:table-cell><table:table-cell table:style-name="Table37.A1" office:value-type="string"><text:p text:style-name="Table_20_Contents"/></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table37.A1" office:value-type="string"><text:p text:style-name="Table_20_Contents"/></table:table-cell><table:table-cell table:style-name="Table37.A1" office:value-type="string"><text:p text:style-name="Table_20_Contents">1. Tomov, P., Monov, V., Artificial Neural Networks and Differential Evolution Used for Time Series Forecasting in Distributed Environment, Proceedings of International Conference Аutomatics and Informatics, Sofia, Bulgaria, ISSN 1313-1850, pp. 12<text:span text:style-name="T235">9</text:span>-132, 2016.</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table37.A1" office:value-type="string"><text:p text:style-name="Table_20_Contents"/></table:table-cell><table:table-cell table:style-name="Table37.A1" office:value-type="string"><text:p text:style-name="Table_20_Contents"/></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table37.A1" table:number-columns-spanned="2" office:value-type="string"><text:p text:style-name="P6">Balabanov, T., Zankinski, I., Barova, M., Distributed Evolutionary Computing Migration Strategy by Incident Node Participation, International Conference on Large-Scale Scientific Computing, 10th International Conference, LSSC 2015, Sozopol, Bulgaria, June 8-12, ISBN 978-3-319-26519-3, pp. 203-209, 2015.</text:p></table:table-cell><table:covered-table-cell/></table:table-row><table:table-row><table:table-cell table:style-name="Table37.A1" office:value-type="string"><text:p text:style-name="Table_20_Contents"/></table:table-cell><table:table-cell table:style-name="Table37.A1" office:value-type="string"><text:p text:style-name="Table_20_Contents"/></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table37.A1" office:value-type="string"><text:p text:style-name="Table_20_Contents"/></table:table-cell><table:table-cell table:style-name="Table37.A1" office:value-type="string"><text:p text:style-name="Table_20_Contents"><text:span text:style-name="T284">2</text:span>. <text:span text:style-name="T107">Tomov, P., Monov, V., Artificial Neural Networks and Differential Evolution Used for Time Series Forecasting in Distributed Environment, Proceedings of International Conference Аutomatics and Informatics, Sofia, Bulgaria, ISSN 1313-1850, pp. 12</text:span><text:span text:style-name="T118">9</text:span><text:span text:style-name="T107">-132, 2016.</text:span></text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table37.A1" office:value-type="string"><text:p text:style-name="Table_20_Contents"/></table:table-cell><table:table-cell table:style-name="Table37.A1" office:value-type="string"><text:p text:style-name="Table_20_Contents"/></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table37.A1" office:value-type="string"><text:p text:style-name="Table_20_Contents"/></table:table-cell><table:table-cell table:style-name="Table37.A1" office:value-type="string"><text:p text:style-name="P340"><text:span text:style-name="T284">3</text:span>. Ташо Ташев, Арсений Баканов, Радостина Ташева. Верхняя граница <text:s/>пропускной способности коммутатора с матричным переключателем для входящего трафика типа модифицированной модели Чанг-а. Доклади на Уиверситетската годишна научна конференция на Национален Военен Университет «В.Левски» 2016, 20-21 Октомври 2016, Велико Търново, България. Издагелски комплекс НВУ, 2016, том 2, стр.107-115. ISSN 1314-1937.</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table37.A1" office:value-type="string"><text:p text:style-name="Table_20_Contents"/></table:table-cell><table:table-cell table:style-name="Table37.A1" office:value-type="string"><text:p text:style-name="Table_20_Contents"/></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table37.A1" table:number-columns-spanned="2" office:value-type="string"><text:p text:style-name="Standard">Balabanov, T., Zankinski, I., Dobrinkova, N., Time Series Prediction by Artificial Neural <text:s/>Networks and Differential Evolution in Distributed Environment, International Conference on Large-Scale Scientific Computing, 8th International Conference, LSSC 2011, Sozopol, Bulgaria, June 6-10, ISBN 978-3-642-29842-4, pp. 198-205, 2011.</text:p></table:table-cell><table:covered-table-cell/></table:table-row><table:table-row><table:table-cell table:style-name="Table37.A1" office:value-type="string"><text:p text:style-name="Table_20_Contents"/></table:table-cell><table:table-cell table:style-name="Table37.A1" office:value-type="string"><text:p text:style-name="Table_20_Contents"/></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table37.A1" office:value-type="string"><text:p text:style-name="Table_20_Contents"/></table:table-cell><table:table-cell table:style-name="Table37.A1" office:value-type="string"><text:p text:style-name="P341"><text:span text:style-name="T284">4</text:span>. Keremedchiev, D., Barova, M., Tomov, P., Mobile Application as Distributed Computing System for Artificial Neural Networks Training Used in Perfect Information Games, Proceedeings of International Scientific Conference UniTech, Gabrovo, Bulgaria, ISSN 1313-230X, vol. 2, pp. 389-393, 2016.</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table37.A1" office:value-type="string"><text:p text:style-name="Table_20_Contents"/></table:table-cell><table:table-cell table:style-name="Table37.A1" office:value-type="string"><text:p text:style-name="Table_20_Contents"/></table:table-cell></table:table-row></table:table><text:p text:style-name="P6"/><text:p text:style-name="P6"/><text:h text:style-name="P523" text:outline-level="1"><text:bookmark-start text:name="__RefHeading___Toc59586_84424651"/>Приложение А – Експериментални данни<text:bookmark-end text:name="__RefHeading___Toc59586_84424651"/></text:h><text:p text:style-name="Text_20_body"/><text:h text:style-name="Heading_20_2" text:outline-level="2"><text:bookmark-start text:name="__RefHeading___Toc59588_84424651"/><text:s text:c="2"/>Данни използвани за експериментите с кръгова топология и инцидентно включване на възли<text:bookmark-end text:name="__RefHeading___Toc59588_84424651"/></text:h><text:p text:style-name="P6"/><text:p text:style-name="P165">Съотношение на EUR/USD в периода 01.01.2014 до 31.03.2014 при дневен период на отчитане (източник https://www.investing.com/currencies/eur-usd-historical-data ):</text:p><text:p text:style-name="P6"><text:bookmark text:name="curr_table"/></text:p><table:table table:name="Table55" table:style-name="Table55"><table:table-column table:style-name="Table55.A"/><table:table-column table:style-name="Table55.B" table:number-columns-repeated="4"/><table:table-column table:style-name="Table55.F"/><table:table-header-rows><table:table-row><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P514">Date</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P515">Price</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P515">Open</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P515">High</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P515">Low</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P515">Change %</text:p></table:table-cell></table:table-row></table:table-header-rows><table:table-row><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P510">Mar 31, 2014</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P512">1.3771</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3755</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3807</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3734</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P512">0.13%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P510">Mar 28, 2014</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P512">1.3753</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3740</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3773</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3705</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P512">0.09%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P510">Mar 27, 2014</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P513">1.3740</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3781</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3798</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3729</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P513">-0.31%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P510">Mar 26, 2014</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P513">1.3783</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3827</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3829</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3777</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P513">-0.32%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P510">Mar 25, 2014</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P513">1.3827</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3839</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3848</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3750</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P513">-0.09%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P510">Mar 24, 2014</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P512">1.3839</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3792</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3876</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3760</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P512">0.33%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P510">Mar 21, 2014</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P512">1.3794</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3779</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3813</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3767</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P512">0.11%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P510">Mar 20, 2014</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P513">1.3779</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3832</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3845</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3749</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P513">-0.39%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P510">Mar 19, 2014</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P513">1.3833</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3933</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3935</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3809</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P513">-0.72%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P510">Mar 18, 2014</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P512">1.3934</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3921</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3942</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3880</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P512">0.09%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P510">Mar 17, 2014</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P512">1.3922</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3911</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3949</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3879</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P512">0.06%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P510">Mar 14, 2014</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P512">1.3914</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3866</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3937</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3847</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P512">0.32%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P510">Mar 13, 2014</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P513">1.3869</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3903</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3968</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3844</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P513">-0.25%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P510">Mar 12, 2014</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P512">1.3904</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3859</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3914</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3841</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P512">0.32%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P510">Mar 11, 2014</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P513">1.3859</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3874</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3880</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3832</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P513">-0.13%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P510">Mar 10, 2014</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P513">1.3877</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3875</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3898</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3861</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P513">-0.01%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P510">Mar 07, 2014</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P512">1.3878</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3860</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3917</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3854</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P512">0.12%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P510">Mar 06, 2014</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P512">1.3861</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3734</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3874</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3723</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P512">0.93%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P510">Mar 05, 2014</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P513">1.3733</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3742</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3746</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3706</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P513">-0.08%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P510">Mar 04, 2014</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P512">1.3744</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3735</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3782</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3720</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P512">0.07%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P510">Mar 03, 2014</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P513">1.3735</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3786</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3793</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3725</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P513">-0.49%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P510">Feb 28, 2014</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P512">1.3803</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3708</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3824</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3693</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P512">0.69%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P510">Feb 27, 2014</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P512">1.3709</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3687</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3727</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3642</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P512">0.15%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P510">Feb 26, 2014</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P513">1.3688</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3744</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3758</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3661</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P513">-0.42%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P510">Feb 25, 2014</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P512">1.3746</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3735</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3767</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3714</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P512">0.08%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P510">Feb 24, 2014</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P513">1.3735</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3735</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3770</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3708</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P513">-0.04%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P510">Feb 21, 2014</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P512">1.3740</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3720</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3760</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3704</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P512">0.16%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P510">Feb 20, 2014</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P513">1.3718</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3733</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3763</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3685</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P513">-0.11%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P510">Feb 19, 2014</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P513">1.3733</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3757</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3774</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3724</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P513">-0.18%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P510">Feb 18, 2014</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P512">1.3758</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3706</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3770</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3694</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P512">0.36%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P510">Feb 17, 2014</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P512">1.3708</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3688</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3725</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3687</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P512">0.11%</text:p></table:table-cell></table:table-row><text:soft-page-break/><table:table-row><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P510">Feb 14, 2014</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P512">1.3693</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3681</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3718</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3674</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P512">0.09%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P510">Feb 13, 2014</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P512">1.3681</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3594</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3694</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3586</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P512">0.64%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P510">Feb 12, 2014</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P513">1.3594</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3639</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3655</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3563</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P513">-0.33%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P510">Feb 11, 2014</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P513">1.3639</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3648</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3686</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3631</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P513">-0.06%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P510">Feb 10, 2014</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P512">1.3647</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3634</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3653</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3609</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P512">0.09%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P510">Feb 07, 2014</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P512">1.3635</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3590</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3642</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3553</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P512">0.33%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P510">Feb 06, 2014</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P512">1.3590</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3533</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3621</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3485</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P512">0.42%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P510">Feb 05, 2014</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P512">1.3533</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3519</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3555</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3498</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P512">0.10%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P510">Feb 04, 2014</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P513">1.3519</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3525</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3539</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3494</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P513">-0.04%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P510">Feb 03, 2014</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P512">1.3525</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3493</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3536</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3476</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P512">0.28%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P510">Jan 31, 2014</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P513">1.3487</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3557</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3570</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3480</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P513">-0.51%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P510">Jan 30, 2014</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P513">1.3556</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3662</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3666</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3543</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P513">-0.78%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P510">Jan 29, 2014</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P513">1.3663</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3668</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3685</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3603</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P513">-0.04%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P510">Jan 28, 2014</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P513">1.3669</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3673</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3689</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3629</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P513">-0.02%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P510">Jan 27, 2014</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P513">1.3672</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3677</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3718</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3654</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P513">-0.04%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P510">Jan 24, 2014</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P513">1.3678</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3697</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3741</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3665</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P513">-0.12%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P510">Jan 23, 2014</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P512">1.3695</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3547</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3699</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3530</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P512">1.09%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P510">Jan 22, 2014</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P513">1.3548</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3559</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3584</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3535</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P513">-0.10%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P510">Jan 21, 2014</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P512">1.3561</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3552</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3571</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3518</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P512">0.07%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P510">Jan 20, 2014</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P512">1.3552</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3543</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3570</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3508</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P512">0.08%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P510">Jan 17, 2014</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P513">1.3541</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3620</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3623</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3517</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P513">-0.58%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P510">Jan 16, 2014</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P512">1.3620</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3604</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3650</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3582</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P512">0.11%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P510">Jan 15, 2014</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P513">1.3605</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3680</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3684</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3582</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P513">-0.54%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P510">Jan 14, 2014</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P512">1.3679</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3670</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3699</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3648</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P512">0.05%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P510">Jan 13, 2014</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P512">1.3672</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3669</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3685</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3637</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P512">0.01%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P510">Jan 10, 2014</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P512">1.3670</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3609</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3689</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3577</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P512">0.45%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P510">Jan 09, 2014</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P512">1.3609</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3577</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3636</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3550</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P512">0.25%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P510">Jan 08, 2014</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P513">1.3575</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3617</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3636</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3554</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P513">-0.30%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P510">Jan 07, 2014</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P513">1.3616</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3627</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3657</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3596</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P513">-0.09%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P510">Jan 06, 2014</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P512">1.3628</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3589</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3653</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3571</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P512">0.29%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P510">Jan 03, 2014</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P513">1.3588</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3672</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3674</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3582</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P513">-0.61%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P510">Jan 02, 2014</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P513">1.3672</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3756</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3777</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3630</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P513">-0.60%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P510">Jan 01, 2014</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P512">1.3754</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3742</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3769</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P511">1.3742</text:p></table:table-cell><table:table-cell table:style-name="Table55.A1" office:value-type="string"><text:p text:style-name="P509">0.06%</text:p></table:table-cell></table:table-row></table:table><text:p text:style-name="P508"><text:bookmark text:name="placehereresult2"/></text:p><text:p text:style-name="P6"/><text:h text:style-name="Heading_20_2" text:outline-level="2"><text:bookmark-start text:name="__RefHeading___Toc59590_84424651"/><text:s text:c="2"/>Данни за сравнение на правия пас при обучение на изкуствена невронна мрежа със <text:span text:style-name="T286">C++ и JavaScript</text:span><text:bookmark-end text:name="__RefHeading___Toc59590_84424651"/></text:h><text:p text:style-name="P6"/><text:p text:style-name="P168"/><text:p text:style-name="P166">Съотношение на EUR/USD в периода 01.01.201<text:span text:style-name="T288">5</text:span> до 31.03.201<text:span text:style-name="T288">5</text:span> при дневен период на отчитане (източник https://www.investing.com/currencies/eur-usd-historical-data ):</text:p><text:p text:style-name="P168"/><text:p text:style-name="P168"><text:bookmark text:name="curr_table1"/><text:soft-page-break/></text:p><table:table table:name="Table57" table:style-name="Table57"><table:table-column table:style-name="Table57.A"/><table:table-column table:style-name="Table57.B" table:number-columns-repeated="4"/><table:table-column table:style-name="Table57.F"/><table:table-header-rows><table:table-row><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P514">Date</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P515">Price</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P515">Open</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P515">High</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P515">Low</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P515">Change %</text:p></table:table-cell></table:table-row></table:table-header-rows><table:table-row><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P510">Mar 31, 2015</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P513">1.0731</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.0833</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.0846</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.0713</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P513">-0.95%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P510">Mar 30, 2015</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P513">1.0834</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.0889</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.0897</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.0811</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P513">-0.50%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P510">Mar 27, 2015</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P512">1.0888</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.0886</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.0949</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.0802</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P512">0.04%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P510">Mar 26, 2015</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P513">1.0884</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.0969</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1052</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.0856</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P513">-0.80%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P510">Mar 25, 2015</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P512">1.0972</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.0926</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1016</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.0901</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P512">0.42%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P510">Mar 24, 2015</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P513">1.0926</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.0947</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1031</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.0892</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P513">-0.19%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P510">Mar 23, 2015</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P512">1.0947</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.0837</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.0972</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.0768</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P512">1.16%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P510">Mar 20, 2015</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P512">1.0822</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.0661</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.0883</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.0650</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P512">1.52%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P510">Mar 19, 2015</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P513">1.0660</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.0866</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.0915</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.0613</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P513">-1.90%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P510">Mar 18, 2015</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P512">1.0867</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.0598</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1033</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.0581</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P512">2.54%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P510">Mar 17, 2015</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P512">1.0598</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.0566</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.0650</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.0551</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P512">0.28%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P510">Mar 16, 2015</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P512">1.0568</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.0494</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.0621</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.0459</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P512">0.70%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P510">Mar 13, 2015</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P513">1.0495</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.0637</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.0639</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.0462</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P513">-1.32%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P510">Mar 12, 2015</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P512">1.0635</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.0547</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.0684</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.0495</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P512">0.83%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P510">Mar 11, 2015</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P513">1.0547</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.0699</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.0718</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.0511</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P513">-1.41%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P510">Mar 10, 2015</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P513">1.0698</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.0851</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.0856</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.0692</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P513">-1.42%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P510">Mar 09, 2015</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P512">1.0852</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.0832</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.0908</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.0823</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P512">0.07%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P510">Mar 06, 2015</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P513">1.0844</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1033</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1035</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.0842</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P513">-1.70%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P510">Mar 05, 2015</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P513">1.1031</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1079</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1115</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.0989</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P513">-0.43%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P510">Mar 04, 2015</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P513">1.1079</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1178</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1187</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1062</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P513">-0.87%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P510">Mar 03, 2015</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P513">1.1176</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1183</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1219</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1155</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P513">-0.08%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P510">Mar 02, 2015</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P513">1.1185</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1187</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1242</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1159</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P513">-0.09%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P510">Feb 27, 2015</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P513">1.1195</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1199</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1248</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1178</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P513">-0.03%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P510">Feb 26, 2015</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P513">1.1198</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1361</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1381</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1184</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P513">-1.44%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P510">Feb 25, 2015</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P512">1.1362</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1340</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1389</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1334</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P512">0.19%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P510">Feb 24, 2015</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P512">1.1341</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1336</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1360</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1289</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P512">0.08%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P510">Feb 23, 2015</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P513">1.1332</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1385</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1414</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1296</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P513">-0.43%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P510">Feb 20, 2015</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P512">1.1381</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1370</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1431</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1280</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P512">0.13%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P510">Feb 19, 2015</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P513">1.1366</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1397</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1450</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1355</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P513">-0.27%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P510">Feb 18, 2015</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P513">1.1397</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1412</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1418</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1334</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P513">-0.13%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P510">Feb 17, 2015</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P512">1.1412</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1354</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1450</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1322</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P512">0.52%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P510">Feb 16, 2015</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P513">1.1353</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1385</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1429</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1317</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P513">-0.28%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P510">Feb 13, 2015</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P513">1.1385</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1403</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1443</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1380</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P513">-0.16%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P510">Feb 12, 2015</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P512">1.1403</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1334</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1423</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1302</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P512">0.61%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P510">Feb 11, 2015</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P512">1.1334</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1321</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1349</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1280</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P512">0.11%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P510">Feb 10, 2015</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P513">1.1321</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1327</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1347</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1274</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P513">-0.03%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P510">Feb 09, 2015</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P512">1.1324</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1315</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1359</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1271</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P512">0.08%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P510">Feb 06, 2015</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P513">1.1315</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1477</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1488</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1313</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P513">-1.41%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P510">Feb 05, 2015</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P512">1.1477</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1345</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1500</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1304</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P512">1.15%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P510">Feb 04, 2015</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P513">1.1347</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1482</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1486</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1317</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P513">-1.17%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P510">Feb 03, 2015</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P512">1.1481</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1343</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1534</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1313</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P512">1.23%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P510">Feb 02, 2015</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P512">1.1342</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1284</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1364</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1280</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P512">0.48%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P510">Jan 30, 2015</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P513">1.1288</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1321</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1366</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1279</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P513">-0.28%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P510">Jan 29, 2015</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P512">1.1320</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1287</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1369</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1261</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P512">0.28%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P510">Jan 28, 2015</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P513">1.1288</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1382</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1385</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1276</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P513">-0.82%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P510">Jan 27, 2015</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P512">1.1381</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1237</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1423</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1224</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P512">1.26%</text:p></table:table-cell></table:table-row><text:soft-page-break/><table:table-row><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P510">Jan 26, 2015</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P512">1.1239</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1186</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1297</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1099</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P512">0.28%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P510">Jan 23, 2015</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P513">1.1208</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1366</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1374</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1114</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P513">-1.39%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P510">Jan 22, 2015</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P513">1.1366</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1610</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1648</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1317</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P513">-2.10%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P510">Jan 21, 2015</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P512">1.1610</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1553</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1677</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1542</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P512">0.51%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P510">Jan 20, 2015</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P513">1.1551</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1606</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1616</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1540</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P513">-0.47%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P510">Jan 19, 2015</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P512">1.1606</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1551</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1641</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1545</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P512">0.31%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P510">Jan 16, 2015</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P513">1.1570</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1633</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1650</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1462</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P513">-0.52%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P510">Jan 15, 2015</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P513">1.1631</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1789</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1795</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1570</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P513">-1.34%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P510">Jan 14, 2015</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P512">1.1789</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1772</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1846</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1726</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P512">0.14%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P510">Jan 13, 2015</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P513">1.1772</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1833</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1860</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1753</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P513">-0.52%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P510">Jan 12, 2015</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P513">1.1834</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1838</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1871</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1786</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P513">-0.06%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P510">Jan 09, 2015</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P512">1.1841</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1793</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1848</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1763</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P512">0.41%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P510">Jan 08, 2015</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P513">1.1793</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1839</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1848</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1753</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P513">-0.39%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P510">Jan 07, 2015</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P513">1.1839</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1892</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1898</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1803</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P513">-0.42%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P510">Jan 06, 2015</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P513">1.1889</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1933</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1969</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1884</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P513">-0.38%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P510">Jan 05, 2015</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P513">1.1934</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.2003</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.2008</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.1883</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P513">-0.57%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P510">Jan 02, 2015</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P513">1.2003</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.2106</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.2111</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.2001</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P513">-0.83%</text:p></table:table-cell></table:table-row><table:table-row><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P510">Jan 01, 2015</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P512">1.2104</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.2100</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.2107</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P511">1.2094</text:p></table:table-cell><table:table-cell table:style-name="Table57.A1" office:value-type="string"><text:p text:style-name="P509">0.05%</text:p></table:table-cell></table:table-row></table:table><text:p text:style-name="P168"/><text:h text:style-name="Heading_20_2" text:outline-level="2"><text:bookmark-start text:name="__RefHeading___Toc59592_84424651"/><text:s text:c="2"/>Данни за сравнение между трислойни изкуствени неверонни мрежи и мрежи с пълна свързаност<text:bookmark-end text:name="__RefHeading___Toc59592_84424651"/></text:h><text:p text:style-name="P6"/><text:p text:style-name="P6">Дневен брой на изминати крачки, с цел прогнозно определяне на изразходваната енергия <text:span text:style-name="T287">(източник https://github.com/TodorBalabanov/FullyConnectedVsTriLayersANN20160430 ).</text:span></text:p><text:p text:style-name="P6"/><text:p text:style-name="P167">3938, 1317, 4021, 10477, 9379, 7707, 9507, 4194, 2681, 3522, 5599, 5641, 6737, 7781, 2044, 1501, 6586, 4915, 5918, 6132, 9394, 2113, 935, 9729, 5236, 8815, 3169, 5888, 5722, 191, 9539, 3384, 6006, 7139, 7285, 136, 1843, 5094, 3795, 5985, 5566, 3545, 965, 14, 3738, 4645, 8439, 6390, 13842, 7754, 11440, 7572, 4876, 3206, 5577, 2734, 1169, 20, 5049, 6612, 2685, 7000, 6711, 4091, 26, 5383, 5516, 7185, 6118, 4484, 2178, 754, 8104, 8209, 6159, 11137, 8994, 5172, 425, 8082, 5337, 5712, 7157, 6385, 3343, 4196, 5957, 8581, 3686, 0, 254, 1819, 1071, 876, 3509, 2777, 1474, 4945, 3971, 21, 5466, 5509, 1316, 5653, 2775, 797, 22, 5601, 6177, 5662, 5132, 6543, 1700, 4361, 6951, 7734, 3451, 5385, 6358, 6838, 19, 6460, 5813, 6839, 6335, 2105, 8, 6, 9530, 1250, 5668, 5595, 6008, 2315, 1712, 8553, 5570, 5979, 4818, 6745, 5250, 43, 5727, 7416, 5888, 6270, 4931, 0, 31, 6190, 11164, 5768, 7307, 5412, 2716, 35, 8391, 6054, 2796, 5081, 6646, 4597, 1978, 7570, 5909, 9581, 3571, 6740, 1702, 1080, 6719, 963, 6781, 7544, 7708, 1993, 597, 2394, 5516, <text:soft-page-break/>12966, 723, 6528, 2476, 86, 5956, 5820, 6995, 6682, 2460, 2479, 56, 7095, 7255, 6310, 9971, 3725, 5400, 452, 6018, 5803, 6673, 6098, 9476, 692, 20, 7855, 11970, 10557, 5696, 7765, 3847, 47, 6020, 6037, 5684, 7089, 6372, 970, 861, 3590, 7672, 3730, 10689, 9428, 1514, 2062, 6154, 5234, 6160, 5134, 879, 1079, 9164, 6338, 6687, 8195, 6351, 1123, 4216, 3759, 9372, 7782, 3143, 4773, 6993, 849, 906, 6385, 7512, 8824, 8150, 12464, 7726, 8745, 13594, 6589, 6524, 2784, 0, 1785, 688, 7998, 6797, 8289, 10815, 10280, 4839, 3928, 10935, 4588, 5785, 6771, 7628, 2908, 11391, 6637, 5585, 7454, 5828, 8259, 6644, 2436, 7055, 7206, 7873, 7368, 6239, 3595, 3166, 1846, 2301, 21, 1600, 2390, 1894, 1469, 9097, 8401, 2034, 3244, 8811, 2979, 20, 7808, 7698, 11031, 4556, 7149, 3745, 5563, 9673, 8149, 12158, 7043, 6273, 1855, 80, 10729, 5880, 9327, 6343, 7227, 3522, 1244, 6382, 7186, 4964, 6162, 7435, 10524, 2449, 7437, 11970, 6661, 6122, 7323, 6707, 25, 2270, 5117, 6676, 5317, 7032, 7689, 4891, 8051, 5699, 4927, 11553, 6418, 2968, 11338, 7662, 9976, 5526, 14341, 4331, 10026, 1672, 5199, 4699, 7774, 7958, 7720, 2499, 10745, 19609, 15896, 5705, 6207, 7699, 2543, 32, 3642, 6307, 7491, 6236, 8644, 2121, 1448, 7838, 5434, 5945, 6074, 6962, 5441, 42, 7424, 5818, 8877, 5743, 7980, 3140, 3046, 8329, 8186, 5994, 2931, 7309, 862, 145, 8141, 6252, 9536, 6213, 7150, 2718, 1687, 5000, 6068, 5918, 10652, 12257, 1505, 2421, 10518, 2368, 7341, 8137, 7997, 3437, 2009, 5468, 3947, 5836, 8567, 11039, 3726, 746, 3417, 8649, 8016, 7652, 8298, 1306, 4031, 5525, 6203, 11847, 7688, 10911, 1080, 1001, 12315, 6084, 6529, 4074, 8526, 3161, 2184, 7400, 4916, 4521, 1523, 398, 1364, 925, 38, 2580, 1039, 6556, 2040, 1166, 825, 7672, 7177, 6104, 7928, 6240, 1420, 1214, 10638, 10726, 2323, 6113, 8112, 2757, 3761, 6982, 5680, 7793, 8983, 8546, 1335, 817, 6136, 3778, 6639, 6548, 6120, 3648, 584, 9099, 6434, 8828, 9988, 6066, 2575, 2237, 5114, 5879, 4094, 9309, 8008, 1614, 4307, 5801, 8006, 6344, 4803, 10904, 1339, 411, 8468, 6945, 5471, 8828, 4157, 1134, 1071, 5542, 2213, 5633, 9245, 2145, 4901, 39, 10430, 7941, 6189, 7985, 8296, 614, 894, 6236, 1704, 4257, 7707, 8388, 1050, 855, 9352, 4801, 7088, 8466, 470, 2433, 1036, 392, 2169, 84, 5316, 8339, 4272, 2617, 1840, 7254, 5999, 6178, 4563, 3370, 756, 2773, 6610, 8967, 6182, 7452, 2570, 1443, 6537, 5338, 9158, 3870, 12036, 3574, 864, 10135, 5595, 8643, 2287, 9918, 2484</text:p><text:p text:style-name="P6"/><text:p text:style-name="P519"><text:bookmark-start text:name="__RefHeading___Toc5678_1486593966"/><text:s text:c="4"/>format.bat<text:bookmark-end text:name="__RefHeading___Toc5678_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P423">@echo off </text:p><text:p text:style-name="P423"/><text:p text:style-name="P423">rem ############################################################################### </text:p><text:p text:style-name="P423">rem # <text:s text:c="76"/># </text:p><text:p text:style-name="P423">rem # VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/># </text:p><text:p text:style-name="P423">rem # Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/># </text:p><text:p text:style-name="P423">rem # Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/># </text:p><text:p text:style-name="P423">rem # the capital of Bulgaria. <text:s text:c="51"/># </text:p><text:p text:style-name="P423">rem # <text:s text:c="76"/># </text:p><text:p text:style-name="P423">rem # Copyright (C) 2008-2009 by Todor Balabanov <text:s/>( tdb@tbsoft.eu ) <text:s text:c="14"/># </text:p><text:p text:style-name="P423">rem # <text:s text:c="27"/>Iliyan Zankinski ( iliyan_mf@abv.bg ) <text:s text:c="11"/># </text:p><text:p text:style-name="P423">rem # <text:s text:c="27"/>Galq Cirkalova <text:s text:c="2"/>( galq_cirkalova@abv.bg ) <text:s text:c="6"/># </text:p><text:p text:style-name="P423">rem # <text:s text:c="27"/>Ivan Grozev <text:s text:c="5"/>( ivan.iliev.grozev@gmail.com ) # </text:p><text:p text:style-name="P423">rem # <text:s text:c="76"/># </text:p><text:p text:style-name="P423">rem # This program is free software: you can redistribute it and/or modify <text:s text:c="7"/># </text:p><text:p text:style-name="P423">rem # it under the terms of the GNU General Public License as published by <text:s text:c="7"/># </text:p><text:p text:style-name="P423">rem # the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/># </text:p><text:p text:style-name="P423">rem # (at your option) any later version. <text:s text:c="40"/># </text:p><text:p text:style-name="P423">rem # <text:s text:c="76"/># </text:p><text:p text:style-name="P423">rem # This program is distributed in the hope that it will be useful, <text:s text:c="12"/># </text:p><text:p text:style-name="P423">rem # but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/># </text:p><text:p text:style-name="P423">rem # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/># </text:p><text:p text:style-name="P423">rem # GNU General Public License for more details. <text:s text:c="31"/># </text:p><text:p text:style-name="P423">rem # <text:s text:c="76"/># </text:p><text:p text:style-name="P423">rem # You should have received a copy of the GNU General Public License <text:s text:c="10"/># </text:p><text:p text:style-name="P423">rem # along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/># </text:p><text:p text:style-name="P423">rem # <text:s text:c="76"/># </text:p><text:p text:style-name="P423">rem ############################################################################### </text:p><text:p text:style-name="P423"/><text:p text:style-name="P423">rem ############################################################################ </text:p><text:p text:style-name="P423">rem # Java style source code format. <text:s text:c="42"/># </text:p><text:p text:style-name="P423">rem ############################################################################ </text:p><text:p text:style-name="P423">astyle *.cpp *.h *.php *.mq4 *.mqh *.js *.java --indent=force-tab --style=java / -A2 --recursive </text:p><text:p text:style-name="P423"/><text:p text:style-name="P423">@echo on </text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5680_1486593966"/><text:s text:c="4"/>ANN.js<text:bookmark-end text:name="__RefHeading___Toc5680_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P424">/*******************************************************************************</text:p><text:p text:style-name="P424"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P424"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P424"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P424"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P424"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P424"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P424"><text:s/>* Copyright (C) 2008-2011 by Todor Balabanov <text:s/>( tdb@tbsoft.eu ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P424"><text:s/>* <text:s text:c="27"/>Iliyan Zankinski ( iliyan_mf@abv.bg ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P424"><text:s/>* <text:s text:c="27"/>Galq Cirkalova <text:s text:c="2"/>( galq_cirkalova@abv.bg ) <text:s text:c="6"/>*</text:p><text:p text:style-name="P424"><text:s/>* <text:s text:c="27"/>Ivan Grozev <text:s text:c="5"/>( ivan.iliev.grozev@gmail.com ) *</text:p><text:p text:style-name="P424"><text:s/>* <text:s text:c="27"/>Daniel Chutrov <text:s text:c="2"/>( d.chutrov@gmail.com ) <text:s text:c="8"/>*</text:p><text:p text:style-name="P424"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P424"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P424"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P424"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P424"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P424"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P424"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P424"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P424"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P424"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P424"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P424"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P424"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P424"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P424"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P424">/*</text:p><text:p text:style-name="P424"><text:s/>* Include files.</text:p><text:p text:style-name="P424"><text:s/>*/</text:p><text:p text:style-name="P424">document.write(&apos;&lt;script type=&quot;text/javascript&quot; src=&quot;&apos; + &apos;cstdlib.js&apos; + &apos;&quot;&gt;&lt;/script&gt;&apos;);</text:p><text:p text:style-name="P424">document.write(&apos;&lt;script type=&quot;text/javascript&quot; src=&quot;&apos; + &apos;NeuronsList.js&apos; + &apos;&quot;&gt;&lt;/script&gt;&apos;);</text:p><text:p text:style-name="P424">document.write(&apos;&lt;script type=&quot;text/javascript&quot; src=&quot;&apos; + &apos;ActivitiesMatrix.js&apos; + &apos;&quot;&gt;&lt;/script&gt;&apos;);</text:p><text:p text:style-name="P424">document.write(&apos;&lt;script type=&quot;text/javascript&quot; src=&quot;&apos; + &apos;WeightsMatrix.js&apos; + &apos;&quot;&gt;&lt;/script&gt;&apos;);</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424">/**</text:p><text:p text:style-name="P424"><text:s/>* Learning rate of backpropagation.</text:p><text:p text:style-name="P424"><text:s/>*/</text:p><text:p text:style-name="P424">const LEARNING_RATE = 0.35;</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424">/**</text:p><text:p text:style-name="P424"><text:s/>* Full-connected Artificial Neural Network.</text:p><text:p text:style-name="P424"><text:s/>*</text:p><text:p text:style-name="P424"><text:s/>* @author Daniel Chutrov</text:p><text:p text:style-name="P424"><text:s/>*</text:p><text:p text:style-name="P424"><text:s/>* @email d.chutrov@gmail.com</text:p><text:p text:style-name="P424"><text:s/>*</text:p><text:p text:style-name="P424"><text:s/>* @date 16 Dec 2010</text:p><text:p text:style-name="P424"><text:s/>*/</text:p><text:p text:style-name="P424">function ANN(counters, ts, neuronsAmount, learn, bars, period) {</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/>/**</text:p><text:p text:style-name="P424"><text:tab/> * Number of ANN neurons.</text:p><text:p text:style-name="P424"><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/>this.neuronsAmount = neuronsAmount;</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/>/**</text:p><text:p text:style-name="P424"><text:tab/> * Just a pinter to real array.</text:p><text:p text:style-name="P424"><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/>this.neurons = new NeuronsList(this.neuronsAmount);</text:p><text:p text:style-name="P424"><text:tab/>this.neuronsAmount = neurons.dimension();</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/>/*</text:p><text:p text:style-name="P424"><text:tab/> * Make all neurons regular.</text:p><text:p text:style-name="P424"><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/>neurons.clearTypes();</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/>/*</text:p><text:p text:style-name="P424"><text:tab/> * Initialize neurons for first update.</text:p><text:p text:style-name="P424"><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/>neurons.reset();</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:soft-page-break/><text:tab/>/**</text:p><text:p text:style-name="P424"><text:tab/> * Activities 2D maxtrix.</text:p><text:p text:style-name="P424"><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/>this.activities = new ActivitiesMatrix(this.neuronsAmount);</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/>/**</text:p><text:p text:style-name="P424"><text:tab/> * Weights reference from DE.</text:p><text:p text:style-name="P424"><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/>this.weights = null;</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/>/**</text:p><text:p text:style-name="P424"><text:tab/> * Counters reference is used for statistics collecton.</text:p><text:p text:style-name="P424"><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/>this.counters = counters;</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/>/**</text:p><text:p text:style-name="P424"><text:tab/> * Link to real training set object.</text:p><text:p text:style-name="P424"><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/>this.ts = ts;</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/>/**</text:p><text:p text:style-name="P424"><text:tab/> * Past bars interval.</text:p><text:p text:style-name="P424"><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/>this.learn = learn;</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/>/**</text:p><text:p text:style-name="P424"><text:tab/> * Prediction bars interval.</text:p><text:p text:style-name="P424"><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/>this.bars = bars;</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/>/**</text:p><text:p text:style-name="P424"><text:tab/> * Chart period value.</text:p><text:p text:style-name="P424"><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/>this.period = period;</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/>/**</text:p><text:p text:style-name="P424"><text:tab/> * Prediction of the best chromosome.</text:p><text:p text:style-name="P424"><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/>this.prediction = 0.0;</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/>/*</text:p><text:p text:style-name="P424"><text:tab/> * Estimate work done.</text:p><text:p text:style-name="P424"><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/>if (counters != null) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>counters.setValue(&quot;Number of neurons&quot;, this.neuronsAmount);</text:p><text:p text:style-name="P424"><text:tab/>}</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/>/**</text:p><text:p text:style-name="P424"><text:tab/> * Neurons list getter.</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @return Neurons list reference.</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @date 19 Aug 2009</text:p><text:p text:style-name="P424"><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/>this.getNeurons = function() {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>return (neurons );</text:p><text:p text:style-name="P424"><text:tab/>};</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/>/**</text:p><text:p text:style-name="P424"><text:tab/> * Neurons list setter.</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @param neurons Neurons list.</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @author Iliyan Zankinski</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @email iliyan_mf@abv.bg</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @date 31 Jul 2009</text:p><text:p text:style-name="P424"><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/>this.setNeurons = function(neurons) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>this.neurons = neurons;</text:p><text:p text:style-name="P424"><text:tab/>};</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/>/**</text:p><text:p text:style-name="P424"><text:tab/> * Weights matrix getter.</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @return Weights matrix reference.</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @date 19 Aug 2009</text:p><text:p text:style-name="P424"><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/>this.getWeights = function() {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>return (weights );</text:p><text:p text:style-name="P424"><text:tab/>};</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/>/**</text:p><text:p text:style-name="P424"><text:tab/> * Weights matrix setter.</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @param weights Weights matrix.</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @date 26 Feb 2009</text:p><text:p text:style-name="P424"><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/>this.setWeights = function(weights) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>this.weights = weights;</text:p><text:p text:style-name="P424"><text:tab/>};</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/>/**</text:p><text:p text:style-name="P424"><text:tab/> * Activities matrix getter.</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @return Activities matrix reference.</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @date 19 Aug 2009</text:p><text:p text:style-name="P424"><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/>this.getActivities = function() {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>return (activities );</text:p><text:p text:style-name="P424"><text:tab/>};</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/>/**</text:p><text:p text:style-name="P424"><text:tab/> * Activities matrix setter.</text:p><text:p text:style-name="P424"><text:soft-page-break/><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @param activities Activities matrix.</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @date 26 Feb 2009</text:p><text:p text:style-name="P424"><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/>this.setActivities = function(activities) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>this.activities = activities;</text:p><text:p text:style-name="P424"><text:tab/>};</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/>/**</text:p><text:p text:style-name="P424"><text:tab/> * Activity value getter.</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @param int x Column index.</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @param int y Row index.</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @return Activity value.</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @date 14 Mar 2009</text:p><text:p text:style-name="P424"><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/>this.getActivity = function(x, y) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>if (x &lt; 0 || y &lt; 0 || x &gt;= activities.dimension() || y &gt;= activities.dimension()) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>throw (&quot;ANN00015&quot; );</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>return (0.0 );</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/><text:tab/>return ( activities(x, y) );</text:p><text:p text:style-name="P424"><text:tab/>};</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/>/**</text:p><text:p text:style-name="P424"><text:tab/> * Activity value setter.</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @param int x Column index.</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @param int y Row index.</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @param value Activity value.</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @date 14 Mar 2009</text:p><text:p text:style-name="P424"><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/>this.setActivity = function(x, y, value) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>if (x &lt; 0 || y &lt; 0 || x &gt;= activities.dimension() || y &gt;= activities.dimension()) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>throw (&quot;ANN00016&quot; );</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>return;</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/><text:tab/>activities(x, y) = value;</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>activities.normalize();</text:p><text:p text:style-name="P424"><text:tab/>};</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/>/**</text:p><text:p text:style-name="P424"><text:tab/> * Set all weights activities to minimum.</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @date 16 Jul 2015</text:p><text:p text:style-name="P424"><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/>this.setAllInactive = function() {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>//TODO Move this method in activities class.</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>for (var j = 0; j &lt; activities.dimension(); j++) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>for (var i = 0; i &lt; activities.dimension(); i++) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/><text:tab/>activities(i, j) = MIN_ACTIVITY;</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P424"><text:tab/>};</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/>/**</text:p><text:p text:style-name="P424"><text:tab/> * Set all weights activities to maximum.</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @date 14 Mar 2009</text:p><text:p text:style-name="P424"><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/>this.setAllActive = function() {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>//TODO Move this method in activities class.</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>for (var j = 0; j &lt; activities.dimension(); j++) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>for (var i = 0; i &lt; activities.dimension(); i++) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/><text:tab/>activities(i, j) = MAX_ACTIVITY;</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P424"><text:tab/>};</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/>/**</text:p><text:p text:style-name="P424"><text:tab/> * Training set pointer setter.</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @param ts Training set pointer.</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @author Iliyan Zankinski</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @email iliyan_mf@abv.bg</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @date 31 Jul 2009</text:p><text:p text:style-name="P424"><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/>this.setTrainingSetPointer = function(ts) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>this.ts = ts;</text:p><text:p text:style-name="P424"><text:tab/>};</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/>/**</text:p><text:p text:style-name="P424"><text:tab/> * Prediction value getter.</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @return Prediction value.</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @date 29 Apr 2009</text:p><text:p text:style-name="P424"><text:tab/> */</text:p><text:p text:style-name="P424"><text:soft-page-break/><text:tab/>this.getPrediction = function() {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>return (prediction );</text:p><text:p text:style-name="P424"><text:tab/>};</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/>/**</text:p><text:p text:style-name="P424"><text:tab/> * Setup first neurons in internal array to be input.</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @param size Number of neurons to be used.</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @date 27 Oct 2011</text:p><text:p text:style-name="P424"><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/>this.setupInput = function(size) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>for (var i = 0; i &lt; size &amp;&amp; i &lt; neurons.dimension(); i++) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>neurons[i].setInput(true);</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P424"><text:tab/>};</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/>/**</text:p><text:p text:style-name="P424"><text:tab/> * Setup last neurons in internal array to be output.</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @param size Number of neurons to be used.</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @date 27 Oct 2011</text:p><text:p text:style-name="P424"><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/>this.setupOutput = function(size) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>for (var i = neurons.dimension() - size; i &lt; neurons.dimension(); i++) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>neurons[i].setOutput(true);</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P424"><text:tab/>};</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/>/**</text:p><text:p text:style-name="P424"><text:tab/> * Setup three layers topology.</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @date 16 Jul 2015</text:p><text:p text:style-name="P424"><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/>this.setupThreeLayers = function() {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P424"><text:tab/><text:tab/> * Clear all connections.</text:p><text:p text:style-name="P424"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>setAllInactive();</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P424"><text:tab/><text:tab/> * Set bias between input and hidden layers.</text:p><text:p text:style-name="P424"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>var b1 = 0;</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>for ( b1 = 0; b1 &lt; neurons.dimension(); b1++) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>if (neurons[b1].isRegular() == true) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/><text:tab/>neurons[b1].setBias(true);</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P424"><text:tab/><text:tab/> * Set bias between hidden and output layers.</text:p><text:p text:style-name="P424"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>var b2 = 0;</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>for ( b2 = neurons.dimension() - 1; b2 &gt; 0; b2--) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>if (neurons[b2].isRegular() == true) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/><text:tab/>neurons[b2].setBias(true);</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P424"><text:tab/><text:tab/> * Connect bias neuron.</text:p><text:p text:style-name="P424"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>for (var j = 0; j &lt; neurons.dimension(); j++) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>if (neurons[j].isRegular() == false) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/><text:tab/>continue;</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>activities(j, b1) = activities.MAX_ACTIVITY;</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P424"><text:tab/><text:tab/> * Connect bias neuron.</text:p><text:p text:style-name="P424"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>for (var j = 0; j &lt; neurons.dimension(); j++) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>if (neurons[j].isOutput() == false) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/><text:tab/>continue;</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>activities(j, b2) = activities.MAX_ACTIVITY;</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P424"><text:tab/><text:tab/> * Set connections between input and hidden layers.</text:p><text:p text:style-name="P424"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>for (var i = 0; i &lt; neurons.dimension(); i++) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>if (neurons[i].isInput() == false) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/><text:tab/>continue;</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>for (var j = 0; j &lt; neurons.dimension(); j++) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/><text:tab/>if (neurons[j].isRegular() == false) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>continue;</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/><text:tab/>activities(j, i) = activities.MAX_ACTIVITY;</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P424"><text:tab/><text:tab/> * Set connections between hidden and output layers.</text:p><text:p text:style-name="P424"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>for (var i = 0; i &lt; neurons.dimension(); i++) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>if (neurons[i].isRegular() == false) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/><text:tab/>continue;</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>for (var j = 0; j &lt; neurons.dimension(); j++) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/><text:tab/>if (neurons[j].isOutput() == false) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>continue;</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/><text:tab/>activities(j, i) = activities.MAX_ACTIVITY;</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P424"><text:soft-page-break/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P424"><text:tab/>};</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/>/**</text:p><text:p text:style-name="P424"><text:tab/> * Load input vector inside the network.</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @param input Input vector.</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @param size Vector size.</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @author Daniel Chutrov</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @email d.chutrov@gmail.com</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @date 18 Dec 2010</text:p><text:p text:style-name="P424"><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/>this.loadInput = function(input, size) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>if (input.dimension() != neurons.getInputNeuronsAmount()) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>//TODO Find better exception handling.</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>return;</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/><text:tab/>for (var i = 0,</text:p><text:p text:style-name="P424"><text:tab/><text:tab/> <text:s text:c="3"/>k = 0; i &lt; neurons.dimension(); i++) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>if (neurons[i].isInput() == false) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/><text:tab/>continue;</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>neurons[i].setValue(input[k]);</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>k++;</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P424"><text:tab/>};</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/>/**</text:p><text:p text:style-name="P424"><text:tab/> * Forward pass of network state change. All neurons get new values.</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @author Daniel Chutrov</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @email d.chutrov@gmail.com</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @date 18 Dec 2010</text:p><text:p text:style-name="P424"><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/>this.update = function() {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P424"><text:tab/><text:tab/> * Return if weights are not loaded.</text:p><text:p text:style-name="P424"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>if (weights.dimension() == 0) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>//TODO Find better exception handling.</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>return;</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/><text:tab/>next = new NeuronsList(neurons.dimension());</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>for (var i = 0; i &lt; neurons.dimension(); i++) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>if (neurons[i].isInput() == true || neurons[i].isBias() == true) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/><text:tab/>continue;</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/> * Activation function of neuron i.</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>var value = 0.0;</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>for (var j = 0; j &lt; neurons.dimension(); j++) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/><text:tab/>value += neurons[j].getValue() * weights.get(i, j) * activities.get(i, j);</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/> * Normalize activation level of neuron i with sigmoid function.</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>value = 1.0 / (1.0 + exp(-value));</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>next[i].setValue(value);</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P424"><text:tab/><text:tab/> * Swap buffer to be ready for next network forward update.</text:p><text:p text:style-name="P424"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>neurons = next;</text:p><text:p text:style-name="P424"><text:tab/>};</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/>/**</text:p><text:p text:style-name="P424"><text:tab/> * Store (retrun) output of the network into output array.</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @author Daniel Chutrov</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @email d.chutrov@gmail.com</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @date 18 Dec 2010</text:p><text:p text:style-name="P424"><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/>this.storeOutput = function(output, size) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>if (output.dimension() != neurons.getOutputNeuronsAmount()) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>//TODO Find better exception handling.</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>return;</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/><text:tab/>for (var i = 0,</text:p><text:p text:style-name="P424"><text:tab/><text:tab/> <text:s text:c="3"/>k = 0; i &lt; neurons.dimension(); i++) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>if (neurons[i].isOutput() == false) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/><text:tab/>continue;</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>output[k] = neurons[i].getValue();</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>k++;</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P424"><text:tab/>};</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/>/**</text:p><text:p text:style-name="P424"><text:tab/> * Calculate network output error.</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @param expected Array with expected output values.</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @param predicted Array with predicted output values.</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @param size Size of expected values array.</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @return Euclidian distance between expected array and output array.</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @author Daniel Chutrov</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @email d.chutrov@gmail.com</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @date 18 Dec 2010</text:p><text:p text:style-name="P424"><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/>this.error = function(expected, predicted, size) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>if (expected.dimension() != predicted.dimension()) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>//TODO Find better exception handling.</text:p><text:p text:style-name="P424"><text:soft-page-break/><text:tab/><text:tab/><text:tab/>return 0.0;</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/><text:tab/>if (predicted.dimension() &lt; 0 || predicted.dimension() &gt; neurons.dimension()) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>//TODO Find better exception handling.</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>return 0.0;</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/><text:tab/>storeOutput(predicted);</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P424"><text:tab/><text:tab/> * Difference sum.</text:p><text:p text:style-name="P424"><text:tab/><text:tab/> * http://www.speech.sri.com/people/anand/771/html/node37.html</text:p><text:p text:style-name="P424"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>var result = 0.0;</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>var subtraction = 0.0;</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>for (var i = 0; i &lt; predicted.dimension(); i++) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>subtraction = expected[i] - predicted[i];</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>result += subtraction * subtraction;</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>result /= 2.0;</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/><text:tab/>return result;</text:p><text:p text:style-name="P424"><text:tab/>};</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/>/**</text:p><text:p text:style-name="P424"><text:tab/> * Calculate average net error for all training examples.</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @return Average net error for all trainign examples.</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @author Daniel Chutrov</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @email d.chutrov@gmail.com</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @date 18 Dec 2010</text:p><text:p text:style-name="P424"><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/>this.totalError = function() {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>var result = 0.0;</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P424"><text:tab/><text:tab/> * Estimate work done.</text:p><text:p text:style-name="P424"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>if (counters != null) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>counters.increment(&quot;Total error calculations&quot;);</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P424"><text:tab/><text:tab/> * Total artificial neural network error can not be calculated without</text:p><text:p text:style-name="P424"><text:tab/><text:tab/> * training set.</text:p><text:p text:style-name="P424"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>if (ts == null) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>return ( Math.floor(Math.random() * (RAND_MAX + 1)) );</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P424"><text:tab/><text:tab/> * Reset network for new training.</text:p><text:p text:style-name="P424"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>neurons.reset();</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P424"><text:tab/><text:tab/> * Loop over training set examples.</text:p><text:p text:style-name="P424"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>for (var i = 0,</text:p><text:p text:style-name="P424"><text:tab/><text:tab/> <text:s text:c="3"/>size = ts.getSize(); i &lt; size; i++) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/> * For each time load ANN input.</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>loadInput(ts.getSplittedInputted(i));</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/> * Update ANN internal state.</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>update();</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/> * Calculate error.</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>result += error(ts.getSplittedExpected(i), ts.getSplittedPredicted(i));</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/> * Sleep for better performance.</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>sleep();</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P424"><text:tab/><text:tab/> * Average error for comparisons with different amount of training examples.</text:p><text:p text:style-name="P424"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>result /= ts.getSize();</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/><text:tab/>return (result );</text:p><text:p text:style-name="P424"><text:tab/>};</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/>/**</text:p><text:p text:style-name="P424"><text:tab/> * Feed forward ANN.</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @author Daniel Chutrov</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @email d.chutrov@gmail.com</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @date 18 Dec 2010</text:p><text:p text:style-name="P424"><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/>this.feedforward = function() {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P424"><text:tab/><text:tab/> * Return if weights are not loaded.</text:p><text:p text:style-name="P424"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>if (weights.dimension() == 0) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>//TODO Find better exception handling.</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>return;</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/><text:tab/>next = new NeuronsList(neurons);</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P424"><text:tab/><text:tab/> * Feed hidden layer with values.</text:p><text:p text:style-name="P424"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>for (var i = 0; i &lt; neurons.dimension(); i++) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/> * Select neurons into the hidden layer.</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>if (neurons[i].isInput() == true || neurons[i].isOutput() == true || neurons[i].isBias() == true) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/><text:tab/>continue;</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P424"><text:soft-page-break/><text:tab/><text:tab/><text:tab/> * Activation function of neuron i.</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>var value = 0.0;</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>for (var j = 0; j &lt; neurons.dimension(); j++) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/><text:tab/> * Select neurons into the input layer.</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/><text:tab/>if (neurons[j].isInput() == false) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>continue;</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/><text:tab/>value += neurons[j].getValue() * weights.get(i, j) * activities.get(i, j);</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/> * Normalize activation level of neuron i with sidmoid function.</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>value = 1.0 / (1.0 + exp(-value));</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>next[i].setValue(value);</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P424"><text:tab/><text:tab/> * Feed output layer with values.</text:p><text:p text:style-name="P424"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>for (var i = 0; i &lt; neurons.dimension(); i++) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/> * Select neurons into the output layer.</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>if (neurons[i].isOutput() == false) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/><text:tab/>continue;</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/> * Activation function of neuron i.</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>var value = 0.0;</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>for (var j = 0; j &lt; neurons.dimension(); j++) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/><text:tab/> * Select neurons into the hidden layer.</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/><text:tab/>if (neurons[j].isInput() == true || neurons[j].isOutput() == true) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>continue;</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/><text:tab/>value += neurons[j].getValue() * weights.get(i, j) * activities.get(i, j);</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/> * Normalize activation level of neuron i with sidmoid function.</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>value = 1.0 / (1.0 + exp(-value));</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>next[i].setValue(value);</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P424"><text:tab/><text:tab/> * Swap buffer to be ready for next network forward update.</text:p><text:p text:style-name="P424"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>neurons = next;</text:p><text:p text:style-name="P424"><text:tab/>};</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/>/**</text:p><text:p text:style-name="P424"><text:tab/> * Back propagate ANN.</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @param expected Array with expected output values.</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @param size Size of expected values array.</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @author Daniel Chutrov</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @email d.chutrov@gmail.com</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @date 18 Dec 2010</text:p><text:p text:style-name="P424"><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/>this.backpropagation = function(expected, size) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>var weights = this.weights;</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P424"><text:tab/><text:tab/> * Calculate error into output layer.</text:p><text:p text:style-name="P424"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>for (var i = 0,</text:p><text:p text:style-name="P424"><text:tab/><text:tab/> <text:s text:c="3"/>k = 0; i &lt; neurons.dimension() &amp;&amp; k &lt; expected.dimension(); i++) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/> * Select neurons into the output layer.</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>if (neurons[i].isOutput() == false) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/><text:tab/>continue;</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>var error = (neurons[i].getValue() - expected[k]) * neurons[i].getValue() * (1.0 - neurons[i].getValue());</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>neurons[i].setError(error);</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/> * Increment expected values counter.</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>k++;</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P424"><text:tab/><text:tab/> * Calculate error into hidden layer.</text:p><text:p text:style-name="P424"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>for (var i = 0; i &lt; neurons.dimension(); i++) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/> * Select neurons into the hidden layer.</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>if (neurons[i].isInput() == true || neurons[i].isOutput() == true) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/><text:tab/>continue;</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>var error = 0.0;</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>for (var j = 0; j &lt; neurons.dimension(); j++) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/><text:tab/> * Select neurons into the output layer.</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/><text:tab/>if (neurons[j].isOutput() == false) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>continue;</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/><text:tab/>error += neurons[j].getError() * weights(i, j);</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>error *= neurons[i].getValue() * (1.0 - neurons[i].getValue());</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>neurons[i].setError(error);</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P424"><text:soft-page-break/></text:p><text:p text:style-name="P424"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P424"><text:tab/><text:tab/> * Correct weights between output and hidden layer.</text:p><text:p text:style-name="P424"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>for (var i = 0; i &lt; neurons.dimension(); i++) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/> * Select neurons into the output layer.</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>if (neurons[i].isOutput() == false) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/><text:tab/>continue;</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>var value = 0;</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>for (var j = 0; j &lt; neurons.dimension(); j++) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/><text:tab/> * Select neurons into the hidden layer.</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/><text:tab/>if (neurons[j].isInput() == true || neurons[j].isOutput() == true) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>continue;</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/><text:tab/>value += LEARNING_RATE * neurons[i].getError() * neurons[j].getValue();</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>weights.set(i, j, value);</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P424"><text:tab/><text:tab/> * Correct weights between hidden and output layer.</text:p><text:p text:style-name="P424"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>for (var i = 0; i &lt; neurons.dimension(); i++) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/> * Select neurons into the hidden layer.</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>if (neurons[i].isInput() == true || neurons[i].isOutput() == true || neurons[i].isBias() == true) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/><text:tab/>continue;</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>var value = 0;</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>for (var j = 0; j &lt; neurons.dimension(); j++) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/><text:tab/> * Select neurons into the input layer.</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/><text:tab/>if (neurons[j].isInput() == false) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>continue;</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/><text:tab/>value += LEARNING_RATE * neurons[i].getError() * neurons[j].getValue();</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>weights.set(i, j, value);</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P424"><text:tab/>};</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/>/**</text:p><text:p text:style-name="P424"><text:tab/> * Gradient training of ANN.</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @author Daniel Chutrov</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @email d.chutrov@gmail.com</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @date 18 Dec 2010</text:p><text:p text:style-name="P424"><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/>this.gradient = function() {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>var index = 0;</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P424"><text:tab/><text:tab/> * Gradient optimization can not be applied without training set.</text:p><text:p text:style-name="P424"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>if (ts == NULL) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>//TODO Find better exception handling.</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>return;</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/><text:tab/>for (var i = 0,</text:p><text:p text:style-name="P424"><text:tab/><text:tab/> <text:s text:c="3"/>size = ts.getSize(); i &lt; size; i++) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/> * Select random training example.</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/> * All recurrent connections are switched off and there is no need to</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/> * have time order of examples feeding.</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>index = rand() % size;</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/> * For each time load ANN input.</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>loadInput(ts.getSplittedInputted(index));</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/> * Feed forward ANN.</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>feedforward();</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/> * Back propacate ANN error.</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>backpropagation(ts.getSplittedExpected(index));</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P424"><text:tab/>};</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/>/**</text:p><text:p text:style-name="P424"><text:tab/> * Predict future value.</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @author Daniel Chutrov</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @email d.chutrov@gmail.com</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @date 18 Dec 2010</text:p><text:p text:style-name="P424"><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/>this.predict = function() {</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P424"><text:tab/><text:tab/> * Total artificial neural network error can not be calculated without</text:p><text:p text:style-name="P424"><text:tab/><text:tab/> * training set.</text:p><text:p text:style-name="P424"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>if (this.ts == null) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>return;</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/><text:tab/>loadInput(ts.getSplittedInputted(0));</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/><text:tab/>update();</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/><text:tab/>outputValues = new ANNOutput(neurons.getOutputNeuronsAmount());</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>storeOutput(outputValues);</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/><text:tab/>//TODO Should have array of predicted future values.</text:p><text:p text:style-name="P424"><text:soft-page-break/><text:tab/><text:tab/>prediction = outputValues[0];</text:p><text:p text:style-name="P424"><text:tab/>};</text:p><text:p text:style-name="P424">}</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5682_1486593966"/><text:s text:c="4"/>ANNInput.js<text:bookmark-end text:name="__RefHeading___Toc5682_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P424">/*******************************************************************************</text:p><text:p text:style-name="P424"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P424"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P424"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P424"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P424"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P424"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P424"><text:s/>* Copyright (C) 2008-2011 by Todor Balabanov <text:s/>( todor.balabanov@gmail.com ) <text:s text:c="2"/>*</text:p><text:p text:style-name="P424"><text:s/>* <text:s text:c="22"/>Iliyan Zankinski <text:s text:c="2"/>( iliyan_mf@abv.bg ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P424"><text:s/>* <text:s text:c="22"/>Momchil Anachkov <text:s text:c="2"/>( mZer0000@gmail.com ) <text:s text:c="12"/>*</text:p><text:p text:style-name="P424"><text:s/>* <text:s text:c="22"/>Daniel Chutrov <text:s text:c="4"/>( d.chutrov@gmail.com ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P424"><text:s/>* <text:s text:c="22"/>Nikola Simeonov <text:s text:c="3"/>( n.simeonow@gmail.com ) <text:s text:c="10"/>*</text:p><text:p text:style-name="P424"><text:s/>* <text:s text:c="22"/>Galq Cirkalova <text:s text:c="4"/>( galq_cirkalova@abv.bg ) <text:s text:c="9"/>*</text:p><text:p text:style-name="P424"><text:s/>* <text:s text:c="22"/>Ivan Grozev <text:s text:c="7"/>( ivan.iliev.grozev@gmail.com ) <text:s text:c="3"/>*</text:p><text:p text:style-name="P424"><text:s/>* <text:s text:c="22"/>Elisaveta Hristova ( elisaveta.s.hristova@gmail.com ) *</text:p><text:p text:style-name="P424"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P424"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P424"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P424"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P424"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P424"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P424"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P424"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P424"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P424"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P424"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P424"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P424"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P424"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P424"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424">/**</text:p><text:p text:style-name="P424"><text:s/>* ANN input class.</text:p><text:p text:style-name="P424"><text:s/>*</text:p><text:p text:style-name="P424"><text:s/>* @author Todor Balabanov</text:p><text:p text:style-name="P424"><text:s/>*</text:p><text:p text:style-name="P424"><text:s/>* @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P424"><text:s/>*</text:p><text:p text:style-name="P424"><text:s/>* @date 11 Aug 2011</text:p><text:p text:style-name="P424"><text:s/>*/</text:p><text:p text:style-name="P424">function ANNInput() {</text:p><text:p text:style-name="P424"><text:tab/>/**</text:p><text:p text:style-name="P424"><text:tab/> * Input/output values.</text:p><text:p text:style-name="P424"><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/>this.values = [];</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/>/**</text:p><text:p text:style-name="P424"><text:tab/> * Size of ANN input.</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @return Size of ANN input/ouput.</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @date 11 Aug 2011</text:p><text:p text:style-name="P424"><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/>this.dimension = function() {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>return values.length;</text:p><text:p text:style-name="P424"><text:tab/>};</text:p><text:p text:style-name="P424">}</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5684_1486593966"/><text:s text:c="4"/>ANNOutput.js<text:bookmark-end text:name="__RefHeading___Toc5684_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P424">/*******************************************************************************</text:p><text:p text:style-name="P424"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P424"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P424"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P424"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P424"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P424"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P424"><text:s/>* Copyright (C) 2008-2011 by Todor Balabanov <text:s/>( todor.balabanov@gmail.com ) <text:s text:c="2"/>*</text:p><text:p text:style-name="P424"><text:s/>* <text:s text:c="22"/>Iliyan Zankinski <text:s text:c="2"/>( iliyan_mf@abv.bg ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P424"><text:s/>* <text:s text:c="22"/>Momchil Anachkov <text:s text:c="2"/>( mZer0000@gmail.com ) <text:s text:c="12"/>*</text:p><text:p text:style-name="P424"><text:s/>* <text:s text:c="22"/>Daniel Chutrov <text:s text:c="4"/>( d.chutrov@gmail.com ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P424"><text:s/>* <text:s text:c="22"/>Nikola Simeonov <text:s text:c="3"/>( n.simeonow@gmail.com ) <text:s text:c="10"/>*</text:p><text:p text:style-name="P424"><text:s/>* <text:s text:c="22"/>Galq Cirkalova <text:s text:c="4"/>( galq_cirkalova@abv.bg ) <text:s text:c="9"/>*</text:p><text:p text:style-name="P424"><text:s/>* <text:s text:c="22"/>Ivan Grozev <text:s text:c="7"/>( ivan.iliev.grozev@gmail.com ) <text:s text:c="3"/>*</text:p><text:p text:style-name="P424"><text:s/>* <text:s text:c="22"/>Elisaveta Hristova ( elisaveta.s.hristova@gmail.com ) *</text:p><text:p text:style-name="P424"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P424"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P424"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P424"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P424"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P424"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P424"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P424"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P424"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P424"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P424"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P424"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P424"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P424"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P424"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424">/**</text:p><text:p text:style-name="P424"><text:s/>* ANN output class.</text:p><text:p text:style-name="P424"><text:s/>*</text:p><text:p text:style-name="P424"><text:s/>* @author Todor Balabanov</text:p><text:p text:style-name="P424"><text:s/>*</text:p><text:p text:style-name="P424"><text:s/>* @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P424"><text:s/>*</text:p><text:p text:style-name="P424"><text:s/>* @date 11 Aug 2011</text:p><text:p text:style-name="P424"><text:s/>*/</text:p><text:p text:style-name="P424">function ANNOutput() {</text:p><text:p text:style-name="P424"><text:tab/>/**</text:p><text:p text:style-name="P424"><text:soft-page-break/><text:tab/> * Input/output values.</text:p><text:p text:style-name="P424"><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/>this.values = [];</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/>/**</text:p><text:p text:style-name="P424"><text:tab/> * Size of ANN input.</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @return Size of ANN input/ouput.</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @date 11 Aug 2011</text:p><text:p text:style-name="P424"><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/>this.dimension = function() {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>return values.length;</text:p><text:p text:style-name="P424"><text:tab/>};</text:p><text:p text:style-name="P424">}</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5686_1486593966"/><text:s text:c="4"/>ActivitiesMatrix.js<text:bookmark-end text:name="__RefHeading___Toc5686_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P424">/*******************************************************************************</text:p><text:p text:style-name="P424"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P424"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P424"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P424"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P424"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P424"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P424"><text:s/>* Copyright (C) 2008-2011 by Todor Balabanov <text:s/>( tdb@tbsoft.eu ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P424"><text:s/>* <text:s text:c="27"/>Iliyan Zankinski ( iliyan_mf@abv.bg ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P424"><text:s/>* <text:s text:c="27"/>Galq Cirkalova <text:s text:c="2"/>( galq_cirkalova@abv.bg ) <text:s text:c="6"/>*</text:p><text:p text:style-name="P424"><text:s/>* <text:s text:c="27"/>Ivan Grozev <text:s text:c="5"/>( ivan.iliev.grozev@gmail.com ) *</text:p><text:p text:style-name="P424"><text:s/>* <text:s text:c="27"/>Daniel Chutrov <text:s text:c="2"/>( d.chutrov@gmail.com ) <text:s text:c="8"/>*</text:p><text:p text:style-name="P424"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P424"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P424"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P424"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P424"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P424"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P424"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P424"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P424"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P424"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P424"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P424"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P424"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P424"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P424"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424">/**</text:p><text:p text:style-name="P424"><text:s/>* Minimum possible weight activity.</text:p><text:p text:style-name="P424"><text:s/>*/</text:p><text:p text:style-name="P424">const MIN_ACTIVITY = 0.0;</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424">/**</text:p><text:p text:style-name="P424"><text:s/>* Maximum possible weight activity.</text:p><text:p text:style-name="P424"><text:s/>*/</text:p><text:p text:style-name="P424">const MAX_ACTIVITY = 1.0;</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424">/**</text:p><text:p text:style-name="P424"><text:s/>* ANN typology graph adjacency matrix class.</text:p><text:p text:style-name="P424"><text:s/>*</text:p><text:p text:style-name="P424"><text:s/>* @author Todor Balabanov</text:p><text:p text:style-name="P424"><text:s/>*</text:p><text:p text:style-name="P424"><text:s/>* @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P424"><text:s/>*</text:p><text:p text:style-name="P424"><text:s/>* @date 03 Aug 2011</text:p><text:p text:style-name="P424"><text:s/>*/</text:p><text:p text:style-name="P424">function ActivitiesMatrix(size) {</text:p><text:p text:style-name="P424"><text:tab/>/**</text:p><text:p text:style-name="P424"><text:tab/> * Matrix values.</text:p><text:p text:style-name="P424"><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/>this.values = new Array(size);</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/>for ( i = 0; i &lt; size; i++) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>this.values[i] = new Array(size);</text:p><text:p text:style-name="P424"><text:tab/>}</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/>for ( i = 0; i &lt; size; i++) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>for ( j = 0; j &lt; size; j++) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>this.values[i][j] = MAX_ACTIVITY;</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P424"><text:tab/>}</text:p><text:p text:style-name="P424"><text:tab/></text:p><text:p text:style-name="P424"><text:tab/>/**</text:p><text:p text:style-name="P424"><text:tab/> * Matrix elements accessor.</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @param col Column.</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @param row Row.</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @return Constant element value.</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @date 03 Aug 2011</text:p><text:p text:style-name="P424"><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/>this.get = function(col, row) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>if (col&lt;0 || col&gt;=values.size() || row&lt;0 || row&gt;=values.size()) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>//TODO Do exception handling.</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>return( 0.0 );</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>};</text:p><text:p text:style-name="P424"><text:tab/></text:p><text:p text:style-name="P424"><text:tab/><text:tab/>return values[col][row];</text:p><text:p text:style-name="P424"><text:tab/>};</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/>/**</text:p><text:p text:style-name="P424"><text:tab/> * Matrix elements accessor.</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @param col Column.</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @param row Row.</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @return Constant element value.</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P424"><text:soft-page-break/><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @date 03 Aug 2011</text:p><text:p text:style-name="P424"><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/>this.set = function(col, row, value) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>if (col&lt;0 || col&gt;=values.size() || row&lt;0 || row&gt;=values.size()) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>//TODO Do exception handling.</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>return value;</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P424"><text:tab/></text:p><text:p text:style-name="P424"><text:tab/><text:tab/>values[col][row] = value;</text:p><text:p text:style-name="P424"><text:tab/></text:p><text:p text:style-name="P424"><text:tab/><text:tab/>return( values[col][row] );</text:p><text:p text:style-name="P424"><text:tab/>};</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/>/**</text:p><text:p text:style-name="P424"><text:tab/> * Set all activities to the maximum valid value.</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @date 17 Jul 2015</text:p><text:p text:style-name="P424"><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/>this.setAllToMax = function() {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>for ( i = 0; i &lt; this.values.length; i++) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>for ( j = 0; j &lt; this.values[i].length; j++) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/><text:tab/>this.values[i][j] = MAX_ACTIVITY;</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P424"><text:tab/>};</text:p><text:p text:style-name="P424"/><text:p text:style-name="P424"><text:tab/>/**</text:p><text:p text:style-name="P424"><text:tab/> * Activities normalizatoin.</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @email todor.balabanov@gmail.comm</text:p><text:p text:style-name="P424"><text:tab/> *</text:p><text:p text:style-name="P424"><text:tab/> * @date 03 Aug 2011</text:p><text:p text:style-name="P424"><text:tab/> */</text:p><text:p text:style-name="P424"><text:tab/>this.normalize = function() {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>for ( i = 0; i &lt; this.values.length; i++) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>for ( j = 0; j &lt; this.values[i].length; j++) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/><text:tab/>if (this.values[i][j] &lt; MIN_ACTIVITY) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>this.values[i][j] = MIN_ACTIVITY;</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/><text:tab/>if (this.values[i][j] &gt; MAX_ACTIVITY) {</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>this.values[i][j] = MAX_ACTIVITY;</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P424"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P424"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P424"><text:tab/>};</text:p><text:p text:style-name="P424">}</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5688_1486593966"/><text:s text:c="4"/>Chromosome.js<text:bookmark-end text:name="__RefHeading___Toc5688_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P425">/*******************************************************************************</text:p><text:p text:style-name="P425"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P425"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P425"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P425"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P425"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P425"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P425"><text:s/>* Copyright (C) 2008-2011 by Todor Balabanov <text:s/>( tdb@tbsoft.eu ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P425"><text:s/>* <text:s text:c="27"/>Iliyan Zankinski ( iliyan_mf@abv.bg ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P425"><text:s/>* <text:s text:c="27"/>Galq Cirkalova <text:s text:c="2"/>( galq_cirkalova@abv.bg ) <text:s text:c="6"/>*</text:p><text:p text:style-name="P425"><text:s/>* <text:s text:c="27"/>Ivan Grozev <text:s text:c="5"/>( ivan.iliev.grozev@gmail.com ) *</text:p><text:p text:style-name="P425"><text:s/>* <text:s text:c="27"/>Daniel Chutrov <text:s text:c="2"/>( d.chutrov@gmail.com ) <text:s text:c="8"/>*</text:p><text:p text:style-name="P425"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P425"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P425"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P425"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P425"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P425"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P425"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P425"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P425"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P425"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P425"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P425"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P425"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P425"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P425"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P425">/*</text:p><text:p text:style-name="P425"><text:s/>* Include files.</text:p><text:p text:style-name="P425"><text:s/>*/</text:p><text:p text:style-name="P425">document.write(&apos;&lt;script type=&quot;text/javascript&quot; src=&quot;&apos; + &apos;cstdlib.js&apos; + &apos;&quot;&gt;&lt;/script&gt;&apos;);</text:p><text:p text:style-name="P425">document.write(&apos;&lt;script type=&quot;text/javascript&quot; src=&quot;&apos; + &apos;WeightsMatrix.js&apos; + &apos;&quot;&gt;&lt;/script&gt;&apos;);</text:p><text:p text:style-name="P425"/><text:p text:style-name="P425">/**</text:p><text:p text:style-name="P425"><text:s/>* Less optimal fitness value constant.</text:p><text:p text:style-name="P425"><text:s/>*/</text:p><text:p text:style-name="P425">const LESS_OPTIMAL_FITNESS_VALUE = RAND_MAX;</text:p><text:p text:style-name="P425"/><text:p text:style-name="P425">/**</text:p><text:p text:style-name="P425"><text:s/>* Minimuim random initializaton value for initial chromosome values.</text:p><text:p text:style-name="P425"><text:s/>*/</text:p><text:p text:style-name="P425">const MIN_INIT_RANDOM = -1.0;</text:p><text:p text:style-name="P425"/><text:p text:style-name="P425">/**</text:p><text:p text:style-name="P425"><text:s/>* Maximum random initializaton value for initial chromosome values.</text:p><text:p text:style-name="P425"><text:s/>*/</text:p><text:p text:style-name="P425">const MAX_INIT_RANDOM = +1.0;</text:p><text:p text:style-name="P425"/><text:p text:style-name="P425">/**</text:p><text:p text:style-name="P425"><text:s/>* DE chromosome class.</text:p><text:p text:style-name="P425"><text:s/>*</text:p><text:p text:style-name="P425"><text:s/>* @author Todor Balabanov</text:p><text:p text:style-name="P425"><text:s/>*</text:p><text:p text:style-name="P425"><text:s/>* @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P425"><text:s/>*</text:p><text:p text:style-name="P425"><text:s/>* @date 05 Aug 2011</text:p><text:p text:style-name="P425"><text:s/>*/</text:p><text:p text:style-name="P425">function Chromosome() {</text:p><text:p text:style-name="P425"><text:tab/>/**</text:p><text:p text:style-name="P425"><text:tab/> * Each chromosome is matrix of weights.</text:p><text:p text:style-name="P425"><text:tab/> */</text:p><text:p text:style-name="P425"><text:soft-page-break/><text:tab/>this.weights = WeightsMatrix(0);</text:p><text:p text:style-name="P425"/><text:p text:style-name="P425"><text:tab/>/**</text:p><text:p text:style-name="P425"><text:tab/> * Chromosome fitness value. Smaller output error is better fitness for the</text:p><text:p text:style-name="P425"><text:tab/> * chromosome (weights set).</text:p><text:p text:style-name="P425"><text:tab/> */</text:p><text:p text:style-name="P425"><text:tab/>this.fitness = LESS_OPTIMAL_FITNESS_VALUE;</text:p><text:p text:style-name="P425"/><text:p text:style-name="P425"><text:tab/>/**</text:p><text:p text:style-name="P425"><text:tab/> * Weights matrix getter.</text:p><text:p text:style-name="P425"><text:tab/> *</text:p><text:p text:style-name="P425"><text:tab/> * @return Weights matrix reference.</text:p><text:p text:style-name="P425"><text:tab/> *</text:p><text:p text:style-name="P425"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P425"><text:tab/> *</text:p><text:p text:style-name="P425"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P425"><text:tab/> *</text:p><text:p text:style-name="P425"><text:tab/> * @date 05 Aug 2011</text:p><text:p text:style-name="P425"><text:tab/> */</text:p><text:p text:style-name="P425"><text:tab/>this.getWeights = function() {</text:p><text:p text:style-name="P425"><text:tab/><text:tab/>return weights;</text:p><text:p text:style-name="P425"><text:tab/>};</text:p><text:p text:style-name="P425"/><text:p text:style-name="P425"><text:tab/>/**</text:p><text:p text:style-name="P425"><text:tab/> * Weights matrix setter.</text:p><text:p text:style-name="P425"><text:tab/> *</text:p><text:p text:style-name="P425"><text:tab/> * @param weights Weights matrix.</text:p><text:p text:style-name="P425"><text:tab/> *</text:p><text:p text:style-name="P425"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P425"><text:tab/> *</text:p><text:p text:style-name="P425"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P425"><text:tab/> *</text:p><text:p text:style-name="P425"><text:tab/> * @date 05 Aug 2011</text:p><text:p text:style-name="P425"><text:tab/> */</text:p><text:p text:style-name="P425"><text:tab/>this.setWeights = function(weights) {</text:p><text:p text:style-name="P425"><text:tab/><text:tab/>this.weights = weights;</text:p><text:p text:style-name="P425"><text:tab/>};</text:p><text:p text:style-name="P425"/><text:p text:style-name="P425"><text:tab/>/**</text:p><text:p text:style-name="P425"><text:tab/> * Chromosome fintess value getter.</text:p><text:p text:style-name="P425"><text:tab/> *</text:p><text:p text:style-name="P425"><text:tab/> * @return Fitness value.</text:p><text:p text:style-name="P425"><text:tab/> *</text:p><text:p text:style-name="P425"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P425"><text:tab/> *</text:p><text:p text:style-name="P425"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P425"><text:tab/> *</text:p><text:p text:style-name="P425"><text:tab/> * @date 05 Aug 2011</text:p><text:p text:style-name="P425"><text:tab/> */</text:p><text:p text:style-name="P425"><text:tab/>this.getFitness = function() {</text:p><text:p text:style-name="P425"><text:tab/><text:tab/>return fitness;</text:p><text:p text:style-name="P425"><text:tab/>};</text:p><text:p text:style-name="P425"/><text:p text:style-name="P425"><text:tab/>/**</text:p><text:p text:style-name="P425"><text:tab/> * Chromosome fintess value setter.</text:p><text:p text:style-name="P425"><text:tab/> *</text:p><text:p text:style-name="P425"><text:tab/> * @param fitness Fitness value.</text:p><text:p text:style-name="P425"><text:tab/> *</text:p><text:p text:style-name="P425"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P425"><text:tab/> *</text:p><text:p text:style-name="P425"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P425"><text:tab/> *</text:p><text:p text:style-name="P425"><text:tab/> * @date 05 Aug 2011</text:p><text:p text:style-name="P425"><text:tab/> */</text:p><text:p text:style-name="P425"><text:tab/>this.setFitness = function(value) {</text:p><text:p text:style-name="P425"><text:tab/><text:tab/>this.fitness = value;</text:p><text:p text:style-name="P425"><text:tab/>};</text:p><text:p text:style-name="P425"/><text:p text:style-name="P425"><text:tab/>/**</text:p><text:p text:style-name="P425"><text:tab/> * Initialize chromosome with random values.</text:p><text:p text:style-name="P425"><text:tab/> *</text:p><text:p text:style-name="P425"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P425"><text:tab/> *</text:p><text:p text:style-name="P425"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P425"><text:tab/> *</text:p><text:p text:style-name="P425"><text:tab/> * @date 25 Aug 2009</text:p><text:p text:style-name="P425"><text:tab/> */</text:p><text:p text:style-name="P425"><text:tab/>this.random = function() {</text:p><text:p text:style-name="P425"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P425"><text:tab/><text:tab/> * Initialize chromosome with random values.</text:p><text:p text:style-name="P425"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P425"><text:tab/><text:tab/>for (var j = 0; j &lt; weights.dimension(); j++) {</text:p><text:p text:style-name="P425"><text:tab/><text:tab/><text:tab/>for (var i = 0; i &lt; weights.dimension(); i++) {</text:p><text:p text:style-name="P425"><text:tab/><text:tab/><text:tab/><text:tab/>weights.set(i, j, MIN_INIT_RANDOM + (MAX_INIT_RANDOM - MIN_INIT_RANDOM) * Math.random());</text:p><text:p text:style-name="P425"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P425"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P425"/><text:p text:style-name="P425"><text:tab/><text:tab/>fitness = LESS_OPTIMAL_FITNESS_VALUE * Math.random();</text:p><text:p text:style-name="P425"><text:tab/>};</text:p><text:p text:style-name="P425">}</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5690_1486593966"/><text:s text:c="4"/>Counter.js<text:bookmark-end text:name="__RefHeading___Toc5690_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P426">/*******************************************************************************</text:p><text:p text:style-name="P426"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P426"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P426"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P426"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P426"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P426"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P426"><text:s/>* Copyright (C) 2008-2011 by Todor Balabanov <text:s/>( todor.balabanov@gmail.com ) <text:s text:c="2"/>*</text:p><text:p text:style-name="P426"><text:s/>* <text:s text:c="22"/>Iliyan Zankinski <text:s text:c="2"/>( iliyan_mf@abv.bg ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P426"><text:s/>* <text:s text:c="22"/>Momchil Anachkov <text:s text:c="2"/>( mZer0000@gmail.com ) <text:s text:c="12"/>*</text:p><text:p text:style-name="P426"><text:s/>* <text:s text:c="22"/>Daniel Chutrov <text:s text:c="4"/>( d.chutrov@gmail.com ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P426"><text:s/>* <text:s text:c="22"/>Nikola Simeonov <text:s text:c="3"/>( n.simeonow@gmail.com ) <text:s text:c="10"/>*</text:p><text:p text:style-name="P426"><text:s/>* <text:s text:c="22"/>Galq Cirkalova <text:s text:c="4"/>( galq_cirkalova@abv.bg ) <text:s text:c="9"/>*</text:p><text:p text:style-name="P426"><text:s/>* <text:s text:c="22"/>Ivan Grozev <text:s text:c="7"/>( ivan.iliev.grozev@gmail.com ) <text:s text:c="3"/>*</text:p><text:p text:style-name="P426"><text:s/>* <text:s text:c="22"/>Elisaveta Hristova ( elisaveta.s.hristova@gmail.com ) *</text:p><text:p text:style-name="P426"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P426"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P426"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P426"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P426"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P426"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P426"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P426"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P426"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P426"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P426"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P426"><text:soft-page-break/><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P426"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P426"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P426"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P426"/><text:p text:style-name="P426">/**</text:p><text:p text:style-name="P426"><text:s/>* Counter for application statistics.</text:p><text:p text:style-name="P426"><text:s/>*</text:p><text:p text:style-name="P426"><text:s/>* @author Todor Balabanov</text:p><text:p text:style-name="P426"><text:s/>*</text:p><text:p text:style-name="P426"><text:s/>* @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P426"><text:s/>*</text:p><text:p text:style-name="P426"><text:s/>* @date 28 Sep 2009</text:p><text:p text:style-name="P426"><text:s/>*/</text:p><text:p text:style-name="P426">function Counter() {</text:p><text:p text:style-name="P426"><text:tab/>/**</text:p><text:p text:style-name="P426"><text:tab/> * Container with counters values.</text:p><text:p text:style-name="P426"><text:tab/> */</text:p><text:p text:style-name="P426"><text:tab/>this.counters = [];</text:p><text:p text:style-name="P426"/><text:p text:style-name="P426"><text:tab/>/**</text:p><text:p text:style-name="P426"><text:tab/> * Clear counters.</text:p><text:p text:style-name="P426"><text:tab/> *</text:p><text:p text:style-name="P426"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P426"><text:tab/> *</text:p><text:p text:style-name="P426"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P426"><text:tab/> *</text:p><text:p text:style-name="P426"><text:tab/> * @date 28 Sep 2009</text:p><text:p text:style-name="P426"><text:tab/> */</text:p><text:p text:style-name="P426"><text:tab/>this.clear = function() {</text:p><text:p text:style-name="P426"><text:tab/><text:tab/>this.counters = [];</text:p><text:p text:style-name="P426"><text:tab/>};</text:p><text:p text:style-name="P426"/><text:p text:style-name="P426"><text:tab/>/**</text:p><text:p text:style-name="P426"><text:tab/> * Get counter value.</text:p><text:p text:style-name="P426"><text:tab/> *</text:p><text:p text:style-name="P426"><text:tab/> * @param key Counter key.</text:p><text:p text:style-name="P426"><text:tab/> *</text:p><text:p text:style-name="P426"><text:tab/> * @return Counter value.</text:p><text:p text:style-name="P426"><text:tab/> *</text:p><text:p text:style-name="P426"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P426"><text:tab/> *</text:p><text:p text:style-name="P426"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P426"><text:tab/> *</text:p><text:p text:style-name="P426"><text:tab/> * @date 28 Sep 2009</text:p><text:p text:style-name="P426"><text:tab/> */</text:p><text:p text:style-name="P426"><text:tab/>this.getValue = function(key) {</text:p><text:p text:style-name="P426"><text:tab/><text:tab/>if (!(&quot;key&quot; in counters)) {</text:p><text:p text:style-name="P426"><text:tab/><text:tab/><text:tab/>return (0 );</text:p><text:p text:style-name="P426"><text:tab/><text:tab/>} else {</text:p><text:p text:style-name="P426"><text:tab/><text:tab/><text:tab/>return (counters[key] );</text:p><text:p text:style-name="P426"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P426"><text:tab/>};</text:p><text:p text:style-name="P426"/><text:p text:style-name="P426"><text:tab/>/**</text:p><text:p text:style-name="P426"><text:tab/> * Set counter value.</text:p><text:p text:style-name="P426"><text:tab/> *</text:p><text:p text:style-name="P426"><text:tab/> * @param key Counter key.</text:p><text:p text:style-name="P426"><text:tab/> *</text:p><text:p text:style-name="P426"><text:tab/> * @param value Counter value.</text:p><text:p text:style-name="P426"><text:tab/> *</text:p><text:p text:style-name="P426"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P426"><text:tab/> *</text:p><text:p text:style-name="P426"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P426"><text:tab/> *</text:p><text:p text:style-name="P426"><text:tab/> * @date 28 Sep 2009</text:p><text:p text:style-name="P426"><text:tab/> */</text:p><text:p text:style-name="P426"><text:tab/>this.setValue = function(key, value) {</text:p><text:p text:style-name="P426"><text:tab/><text:tab/>counters[key] = value;</text:p><text:p text:style-name="P426"><text:tab/>};</text:p><text:p text:style-name="P426"/><text:p text:style-name="P426"><text:tab/>/**</text:p><text:p text:style-name="P426"><text:tab/> * Increment counter value.</text:p><text:p text:style-name="P426"><text:tab/> *</text:p><text:p text:style-name="P426"><text:tab/> * @param key Counter key.</text:p><text:p text:style-name="P426"><text:tab/> *</text:p><text:p text:style-name="P426"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P426"><text:tab/> *</text:p><text:p text:style-name="P426"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P426"><text:tab/> *</text:p><text:p text:style-name="P426"><text:tab/> * @date 28 Sep 2009</text:p><text:p text:style-name="P426"><text:tab/> */</text:p><text:p text:style-name="P426"><text:tab/>this.increment = function(key) {</text:p><text:p text:style-name="P426"><text:tab/><text:tab/>if (!(&quot;key&quot; in counters) == true) {</text:p><text:p text:style-name="P426"><text:tab/><text:tab/><text:tab/>counters[key] = -1;</text:p><text:p text:style-name="P426"><text:tab/><text:tab/>} else {</text:p><text:p text:style-name="P426"><text:tab/><text:tab/><text:tab/>counters[key]--;</text:p><text:p text:style-name="P426"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P426"><text:tab/>};</text:p><text:p text:style-name="P426"/><text:p text:style-name="P426"><text:tab/>/**</text:p><text:p text:style-name="P426"><text:tab/> * Decrement counter value.</text:p><text:p text:style-name="P426"><text:tab/> *</text:p><text:p text:style-name="P426"><text:tab/> * @param key Counter key.</text:p><text:p text:style-name="P426"><text:tab/> *</text:p><text:p text:style-name="P426"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P426"><text:tab/> *</text:p><text:p text:style-name="P426"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P426"><text:tab/> *</text:p><text:p text:style-name="P426"><text:tab/> * @date 28 Sep 2009</text:p><text:p text:style-name="P426"><text:tab/> */</text:p><text:p text:style-name="P426"><text:tab/>this.decrement = function(key) {</text:p><text:p text:style-name="P426"><text:tab/><text:tab/>if (!(&quot;key&quot; in counters) == true) {</text:p><text:p text:style-name="P426"><text:tab/><text:tab/><text:tab/>counters[key] = +1;</text:p><text:p text:style-name="P426"><text:tab/><text:tab/>} else {</text:p><text:p text:style-name="P426"><text:tab/><text:tab/><text:tab/>counters[key]++;</text:p><text:p text:style-name="P426"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P426"><text:tab/>};</text:p><text:p text:style-name="P426">}</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5692_1486593966"/><text:s text:c="4"/>CrossoverType.js<text:bookmark-end text:name="__RefHeading___Toc5692_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P426">/*******************************************************************************</text:p><text:p text:style-name="P426"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P426"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P426"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P426"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P426"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P426"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P426"><text:soft-page-break/><text:s/>* Copyright (C) 2008-2011 by Todor Balabanov <text:s/>( tdb@tbsoft.eu ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P426"><text:s/>* <text:s text:c="27"/>Iliyan Zankinski ( iliyan_mf@abv.bg ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P426"><text:s/>* <text:s text:c="27"/>Galq Cirkalova <text:s text:c="2"/>( galq_cirkalova@abv.bg ) <text:s text:c="6"/>*</text:p><text:p text:style-name="P426"><text:s/>* <text:s text:c="27"/>Ivan Grozev <text:s text:c="5"/>( ivan.iliev.grozev@gmail.com ) *</text:p><text:p text:style-name="P426"><text:s/>* <text:s text:c="27"/>Daniel Chutrov <text:s text:c="2"/>( d.chutrov@gmail.com ) <text:s text:c="8"/>*</text:p><text:p text:style-name="P426"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P426"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P426"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P426"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P426"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P426"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P426"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P426"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P426"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P426"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P426"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P426"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P426"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P426"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P426"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P426"/><text:p text:style-name="P426">/**</text:p><text:p text:style-name="P426"><text:s/>* Flag to switch off crossover at all.</text:p><text:p text:style-name="P426"><text:s/>*/</text:p><text:p text:style-name="P426">NONE = 0x00;</text:p><text:p text:style-name="P426"/><text:p text:style-name="P426">/**</text:p><text:p text:style-name="P426"><text:s/>* Crossover by randomly selected gens flag.</text:p><text:p text:style-name="P426"><text:s/>*/</text:p><text:p text:style-name="P426">RANDOM = 0x01;</text:p><text:p text:style-name="P426"/><text:p text:style-name="P426">/**</text:p><text:p text:style-name="P426"><text:s/>* Crossover by randomly selected gens flag.</text:p><text:p text:style-name="P426"><text:s/>*/</text:p><text:p text:style-name="P426">FIFTY_FIFTY = 0x02;</text:p><text:p text:style-name="P426"/><text:p text:style-name="P426">/**</text:p><text:p text:style-name="P426"><text:s/>* Crossover by single intersection flag.</text:p><text:p text:style-name="P426"><text:s/>*/</text:p><text:p text:style-name="P426">SINGLE_CUT = 0x03;</text:p><text:p text:style-name="P426"/><text:p text:style-name="P426">/**</text:p><text:p text:style-name="P426"><text:s/>* Crossover by binary metrix flag.</text:p><text:p text:style-name="P426"><text:s/>*/</text:p><text:p text:style-name="P426">BINARY_MATRIX = 0x04;</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5694_1486593966"/><text:s text:c="4"/>DE.js<text:bookmark-end text:name="__RefHeading___Toc5694_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P427">/*******************************************************************************</text:p><text:p text:style-name="P427"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P427"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P427"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P427"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P427"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P427"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P427"><text:s/>* Copyright (C) 2008-2011 by Todor Balabanov <text:s/>( tdb@tbsoft.eu ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P427"><text:s/>* <text:s text:c="27"/>Iliyan Zankinski ( iliyan_mf@abv.bg ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P427"><text:s/>* <text:s text:c="27"/>Galq Cirkalova <text:s text:c="2"/>( galq_cirkalova@abv.bg ) <text:s text:c="6"/>*</text:p><text:p text:style-name="P427"><text:s/>* <text:s text:c="27"/>Ivan Grozev <text:s text:c="5"/>( ivan.iliev.grozev@gmail.com ) *</text:p><text:p text:style-name="P427"><text:s/>* <text:s text:c="27"/>Daniel Chutrov <text:s text:c="2"/>( d.chutrov@gmail.com ) <text:s text:c="8"/>*</text:p><text:p text:style-name="P427"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P427"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P427"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P427"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P427"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P427"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P427"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P427"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P427"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P427"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P427"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P427"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P427"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P427"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P427"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P427">/*</text:p><text:p text:style-name="P427"><text:s/>* Include files.</text:p><text:p text:style-name="P427"><text:s/>*/</text:p><text:p text:style-name="P427">document.write(&apos;&lt;script type=&quot;text/javascript&quot; src=&quot;&apos; + &apos;cstdlib.js&apos; + &apos;&quot;&gt;&lt;/script&gt;&apos;);</text:p><text:p text:style-name="P427">document.write(&apos;&lt;script type=&quot;text/javascript&quot; src=&quot;&apos; + &apos;Population.js&apos; + &apos;&quot;&gt;&lt;/script&gt;&apos;);</text:p><text:p text:style-name="P427">document.write(&apos;&lt;script type=&quot;text/javascript&quot; src=&quot;&apos; + &apos;CrossoverType.js&apos; + &apos;&quot;&gt;&lt;/script&gt;&apos;);</text:p><text:p text:style-name="P427">document.write(&apos;&lt;script type=&quot;text/javascript&quot; src=&quot;&apos; + &apos;WeightsMatrix.js&apos; + &apos;&quot;&gt;&lt;/script&gt;&apos;);</text:p><text:p text:style-name="P427"/><text:p text:style-name="P427">/**</text:p><text:p text:style-name="P427"><text:s/>* Do prediction with each chromosome, not only with the best one.</text:p><text:p text:style-name="P427"><text:s/>*/</text:p><text:p text:style-name="P427">const PREDICT_WITH_EACH_CHROMOSOME = true;</text:p><text:p text:style-name="P427"/><text:p text:style-name="P427">/**</text:p><text:p text:style-name="P427"><text:s/>* Minimuim mutation factor.</text:p><text:p text:style-name="P427"><text:s/>*/</text:p><text:p text:style-name="P427">const MIN_MUTATION_FACTOR = 0.000;</text:p><text:p text:style-name="P427"/><text:p text:style-name="P427">/**</text:p><text:p text:style-name="P427"><text:s/>* Maximum mutation factor.</text:p><text:p text:style-name="P427"><text:s/>*/</text:p><text:p text:style-name="P427">const MAX_MUTATION_FACTOR = 0.001;</text:p><text:p text:style-name="P427"/><text:p text:style-name="P427">/**</text:p><text:p text:style-name="P427"><text:s/>* Minimum crossover rate as integer number between [0-10000] instead of double number between [0.0-1.0].</text:p><text:p text:style-name="P427"><text:s/>*/</text:p><text:p text:style-name="P427">const MIN_CROSSOVER_RATE = 0;</text:p><text:p text:style-name="P427"/><text:p text:style-name="P427">/**</text:p><text:p text:style-name="P427"><text:s/>* Maximum crossover rate as integer number between [0-10000] instead of double number between [0.0-1.0].</text:p><text:p text:style-name="P427"><text:s/>*/</text:p><text:p text:style-name="P427">const MAX_CROSSOVER_RATE = 10000;</text:p><text:p text:style-name="P427"/><text:p text:style-name="P427">/**</text:p><text:p text:style-name="P427"><text:s/>* Differential Evolution.</text:p><text:p text:style-name="P427"><text:s/>*</text:p><text:p text:style-name="P427"><text:s/>* @author Daniel Chutrov</text:p><text:p text:style-name="P427"><text:s/>*</text:p><text:p text:style-name="P427"><text:s/>* @email d.chutrov@gmail.com</text:p><text:p text:style-name="P427"><text:s/>*</text:p><text:p text:style-name="P427"><text:s/>* @date 19 Dec 2010</text:p><text:p text:style-name="P427"><text:s/>*/</text:p><text:p text:style-name="P427">function DE(counters, ann, populationSize) {</text:p><text:p text:style-name="P427"><text:tab/>/**</text:p><text:p text:style-name="P427"><text:soft-page-break/><text:tab/> * Use one of the elements in the population as trial element. When the element is better than some other element just change the index value.</text:p><text:p text:style-name="P427"><text:tab/> */</text:p><text:p text:style-name="P427"><text:tab/>this.trialIndex = 0;</text:p><text:p text:style-name="P427"/><text:p text:style-name="P427"><text:tab/>/**</text:p><text:p text:style-name="P427"><text:tab/> * In original DE x vector is selected in a loop and each element is visited. Here we will select x random way (statistically it should not have a difference).</text:p><text:p text:style-name="P427"><text:tab/> */</text:p><text:p text:style-name="P427"><text:tab/>this.baseIndex = 0;</text:p><text:p text:style-name="P427"/><text:p text:style-name="P427"><text:tab/>/**</text:p><text:p text:style-name="P427"><text:tab/> * Vector a from the original DE implementation.</text:p><text:p text:style-name="P427"><text:tab/> */</text:p><text:p text:style-name="P427"><text:tab/>this.targetIndex = 0;</text:p><text:p text:style-name="P427"/><text:p text:style-name="P427"><text:tab/>/**</text:p><text:p text:style-name="P427"><text:tab/> * Vector b from the original DE implementation.</text:p><text:p text:style-name="P427"><text:tab/> */</text:p><text:p text:style-name="P427"><text:tab/>this.firstIndex = 0;</text:p><text:p text:style-name="P427"/><text:p text:style-name="P427"><text:tab/>/**</text:p><text:p text:style-name="P427"><text:tab/> * Vector c from the original DE implementation.</text:p><text:p text:style-name="P427"><text:tab/> */</text:p><text:p text:style-name="P427"><text:tab/>this.secondIndex = 0;</text:p><text:p text:style-name="P427"/><text:p text:style-name="P427"><text:tab/>/*</text:p><text:p text:style-name="P427"><text:tab/> * Check counters pointer for point valid object.</text:p><text:p text:style-name="P427"><text:tab/> */</text:p><text:p text:style-name="P427"><text:tab/>if (counters == null) {</text:p><text:p text:style-name="P427"><text:tab/><text:tab/>throw( &quot;DE00148&quot; );</text:p><text:p text:style-name="P427"><text:tab/><text:tab/>return;</text:p><text:p text:style-name="P427"><text:tab/>}</text:p><text:p text:style-name="P427"><text:tab/>this.counters = counters;</text:p><text:p text:style-name="P427"/><text:p text:style-name="P427"><text:tab/>/*</text:p><text:p text:style-name="P427"><text:tab/> * Check ANN pointer for point valid object.</text:p><text:p text:style-name="P427"><text:tab/> */</text:p><text:p text:style-name="P427"><text:tab/>if (ann == null) {</text:p><text:p text:style-name="P427"><text:tab/><text:tab/>throw( &quot;DE00095&quot; );</text:p><text:p text:style-name="P427"><text:tab/><text:tab/>return;</text:p><text:p text:style-name="P427"><text:tab/>}</text:p><text:p text:style-name="P427"><text:tab/>this.ann = ann;</text:p><text:p text:style-name="P427"/><text:p text:style-name="P427"><text:tab/>/**</text:p><text:p text:style-name="P427"><text:tab/> * Population array. Population array is dynamically allocated. Eeach</text:p><text:p text:style-name="P427"><text:tab/> * member is two dimensional array (matrix of weights). Weights matrix is</text:p><text:p text:style-name="P427"><text:tab/> * also dynamically allocated.</text:p><text:p text:style-name="P427"><text:tab/> */</text:p><text:p text:style-name="P427"><text:tab/>this.population = new Population(populationSize);</text:p><text:p text:style-name="P427"/><text:p text:style-name="P427"><text:tab/>/**</text:p><text:p text:style-name="P427"><text:tab/> * Indexes should be different in order DE to work.</text:p><text:p text:style-name="P427"><text:tab/> *</text:p><text:p text:style-name="P427"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P427"><text:tab/> *</text:p><text:p text:style-name="P427"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P427"><text:tab/> *</text:p><text:p text:style-name="P427"><text:tab/> * @date 27 Dec 2014</text:p><text:p text:style-name="P427"><text:tab/> */</text:p><text:p text:style-name="P427"><text:tab/>this.validIndexes = function() {</text:p><text:p text:style-name="P427"><text:tab/><text:tab/>if (trialIndex == baseIndex || trialIndex == targetIndex || trialIndex == firstIndex || trialIndex == secondIndex) {</text:p><text:p text:style-name="P427"><text:tab/><text:tab/><text:tab/>return false;</text:p><text:p text:style-name="P427"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P427"/><text:p text:style-name="P427"><text:tab/><text:tab/>if (baseIndex == targetIndex || baseIndex == firstIndex || baseIndex == secondIndex) {</text:p><text:p text:style-name="P427"><text:tab/><text:tab/><text:tab/>return false;</text:p><text:p text:style-name="P427"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P427"/><text:p text:style-name="P427"><text:tab/><text:tab/>if (targetIndex == firstIndex || targetIndex == secondIndex) {</text:p><text:p text:style-name="P427"><text:tab/><text:tab/><text:tab/>return false;</text:p><text:p text:style-name="P427"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P427"/><text:p text:style-name="P427"><text:tab/><text:tab/>if (firstIndex == secondIndex) {</text:p><text:p text:style-name="P427"><text:tab/><text:tab/><text:tab/>return false;</text:p><text:p text:style-name="P427"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P427"/><text:p text:style-name="P427"><text:tab/><text:tab/>return true;</text:p><text:p text:style-name="P427"><text:tab/>};</text:p><text:p text:style-name="P427"/><text:p text:style-name="P427"><text:tab/>/**</text:p><text:p text:style-name="P427"><text:tab/> * Recombine chromosomes.</text:p><text:p text:style-name="P427"><text:tab/> *</text:p><text:p text:style-name="P427"><text:tab/> * @author Iliyan Zankinski</text:p><text:p text:style-name="P427"><text:tab/> *</text:p><text:p text:style-name="P427"><text:tab/> * @email iliyan_mf@abv.bg</text:p><text:p text:style-name="P427"><text:tab/> *</text:p><text:p text:style-name="P427"><text:tab/> * @date 31 Mar 2009</text:p><text:p text:style-name="P427"><text:tab/> */</text:p><text:p text:style-name="P427"><text:tab/>//TODO Do it in Chromosome class.</text:p><text:p text:style-name="P427"><text:tab/>this.recombine = function() {</text:p><text:p text:style-name="P427"><text:tab/><text:tab/>var CR = MIN_CROSSOVER_RATE + rand() % (MAX_CROSSOVER_RATE - MIN_CROSSOVER_RATE + 1);</text:p><text:p text:style-name="P427"><text:tab/><text:tab/>var F = MIN_MUTATION_FACTOR + (MAX_MUTATION_FACTOR - MIN_MUTATION_FACTOR) * (1.0*rand() / RAND_MAX);</text:p><text:p text:style-name="P427"><text:tab/></text:p><text:p text:style-name="P427"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P427"><text:tab/><text:tab/> * Trail vector.</text:p><text:p text:style-name="P427"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P427"><text:tab/><text:tab/>trial = population.list[trialIndex].getWeights();</text:p><text:p text:style-name="P427"><text:tab/></text:p><text:p text:style-name="P427"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P427"><text:tab/><text:tab/> * Base vector.</text:p><text:p text:style-name="P427"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P427"><text:tab/><text:tab/>base = population.list[baseIndex].getWeights();</text:p><text:p text:style-name="P427"><text:tab/></text:p><text:p text:style-name="P427"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P427"><text:tab/><text:tab/> * Target vector.</text:p><text:p text:style-name="P427"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P427"><text:tab/><text:tab/>target = population.list[targetIndex].getWeights();</text:p><text:p text:style-name="P427"><text:tab/></text:p><text:p text:style-name="P427"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P427"><text:tab/><text:tab/> * First vector for the difference.</text:p><text:p text:style-name="P427"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P427"><text:tab/><text:tab/>first = population.list[firstIndex].getWeights();</text:p><text:p text:style-name="P427"><text:tab/></text:p><text:p text:style-name="P427"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P427"><text:tab/><text:tab/> * Second vector for the difference.</text:p><text:p text:style-name="P427"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P427"><text:tab/><text:tab/>second = population.list[secondIndex].getWeights();</text:p><text:p text:style-name="P427"><text:tab/></text:p><text:p text:style-name="P427"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P427"><text:tab/><text:tab/> * Size of the ANN should not be zero.</text:p><text:p text:style-name="P427"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P427"><text:tab/> <text:s text:c="3"/>if(trial.dimension() &lt;= 0) {</text:p><text:p text:style-name="P427"><text:tab/><text:tab/><text:tab/>throw( &quot;DE00219&quot; );</text:p><text:p text:style-name="P427"><text:tab/><text:tab/><text:tab/>return;</text:p><text:p text:style-name="P427"><text:tab/> <text:s text:c="3"/>}</text:p><text:p text:style-name="P427"><text:tab/></text:p><text:p text:style-name="P427"><text:soft-page-break/><text:tab/><text:tab/>//TODO Implement recombination as polymorphic class.</text:p><text:p text:style-name="P427"><text:tab/></text:p><text:p text:style-name="P427"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P427"><text:tab/><text:tab/> * It is a guarantee that at least one element will be crossed.</text:p><text:p text:style-name="P427"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P427"><text:tab/><text:tab/>var R = rand() % (trial.dimension() * trial.dimension());</text:p><text:p text:style-name="P427"><text:tab/></text:p><text:p text:style-name="P427"><text:tab/> <text:s text:c="3"/>/*</text:p><text:p text:style-name="P427"><text:tab/> <text:s text:c="4"/>* Binomial crossover.</text:p><text:p text:style-name="P427"><text:tab/> <text:s text:c="4"/>*/</text:p><text:p text:style-name="P427"><text:tab/><text:tab/>for (var j=0, k=0; j&lt;trial.dimension(); j++) {</text:p><text:p text:style-name="P427"><text:tab/><text:tab/><text:tab/>for (var i=0; i&lt;trial.dimension(); i++, k++) {</text:p><text:p text:style-name="P427"><text:tab/><text:tab/><text:tab/><text:tab/>var ri = MIN_CROSSOVER_RATE + rand() % (MAX_CROSSOVER_RATE - MIN_CROSSOVER_RATE + 1);</text:p><text:p text:style-name="P427"><text:tab/></text:p><text:p text:style-name="P427"><text:tab/><text:tab/><text:tab/><text:tab/>if (ri &lt; CR || k == R) {</text:p><text:p text:style-name="P427"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>trial(i,j) = base(i,j) + F * (first(i,j)-second(i,j));</text:p><text:p text:style-name="P427"><text:tab/><text:tab/><text:tab/><text:tab/>} else {</text:p><text:p text:style-name="P427"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>trial(i,j) = target(i,j);</text:p><text:p text:style-name="P427"><text:tab/><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P427"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P427"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P427"><text:tab/></text:p><text:p text:style-name="P427"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P427"><text:tab/><text:tab/> * Update result chromosome. When reference is used result is already on place.</text:p><text:p text:style-name="P427"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P427"><text:tab/><text:tab/>//TODO population[trialIndex].setWeights( trial );</text:p><text:p text:style-name="P427"><text:tab/>};</text:p><text:p text:style-name="P427"/><text:p text:style-name="P427"><text:tab/>/**</text:p><text:p text:style-name="P427"><text:tab/> * Population getter.</text:p><text:p text:style-name="P427"><text:tab/> *</text:p><text:p text:style-name="P427"><text:tab/> * @return Weights Population reference.</text:p><text:p text:style-name="P427"><text:tab/> *</text:p><text:p text:style-name="P427"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P427"><text:tab/> *</text:p><text:p text:style-name="P427"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P427"><text:tab/> *</text:p><text:p text:style-name="P427"><text:tab/> * @date 19 Aug 2009</text:p><text:p text:style-name="P427"><text:tab/> */</text:p><text:p text:style-name="P427"><text:tab/>this.getPopulation = function() {</text:p><text:p text:style-name="P427"><text:tab/><text:tab/>return population;</text:p><text:p text:style-name="P427"><text:tab/>};</text:p><text:p text:style-name="P427"/><text:p text:style-name="P427"><text:tab/>/**</text:p><text:p text:style-name="P427"><text:tab/> * Population setter.</text:p><text:p text:style-name="P427"><text:tab/> *</text:p><text:p text:style-name="P427"><text:tab/> * @param population Population to set.</text:p><text:p text:style-name="P427"><text:tab/> *</text:p><text:p text:style-name="P427"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P427"><text:tab/> *</text:p><text:p text:style-name="P427"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P427"><text:tab/> *</text:p><text:p text:style-name="P427"><text:tab/> * @date 20 May 2009</text:p><text:p text:style-name="P427"><text:tab/> */</text:p><text:p text:style-name="P427"><text:tab/>this.setPopulation = function(value) {</text:p><text:p text:style-name="P427"><text:tab/><text:tab/>population = value;</text:p><text:p text:style-name="P427"><text:tab/>};</text:p><text:p text:style-name="P427"/><text:p text:style-name="P427"><text:tab/>/**</text:p><text:p text:style-name="P427"><text:tab/> * Crossover type getter.</text:p><text:p text:style-name="P427"><text:tab/> *</text:p><text:p text:style-name="P427"><text:tab/> * @return Crossover type.</text:p><text:p text:style-name="P427"><text:tab/> *</text:p><text:p text:style-name="P427"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P427"><text:tab/> *</text:p><text:p text:style-name="P427"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P427"><text:tab/> *</text:p><text:p text:style-name="P427"><text:tab/> * @date 11 Aug 2011</text:p><text:p text:style-name="P427"><text:tab/> */</text:p><text:p text:style-name="P427"><text:tab/>this.getCrossoverType = function() {</text:p><text:p text:style-name="P427"><text:tab/>};</text:p><text:p text:style-name="P427"/><text:p text:style-name="P427"><text:tab/>/**</text:p><text:p text:style-name="P427"><text:tab/> * Crossover type setter.</text:p><text:p text:style-name="P427"><text:tab/> *</text:p><text:p text:style-name="P427"><text:tab/> * @param type Crossover type.</text:p><text:p text:style-name="P427"><text:tab/> *</text:p><text:p text:style-name="P427"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P427"><text:tab/> *</text:p><text:p text:style-name="P427"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P427"><text:tab/> *</text:p><text:p text:style-name="P427"><text:tab/> * @date 11 Aug 2011</text:p><text:p text:style-name="P427"><text:tab/> */</text:p><text:p text:style-name="P427"><text:tab/>this.setCrossoverType = function(type) {</text:p><text:p text:style-name="P427"><text:tab/>};</text:p><text:p text:style-name="P427"/><text:p text:style-name="P427"><text:tab/>/**</text:p><text:p text:style-name="P427"><text:tab/> * Crossover percent getter.</text:p><text:p text:style-name="P427"><text:tab/> *</text:p><text:p text:style-name="P427"><text:tab/> * @return Crossover probability in percent.</text:p><text:p text:style-name="P427"><text:tab/> *</text:p><text:p text:style-name="P427"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P427"><text:tab/> *</text:p><text:p text:style-name="P427"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P427"><text:tab/> *</text:p><text:p text:style-name="P427"><text:tab/> * @date 11 Aug 2011</text:p><text:p text:style-name="P427"><text:tab/> */</text:p><text:p text:style-name="P427"><text:tab/>this.getCrossoverPercent = function() {</text:p><text:p text:style-name="P427"><text:tab/>};</text:p><text:p text:style-name="P427"/><text:p text:style-name="P427"><text:tab/>/**</text:p><text:p text:style-name="P427"><text:tab/> * Crossover percent setter.</text:p><text:p text:style-name="P427"><text:tab/> *</text:p><text:p text:style-name="P427"><text:tab/> * @param percent Crossover probability in percent.</text:p><text:p text:style-name="P427"><text:tab/> *</text:p><text:p text:style-name="P427"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P427"><text:tab/> *</text:p><text:p text:style-name="P427"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P427"><text:tab/> *</text:p><text:p text:style-name="P427"><text:tab/> * @date 11 Aug 2011</text:p><text:p text:style-name="P427"><text:tab/> */</text:p><text:p text:style-name="P427"><text:tab/>this.setCrossoverPercent = function(percent) {</text:p><text:p text:style-name="P427"><text:tab/>};</text:p><text:p text:style-name="P427"/><text:p text:style-name="P427"><text:tab/>/**</text:p><text:p text:style-name="P427"><text:tab/> * Mutation percent getter.</text:p><text:p text:style-name="P427"><text:tab/> *</text:p><text:p text:style-name="P427"><text:tab/> * @return Mutation probability in percent.</text:p><text:p text:style-name="P427"><text:tab/> *</text:p><text:p text:style-name="P427"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P427"><text:tab/> *</text:p><text:p text:style-name="P427"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P427"><text:tab/> *</text:p><text:p text:style-name="P427"><text:tab/> * @date 11 Aug 2011</text:p><text:p text:style-name="P427"><text:tab/> */</text:p><text:p text:style-name="P427"><text:soft-page-break/><text:tab/>this.getMutationPercent = function() {</text:p><text:p text:style-name="P427"><text:tab/>};</text:p><text:p text:style-name="P427"/><text:p text:style-name="P427"><text:tab/>/**</text:p><text:p text:style-name="P427"><text:tab/> * Mutation percent setter.</text:p><text:p text:style-name="P427"><text:tab/> *</text:p><text:p text:style-name="P427"><text:tab/> * @param percent Mutation probability in percent.</text:p><text:p text:style-name="P427"><text:tab/> *</text:p><text:p text:style-name="P427"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P427"><text:tab/> *</text:p><text:p text:style-name="P427"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P427"><text:tab/> *</text:p><text:p text:style-name="P427"><text:tab/> * @date 11 Aug 2011</text:p><text:p text:style-name="P427"><text:tab/> */</text:p><text:p text:style-name="P427"><text:tab/>this.setMutationPercent = function(percent) {</text:p><text:p text:style-name="P427"><text:tab/>};</text:p><text:p text:style-name="P427"/><text:p text:style-name="P427"><text:tab/>/**</text:p><text:p text:style-name="P427"><text:tab/> * Evolve population. Do selection for crossover. Crossover half of the</text:p><text:p text:style-name="P427"><text:tab/> * population. Mutate crossovered half of the population.</text:p><text:p text:style-name="P427"><text:tab/> *</text:p><text:p text:style-name="P427"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P427"><text:tab/> *</text:p><text:p text:style-name="P427"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P427"><text:tab/> *</text:p><text:p text:style-name="P427"><text:tab/> * @date 15 May 2009</text:p><text:p text:style-name="P427"><text:tab/> */</text:p><text:p text:style-name="P427"><text:tab/>this.evolve = function() {</text:p><text:p text:style-name="P427"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P427"><text:tab/><text:tab/> * Estimate work done.</text:p><text:p text:style-name="P427"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P427"><text:tab/><text:tab/>if (counters != null) {</text:p><text:p text:style-name="P427"><text:tab/><text:tab/><text:tab/>counters.increment( &quot;Evolution loops&quot; );</text:p><text:p text:style-name="P427"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P427"><text:tab/></text:p><text:p text:style-name="P427"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P427"><text:tab/><text:tab/> * Select trial vector index (it is used as buffer).</text:p><text:p text:style-name="P427"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P427"><text:tab/><text:tab/>//TODO Use the chromosome with the worst fitness.</text:p><text:p text:style-name="P427"><text:tab/><text:tab/>trialIndex = rand() % population.dimension();</text:p><text:p text:style-name="P427"><text:tab/></text:p><text:p text:style-name="P427"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P427"><text:tab/><text:tab/> * Evolve more chromosomes of the population (not all of them).</text:p><text:p text:style-name="P427"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P427"><text:tab/><text:tab/>for (var k=0; k&lt;population.dimension()&amp;&amp;isRunning==true; k++) {</text:p><text:p text:style-name="P427"><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P427"><text:tab/><text:tab/><text:tab/> * Select random indivudials for crossover according selection strategy.</text:p><text:p text:style-name="P427"><text:tab/><text:tab/><text:tab/> * The best chromosome is not part of the evolution to give better chances</text:p><text:p text:style-name="P427"><text:tab/><text:tab/><text:tab/> * to other chromosomes to survive and to evolve.</text:p><text:p text:style-name="P427"><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P427"><text:tab/><text:tab/><text:tab/>do {</text:p><text:p text:style-name="P427"><text:tab/><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P427"><text:tab/><text:tab/><text:tab/><text:tab/> * Base vector should never be equal to the trial vector. That is why k can not be used as x vector selection.</text:p><text:p text:style-name="P427"><text:tab/><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P427"><text:tab/><text:tab/><text:tab/><text:tab/>baseIndex = rand() % population.dimension();</text:p><text:p text:style-name="P427"><text:tab/></text:p><text:p text:style-name="P427"><text:tab/><text:tab/><text:tab/><text:tab/>targetIndex = rand() % population.dimension();</text:p><text:p text:style-name="P427"><text:tab/><text:tab/><text:tab/><text:tab/>firstIndex = rand() % population.dimension();</text:p><text:p text:style-name="P427"><text:tab/><text:tab/><text:tab/><text:tab/>secondIndex = rand() % population.dimension();</text:p><text:p text:style-name="P427"><text:tab/><text:tab/><text:tab/>} while (validIndexes() == false);</text:p><text:p text:style-name="P427"><text:tab/></text:p><text:p text:style-name="P427"><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P427"><text:tab/><text:tab/><text:tab/> * Produce trial vector.</text:p><text:p text:style-name="P427"><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P427"><text:tab/><text:tab/><text:tab/>recombine();</text:p><text:p text:style-name="P427"><text:tab/></text:p><text:p text:style-name="P427"><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P427"><text:tab/><text:tab/><text:tab/> * Load chromosome&apos;s weights into ANN.</text:p><text:p text:style-name="P427"><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P427"><text:tab/><text:tab/><text:tab/>ann.setWeights(population[trialIndex].getWeights());</text:p><text:p text:style-name="P427"><text:tab/></text:p><text:p text:style-name="P427"><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P427"><text:tab/><text:tab/><text:tab/> * Calculate chromosome fitness by calling ANN total error calculation.</text:p><text:p text:style-name="P427"><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P427"><text:tab/><text:tab/><text:tab/>population[ trialIndex ].setFitness( ann.totalError() );</text:p><text:p text:style-name="P427"><text:tab/></text:p><text:p text:style-name="P427"><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P427"><text:tab/><text:tab/><text:tab/> * There is a chance total error calculation to be interrupted.</text:p><text:p text:style-name="P427"><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P427"><text:tab/><text:tab/><text:tab/>if (isRunning == false) {</text:p><text:p text:style-name="P427"><text:tab/><text:tab/><text:tab/><text:tab/>population[trialIndex].setFitness( RAND_MAX );</text:p><text:p text:style-name="P427"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P427"><text:tab/></text:p><text:p text:style-name="P427"><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P427"><text:tab/><text:tab/><text:tab/> * Update ANN prediction.</text:p><text:p text:style-name="P427"><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P427"><text:tab/><text:tab/><text:tab/>if (population[trialIndex].getFitness()&lt;=population.getBestFitness() || PREDICT_WITH_EACH_CHROMOSOME==true) {</text:p><text:p text:style-name="P427"><text:tab/><text:tab/><text:tab/><text:tab/>ann.predict();</text:p><text:p text:style-name="P427"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P427"><text:tab/></text:p><text:p text:style-name="P427"><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P427"><text:tab/><text:tab/><text:tab/> * If trial vector is better than base vector than switch indexes.</text:p><text:p text:style-name="P427"><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P427"><text:tab/><text:tab/><text:tab/>if(population[ trialIndex ].getFitness() &lt; population[ baseIndex ].getFitness()) {</text:p><text:p text:style-name="P427"><text:tab/><text:tab/><text:tab/><text:tab/>trialIndex = baseIndex;</text:p><text:p text:style-name="P427"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P427"><text:tab/></text:p><text:p text:style-name="P427"><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P427"><text:tab/><text:tab/><text:tab/> * Update best fitness index.</text:p><text:p text:style-name="P427"><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P427"><text:tab/><text:tab/><text:tab/>population.searchBestFitnessIndex();</text:p><text:p text:style-name="P427"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P427"><text:tab/>};</text:p><text:p text:style-name="P427"/><text:p text:style-name="P427"><text:tab/>/*</text:p><text:p text:style-name="P427"><text:tab/> * Estimate work done.</text:p><text:p text:style-name="P427"><text:tab/> */</text:p><text:p text:style-name="P427"><text:tab/>if (counters != null) {</text:p><text:p text:style-name="P427"><text:tab/><text:tab/>counters.setValue(&quot;Population size&quot;, population.dimension());</text:p><text:p text:style-name="P427"><text:tab/>}</text:p><text:p text:style-name="P427">}</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5696_1486593966"/><text:s text:c="4"/>HttpCommunicator.js<text:bookmark-end text:name="__RefHeading___Toc5696_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P428">/*******************************************************************************</text:p><text:p text:style-name="P428"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P428"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P428"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P428"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P428"><text:soft-page-break/><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P428"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P428"><text:s/>* Copyright (C) 2008-2011 by Todor Balabanov <text:s/>( tdb@tbsoft.eu ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P428"><text:s/>* <text:s text:c="27"/>Iliyan Zankinski ( iliyan_mf@abv.bg ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P428"><text:s/>* <text:s text:c="27"/>Galq Cirkalova <text:s text:c="2"/>( galq_cirkalova@abv.bg ) <text:s text:c="6"/>*</text:p><text:p text:style-name="P428"><text:s/>* <text:s text:c="27"/>Ivan Grozev <text:s text:c="5"/>( ivan.iliev.grozev@gmail.com ) *</text:p><text:p text:style-name="P428"><text:s/>* <text:s text:c="27"/>Daniel Chutrov <text:s text:c="2"/>( d.chutrov@gmail.com ) <text:s text:c="8"/>*</text:p><text:p text:style-name="P428"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P428"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P428"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P428"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P428"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P428"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P428"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P428"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P428"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P428"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P428"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P428"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P428"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P428"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P428"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P428"/><text:p text:style-name="P428">/**</text:p><text:p text:style-name="P428"><text:s/>* Communication class used for HTTP data transfer between client module and</text:p><text:p text:style-name="P428"><text:s/>* server side business logic.</text:p><text:p text:style-name="P428"><text:s/>*</text:p><text:p text:style-name="P428"><text:s/>* @author Daniel Chutrov</text:p><text:p text:style-name="P428"><text:s/>*</text:p><text:p text:style-name="P428"><text:s/>* @email d.chutrov@gmail.com</text:p><text:p text:style-name="P428"><text:s/>*</text:p><text:p text:style-name="P428"><text:s/>* @date 29 Dec 2010</text:p><text:p text:style-name="P428"><text:s/>*/</text:p><text:p text:style-name="P428">function HttpCommunicator() {</text:p><text:p text:style-name="P428"><text:tab/>//TODO Not in use.</text:p><text:p text:style-name="P428">}</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5698_1486593966"/><text:s text:c="4"/>JsonHttpCommunicator.js<text:bookmark-end text:name="__RefHeading___Toc5698_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P429">/*******************************************************************************</text:p><text:p text:style-name="P429"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P429"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P429"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P429"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P429"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P429"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P429"><text:s/>* Copyright (C) 2008-2011 by Todor Balabanov <text:s/>( tdb@tbsoft.eu ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P429"><text:s/>* <text:s text:c="27"/>Iliyan Zankinski ( iliyan_mf@abv.bg ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P429"><text:s/>* <text:s text:c="27"/>Galq Cirkalova <text:s text:c="2"/>( galq_cirkalova@abv.bg ) <text:s text:c="6"/>*</text:p><text:p text:style-name="P429"><text:s/>* <text:s text:c="27"/>Ivan Grozev <text:s text:c="5"/>( ivan.iliev.grozev@gmail.com ) *</text:p><text:p text:style-name="P429"><text:s/>* <text:s text:c="27"/>Daniel Chutrov <text:s text:c="2"/>( d.chutrov@gmail.com ) <text:s text:c="8"/>*</text:p><text:p text:style-name="P429"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P429"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P429"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P429"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P429"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P429"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P429"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P429"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P429"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P429"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P429"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P429"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P429"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P429"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P429"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P429"/><text:p text:style-name="P429">/**</text:p><text:p text:style-name="P429"><text:s/>* Remote host URL address.</text:p><text:p text:style-name="P429"><text:s/>*/</text:p><text:p text:style-name="P429">const HOST = &quot;localhost&quot;;</text:p><text:p text:style-name="P429"/><text:p text:style-name="P429">/**</text:p><text:p text:style-name="P429"><text:s/>* Remote host port.</text:p><text:p text:style-name="P429"><text:s/>*/</text:p><text:p text:style-name="P429">const PORT = 80;</text:p><text:p text:style-name="P429"/><text:p text:style-name="P429">/**</text:p><text:p text:style-name="P429"><text:s/>* Remote script ANN list provider.</text:p><text:p text:style-name="P429"><text:s/>*/</text:p><text:p text:style-name="P429">const LIST_OF_ANNS_SCRIPT = &quot;/logic/json_number_of_anns.php&quot;;</text:p><text:p text:style-name="P429"/><text:p text:style-name="P429">/**</text:p><text:p text:style-name="P429"><text:s/>* Remote single ANN save script.</text:p><text:p text:style-name="P429"><text:s/>*/</text:p><text:p text:style-name="P429">const SAVE_SINGLE_ANN_SCRIPT = &quot;/logic/save_ann.php&quot;;</text:p><text:p text:style-name="P429"/><text:p text:style-name="P429">/**</text:p><text:p text:style-name="P429"><text:s/>* Remote ANN neurons amount load script.</text:p><text:p text:style-name="P429"><text:s/>*/</text:p><text:p text:style-name="P429">const LOAD_NEURONS_AMOUNT_SCRIPT = &quot;/logic/json_load_neurons_amount.php&quot;;</text:p><text:p text:style-name="P429"/><text:p text:style-name="P429">/**</text:p><text:p text:style-name="P429"><text:s/>* Remote single ANN load script.</text:p><text:p text:style-name="P429"><text:s/>*/</text:p><text:p text:style-name="P429">const LOAD_SINGLE_ANN_SCRIPT = &quot;/logic/json_load_ann.php&quot;;</text:p><text:p text:style-name="P429"/><text:p text:style-name="P429">/**</text:p><text:p text:style-name="P429"><text:s/>* Remote single ANN load script.</text:p><text:p text:style-name="P429"><text:s/>*/</text:p><text:p text:style-name="P429">const LOAD_BEST_FITNESS_SCRIPT = &quot;/logic/json_load_best_fitness.php&quot;;</text:p><text:p text:style-name="P429"/><text:p text:style-name="P429">/**</text:p><text:p text:style-name="P429"><text:s/>* Remote training set size script.</text:p><text:p text:style-name="P429"><text:s/>*/</text:p><text:p text:style-name="P429">const TRAINING_SET_SIZE_SCRIPT = &quot;/logic/json_training_set_size.php&quot;;</text:p><text:p text:style-name="P429"/><text:p text:style-name="P429">/**</text:p><text:p text:style-name="P429"><text:s/>* Remote training set save script.</text:p><text:p text:style-name="P429"><text:s/>*/</text:p><text:p text:style-name="P429">const SAVE_TRAINING_SET_SCRIPT = &quot;/logic/save_training_set.php&quot;;</text:p><text:p text:style-name="P429"/><text:p text:style-name="P429">/**</text:p><text:p text:style-name="P429"><text:s/>* Remote training set load script.</text:p><text:p text:style-name="P429"><text:s/>*/</text:p><text:p text:style-name="P429">const LOAD_TRAINING_SET_SCRIPT = &quot;/logic/json_load_training_set.php&quot;;</text:p><text:p text:style-name="P429"/><text:p text:style-name="P429">/**</text:p><text:p text:style-name="P429"><text:s/>* Communication class used for HTTP data transfer between client module and</text:p><text:p text:style-name="P429"><text:soft-page-break/><text:s/>* server side business logic.</text:p><text:p text:style-name="P429"><text:s/>*</text:p><text:p text:style-name="P429"><text:s/>* @author Daniel Chutrov</text:p><text:p text:style-name="P429"><text:s/>*</text:p><text:p text:style-name="P429"><text:s/>* @email d.chutrov@gmail.com</text:p><text:p text:style-name="P429"><text:s/>*</text:p><text:p text:style-name="P429"><text:s/>* @date 29 Dec 2010</text:p><text:p text:style-name="P429"><text:s/>*/</text:p><text:p text:style-name="P429">function JsonHttpCommunicator() {</text:p><text:p text:style-name="P429"/><text:p text:style-name="P429"><text:tab/>/**</text:p><text:p text:style-name="P429"><text:tab/> * Communication object as private member.</text:p><text:p text:style-name="P429"><text:tab/> */</text:p><text:p text:style-name="P429"><text:tab/>var request = null;</text:p><text:p text:style-name="P429"/><text:p text:style-name="P429"><text:tab/>/*</text:p><text:p text:style-name="P429"><text:tab/> * Get XTML HTTP request object.</text:p><text:p text:style-name="P429"><text:tab/> */</text:p><text:p text:style-name="P429"><text:tab/>if (window.XMLHttpRequest) {</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>request = new XMLHttpRequest();</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P429"><text:tab/><text:tab/> * Not IE.</text:p><text:p text:style-name="P429"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P429"><text:tab/>} else if (window.ActiveXObject) {</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>request = new ActiveXObject(&quot;Microsoft.XMLHTTP&quot;);</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P429"><text:tab/><text:tab/> * IE</text:p><text:p text:style-name="P429"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P429"><text:tab/>} else {</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>alert(&quot;Your browser does not support the XmlHttpRequest object!&quot;);</text:p><text:p text:style-name="P429"><text:tab/>}</text:p><text:p text:style-name="P429"/><text:p text:style-name="P429"><text:tab/>/**</text:p><text:p text:style-name="P429"><text:tab/> * Load list with ANNs.</text:p><text:p text:style-name="P429"><text:tab/> *</text:p><text:p text:style-name="P429"><text:tab/> * @param list List of ANN ids on the server side.</text:p><text:p text:style-name="P429"><text:tab/> *</text:p><text:p text:style-name="P429"><text:tab/> * @param annId Id of ANN to be used as selection parameter.</text:p><text:p text:style-name="P429"><text:tab/> *</text:p><text:p text:style-name="P429"><text:tab/> * @param symbol MetaTrader 4 chart currency pair symbol.</text:p><text:p text:style-name="P429"><text:tab/> *</text:p><text:p text:style-name="P429"><text:tab/> * @param period MetaTrader 4 chart time period.</text:p><text:p text:style-name="P429"><text:tab/> *</text:p><text:p text:style-name="P429"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P429"><text:tab/> *</text:p><text:p text:style-name="P429"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P429"><text:tab/> *</text:p><text:p text:style-name="P429"><text:tab/> * @date 16 Sep 2013</text:p><text:p text:style-name="P429"><text:tab/> */</text:p><text:p text:style-name="P429"><text:tab/>this.loadAnnList = function(list, annId, symbol, period) {</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>list.splice(0, list.length);</text:p><text:p text:style-name="P429"/><text:p text:style-name="P429"><text:tab/><text:tab/>if (request.readyState != 4 &amp;&amp; request.readyState != 0) {</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/>return;</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P429"/><text:p text:style-name="P429"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P429"><text:tab/><text:tab/> * Prepare request parameters.</text:p><text:p text:style-name="P429"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>var parameters = &quot;&quot;;</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>parameters += &quot;annid=&quot; + annId;</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>parameters += &quot;&amp;&quot;;</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>parameters += &quot;&amp;symbol=&quot; + symbol;</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>parameters += &quot;&amp;&quot;;</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>parameters += &quot;period=&quot; + period;</text:p><text:p text:style-name="P429"/><text:p text:style-name="P429"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P429"><text:tab/><text:tab/> * Send synchronous HTTP request.</text:p><text:p text:style-name="P429"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>request.open(&quot;POST&quot;, &quot;http://&quot; + HOST + LIST_OF_ANNS_SCRIPT, false);</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>request.setRequestHeader(&quot;Content-type&quot;, &quot;application/x-www-form-urlencoded&quot;);</text:p><text:p text:style-name="P429"/><text:p text:style-name="P429"><text:tab/><text:tab/>request.send(parameters);</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>var response = JSON.parse(request.responseText);</text:p><text:p text:style-name="P429"/><text:p text:style-name="P429"><text:tab/><text:tab/>for (var i = 0; i &lt; response.identifiers.length; i++) {</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/>list[i] = response.identifiers[i];</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P429"/><text:p text:style-name="P429"><text:tab/><text:tab/>return list;</text:p><text:p text:style-name="P429"><text:tab/>};</text:p><text:p text:style-name="P429"/><text:p text:style-name="P429"><text:tab/>/**</text:p><text:p text:style-name="P429"><text:tab/> * Allocate memory and load ANN and DE objects.</text:p><text:p text:style-name="P429"><text:tab/> *</text:p><text:p text:style-name="P429"><text:tab/> * @param ann Not allocated artificial nerural network object pointer with</text:p><text:p text:style-name="P429"><text:tab/> * value NULL.</text:p><text:p text:style-name="P429"><text:tab/> *</text:p><text:p text:style-name="P429"><text:tab/> * @param <text:s/>de Not allocated differential evolution object pointer with</text:p><text:p text:style-name="P429"><text:tab/> * value NULL.</text:p><text:p text:style-name="P429"><text:tab/> *</text:p><text:p text:style-name="P429"><text:tab/> * @param symbol MetaTrader 4 chart currency pair symbol.</text:p><text:p text:style-name="P429"><text:tab/> *</text:p><text:p text:style-name="P429"><text:tab/> * @param period MetaTrader 4 chart time period.</text:p><text:p text:style-name="P429"><text:tab/> *</text:p><text:p text:style-name="P429"><text:tab/> * @param parameters All other netwrok parameters.</text:p><text:p text:style-name="P429"><text:tab/> *</text:p><text:p text:style-name="P429"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P429"><text:tab/> *</text:p><text:p text:style-name="P429"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P429"><text:tab/> *</text:p><text:p text:style-name="P429"><text:tab/> * @date 16 Sep 2013</text:p><text:p text:style-name="P429"><text:tab/> */</text:p><text:p text:style-name="P429"><text:tab/>this.loadTrainerObjects = function(counters, ann, de, symbol, period, parameters) {</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>var numberOfNeurons = loadAnnNeuronsAmount(parameters.dbId);</text:p><text:p text:style-name="P429"/><text:p text:style-name="P429"><text:tab/><text:tab/>var list = [];</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>list = loadAnnList(list, parameters.dbId, symbol, period);</text:p><text:p text:style-name="P429"/><text:p text:style-name="P429"><text:tab/><text:tab/>if (list.length &gt; 0 &amp;&amp; numberOfNeurons &gt; 0) {</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/>neuronsAmount = numberOfNeurons;</text:p><text:p text:style-name="P429"/><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/>ann = new ANN(counters, neuronsAmount, parameters.learn, parameters.forecast, period);</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>} else if (list.length == 0) {</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/>neuronsAmount = parameters.neuronsAmount;</text:p><text:p text:style-name="P429"/><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/> * It is good new network to have at least neurons for input and output.</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/>if (neuronsAmount &lt; (parameters.inputSize + parameters.outputSize)) {</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/><text:tab/>neuronsAmount = parameters.inputSize + parameters.outputSize;</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P429"/><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/> * Create new network if no record presented in database.</text:p><text:p text:style-name="P429"><text:soft-page-break/><text:tab/><text:tab/><text:tab/> * Input and output neurons should be specified on network creation.</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/>ann = new ANN(counters, neuronsAmount, parameters.learn, parameters.forecast, period);</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/>ann.setupInput(parameters.inputSize);</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/>ann.setupOutput(parameters.outputSize);</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/>ann.setupThreeLayers();</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P429"/><text:p text:style-name="P429"><text:tab/><text:tab/>de = new DE(counters, ann, parameters.populationSize);</text:p><text:p text:style-name="P429"/><text:p text:style-name="P429"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P429"><text:tab/><text:tab/> * Load DE with random values. It is useful in new ANN and DE creation.</text:p><text:p text:style-name="P429"><text:tab/><text:tab/> * Internal size of chromosomes should be given before initialization.</text:p><text:p text:style-name="P429"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>var population = de.getPopulation();</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>for (var i = 0; i &lt; population.dimension(); i++) {</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/>weights = new WeightsMatrix(ann.getNeurons().dimension());</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/>chromosome = new Chromosome(weights, RAND_MAX);</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/>population[i] = chromosome;</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>//TODO Find better way to initialize random population with proper size of weight matrices.</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>population.initRandom();</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>//TODO This setter call may be is not needed.</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>de.setPopulation(population);</text:p><text:p text:style-name="P429"/><text:p text:style-name="P429"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P429"><text:tab/><text:tab/> * Load DB ANNs.</text:p><text:p text:style-name="P429"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>var fitness = RAND_MAX;</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>var neurons = ann.getNeurons();</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>var activities = ann.getActivities();</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>if (list.size() &gt; 0 &amp;&amp; neurons.dimension() &gt; 0 &amp;&amp; neurons.dimension() == neuronsAmount) {</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/>var population = de.getPopulation();</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/>for (var i = 0; i &lt; list.size(); i++) {</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/><text:tab/>weights = population[i].getWeights();</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/><text:tab/>//TODO Activities, symbol, period, number of neurons and flags can be loaded only once.</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/><text:tab/>var result = loadSingleANN(list[i], symbol, period, fitness, neurons, weights, activities);</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/><text:tab/>ann.symbol = result[0];</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/><text:tab/>ann.period = result[1];</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/><text:tab/>ann.setNeurons(result[3]);</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/><text:tab/>ann.setActivities(result[5]);</text:p><text:p text:style-name="P429"/><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/><text:tab/>population[i].setFitness(result[2]);</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/><text:tab/>population[i].setWeights(result[4]);</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/>de.setPopulation(population);</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P429"/><text:p text:style-name="P429"><text:tab/><text:tab/>return [ann, de, symbol, period];</text:p><text:p text:style-name="P429"><text:tab/>};</text:p><text:p text:style-name="P429"/><text:p text:style-name="P429"><text:tab/>/**</text:p><text:p text:style-name="P429"><text:tab/> * Save single ANN record on the remote side server.</text:p><text:p text:style-name="P429"><text:tab/> *</text:p><text:p text:style-name="P429"><text:tab/> * @param symbol Currency pair symbol.</text:p><text:p text:style-name="P429"><text:tab/> *</text:p><text:p text:style-name="P429"><text:tab/> * @param period Currency chart period.</text:p><text:p text:style-name="P429"><text:tab/> *</text:p><text:p text:style-name="P429"><text:tab/> * @param fitness Weights set fitness value.</text:p><text:p text:style-name="P429"><text:tab/> *</text:p><text:p text:style-name="P429"><text:tab/> * @param numberOfNeurons Number of neurons used as topology.</text:p><text:p text:style-name="P429"><text:tab/> *</text:p><text:p text:style-name="P429"><text:tab/> * @param flags Nurons flags.</text:p><text:p text:style-name="P429"><text:tab/> *</text:p><text:p text:style-name="P429"><text:tab/> * @param weights Weights set.</text:p><text:p text:style-name="P429"><text:tab/> *</text:p><text:p text:style-name="P429"><text:tab/> * @param activities Weights activities.</text:p><text:p text:style-name="P429"><text:tab/> *</text:p><text:p text:style-name="P429"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P429"><text:tab/> *</text:p><text:p text:style-name="P429"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P429"><text:tab/> *</text:p><text:p text:style-name="P429"><text:tab/> * @date 16 Sep 2013</text:p><text:p text:style-name="P429"><text:tab/> */</text:p><text:p text:style-name="P429"><text:tab/>this.saveSingleANN = function(symbol, period, fitness, neurons, weights, activities) {</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>if (request.readyState != 4 &amp;&amp; request.readyState != 0) {</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/>return;</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P429"/><text:p text:style-name="P429"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P429"><text:tab/><text:tab/> * Prepare request parameters.</text:p><text:p text:style-name="P429"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>var parameters = &quot;&quot;;</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>parameters += &quot;&amp;symbol=&quot; + symbol;</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>parameters += &quot;&amp;&quot;;</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>parameters += &quot;period=&quot; + period;</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>parameters += &quot;&amp;&quot;;</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>parameters += &quot;fitness=&quot; + fitness;</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>parameters += &quot;&amp;&quot;;</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>parameters += &quot;number_of_neurons=&quot; + neurons.dimension();</text:p><text:p text:style-name="P429"/><text:p text:style-name="P429"><text:tab/><text:tab/>parameters += &quot;&amp;&quot;;</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>parameters += &quot;flags=&quot;;</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>for (var i = 0; i &lt; neurons.dimension(); i++) {</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/>if (i &gt; 0) {</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/><text:tab/>parameters += &quot; &quot;;</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/>parameters += neurons[i].getType();</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P429"/><text:p text:style-name="P429"><text:tab/><text:tab/>parameters += &quot;&amp;&quot;;</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>parameters += &quot;weights=&quot;;</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>for (var j = 0; j &lt; neurons.dimension(); j++) {</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/>if (j &gt; 0) {</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/><text:tab/>parameters += &quot;\n&quot;;</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/>for (var i = 0; i &lt; neurons.dimension(); i++) {</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/><text:tab/>if (i &gt; 0) {</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>parameters += &quot; &quot;;</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/><text:tab/>parameters += weights.get(i, j);</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P429"/><text:p text:style-name="P429"><text:tab/><text:tab/>parameters += &quot;&amp;&quot;;</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>parameters += &quot;activities=&quot;;</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>for (var j = 0; j &lt; neurons.dimension(); j++) {</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/>if (j &gt; 0) {</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/><text:tab/>parameters += &quot;\n&quot;;</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/>for (var i = 0; i &lt; neurons.dimension(); i++) {</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/><text:tab/>if (i &gt; 0) {</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>parameters += &quot; &quot;;</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/><text:tab/>parameters += activities.get(i, j);</text:p><text:p text:style-name="P429"><text:soft-page-break/><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P429"/><text:p text:style-name="P429"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P429"><text:tab/><text:tab/> * Send synchronous HTTP request.</text:p><text:p text:style-name="P429"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>request.open(&quot;POST&quot;, &quot;http://&quot; + HOST + SAVE_SINGLE_ANN_SCRIPT, false);</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>request.setRequestHeader(&quot;Content-type&quot;, &quot;application/x-www-form-urlencoded&quot;);</text:p><text:p text:style-name="P429"/><text:p text:style-name="P429"><text:tab/><text:tab/>request.send(parameters);</text:p><text:p text:style-name="P429"><text:tab/>};</text:p><text:p text:style-name="P429"/><text:p text:style-name="P429"><text:tab/>/**</text:p><text:p text:style-name="P429"><text:tab/> * Load ANN neurons amount from DB.</text:p><text:p text:style-name="P429"><text:tab/> *</text:p><text:p text:style-name="P429"><text:tab/> * @param annId Id of ANN to be used as selection parameter.</text:p><text:p text:style-name="P429"><text:tab/> *</text:p><text:p text:style-name="P429"><text:tab/> * @return Neurons amount value.</text:p><text:p text:style-name="P429"><text:tab/> *</text:p><text:p text:style-name="P429"><text:tab/> * @author Iliyan Zankinski</text:p><text:p text:style-name="P429"><text:tab/> *</text:p><text:p text:style-name="P429"><text:tab/> * @email iliyan_mf@abv.bg</text:p><text:p text:style-name="P429"><text:tab/> *</text:p><text:p text:style-name="P429"><text:tab/> * @date 16 Sep 2013</text:p><text:p text:style-name="P429"><text:tab/> */</text:p><text:p text:style-name="P429"><text:tab/>this.loadAnnNeuronsAmount = function(annId) {</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>if (request.readyState != 4 &amp;&amp; request.readyState != 0) {</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/>return;</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P429"/><text:p text:style-name="P429"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P429"><text:tab/><text:tab/> * Prepare request parameters.</text:p><text:p text:style-name="P429"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>var parameters = &quot;&quot;;</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>parameters += &quot;annid=&quot; + annId;</text:p><text:p text:style-name="P429"/><text:p text:style-name="P429"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P429"><text:tab/><text:tab/> * Send synchronous HTTP request.</text:p><text:p text:style-name="P429"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>request.open(&quot;POST&quot;, &quot;http://&quot; + HOST + LOAD_NEURONS_AMOUNT_SCRIPT, false);</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>request.setRequestHeader(&quot;Content-type&quot;, &quot;application/x-www-form-urlencoded&quot;);</text:p><text:p text:style-name="P429"/><text:p text:style-name="P429"><text:tab/><text:tab/>request.send(parameters);</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>var response = JSON.parse(request.responseText);</text:p><text:p text:style-name="P429"/><text:p text:style-name="P429"><text:tab/><text:tab/>return response.neuronsAmount;</text:p><text:p text:style-name="P429"><text:tab/>};</text:p><text:p text:style-name="P429"/><text:p text:style-name="P429"><text:tab/>/**</text:p><text:p text:style-name="P429"><text:tab/> * Load single ANN objec record from remote server side.</text:p><text:p text:style-name="P429"><text:tab/> *</text:p><text:p text:style-name="P429"><text:tab/> * @param annId Id of ANN to be used as selection parameter.</text:p><text:p text:style-name="P429"><text:tab/> *</text:p><text:p text:style-name="P429"><text:tab/> * @param symbol Currency pair symbol.</text:p><text:p text:style-name="P429"><text:tab/> *</text:p><text:p text:style-name="P429"><text:tab/> * @param period Currency chart period.</text:p><text:p text:style-name="P429"><text:tab/> *</text:p><text:p text:style-name="P429"><text:tab/> * @param fitness Weights set fitness value.</text:p><text:p text:style-name="P429"><text:tab/> *</text:p><text:p text:style-name="P429"><text:tab/> * @param numberOfNeurons Number of neurons used as topology. Neurons amount will be used only for new crated ANN.</text:p><text:p text:style-name="P429"><text:tab/> *</text:p><text:p text:style-name="P429"><text:tab/> * @param flags Nurons flags.</text:p><text:p text:style-name="P429"><text:tab/> *</text:p><text:p text:style-name="P429"><text:tab/> * @param weights Weights set.</text:p><text:p text:style-name="P429"><text:tab/> *</text:p><text:p text:style-name="P429"><text:tab/> * @param activities Weights activities.</text:p><text:p text:style-name="P429"><text:tab/> *</text:p><text:p text:style-name="P429"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P429"><text:tab/> *</text:p><text:p text:style-name="P429"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P429"><text:tab/> *</text:p><text:p text:style-name="P429"><text:tab/> * @date 16 Sep 2013</text:p><text:p text:style-name="P429"><text:tab/> */</text:p><text:p text:style-name="P429"><text:tab/>this.loadSingleANN = function(annId, symbol, period, fitness, neurons, weights, activities) {</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>if (request.readyState != 4 &amp;&amp; request.readyState != 0) {</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/>return;</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P429"/><text:p text:style-name="P429"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P429"><text:tab/><text:tab/> * Prepare request parameters.</text:p><text:p text:style-name="P429"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>var parameters = &quot;&quot;;</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>parameters += &quot;annid=&quot; + annId;</text:p><text:p text:style-name="P429"/><text:p text:style-name="P429"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P429"><text:tab/><text:tab/> * Send synchronous HTTP request.</text:p><text:p text:style-name="P429"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>request.open(&quot;POST&quot;, &quot;http://&quot; + HOST + LOAD_SINGLE_ANN_SCRIPT, false);</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>request.setRequestHeader(&quot;Content-type&quot;, &quot;application/x-www-form-urlencoded&quot;);</text:p><text:p text:style-name="P429"/><text:p text:style-name="P429"><text:tab/><text:tab/>request.send(parameters);</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>var response = JSON.parse(request.responseText);</text:p><text:p text:style-name="P429"/><text:p text:style-name="P429"><text:tab/><text:tab/>if (response.size == 1) {</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/>symbol = response.symbol;</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/>period = response.period;</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/>fitness = response.fitness;</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/>var size = response.flags.length;</text:p><text:p text:style-name="P429"/><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/>neurons = new NeuronsList(size);</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/>for (var i = 0; i &lt; size; i++) {</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/><text:tab/>neurons.list[i].type = response.flags[i];</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P429"/><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/>weights = new WeightsMatrix(size);</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/>for (var i = 0; i &lt; size; i++) {</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/><text:tab/>for (var j = 0; j &lt; size; j++) {</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>weights.set(i, j, response.weights[i][j]);</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P429"/><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/>activities = new ActivitiesMatrix(size);</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/>for (var i = 0; i &lt; size; i++) {</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/><text:tab/>for (var j = 0; j &lt; size; j++) {</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>activities.set(i, j, response.activities[i][j]);</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P429"/><text:p text:style-name="P429"><text:tab/><text:tab/>return [symbol, period, fitness, neurons, weights, activities];</text:p><text:p text:style-name="P429"><text:tab/>};</text:p><text:p text:style-name="P429"/><text:p text:style-name="P429"><text:tab/>/**</text:p><text:p text:style-name="P429"><text:tab/> * Load training set size from remote side server.</text:p><text:p text:style-name="P429"><text:tab/> *</text:p><text:p text:style-name="P429"><text:soft-page-break/><text:tab/> * @param symbol Currency pair symbol.</text:p><text:p text:style-name="P429"><text:tab/> *</text:p><text:p text:style-name="P429"><text:tab/> * @param period Currency chart period.</text:p><text:p text:style-name="P429"><text:tab/> *</text:p><text:p text:style-name="P429"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P429"><text:tab/> *</text:p><text:p text:style-name="P429"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P429"><text:tab/> *</text:p><text:p text:style-name="P429"><text:tab/> * @date 16 Sep 2013</text:p><text:p text:style-name="P429"><text:tab/> */</text:p><text:p text:style-name="P429"><text:tab/>this.loadTrainingSetSize = function(symbol, period) {</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>if (request.readyState != 4 &amp;&amp; request.readyState != 0) {</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/>return;</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P429"/><text:p text:style-name="P429"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P429"><text:tab/><text:tab/> * Prepare request parameters.</text:p><text:p text:style-name="P429"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>var parameters = &quot;&quot;;</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>parameters += &quot;&amp;symbol=&quot; + symbol;</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>parameters += &quot;&amp;&quot;;</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>parameters += &quot;period=&quot; + period;</text:p><text:p text:style-name="P429"/><text:p text:style-name="P429"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P429"><text:tab/><text:tab/> * Send synchronous HTTP request.</text:p><text:p text:style-name="P429"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>request.open(&quot;POST&quot;, &quot;http://&quot; + HOST + TRAINING_SET_SIZE_SCRIPT, false);</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>request.setRequestHeader(&quot;Content-type&quot;, &quot;application/x-www-form-urlencoded&quot;);</text:p><text:p text:style-name="P429"/><text:p text:style-name="P429"><text:tab/><text:tab/>request.send(parameters);</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>var response = JSON.parse(request.responseText);</text:p><text:p text:style-name="P429"/><text:p text:style-name="P429"><text:tab/><text:tab/>return response.numberOfExamples;</text:p><text:p text:style-name="P429"><text:tab/>};</text:p><text:p text:style-name="P429"/><text:p text:style-name="P429"><text:tab/>/**</text:p><text:p text:style-name="P429"><text:tab/> * Save training set record on remote side server.</text:p><text:p text:style-name="P429"><text:tab/> *</text:p><text:p text:style-name="P429"><text:tab/> * @param symbol Currency pair symbol.</text:p><text:p text:style-name="P429"><text:tab/> *</text:p><text:p text:style-name="P429"><text:tab/> * @param period Currency chart period.</text:p><text:p text:style-name="P429"><text:tab/> *</text:p><text:p text:style-name="P429"><text:tab/> * @param rates Rates values.</text:p><text:p text:style-name="P429"><text:tab/> *</text:p><text:p text:style-name="P429"><text:tab/> * @param size Number of training set examples.</text:p><text:p text:style-name="P429"><text:tab/> *</text:p><text:p text:style-name="P429"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P429"><text:tab/> *</text:p><text:p text:style-name="P429"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P429"><text:tab/> *</text:p><text:p text:style-name="P429"><text:tab/> * @date 16 Sep 2013</text:p><text:p text:style-name="P429"><text:tab/> */</text:p><text:p text:style-name="P429"><text:tab/>this.saveTrainingSet = function(symbol, period, rates, size) {</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>if (request.readyState != 4 &amp;&amp; request.readyState != 0) {</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/>return;</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P429"/><text:p text:style-name="P429"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P429"><text:tab/><text:tab/> * Prepare request parameters.</text:p><text:p text:style-name="P429"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>var parameters = &quot;&quot;;</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>parameters += &quot;&amp;symbol=&quot; + symbol;</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>parameters += &quot;&amp;&quot;;</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>parameters += &quot;period=&quot; + period;</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>parameters += &quot;&amp;&quot;;</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>parameters += &quot;number_of_examples=&quot; + size;</text:p><text:p text:style-name="P429"/><text:p text:style-name="P429"><text:tab/><text:tab/>parameters += &quot;&amp;&quot;;</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>parameters += &quot;time=&quot;;</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>for (var i = 0; i &lt; size; i++) {</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/>if (i &gt; 0) {</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/><text:tab/>parameters += &quot; &quot;;</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/>parameters += rates[i].time;</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P429"/><text:p text:style-name="P429"><text:tab/><text:tab/>parameters += &quot;&amp;&quot;;</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>parameters += &quot;open=&quot;;</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>for (var i = 0; i &lt; size; i++) {</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/>if (i &gt; 0) {</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/><text:tab/>parameters += &quot; &quot;;</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/>parameters += rates[i].open;</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P429"/><text:p text:style-name="P429"><text:tab/><text:tab/>parameters += &quot;&amp;&quot;;</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>parameters += &quot;low=&quot;;</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>for (var i = 0; i &lt; size; i++) {</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/>if (i &gt; 0) {</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/><text:tab/>parameters += &quot; &quot;;</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/>parameters += rates[i].low;</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P429"/><text:p text:style-name="P429"><text:tab/><text:tab/>parameters += &quot;&amp;&quot;;</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>parameters += &quot;high=&quot;;</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>for (var i = 0; i &lt; size; i++) {</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/>if (i &gt; 0) {</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/><text:tab/>parameters += &quot; &quot;;</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/>parameters += rates[i].high;</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P429"/><text:p text:style-name="P429"><text:tab/><text:tab/>parameters += &quot;&amp;&quot;;</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>parameters += &quot;close=&quot;;</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>for (var i = 0; i &lt; size; i++) {</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/>if (i &gt; 0) {</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/><text:tab/>parameters += &quot; &quot;;</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/>parameters += rates[i].close;</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P429"/><text:p text:style-name="P429"><text:tab/><text:tab/>parameters += &quot;&amp;&quot;;</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>parameters += &quot;volume=&quot;;</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>for (var i = 0; i &lt; size; i++) {</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/>if (i &gt; 0) {</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/><text:tab/>parameters += &quot; &quot;;</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/>parameters += rates[i].volume;</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P429"/><text:p text:style-name="P429"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P429"><text:tab/><text:tab/> * Send synchronous HTTP request.</text:p><text:p text:style-name="P429"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>request.open(&quot;POST&quot;, &quot;http://&quot; + HOST + SAVE_TRAINING_SET_SCRIPT, false);</text:p><text:p text:style-name="P429"><text:soft-page-break/><text:tab/><text:tab/>request.setRequestHeader(&quot;Content-type&quot;, &quot;application/x-www-form-urlencoded&quot;);</text:p><text:p text:style-name="P429"/><text:p text:style-name="P429"><text:tab/><text:tab/>request.send(parameters);</text:p><text:p text:style-name="P429"><text:tab/>};</text:p><text:p text:style-name="P429"/><text:p text:style-name="P429"><text:tab/>/**</text:p><text:p text:style-name="P429"><text:tab/> * Load training set record from remote side server.</text:p><text:p text:style-name="P429"><text:tab/> *</text:p><text:p text:style-name="P429"><text:tab/> * @param symbol Currency pair symbol.</text:p><text:p text:style-name="P429"><text:tab/> *</text:p><text:p text:style-name="P429"><text:tab/> * @param period Currency chart period.</text:p><text:p text:style-name="P429"><text:tab/> *</text:p><text:p text:style-name="P429"><text:tab/> * @param rates Rates values.</text:p><text:p text:style-name="P429"><text:tab/> *</text:p><text:p text:style-name="P429"><text:tab/> * @param size Number of training set examples.</text:p><text:p text:style-name="P429"><text:tab/> *</text:p><text:p text:style-name="P429"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P429"><text:tab/> *</text:p><text:p text:style-name="P429"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P429"><text:tab/> *</text:p><text:p text:style-name="P429"><text:tab/> * @date 16 Sep 2013</text:p><text:p text:style-name="P429"><text:tab/> */</text:p><text:p text:style-name="P429"><text:tab/>this.loadTrainingSet = function(symbol, period, rates, size) {</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>if (request.readyState != 4 &amp;&amp; request.readyState != 0) {</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/>return;</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P429"/><text:p text:style-name="P429"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P429"><text:tab/><text:tab/> * Prepare request parameters.</text:p><text:p text:style-name="P429"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>var parameters = &quot;&quot;;</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>parameters += &quot;&amp;symbol=&quot; + symbol;</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>parameters += &quot;&amp;&quot;;</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>parameters += &quot;period=&quot; + period;</text:p><text:p text:style-name="P429"/><text:p text:style-name="P429"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P429"><text:tab/><text:tab/> * Send synchronous HTTP request.</text:p><text:p text:style-name="P429"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>request.open(&quot;POST&quot;, &quot;http://&quot; + HOST + LOAD_TRAINING_SET_SCRIPT, false);</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>request.setRequestHeader(&quot;Content-type&quot;, &quot;application/x-www-form-urlencoded&quot;);</text:p><text:p text:style-name="P429"/><text:p text:style-name="P429"><text:tab/><text:tab/>request.send(parameters);</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>var response = JSON.parse(request.responseText);</text:p><text:p text:style-name="P429"/><text:p text:style-name="P429"><text:tab/><text:tab/>if (response.numberOfExamples &lt;= 0) {</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/>return [null, 0];</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P429"><text:tab/><text:tab/></text:p><text:p text:style-name="P429"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P429"><text:tab/><text:tab/> * Parse response.</text:p><text:p text:style-name="P429"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>for (var i = 0; i &lt; numberOfExamples; i++) {</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/>rates[i].time = response.time[i];</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/>rates[i].open = response.open[i];</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/>rates[i].low = response.low[i];</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/>rates[i].high = response.high[i];</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/>rates[i].close = response.close[i];</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/>rates[i].volume = response.volume[i];</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P429"><text:tab/><text:tab/></text:p><text:p text:style-name="P429"><text:tab/><text:tab/>size = numberOfExamples;</text:p><text:p text:style-name="P429"><text:tab/><text:tab/></text:p><text:p text:style-name="P429"><text:tab/><text:tab/>return [rates, size];</text:p><text:p text:style-name="P429"><text:tab/>};</text:p><text:p text:style-name="P429"/><text:p text:style-name="P429"><text:tab/>/**</text:p><text:p text:style-name="P429"><text:tab/> * Load remote server best known fitness for particular ANN kind.</text:p><text:p text:style-name="P429"><text:tab/> *</text:p><text:p text:style-name="P429"><text:tab/> * @param symbol Currency pair symbol.</text:p><text:p text:style-name="P429"><text:tab/> *</text:p><text:p text:style-name="P429"><text:tab/> * @param period MetaTrader 4 chart period.</text:p><text:p text:style-name="P429"><text:tab/> *</text:p><text:p text:style-name="P429"><text:tab/> * @param numberOfNeurons Number of neurons used as topology.</text:p><text:p text:style-name="P429"><text:tab/> *</text:p><text:p text:style-name="P429"><text:tab/> * @param flags Nurons flags.</text:p><text:p text:style-name="P429"><text:tab/> *</text:p><text:p text:style-name="P429"><text:tab/> * @param activities Weights activities.</text:p><text:p text:style-name="P429"><text:tab/> *</text:p><text:p text:style-name="P429"><text:tab/> * @return Best known server side fitness.</text:p><text:p text:style-name="P429"><text:tab/> *</text:p><text:p text:style-name="P429"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P429"><text:tab/> *</text:p><text:p text:style-name="P429"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P429"><text:tab/> *</text:p><text:p text:style-name="P429"><text:tab/> * @date 16 Sep 2013</text:p><text:p text:style-name="P429"><text:tab/> */</text:p><text:p text:style-name="P429"><text:tab/>this.loadRemoteBestFitness = function(symbol, period, neurons, activities) {</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>if (request.readyState != 4 &amp;&amp; request.readyState != 0) {</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/>return;</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P429"/><text:p text:style-name="P429"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P429"><text:tab/><text:tab/> * Prepare request parameters.</text:p><text:p text:style-name="P429"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>var parameters = &quot;&quot;;</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>parameters += &quot;&amp;symbol=&quot; + symbol;</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>parameters += &quot;&amp;&quot;;</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>parameters += &quot;period=&quot; + period;</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>parameters += &quot;&amp;&quot;;</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>parameters += &quot;number_of_neurons=&quot; + neurons.dimension();</text:p><text:p text:style-name="P429"/><text:p text:style-name="P429"><text:tab/><text:tab/>parameters += &quot;&amp;&quot;;</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>parameters += &quot;flags=&quot;;</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>for (var i = 0; i &lt; neurons.dimension(); i++) {</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/>if (i &gt; 0) {</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/><text:tab/>parameters += &quot; &quot;;</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/>parameters += neurons[i].getType();</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P429"/><text:p text:style-name="P429"><text:tab/><text:tab/>parameters += &quot;&amp;&quot;;</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>parameters += &quot;activities=&quot;;</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>for (var j = 0; j &lt; neurons.dimension(); j++) {</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/>if (j &gt; 0) {</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/><text:tab/>parameters += &quot;\n&quot;;</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/>for (var i = 0; i &lt; neurons.dimension(); i++) {</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/><text:tab/>if (i &gt; 0) {</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>parameters += &quot; &quot;;</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/><text:tab/>parameters += activities.get(i, j);</text:p><text:p text:style-name="P429"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P429"/><text:p text:style-name="P429"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P429"><text:soft-page-break/><text:tab/><text:tab/> * Send synchronous HTTP request.</text:p><text:p text:style-name="P429"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>request.open(&quot;POST&quot;, &quot;http://&quot; + HOST + LOAD_BEST_FITNESS_SCRIPT, false);</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>request.setRequestHeader(&quot;Content-type&quot;, &quot;application/x-www-form-urlencoded&quot;);</text:p><text:p text:style-name="P429"/><text:p text:style-name="P429"><text:tab/><text:tab/>request.send(parameters);</text:p><text:p text:style-name="P429"><text:tab/><text:tab/>var response = JSON.parse(request.responseText);</text:p><text:p text:style-name="P429"/><text:p text:style-name="P429"><text:tab/><text:tab/>return response.fitness;</text:p><text:p text:style-name="P429"><text:tab/>};</text:p><text:p text:style-name="P429">}</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5700_1486593966"/><text:s text:c="4"/>ModelParameters.js<text:bookmark-end text:name="__RefHeading___Toc5700_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P430">/*******************************************************************************</text:p><text:p text:style-name="P430"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P430"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P430"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P430"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P430"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P430"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P430"><text:s/>* Copyright (C) 2008-2011 by Todor Balabanov <text:s/>( tdb@tbsoft.eu ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P430"><text:s/>* <text:s text:c="27"/>Iliyan Zankinski ( iliyan_mf@abv.bg ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P430"><text:s/>* <text:s text:c="27"/>Galq Cirkalova <text:s text:c="2"/>( galq_cirkalova@abv.bg ) <text:s text:c="6"/>*</text:p><text:p text:style-name="P430"><text:s/>* <text:s text:c="27"/>Ivan Grozev <text:s text:c="5"/>( ivan.iliev.grozev@gmail.com ) *</text:p><text:p text:style-name="P430"><text:s/>* <text:s text:c="27"/>Daniel Chutrov <text:s text:c="2"/>( d.chutrov@gmail.com ) <text:s text:c="8"/>*</text:p><text:p text:style-name="P430"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P430"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P430"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P430"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P430"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P430"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P430"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P430"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P430"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P430"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P430"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P430"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P430"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P430"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P430"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P430"/><text:p text:style-name="P430">/**</text:p><text:p text:style-name="P430"><text:s/>* Training and predicting model parameters.</text:p><text:p text:style-name="P430"><text:s/>*</text:p><text:p text:style-name="P430"><text:s/>* @author Todor Balabanov</text:p><text:p text:style-name="P430"><text:s/>*</text:p><text:p text:style-name="P430"><text:s/>* @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P430"><text:s/>*</text:p><text:p text:style-name="P430"><text:s/>* @date 25 Oct 2011</text:p><text:p text:style-name="P430"><text:s/>*/</text:p><text:p text:style-name="P430">function ModelParameters() {</text:p><text:p text:style-name="P430"><text:tab/>/**</text:p><text:p text:style-name="P430"><text:tab/> * Database identifier of ANN.</text:p><text:p text:style-name="P430"><text:tab/> */</text:p><text:p text:style-name="P430"><text:tab/>this.dbId = 0;</text:p><text:p text:style-name="P430"/><text:p text:style-name="P430"><text:tab/>/**</text:p><text:p text:style-name="P430"><text:tab/> * Currency pair symbol.</text:p><text:p text:style-name="P430"><text:tab/> */</text:p><text:p text:style-name="P430"><text:tab/>this.symbol = &quot;&quot;;</text:p><text:p text:style-name="P430"/><text:p text:style-name="P430"><text:tab/>/**</text:p><text:p text:style-name="P430"><text:tab/> * Time series period.</text:p><text:p text:style-name="P430"><text:tab/> */</text:p><text:p text:style-name="P430"><text:tab/>this.period = 0;</text:p><text:p text:style-name="P430"/><text:p text:style-name="P430"><text:tab/>/**</text:p><text:p text:style-name="P430"><text:tab/> * Number of neurons in ANN.</text:p><text:p text:style-name="P430"><text:tab/> */</text:p><text:p text:style-name="P430"><text:tab/>this.neuronsAmount = 0;</text:p><text:p text:style-name="P430"/><text:p text:style-name="P430"><text:tab/>/**</text:p><text:p text:style-name="P430"><text:tab/> * Number of neurons used for input.</text:p><text:p text:style-name="P430"><text:tab/> */</text:p><text:p text:style-name="P430"><text:tab/>this.inputSize = 0;</text:p><text:p text:style-name="P430"/><text:p text:style-name="P430"><text:tab/>/**</text:p><text:p text:style-name="P430"><text:tab/> * Number of neurons used for output.</text:p><text:p text:style-name="P430"><text:tab/> */</text:p><text:p text:style-name="P430"><text:tab/>this.outputSize = 0;</text:p><text:p text:style-name="P430"/><text:p text:style-name="P430"><text:tab/>/**</text:p><text:p text:style-name="P430"><text:tab/> * Number of chromosomes in DE population.</text:p><text:p text:style-name="P430"><text:tab/> */</text:p><text:p text:style-name="P430"><text:tab/>this.populationSize = 0;</text:p><text:p text:style-name="P430"/><text:p text:style-name="P430"><text:tab/>/**</text:p><text:p text:style-name="P430"><text:tab/> * Number of past bars where history information will be used for the training.</text:p><text:p text:style-name="P430"><text:tab/> */</text:p><text:p text:style-name="P430"><text:tab/>this.learn = 0;</text:p><text:p text:style-name="P430"/><text:p text:style-name="P430"><text:tab/>/**</text:p><text:p text:style-name="P430"><text:tab/> * Number of future bars where prediction will be needed.</text:p><text:p text:style-name="P430"><text:tab/> */</text:p><text:p text:style-name="P430"><text:tab/>this.forecast = 0;</text:p><text:p text:style-name="P430">}</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5702_1486593966"/><text:s text:c="4"/>Neuron.js<text:bookmark-end text:name="__RefHeading___Toc5702_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P431">/*******************************************************************************</text:p><text:p text:style-name="P431"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P431"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P431"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P431"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P431"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P431"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P431"><text:s/>* Copyright (C) 2008-2011 by Todor Balabanov <text:s/>( tdb@tbsoft.eu ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P431"><text:s/>* <text:s text:c="27"/>Iliyan Zankinski ( iliyan_mf@abv.bg ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P431"><text:s/>* <text:s text:c="27"/>Galq Cirkalova <text:s text:c="2"/>( galq_cirkalova@abv.bg ) <text:s text:c="6"/>*</text:p><text:p text:style-name="P431"><text:s/>* <text:s text:c="27"/>Ivan Grozev <text:s text:c="5"/>( ivan.iliev.grozev@gmail.com ) *</text:p><text:p text:style-name="P431"><text:s/>* <text:s text:c="27"/>Daniel Chutrov <text:s text:c="2"/>( d.chutrov@gmail.com ) <text:s text:c="8"/>*</text:p><text:p text:style-name="P431"><text:soft-page-break/><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P431"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P431"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P431"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P431"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P431"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P431"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P431"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P431"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P431"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P431"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P431"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P431"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P431"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P431"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P431">/*</text:p><text:p text:style-name="P431"><text:s/>* Include files.</text:p><text:p text:style-name="P431"><text:s/>*/</text:p><text:p text:style-name="P431">document.write(&apos;&lt;script type=&quot;text/javascript&quot; src=&quot;&apos; + &apos;NeuronType.js&apos; + &apos;&quot;&gt;&lt;/script&gt;&apos;);</text:p><text:p text:style-name="P431"/><text:p text:style-name="P431">/**</text:p><text:p text:style-name="P431"><text:s/>* Bias neuron value.</text:p><text:p text:style-name="P431"><text:s/>*/</text:p><text:p text:style-name="P431">const BIAS_VALUE = 1.0;</text:p><text:p text:style-name="P431"/><text:p text:style-name="P431">/**</text:p><text:p text:style-name="P431"><text:s/>* Neurons reset constant value.</text:p><text:p text:style-name="P431"><text:s/>*/</text:p><text:p text:style-name="P431">const RESET_VALUE = 0.5;</text:p><text:p text:style-name="P431"/><text:p text:style-name="P431">/**</text:p><text:p text:style-name="P431"><text:s/>* Minimal error constant value.</text:p><text:p text:style-name="P431"><text:s/>*/</text:p><text:p text:style-name="P431">const MIN_ERROR = 0.0;</text:p><text:p text:style-name="P431"/><text:p text:style-name="P431">/**</text:p><text:p text:style-name="P431"><text:s/>* Single neuron class.</text:p><text:p text:style-name="P431"><text:s/>*</text:p><text:p text:style-name="P431"><text:s/>* @author Todor Balabanov</text:p><text:p text:style-name="P431"><text:s/>*</text:p><text:p text:style-name="P431"><text:s/>* @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P431"><text:s/>*</text:p><text:p text:style-name="P431"><text:s/>* @date 03 Aug 2011</text:p><text:p text:style-name="P431"><text:s/>*/</text:p><text:p text:style-name="P431">function Neuron() {</text:p><text:p text:style-name="P431"><text:tab/>/**</text:p><text:p text:style-name="P431"><text:tab/> * Neuron type. More than one neuron can be bias, input and output in multi</text:p><text:p text:style-name="P431"><text:tab/> * layer networks. Also each neuron can be in more than single type.</text:p><text:p text:style-name="P431"><text:tab/> */</text:p><text:p text:style-name="P431"><text:tab/>this.type = REGULAR;</text:p><text:p text:style-name="P431"/><text:p text:style-name="P431"><text:tab/>/**</text:p><text:p text:style-name="P431"><text:tab/> * Neuron value.</text:p><text:p text:style-name="P431"><text:tab/> */</text:p><text:p text:style-name="P431"><text:tab/>this.value = 0.0;</text:p><text:p text:style-name="P431"/><text:p text:style-name="P431"><text:tab/>/**</text:p><text:p text:style-name="P431"><text:tab/> * Neuron error in back-propagation training.</text:p><text:p text:style-name="P431"><text:tab/> */</text:p><text:p text:style-name="P431"><text:tab/>this.error = 0.0;</text:p><text:p text:style-name="P431"/><text:p text:style-name="P431"><text:tab/>/**</text:p><text:p text:style-name="P431"><text:tab/> * Is regular neuron getter.</text:p><text:p text:style-name="P431"><text:tab/> *</text:p><text:p text:style-name="P431"><text:tab/> * @return True if neuron is regular, false otherwise.</text:p><text:p text:style-name="P431"><text:tab/> *</text:p><text:p text:style-name="P431"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P431"><text:tab/> *</text:p><text:p text:style-name="P431"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P431"><text:tab/> *</text:p><text:p text:style-name="P431"><text:tab/> * @date 03 Aug 2011</text:p><text:p text:style-name="P431"><text:tab/> */</text:p><text:p text:style-name="P431"><text:tab/>this.isRegular = function() {</text:p><text:p text:style-name="P431"><text:tab/><text:tab/>if (type == REGULAR) {</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/>return (true );</text:p><text:p text:style-name="P431"><text:tab/><text:tab/>} else {</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/>return (false );</text:p><text:p text:style-name="P431"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P431"><text:tab/>};</text:p><text:p text:style-name="P431"/><text:p text:style-name="P431"><text:tab/>/**</text:p><text:p text:style-name="P431"><text:tab/> * Regular neuron setter.</text:p><text:p text:style-name="P431"><text:tab/> *</text:p><text:p text:style-name="P431"><text:tab/> * @param value True if neuron will be regular, false otherwise.</text:p><text:p text:style-name="P431"><text:tab/> *</text:p><text:p text:style-name="P431"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P431"><text:tab/> *</text:p><text:p text:style-name="P431"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P431"><text:tab/> *</text:p><text:p text:style-name="P431"><text:tab/> * @date 03 Aug 2011</text:p><text:p text:style-name="P431"><text:tab/> */</text:p><text:p text:style-name="P431"><text:tab/>this.setRegular = function(value) {</text:p><text:p text:style-name="P431"><text:tab/><text:tab/>if (value == true) {</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/>type = REGULAR;</text:p><text:p text:style-name="P431"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P431"><text:tab/>};</text:p><text:p text:style-name="P431"/><text:p text:style-name="P431"><text:tab/>/**</text:p><text:p text:style-name="P431"><text:tab/> * Is bias neuron getter.</text:p><text:p text:style-name="P431"><text:tab/> *</text:p><text:p text:style-name="P431"><text:tab/> * @return True if neuron is bias, false otherwise.</text:p><text:p text:style-name="P431"><text:tab/> *</text:p><text:p text:style-name="P431"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P431"><text:tab/> *</text:p><text:p text:style-name="P431"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P431"><text:tab/> *</text:p><text:p text:style-name="P431"><text:tab/> * @date 21 Aug 2009</text:p><text:p text:style-name="P431"><text:tab/> */</text:p><text:p text:style-name="P431"><text:tab/>this.isBias = function() {</text:p><text:p text:style-name="P431"><text:tab/><text:tab/>if ((type &amp; BIAS) == BIAS) {</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/>return (true );</text:p><text:p text:style-name="P431"><text:tab/><text:tab/>} else {</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/>return (false );</text:p><text:p text:style-name="P431"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P431"><text:tab/>};</text:p><text:p text:style-name="P431"/><text:p text:style-name="P431"><text:tab/>/**</text:p><text:p text:style-name="P431"><text:tab/> * Input neurons setter.</text:p><text:p text:style-name="P431"><text:tab/> *</text:p><text:p text:style-name="P431"><text:tab/> * @param value True if neuron will be input, false otherwise.</text:p><text:p text:style-name="P431"><text:tab/> *</text:p><text:p text:style-name="P431"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P431"><text:tab/> *</text:p><text:p text:style-name="P431"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P431"><text:tab/> *</text:p><text:p text:style-name="P431"><text:soft-page-break/><text:tab/> * @date 29 Apr 2009</text:p><text:p text:style-name="P431"><text:tab/> */</text:p><text:p text:style-name="P431"><text:tab/>this.setBias = function(value) {</text:p><text:p text:style-name="P431"><text:tab/><text:tab/>if (value == true) {</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/>switch (type) {</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/>case REGULAR:</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/><text:tab/>type = BIAS;</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/>case BIAS:</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/>case INPUT:</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/><text:tab/>type = INPUT_BIAS;</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/>case INPUT_BIAS:</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/>case OUTPUT:</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/><text:tab/>type = OUTPUT_BIAS;</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/>case OUTPUT_BIAS:</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/>case OUTPUT_INPUT:</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/><text:tab/>type = OUTPUT_INPUT_BIAS;</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/>case OUTPUT_INPUT_BIAS:</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P431"/><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/>this.value = BIAS_VALUE;</text:p><text:p text:style-name="P431"><text:tab/><text:tab/>} else if (value == false) {</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/>switch (type) {</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/>case REGULAR:</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/>case BIAS:</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/><text:tab/>type = REGULAR;</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/>case INPUT:</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/>case INPUT_BIAS:</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/><text:tab/>type = INPUT;</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/>case OUTPUT:</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/>case OUTPUT_BIAS:</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/><text:tab/>type = OUTPUT;</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/>case OUTPUT_INPUT:</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/>case OUTPUT_INPUT_BIAS:</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/><text:tab/>type = OUTPUT_INPUT;</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P431"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P431"><text:tab/>};</text:p><text:p text:style-name="P431"/><text:p text:style-name="P431"><text:tab/>/**</text:p><text:p text:style-name="P431"><text:tab/> * Is input neuron getter.</text:p><text:p text:style-name="P431"><text:tab/> *</text:p><text:p text:style-name="P431"><text:tab/> * @return True if neuron is input, false otherwise.</text:p><text:p text:style-name="P431"><text:tab/> *</text:p><text:p text:style-name="P431"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P431"><text:tab/> *</text:p><text:p text:style-name="P431"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P431"><text:tab/> *</text:p><text:p text:style-name="P431"><text:tab/> * @date 30 Apr 2009</text:p><text:p text:style-name="P431"><text:tab/> */</text:p><text:p text:style-name="P431"><text:tab/>this.isInput = function() {</text:p><text:p text:style-name="P431"><text:tab/><text:tab/>if ((type &amp; INPUT) == INPUT) {</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/>return (true );</text:p><text:p text:style-name="P431"><text:tab/><text:tab/>} else {</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/>return (false );</text:p><text:p text:style-name="P431"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P431"><text:tab/>};</text:p><text:p text:style-name="P431"/><text:p text:style-name="P431"><text:tab/>/**</text:p><text:p text:style-name="P431"><text:tab/> * Input neurons setter.</text:p><text:p text:style-name="P431"><text:tab/> *</text:p><text:p text:style-name="P431"><text:tab/> * @param value True if neuron will be input, false otherwise.</text:p><text:p text:style-name="P431"><text:tab/> *</text:p><text:p text:style-name="P431"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P431"><text:tab/> *</text:p><text:p text:style-name="P431"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P431"><text:tab/> *</text:p><text:p text:style-name="P431"><text:tab/> * @date 29 Apr 2009</text:p><text:p text:style-name="P431"><text:tab/> */</text:p><text:p text:style-name="P431"><text:tab/>this.setInput = function(value) {</text:p><text:p text:style-name="P431"><text:tab/><text:tab/>if (value == true) {</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/>switch (type) {</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/>case REGULAR:</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/><text:tab/>type = INPUT;</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/>case BIAS:</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/><text:tab/>type = INPUT_BIAS;</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/>case INPUT:</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/>case INPUT_BIAS:</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/>case OUTPUT:</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/><text:tab/>type = OUTPUT_INPUT;</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/>case OUTPUT_BIAS:</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/><text:tab/>type = OUTPUT_INPUT_BIAS;</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/>case OUTPUT_INPUT:</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/>case OUTPUT_INPUT_BIAS:</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P431"><text:tab/><text:tab/>} else if (value == false) {</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/>switch (type) {</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/>case REGULAR:</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/>case BIAS:</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/>case INPUT:</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/>case INPUT_BIAS:</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/><text:tab/>type = BIAS;</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/>case OUTPUT:</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/>case OUTPUT_BIAS:</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/>case OUTPUT_INPUT:</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/><text:tab/>type = OUTPUT;</text:p><text:p text:style-name="P431"><text:soft-page-break/><text:tab/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/>case OUTPUT_INPUT_BIAS:</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/><text:tab/>type = OUTPUT_BIAS;</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P431"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P431"><text:tab/>};</text:p><text:p text:style-name="P431"/><text:p text:style-name="P431"><text:tab/>/**</text:p><text:p text:style-name="P431"><text:tab/> * Is output neuron getter.</text:p><text:p text:style-name="P431"><text:tab/> *</text:p><text:p text:style-name="P431"><text:tab/> * @return True if neuron is output, false otherwise.</text:p><text:p text:style-name="P431"><text:tab/> *</text:p><text:p text:style-name="P431"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P431"><text:tab/> *</text:p><text:p text:style-name="P431"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P431"><text:tab/> *</text:p><text:p text:style-name="P431"><text:tab/> * @date 30 Apr 2009</text:p><text:p text:style-name="P431"><text:tab/> */</text:p><text:p text:style-name="P431"><text:tab/>this.isOutput = function() {</text:p><text:p text:style-name="P431"><text:tab/><text:tab/>if ((type &amp; OUTPUT) == OUTPUT) {</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/>return (true );</text:p><text:p text:style-name="P431"><text:tab/><text:tab/>} else {</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/>return (false );</text:p><text:p text:style-name="P431"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P431"><text:tab/>};</text:p><text:p text:style-name="P431"/><text:p text:style-name="P431"><text:tab/>/**</text:p><text:p text:style-name="P431"><text:tab/> * Output neurons setter.</text:p><text:p text:style-name="P431"><text:tab/> *</text:p><text:p text:style-name="P431"><text:tab/> * @param value True if neuron will be output, false otherwise.</text:p><text:p text:style-name="P431"><text:tab/> *</text:p><text:p text:style-name="P431"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P431"><text:tab/> *</text:p><text:p text:style-name="P431"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P431"><text:tab/> *</text:p><text:p text:style-name="P431"><text:tab/> * @date 29 Apr 2009</text:p><text:p text:style-name="P431"><text:tab/> */</text:p><text:p text:style-name="P431"><text:tab/>this.setOutput = function(value) {</text:p><text:p text:style-name="P431"><text:tab/><text:tab/>if (value == true) {</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/>switch (type) {</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/>case REGULAR:</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/><text:tab/>type = OUTPUT;</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/>case BIAS:</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/><text:tab/>type = OUTPUT_BIAS;</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/>case INPUT:</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/><text:tab/>type = OUTPUT_INPUT;</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/>case INPUT_BIAS:</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/><text:tab/>type = OUTPUT_INPUT_BIAS;</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/>case OUTPUT:</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/>case OUTPUT_BIAS:</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/>case OUTPUT_INPUT:</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/>case OUTPUT_INPUT_BIAS:</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P431"><text:tab/><text:tab/>} else if (value == false) {</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/>switch (type) {</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/>case REGULAR:</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/><text:tab/>type = OUTPUT;</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/>case BIAS:</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/><text:tab/>type = OUTPUT_BIAS;</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/>case INPUT:</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/><text:tab/>type = OUTPUT_INPUT;</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/>case INPUT_BIAS:</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/><text:tab/>type = OUTPUT_INPUT_BIAS;</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/>case OUTPUT:</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/>case OUTPUT_BIAS:</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/>case OUTPUT_INPUT:</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/>case OUTPUT_INPUT_BIAS:</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P431"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P431"><text:tab/>};</text:p><text:p text:style-name="P431"/><text:p text:style-name="P431"><text:tab/>/**</text:p><text:p text:style-name="P431"><text:tab/> * Neuron type getter.</text:p><text:p text:style-name="P431"><text:tab/> *</text:p><text:p text:style-name="P431"><text:tab/> * @return Neuron type.</text:p><text:p text:style-name="P431"><text:tab/> *</text:p><text:p text:style-name="P431"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P431"><text:tab/> *</text:p><text:p text:style-name="P431"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P431"><text:tab/> *</text:p><text:p text:style-name="P431"><text:tab/> * @date 04 Aug 2011</text:p><text:p text:style-name="P431"><text:tab/> */</text:p><text:p text:style-name="P431"><text:tab/>this.getType = function() {</text:p><text:p text:style-name="P431"><text:tab/><text:tab/>return (type );</text:p><text:p text:style-name="P431"><text:tab/>};</text:p><text:p text:style-name="P431"/><text:p text:style-name="P431"><text:tab/>/**</text:p><text:p text:style-name="P431"><text:tab/> * Neuron type setter.</text:p><text:p text:style-name="P431"><text:tab/> *</text:p><text:p text:style-name="P431"><text:tab/> * @param type Neuron type.</text:p><text:p text:style-name="P431"><text:tab/> *</text:p><text:p text:style-name="P431"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P431"><text:tab/> *</text:p><text:p text:style-name="P431"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P431"><text:tab/> *</text:p><text:p text:style-name="P431"><text:tab/> * @date 04 Aug 2011</text:p><text:p text:style-name="P431"><text:tab/> */</text:p><text:p text:style-name="P431"><text:tab/>this.setType = function(type) {</text:p><text:p text:style-name="P431"><text:tab/><text:tab/>this.type = type;</text:p><text:p text:style-name="P431"><text:tab/>};</text:p><text:p text:style-name="P431"/><text:p text:style-name="P431"><text:tab/>/**</text:p><text:p text:style-name="P431"><text:tab/> * Neuron value getter.</text:p><text:p text:style-name="P431"><text:tab/> *</text:p><text:p text:style-name="P431"><text:tab/> * @return Neuron value.</text:p><text:p text:style-name="P431"><text:tab/> *</text:p><text:p text:style-name="P431"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P431"><text:tab/> *</text:p><text:p text:style-name="P431"><text:soft-page-break/><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P431"><text:tab/> *</text:p><text:p text:style-name="P431"><text:tab/> * @date 03 Aug 2011</text:p><text:p text:style-name="P431"><text:tab/> */</text:p><text:p text:style-name="P431"><text:tab/>this.getValue = function() {</text:p><text:p text:style-name="P431"><text:tab/><text:tab/>return (value );</text:p><text:p text:style-name="P431"><text:tab/>};</text:p><text:p text:style-name="P431"/><text:p text:style-name="P431"><text:tab/>/**</text:p><text:p text:style-name="P431"><text:tab/> * Neuron value setter.</text:p><text:p text:style-name="P431"><text:tab/> *</text:p><text:p text:style-name="P431"><text:tab/> * @param value Neuron value.</text:p><text:p text:style-name="P431"><text:tab/> *</text:p><text:p text:style-name="P431"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P431"><text:tab/> *</text:p><text:p text:style-name="P431"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P431"><text:tab/> *</text:p><text:p text:style-name="P431"><text:tab/> * @date 03 Aug 2011</text:p><text:p text:style-name="P431"><text:tab/> */</text:p><text:p text:style-name="P431"><text:tab/>this.setValue = function(value) {</text:p><text:p text:style-name="P431"><text:tab/><text:tab/>this.value = value;</text:p><text:p text:style-name="P431"><text:tab/>};</text:p><text:p text:style-name="P431"/><text:p text:style-name="P431"><text:tab/>/**</text:p><text:p text:style-name="P431"><text:tab/> * Neuron error getter.</text:p><text:p text:style-name="P431"><text:tab/> *</text:p><text:p text:style-name="P431"><text:tab/> * @return Neuron value.</text:p><text:p text:style-name="P431"><text:tab/> *</text:p><text:p text:style-name="P431"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P431"><text:tab/> *</text:p><text:p text:style-name="P431"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P431"><text:tab/> *</text:p><text:p text:style-name="P431"><text:tab/> * @date 03 Aug 2011</text:p><text:p text:style-name="P431"><text:tab/> */</text:p><text:p text:style-name="P431"><text:tab/>this.getError = function() {</text:p><text:p text:style-name="P431"><text:tab/><text:tab/>return (error );</text:p><text:p text:style-name="P431"><text:tab/>};</text:p><text:p text:style-name="P431"/><text:p text:style-name="P431"><text:tab/>/**</text:p><text:p text:style-name="P431"><text:tab/> * Neuron error setter.</text:p><text:p text:style-name="P431"><text:tab/> *</text:p><text:p text:style-name="P431"><text:tab/> * @param value Neuron value.</text:p><text:p text:style-name="P431"><text:tab/> *</text:p><text:p text:style-name="P431"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P431"><text:tab/> *</text:p><text:p text:style-name="P431"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P431"><text:tab/> *</text:p><text:p text:style-name="P431"><text:tab/> * @date 03 Aug 2011</text:p><text:p text:style-name="P431"><text:tab/> */</text:p><text:p text:style-name="P431"><text:tab/>this.setError = function(error) {</text:p><text:p text:style-name="P431"><text:tab/><text:tab/>this.error = error;</text:p><text:p text:style-name="P431"><text:tab/>};</text:p><text:p text:style-name="P431"/><text:p text:style-name="P431"><text:tab/>/**</text:p><text:p text:style-name="P431"><text:tab/> * Reset neuron to constant value.</text:p><text:p text:style-name="P431"><text:tab/> *</text:p><text:p text:style-name="P431"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P431"><text:tab/> *</text:p><text:p text:style-name="P431"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P431"><text:tab/> *</text:p><text:p text:style-name="P431"><text:tab/> * @date 19 Aug 2009</text:p><text:p text:style-name="P431"><text:tab/> */</text:p><text:p text:style-name="P431"><text:tab/>this.reset = function() {</text:p><text:p text:style-name="P431"><text:tab/><text:tab/>if (isBias() == true) {</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/>value = BIAS_VALUE;</text:p><text:p text:style-name="P431"><text:tab/><text:tab/>} else {</text:p><text:p text:style-name="P431"><text:tab/><text:tab/><text:tab/>value = RESET_VALUE;</text:p><text:p text:style-name="P431"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P431"/><text:p text:style-name="P431"><text:tab/><text:tab/>error = MIN_ERROR;</text:p><text:p text:style-name="P431"><text:tab/>};</text:p><text:p text:style-name="P431">}</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5704_1486593966"/><text:s text:c="4"/>NeuronType.js<text:bookmark-end text:name="__RefHeading___Toc5704_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P432">/*******************************************************************************</text:p><text:p text:style-name="P432"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P432"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P432"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P432"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P432"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P432"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P432"><text:s/>* Copyright (C) 2008-2011 by Todor Balabanov <text:s/>( tdb@tbsoft.eu ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P432"><text:s/>* <text:s text:c="27"/>Iliyan Zankinski ( iliyan_mf@abv.bg ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P432"><text:s/>* <text:s text:c="27"/>Galq Cirkalova <text:s text:c="2"/>( galq_cirkalova@abv.bg ) <text:s text:c="6"/>*</text:p><text:p text:style-name="P432"><text:s/>* <text:s text:c="27"/>Ivan Grozev <text:s text:c="5"/>( ivan.iliev.grozev@gmail.com ) *</text:p><text:p text:style-name="P432"><text:s/>* <text:s text:c="27"/>Daniel Chutrov <text:s text:c="2"/>( d.chutrov@gmail.com ) <text:s text:c="8"/>*</text:p><text:p text:style-name="P432"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P432"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P432"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P432"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P432"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P432"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P432"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P432"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P432"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P432"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P432"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P432"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P432"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P432"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P432"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P432"/><text:p text:style-name="P432">/**</text:p><text:p text:style-name="P432"><text:s/>* Regular neuron flag.</text:p><text:p text:style-name="P432"><text:s/>*/</text:p><text:p text:style-name="P432">const REGULAR = 0x00;</text:p><text:p text:style-name="P432"/><text:p text:style-name="P432">/**</text:p><text:p text:style-name="P432"><text:s/>* Bias neuron flag.</text:p><text:p text:style-name="P432"><text:s/>*/</text:p><text:p text:style-name="P432">const BIAS = 0x01;</text:p><text:p text:style-name="P432"/><text:p text:style-name="P432">/**</text:p><text:p text:style-name="P432"><text:s/>* Input neuron flag.</text:p><text:p text:style-name="P432"><text:s/>*/</text:p><text:p text:style-name="P432">const INPUT = 0x02;</text:p><text:p text:style-name="P432"/><text:p text:style-name="P432">/**</text:p><text:p text:style-name="P432"><text:soft-page-break/><text:s/>* Input and bias neuron flag.</text:p><text:p text:style-name="P432"><text:s/>*/</text:p><text:p text:style-name="P432">const INPUT_BIAS = 0x03;</text:p><text:p text:style-name="P432"/><text:p text:style-name="P432">/**</text:p><text:p text:style-name="P432"><text:s/>* Output neuron flag.</text:p><text:p text:style-name="P432"><text:s/>*/</text:p><text:p text:style-name="P432">const OUTPUT = 0x04;</text:p><text:p text:style-name="P432"/><text:p text:style-name="P432">/**</text:p><text:p text:style-name="P432"><text:s/>* Output and bias neuron flag.</text:p><text:p text:style-name="P432"><text:s/>*/</text:p><text:p text:style-name="P432">const OUTPUT_BIAS = 0x05;</text:p><text:p text:style-name="P432"/><text:p text:style-name="P432">/**</text:p><text:p text:style-name="P432"><text:s/>* Output and input neuron flag.</text:p><text:p text:style-name="P432"><text:s/>*/</text:p><text:p text:style-name="P432">const OUTPUT_INPUT = 0x06;</text:p><text:p text:style-name="P432"/><text:p text:style-name="P432">/**</text:p><text:p text:style-name="P432"><text:s/>* Output; input and bias neuron flag.</text:p><text:p text:style-name="P432"><text:s/>*/</text:p><text:p text:style-name="P432">const OUTPUT_INPUT_BIAS = 0x07;</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5706_1486593966"/><text:s text:c="4"/>NeuronsList.js<text:bookmark-end text:name="__RefHeading___Toc5706_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P433">/*******************************************************************************</text:p><text:p text:style-name="P433"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P433"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P433"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P433"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P433"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P433"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P433"><text:s/>* Copyright (C) 2008-2011 by Todor Balabanov <text:s/>( tdb@tbsoft.eu ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P433"><text:s/>* <text:s text:c="27"/>Iliyan Zankinski ( iliyan_mf@abv.bg ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P433"><text:s/>* <text:s text:c="27"/>Galq Cirkalova <text:s text:c="2"/>( galq_cirkalova@abv.bg ) <text:s text:c="6"/>*</text:p><text:p text:style-name="P433"><text:s/>* <text:s text:c="27"/>Ivan Grozev <text:s text:c="5"/>( ivan.iliev.grozev@gmail.com ) *</text:p><text:p text:style-name="P433"><text:s/>* <text:s text:c="27"/>Daniel Chutrov <text:s text:c="2"/>( d.chutrov@gmail.com ) <text:s text:c="8"/>*</text:p><text:p text:style-name="P433"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P433"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P433"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P433"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P433"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P433"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P433"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P433"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P433"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P433"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P433"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P433"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P433"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P433"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P433"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P433">/*</text:p><text:p text:style-name="P433"><text:s/>* Include files.</text:p><text:p text:style-name="P433"><text:s/>*/</text:p><text:p text:style-name="P433">document.write(&apos;&lt;script type=&quot;text/javascript&quot; src=&quot;&apos; + &apos;Neuron.js&apos; + &apos;&quot;&gt;&lt;/script&gt;&apos;);</text:p><text:p text:style-name="P433"/><text:p text:style-name="P433">/**</text:p><text:p text:style-name="P433"><text:s/>* Minumum input amount of ANN neurons.</text:p><text:p text:style-name="P433"><text:s/>*/</text:p><text:p text:style-name="P433">const MIN_INPUT_NEURONS_AMOUNT = 1;</text:p><text:p text:style-name="P433"/><text:p text:style-name="P433">/**</text:p><text:p text:style-name="P433"><text:s/>* Minumum regular amount of ANN neurons.</text:p><text:p text:style-name="P433"><text:s/>*/</text:p><text:p text:style-name="P433">const MIN_REGULAR_NEURONS_AMOUNT = 1;</text:p><text:p text:style-name="P433"/><text:p text:style-name="P433">/**</text:p><text:p text:style-name="P433"><text:s/>* Minumum output amount of ANN neurons.</text:p><text:p text:style-name="P433"><text:s/>*/</text:p><text:p text:style-name="P433">const MIN_OUTPUT_NEURONS_AMOUNT = 1;</text:p><text:p text:style-name="P433"/><text:p text:style-name="P433">/**</text:p><text:p text:style-name="P433"><text:s/>* Minumum amount of ANN neurons.</text:p><text:p text:style-name="P433"><text:s/>*/</text:p><text:p text:style-name="P433">const MIN_NEURONS_AMOUNT = this.MIN_INPUT_NEURONS_AMOUNT + this.MIN_REGULAR_NEURONS_AMOUNT + this.MIN_OUTPUT_NEURONS_AMOUNT;</text:p><text:p text:style-name="P433"/><text:p text:style-name="P433">/**</text:p><text:p text:style-name="P433"><text:s/>* List of neurons class.</text:p><text:p text:style-name="P433"><text:s/>*</text:p><text:p text:style-name="P433"><text:s/>* @author Todor Balabanov</text:p><text:p text:style-name="P433"><text:s/>*</text:p><text:p text:style-name="P433"><text:s/>* @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P433"><text:s/>*</text:p><text:p text:style-name="P433"><text:s/>* @date 03 Aug 2011</text:p><text:p text:style-name="P433"><text:s/>*/</text:p><text:p text:style-name="P433">function NeuronsList(size) {</text:p><text:p text:style-name="P433"><text:tab/>/*</text:p><text:p text:style-name="P433"><text:tab/> * It is not possible neurons amount to be negative number.</text:p><text:p text:style-name="P433"><text:tab/> */</text:p><text:p text:style-name="P433"><text:tab/>if (size &lt; this.MIN_NEURONS_AMOUNT) {</text:p><text:p text:style-name="P433"><text:tab/><text:tab/>size = this.MIN_NEURONS_AMOUNT;</text:p><text:p text:style-name="P433"><text:tab/>}</text:p><text:p text:style-name="P433"/><text:p text:style-name="P433"><text:tab/>/**</text:p><text:p text:style-name="P433"><text:tab/> * Neurons list.</text:p><text:p text:style-name="P433"><text:tab/> */</text:p><text:p text:style-name="P433"><text:tab/>this.list = new Array(size);</text:p><text:p text:style-name="P433"><text:tab/>for (var i = 0; i &lt; list.length; i++) {</text:p><text:p text:style-name="P433"><text:tab/><text:tab/>list[i] = new Neuron();</text:p><text:p text:style-name="P433"><text:tab/>}</text:p><text:p text:style-name="P433"/><text:p text:style-name="P433"><text:tab/>/**</text:p><text:p text:style-name="P433"><text:tab/> * Input neurons amount getter.</text:p><text:p text:style-name="P433"><text:tab/> *</text:p><text:p text:style-name="P433"><text:tab/> * @return Input neurons amount.</text:p><text:p text:style-name="P433"><text:tab/> *</text:p><text:p text:style-name="P433"><text:tab/> * @author Iliyan Zankinski</text:p><text:p text:style-name="P433"><text:tab/> *</text:p><text:p text:style-name="P433"><text:tab/> * @email iliyan_mf@abv.bg</text:p><text:p text:style-name="P433"><text:tab/> *</text:p><text:p text:style-name="P433"><text:tab/> * @date 27 Jul 2009</text:p><text:p text:style-name="P433"><text:tab/> */</text:p><text:p text:style-name="P433"><text:tab/>this.getInputNeuronsAmount = function() {</text:p><text:p text:style-name="P433"><text:tab/><text:tab/>var inputNeuronsAmount = 0;</text:p><text:p text:style-name="P433"/><text:p text:style-name="P433"><text:tab/><text:tab/>for (var i = 0; i &lt; list.length; i++) {</text:p><text:p text:style-name="P433"><text:tab/><text:tab/><text:tab/>if (list[i].isInput() == true) {</text:p><text:p text:style-name="P433"><text:soft-page-break/><text:tab/><text:tab/><text:tab/><text:tab/>inputNeuronsAmount++;</text:p><text:p text:style-name="P433"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P433"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P433"/><text:p text:style-name="P433"><text:tab/><text:tab/>return inputNeuronsAmount;</text:p><text:p text:style-name="P433"><text:tab/>};</text:p><text:p text:style-name="P433"/><text:p text:style-name="P433"><text:tab/>/**</text:p><text:p text:style-name="P433"><text:tab/> * Output neurons amount getter.</text:p><text:p text:style-name="P433"><text:tab/> *</text:p><text:p text:style-name="P433"><text:tab/> * @return Output neurons amount.</text:p><text:p text:style-name="P433"><text:tab/> *</text:p><text:p text:style-name="P433"><text:tab/> * @author Iliyan Zankinski</text:p><text:p text:style-name="P433"><text:tab/> *</text:p><text:p text:style-name="P433"><text:tab/> * @email iliyan_mf@abv.bg</text:p><text:p text:style-name="P433"><text:tab/> *</text:p><text:p text:style-name="P433"><text:tab/> * @date 27 Jul 2009</text:p><text:p text:style-name="P433"><text:tab/> */</text:p><text:p text:style-name="P433"><text:tab/>this.getOutputNeuronsAmount = function() {</text:p><text:p text:style-name="P433"><text:tab/><text:tab/>var outputNeuronsAmount = 0;</text:p><text:p text:style-name="P433"/><text:p text:style-name="P433"><text:tab/><text:tab/>for (var i = 0; i &lt; list.length; i++) {</text:p><text:p text:style-name="P433"><text:tab/><text:tab/><text:tab/>if (list[i].isOutput() == true) {</text:p><text:p text:style-name="P433"><text:tab/><text:tab/><text:tab/><text:tab/>outputNeuronsAmount++;</text:p><text:p text:style-name="P433"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P433"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P433"/><text:p text:style-name="P433"><text:tab/><text:tab/>return outputNeuronsAmount;</text:p><text:p text:style-name="P433"><text:tab/>};</text:p><text:p text:style-name="P433"/><text:p text:style-name="P433"><text:tab/>/**</text:p><text:p text:style-name="P433"><text:tab/> * Size of neurons list getter.</text:p><text:p text:style-name="P433"><text:tab/> *</text:p><text:p text:style-name="P433"><text:tab/> * @return Size of neurons list.</text:p><text:p text:style-name="P433"><text:tab/> *</text:p><text:p text:style-name="P433"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P433"><text:tab/> *</text:p><text:p text:style-name="P433"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P433"><text:tab/> *</text:p><text:p text:style-name="P433"><text:tab/> * @date 03 Aug 2011</text:p><text:p text:style-name="P433"><text:tab/> */</text:p><text:p text:style-name="P433"><text:tab/>this.dimension = function() {</text:p><text:p text:style-name="P433"><text:tab/><text:tab/>return list.length;</text:p><text:p text:style-name="P433"><text:tab/>};</text:p><text:p text:style-name="P433"/><text:p text:style-name="P433"><text:tab/>/**</text:p><text:p text:style-name="P433"><text:tab/> * Clear all type flags.</text:p><text:p text:style-name="P433"><text:tab/> *</text:p><text:p text:style-name="P433"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P433"><text:tab/> *</text:p><text:p text:style-name="P433"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P433"><text:tab/> *</text:p><text:p text:style-name="P433"><text:tab/> * @date 21 Aug 2009</text:p><text:p text:style-name="P433"><text:tab/> */</text:p><text:p text:style-name="P433"><text:tab/>this.clearTypes = function() {</text:p><text:p text:style-name="P433"><text:tab/><text:tab/>for (var i = 0; i &lt; list.length; i++) {</text:p><text:p text:style-name="P433"><text:tab/><text:tab/><text:tab/>list[i].setRegular(true);</text:p><text:p text:style-name="P433"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P433"><text:tab/>};</text:p><text:p text:style-name="P433"/><text:p text:style-name="P433"><text:tab/>/**</text:p><text:p text:style-name="P433"><text:tab/> * Reset all neurons values.</text:p><text:p text:style-name="P433"><text:tab/> *</text:p><text:p text:style-name="P433"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P433"><text:tab/> *</text:p><text:p text:style-name="P433"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P433"><text:tab/> *</text:p><text:p text:style-name="P433"><text:tab/> * @date 21 Aug 2009</text:p><text:p text:style-name="P433"><text:tab/> */</text:p><text:p text:style-name="P433"><text:tab/>this.reset = function() {</text:p><text:p text:style-name="P433"><text:tab/><text:tab/>for (var i = 0; i &lt; list.length; i++) {</text:p><text:p text:style-name="P433"><text:tab/><text:tab/><text:tab/>list[i].reset();</text:p><text:p text:style-name="P433"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P433"><text:tab/>};</text:p><text:p text:style-name="P433"/><text:p text:style-name="P433"><text:tab/>clearTypes();</text:p><text:p text:style-name="P433">}</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5708_1486593966"/><text:s text:c="4"/>Population.js<text:bookmark-end text:name="__RefHeading___Toc5708_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P434">/*******************************************************************************</text:p><text:p text:style-name="P434"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P434"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P434"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P434"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P434"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P434"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P434"><text:s/>* Copyright (C) 2008-2011 by Todor Balabanov <text:s/>( tdb@tbsoft.eu ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P434"><text:s/>* <text:s text:c="27"/>Iliyan Zankinski ( iliyan_mf@abv.bg ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P434"><text:s/>* <text:s text:c="27"/>Galq Cirkalova <text:s text:c="2"/>( galq_cirkalova@abv.bg ) <text:s text:c="6"/>*</text:p><text:p text:style-name="P434"><text:s/>* <text:s text:c="27"/>Ivan Grozev <text:s text:c="5"/>( ivan.iliev.grozev@gmail.com ) *</text:p><text:p text:style-name="P434"><text:s/>* <text:s text:c="27"/>Daniel Chutrov <text:s text:c="2"/>( d.chutrov@gmail.com ) <text:s text:c="8"/>*</text:p><text:p text:style-name="P434"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P434"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P434"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P434"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P434"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P434"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P434"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P434"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P434"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P434"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P434"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P434"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P434"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P434"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P434"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P434">/*</text:p><text:p text:style-name="P434"><text:s/>* Include files.</text:p><text:p text:style-name="P434"><text:s/>*/</text:p><text:p text:style-name="P434">document.write(&apos;&lt;script type=&quot;text/javascript&quot; src=&quot;&apos; + &apos;Chromosome.js&apos; + &apos;&quot;&gt;&lt;/script&gt;&apos;);</text:p><text:p text:style-name="P434"/><text:p text:style-name="P434">/**</text:p><text:p text:style-name="P434"><text:s/>* Minimum population size. Four is useful at each crossover and mutation to</text:p><text:p text:style-name="P434"><text:s/>* have two parents, one child and one reserved best chromosome.</text:p><text:p text:style-name="P434"><text:s/>*/</text:p><text:p text:style-name="P434">const MIN_POPULATION_SIZE = 4;</text:p><text:p text:style-name="P434"/><text:p text:style-name="P434">/**</text:p><text:p text:style-name="P434"><text:soft-page-break/><text:s/>* List of weights used as population class.</text:p><text:p text:style-name="P434"><text:s/>*</text:p><text:p text:style-name="P434"><text:s/>* @author Todor Balabanov</text:p><text:p text:style-name="P434"><text:s/>*</text:p><text:p text:style-name="P434"><text:s/>* @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P434"><text:s/>*</text:p><text:p text:style-name="P434"><text:s/>* @date 05 Aug 2011</text:p><text:p text:style-name="P434"><text:s/>*/</text:p><text:p text:style-name="P434">function Population(size) {</text:p><text:p text:style-name="P434"><text:tab/>/*</text:p><text:p text:style-name="P434"><text:tab/> * DE is not working with less than minimum amount of chromosomes.</text:p><text:p text:style-name="P434"><text:tab/> */</text:p><text:p text:style-name="P434"><text:tab/>if (size &lt; MIN_POPULATION_SIZE) {</text:p><text:p text:style-name="P434"><text:tab/><text:tab/>size = MIN_POPULATION_SIZE;</text:p><text:p text:style-name="P434"><text:tab/>}</text:p><text:p text:style-name="P434"/><text:p text:style-name="P434"><text:tab/>/**</text:p><text:p text:style-name="P434"><text:tab/> * Weights list.</text:p><text:p text:style-name="P434"><text:tab/> */</text:p><text:p text:style-name="P434"><text:tab/>this.list = [];</text:p><text:p text:style-name="P434"><text:tab/>for (var k = 0; k &lt; list.length; k++) {</text:p><text:p text:style-name="P434"><text:tab/><text:tab/>list[k] = new Chromosome();</text:p><text:p text:style-name="P434"><text:tab/>}</text:p><text:p text:style-name="P434"/><text:p text:style-name="P434"><text:tab/>/**</text:p><text:p text:style-name="P434"><text:tab/> * Index of the chromozome with the best fitness.</text:p><text:p text:style-name="P434"><text:tab/> */</text:p><text:p text:style-name="P434"><text:tab/>this.bestFitnessIndex = 0;</text:p><text:p text:style-name="P434"/><text:p text:style-name="P434"><text:tab/>/**</text:p><text:p text:style-name="P434"><text:tab/> * Size of neurons list getter.</text:p><text:p text:style-name="P434"><text:tab/> *</text:p><text:p text:style-name="P434"><text:tab/> * @return Size of neurons list.</text:p><text:p text:style-name="P434"><text:tab/> *</text:p><text:p text:style-name="P434"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P434"><text:tab/> *</text:p><text:p text:style-name="P434"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P434"><text:tab/> *</text:p><text:p text:style-name="P434"><text:tab/> * @date 05 Aug 2011</text:p><text:p text:style-name="P434"><text:tab/> */</text:p><text:p text:style-name="P434"><text:tab/>this.dimension = function() {</text:p><text:p text:style-name="P434"><text:tab/><text:tab/>return list.length;</text:p><text:p text:style-name="P434"><text:tab/>};</text:p><text:p text:style-name="P434"/><text:p text:style-name="P434"><text:tab/>/**</text:p><text:p text:style-name="P434"><text:tab/> * Best local fitness value getter.</text:p><text:p text:style-name="P434"><text:tab/> *</text:p><text:p text:style-name="P434"><text:tab/> * @return Best local fitness value.</text:p><text:p text:style-name="P434"><text:tab/> *</text:p><text:p text:style-name="P434"><text:tab/> * @author Ivan Grozev</text:p><text:p text:style-name="P434"><text:tab/> *</text:p><text:p text:style-name="P434"><text:tab/> * @email Ivan.Iliev.Grozev@gmail.com</text:p><text:p text:style-name="P434"><text:tab/> *</text:p><text:p text:style-name="P434"><text:tab/> * @date 07 Jun 2009</text:p><text:p text:style-name="P434"><text:tab/> */</text:p><text:p text:style-name="P434"><text:tab/>this.getBestFitness = function() {</text:p><text:p text:style-name="P434"><text:tab/><text:tab/>return list[bestFitnessIndex].getFitness();</text:p><text:p text:style-name="P434"><text:tab/>};</text:p><text:p text:style-name="P434"/><text:p text:style-name="P434"><text:tab/>/**</text:p><text:p text:style-name="P434"><text:tab/> * Find index of the chromosome with the best fitness value.</text:p><text:p text:style-name="P434"><text:tab/> *</text:p><text:p text:style-name="P434"><text:tab/> * @return Index of the chromosome with the best fitness.</text:p><text:p text:style-name="P434"><text:tab/> *</text:p><text:p text:style-name="P434"><text:tab/> * @author Galq Cirkalova</text:p><text:p text:style-name="P434"><text:tab/> *</text:p><text:p text:style-name="P434"><text:tab/> * @email galq_cirkalova@abv.bg</text:p><text:p text:style-name="P434"><text:tab/> *</text:p><text:p text:style-name="P434"><text:tab/> * @date 24 Apr 2009</text:p><text:p text:style-name="P434"><text:tab/> */</text:p><text:p text:style-name="P434"><text:tab/>this.getBestFitnessIndex = function() {</text:p><text:p text:style-name="P434"><text:tab/><text:tab/>return bestFitnessIndex;</text:p><text:p text:style-name="P434"><text:tab/>};</text:p><text:p text:style-name="P434"/><text:p text:style-name="P434"><text:tab/>/**</text:p><text:p text:style-name="P434"><text:tab/> * Check chromosome for duplication.</text:p><text:p text:style-name="P434"><text:tab/> *</text:p><text:p text:style-name="P434"><text:tab/> * @param chromosome Chromosome in population array.</text:p><text:p text:style-name="P434"><text:tab/> *</text:p><text:p text:style-name="P434"><text:tab/> * @return True if duplicate is found, false otherwise.</text:p><text:p text:style-name="P434"><text:tab/> *</text:p><text:p text:style-name="P434"><text:tab/> * @author Iliyan Zankinski</text:p><text:p text:style-name="P434"><text:tab/> *</text:p><text:p text:style-name="P434"><text:tab/> * @email iliyan_mf@abv.bg</text:p><text:p text:style-name="P434"><text:tab/> *</text:p><text:p text:style-name="P434"><text:tab/> * @date 25 Aug 2009</text:p><text:p text:style-name="P434"><text:tab/> */</text:p><text:p text:style-name="P434"><text:tab/>this.hasDuplication = function(chromosome) {</text:p><text:p text:style-name="P434"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P434"><text:tab/><text:tab/> * Check chromosome for duplication.</text:p><text:p text:style-name="P434"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P434"><text:tab/><text:tab/>for (var k = 0; k &lt; list.length; k++) {</text:p><text:p text:style-name="P434"><text:tab/><text:tab/><text:tab/>if (list[k].getFitness() == chromosome.getFitness() &amp;&amp; list[k] != chromosome) {</text:p><text:p text:style-name="P434"><text:tab/><text:tab/><text:tab/><text:tab/>return true;</text:p><text:p text:style-name="P434"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P434"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P434"/><text:p text:style-name="P434"><text:tab/><text:tab/>return false;</text:p><text:p text:style-name="P434"><text:tab/>};</text:p><text:p text:style-name="P434"/><text:p text:style-name="P434"><text:tab/>/**</text:p><text:p text:style-name="P434"><text:tab/> * Initialize population with random chromosomes.</text:p><text:p text:style-name="P434"><text:tab/> *</text:p><text:p text:style-name="P434"><text:tab/> * @author Iliyan Zankinski</text:p><text:p text:style-name="P434"><text:tab/> *</text:p><text:p text:style-name="P434"><text:tab/> * @email iliyan_mf@abv.bg</text:p><text:p text:style-name="P434"><text:tab/> *</text:p><text:p text:style-name="P434"><text:tab/> * @date 27 Mar 2009</text:p><text:p text:style-name="P434"><text:tab/> */</text:p><text:p text:style-name="P434"><text:tab/>this.initRandom = function() {</text:p><text:p text:style-name="P434"><text:tab/><text:tab/>for (var k = 0; k &lt; list.length; k++) {</text:p><text:p text:style-name="P434"><text:tab/><text:tab/><text:tab/>list[k].random();</text:p><text:p text:style-name="P434"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P434"/><text:p text:style-name="P434"><text:tab/><text:tab/>searchBestFitnessIndex();</text:p><text:p text:style-name="P434"><text:tab/>};</text:p><text:p text:style-name="P434"/><text:p text:style-name="P434"><text:tab/>/**</text:p><text:p text:style-name="P434"><text:tab/> * Search for best fitness and save it in class member variable.</text:p><text:p text:style-name="P434"><text:tab/> *</text:p><text:p text:style-name="P434"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P434"><text:tab/> *</text:p><text:p text:style-name="P434"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P434"><text:tab/> *</text:p><text:p text:style-name="P434"><text:tab/> * @date 18 Aug 2009</text:p><text:p text:style-name="P434"><text:soft-page-break/><text:tab/> */</text:p><text:p text:style-name="P434"><text:tab/>this.searchBestFitnessIndex = function() {</text:p><text:p text:style-name="P434"><text:tab/><text:tab/>bestFitnessIndex = 0;</text:p><text:p text:style-name="P434"/><text:p text:style-name="P434"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P434"><text:tab/><text:tab/> * Best fintess is the smallest possible. Fitness is artificial neural</text:p><text:p text:style-name="P434"><text:tab/><text:tab/> * network total error.</text:p><text:p text:style-name="P434"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P434"><text:tab/><text:tab/>for (var i = 0; i &lt; list.length; i++) {</text:p><text:p text:style-name="P434"><text:tab/><text:tab/><text:tab/>if (list[i].getFitness() &lt; list[bestFitnessIndex].getFitness()) {</text:p><text:p text:style-name="P434"><text:tab/><text:tab/><text:tab/><text:tab/>bestFitnessIndex = i;</text:p><text:p text:style-name="P434"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P434"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P434"><text:tab/>};</text:p><text:p text:style-name="P434"/><text:p text:style-name="P434"><text:tab/>/*</text:p><text:p text:style-name="P434"><text:tab/> * Best fitness index should be available.</text:p><text:p text:style-name="P434"><text:tab/> */</text:p><text:p text:style-name="P434"><text:tab/>searchBestFitnessIndex();</text:p><text:p text:style-name="P434">}</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5710_1486593966"/><text:s text:c="4"/>RateInfo.js<text:bookmark-end text:name="__RefHeading___Toc5710_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P435">/*******************************************************************************</text:p><text:p text:style-name="P435"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P435"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P435"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P435"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P435"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P435"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P435"><text:s/>* Copyright (C) 2008-2011 by Todor Balabanov <text:s/>( tdb@tbsoft.eu ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P435"><text:s/>* <text:s text:c="27"/>Iliyan Zankinski ( iliyan_mf@abv.bg ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P435"><text:s/>* <text:s text:c="27"/>Galq Cirkalova <text:s text:c="2"/>( galq_cirkalova@abv.bg ) <text:s text:c="6"/>*</text:p><text:p text:style-name="P435"><text:s/>* <text:s text:c="27"/>Ivan Grozev <text:s text:c="5"/>( ivan.iliev.grozev@gmail.com ) *</text:p><text:p text:style-name="P435"><text:s/>* <text:s text:c="27"/>Daniel Chutrov <text:s text:c="2"/>( d.chutrov@gmail.com ) <text:s text:c="8"/>*</text:p><text:p text:style-name="P435"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P435"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P435"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P435"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P435"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P435"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P435"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P435"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P435"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P435"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P435"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P435"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P435"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P435"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P435"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P435"/><text:p text:style-name="P435">/**</text:p><text:p text:style-name="P435"><text:s/>* Single rate structure.</text:p><text:p text:style-name="P435"><text:s/>*</text:p><text:p text:style-name="P435"><text:s/>* @author Daniel Chutrov</text:p><text:p text:style-name="P435"><text:s/>*</text:p><text:p text:style-name="P435"><text:s/>* @email d.chutrov@gmail.com</text:p><text:p text:style-name="P435"><text:s/>*</text:p><text:p text:style-name="P435"><text:s/>* @date 25 Dec 2010</text:p><text:p text:style-name="P435"><text:s/>*/</text:p><text:p text:style-name="P435">function RateInfo() <text:s/>{</text:p><text:p text:style-name="P435"/><text:p text:style-name="P435"><text:tab/>/**</text:p><text:p text:style-name="P435"><text:tab/> * Rate time value.</text:p><text:p text:style-name="P435"><text:tab/> */</text:p><text:p text:style-name="P435"><text:tab/>this.time = 0;</text:p><text:p text:style-name="P435"/><text:p text:style-name="P435"><text:tab/>/**</text:p><text:p text:style-name="P435"><text:tab/> * Rate open value.</text:p><text:p text:style-name="P435"><text:tab/> */</text:p><text:p text:style-name="P435"><text:tab/>this.open = 0.0;</text:p><text:p text:style-name="P435"/><text:p text:style-name="P435"><text:tab/>/**</text:p><text:p text:style-name="P435"><text:tab/> * Rate low value.</text:p><text:p text:style-name="P435"><text:tab/> */</text:p><text:p text:style-name="P435"><text:tab/>this.low = 0.0;</text:p><text:p text:style-name="P435"/><text:p text:style-name="P435"><text:tab/>/**</text:p><text:p text:style-name="P435"><text:tab/> * Rate high value.</text:p><text:p text:style-name="P435"><text:tab/> */</text:p><text:p text:style-name="P435"><text:tab/>this.high = 0.0;</text:p><text:p text:style-name="P435"/><text:p text:style-name="P435"><text:tab/>/**</text:p><text:p text:style-name="P435"><text:tab/> * Rate close value.</text:p><text:p text:style-name="P435"><text:tab/> */</text:p><text:p text:style-name="P435"><text:tab/>this.close = 0.0;</text:p><text:p text:style-name="P435"/><text:p text:style-name="P435"><text:tab/>/**</text:p><text:p text:style-name="P435"><text:tab/> * Rate volume value.</text:p><text:p text:style-name="P435"><text:tab/> */</text:p><text:p text:style-name="P435"><text:tab/>this.volume = 0.0;</text:p><text:p text:style-name="P435">}</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5712_1486593966"/><text:s text:c="4"/>TimePeriod.js<text:bookmark-end text:name="__RefHeading___Toc5712_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P436">/*******************************************************************************</text:p><text:p text:style-name="P436"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P436"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P436"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P436"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P436"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P436"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P436"><text:s/>* Copyright (C) 2008-2011 by Todor Balabanov <text:s/>( tdb@tbsoft.eu ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P436"><text:s/>* <text:s text:c="27"/>Iliyan Zankinski ( iliyan_mf@abv.bg ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P436"><text:s/>* <text:s text:c="27"/>Galq Cirkalova <text:s text:c="2"/>( galq_cirkalova@abv.bg ) <text:s text:c="6"/>*</text:p><text:p text:style-name="P436"><text:s/>* <text:s text:c="27"/>Ivan Grozev <text:s text:c="5"/>( ivan.iliev.grozev@gmail.com ) *</text:p><text:p text:style-name="P436"><text:s/>* <text:s text:c="27"/>Daniel Chutrov <text:s text:c="2"/>( d.chutrov@gmail.com ) <text:s text:c="8"/>*</text:p><text:p text:style-name="P436"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P436"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P436"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P436"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P436"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P436"><text:soft-page-break/><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P436"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P436"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P436"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P436"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P436"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P436"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P436"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P436"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P436"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P436"/><text:p text:style-name="P436">/**</text:p><text:p text:style-name="P436"><text:s/>* No time period at all.</text:p><text:p text:style-name="P436"><text:s/>*/</text:p><text:p text:style-name="P436">const NO = 0;</text:p><text:p text:style-name="P436"/><text:p text:style-name="P436">/**</text:p><text:p text:style-name="P436"><text:s/>* One minute.</text:p><text:p text:style-name="P436"><text:s/>*/</text:p><text:p text:style-name="P436">const M1 = 1;</text:p><text:p text:style-name="P436"/><text:p text:style-name="P436">/**</text:p><text:p text:style-name="P436"><text:s/>* Five minutes.</text:p><text:p text:style-name="P436"><text:s/>*/</text:p><text:p text:style-name="P436">const M5 = 5;</text:p><text:p text:style-name="P436"/><text:p text:style-name="P436">/**</text:p><text:p text:style-name="P436"><text:s/>* Fifteen minutes.</text:p><text:p text:style-name="P436"><text:s/>*/</text:p><text:p text:style-name="P436">const M15 = 15;</text:p><text:p text:style-name="P436"/><text:p text:style-name="P436">/**</text:p><text:p text:style-name="P436"><text:s/>* Thirty minutes.</text:p><text:p text:style-name="P436"><text:s/>*/</text:p><text:p text:style-name="P436">const M30 = 30;</text:p><text:p text:style-name="P436"/><text:p text:style-name="P436">/**</text:p><text:p text:style-name="P436"><text:s/>* One hour.</text:p><text:p text:style-name="P436"><text:s/>*/</text:p><text:p text:style-name="P436">const H1 = 60;</text:p><text:p text:style-name="P436"/><text:p text:style-name="P436">/**</text:p><text:p text:style-name="P436"><text:s/>* Four hours.</text:p><text:p text:style-name="P436"><text:s/>*/</text:p><text:p text:style-name="P436">const H4 = 240;</text:p><text:p text:style-name="P436"/><text:p text:style-name="P436">/**</text:p><text:p text:style-name="P436"><text:s/>* One day.</text:p><text:p text:style-name="P436"><text:s/>*/</text:p><text:p text:style-name="P436">const D1 = 1440;</text:p><text:p text:style-name="P436"/><text:p text:style-name="P436">/**</text:p><text:p text:style-name="P436"><text:s/>* One week.</text:p><text:p text:style-name="P436"><text:s/>*/</text:p><text:p text:style-name="P436">const W1 = 10080;</text:p><text:p text:style-name="P436"/><text:p text:style-name="P436">/**</text:p><text:p text:style-name="P436"><text:s/>* One month.</text:p><text:p text:style-name="P436"><text:s/>*/</text:p><text:p text:style-name="P436">const MN1 = 43200;</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5714_1486593966"/><text:s text:c="4"/>Trainer.js<text:bookmark-end text:name="__RefHeading___Toc5714_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P437">/*******************************************************************************</text:p><text:p text:style-name="P437"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P437"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P437"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P437"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P437"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P437"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P437"><text:s/>* Copyright (C) 2008-2011 by Todor Balabanov <text:s/>( tdb@tbsoft.eu ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P437"><text:s/>* <text:s text:c="27"/>Iliyan Zankinski ( iliyan_mf@abv.bg ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P437"><text:s/>* <text:s text:c="27"/>Galq Cirkalova <text:s text:c="2"/>( galq_cirkalova@abv.bg ) <text:s text:c="6"/>*</text:p><text:p text:style-name="P437"><text:s/>* <text:s text:c="27"/>Ivan Grozev <text:s text:c="5"/>( ivan.iliev.grozev@gmail.com ) *</text:p><text:p text:style-name="P437"><text:s/>* <text:s text:c="27"/>Daniel Chutrov <text:s text:c="2"/>( d.chutrov@gmail.com ) <text:s text:c="8"/>*</text:p><text:p text:style-name="P437"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P437"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P437"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P437"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P437"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P437"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P437"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P437"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P437"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P437"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P437"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P437"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P437"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P437"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P437"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P437"/><text:p text:style-name="P437">/*</text:p><text:p text:style-name="P437"><text:s/>* Include files.</text:p><text:p text:style-name="P437"><text:s/>*/</text:p><text:p text:style-name="P437">document.write(&apos;&lt;script type=&quot;text/javascript&quot; src=&quot;&apos; + &apos;JsonHttpCommunicator.js&apos; + &apos;&quot;&gt;&lt;/script&gt;&apos;);</text:p><text:p text:style-name="P437">document.write(&apos;&lt;script type=&quot;text/javascript&quot; src=&quot;&apos; + &apos;TrainingSet.js&apos; + &apos;&quot;&gt;&lt;/script&gt;&apos;);</text:p><text:p text:style-name="P437">document.write(&apos;&lt;script type=&quot;text/javascript&quot; src=&quot;&apos; + &apos;ANN.js&apos; + &apos;&quot;&gt;&lt;/script&gt;&apos;);</text:p><text:p text:style-name="P437">document.write(&apos;&lt;script type=&quot;text/javascript&quot; src=&quot;&apos; + &apos;DE.js&apos; + &apos;&quot;&gt;&lt;/script&gt;&apos;);</text:p><text:p text:style-name="P437">document.write(&apos;&lt;script type=&quot;text/javascript&quot; src=&quot;&apos; + &apos;Counter.js&apos; + &apos;&quot;&gt;&lt;/script&gt;&apos;);</text:p><text:p text:style-name="P437">document.write(&apos;&lt;script type=&quot;text/javascript&quot; src=&quot;&apos; + &apos;ModelParameters.js&apos; + &apos;&quot;&gt;&lt;/script&gt;&apos;);</text:p><text:p text:style-name="P437">document.write(&apos;&lt;script type=&quot;text/javascript&quot; src=&quot;&apos; + &apos;cstdlib.js&apos; + &apos;&quot;&gt;&lt;/script&gt;&apos;);</text:p><text:p text:style-name="P437">document.write(&apos;&lt;script type=&quot;text/javascript&quot; src=&quot;&apos; + &apos;ctime.js&apos; + &apos;&quot;&gt;&lt;/script&gt;&apos;);</text:p><text:p text:style-name="P437"/><text:p text:style-name="P437">/**</text:p><text:p text:style-name="P437"><text:s/>* Do report flag.</text:p><text:p text:style-name="P437"><text:s/>*/</text:p><text:p text:style-name="P437">const DO_FINAL_REPORT = true;</text:p><text:p text:style-name="P437"/><text:p text:style-name="P437">/**</text:p><text:p text:style-name="P437"><text:s/>* Report file name.</text:p><text:p text:style-name="P437"><text:s/>*/</text:p><text:p text:style-name="P437">const REPORT_FILE_NAME = &quot;VitoshaTradeTrainingReport.txt&quot;;</text:p><text:p text:style-name="P437"/><text:p text:style-name="P437">/**</text:p><text:p text:style-name="P437"><text:s/>* Number of seconds to request training set update.</text:p><text:p text:style-name="P437"><text:s/>*/</text:p><text:p text:style-name="P437">const TRAINING_SET_UPDATE_INTERVAL = 600;</text:p><text:p text:style-name="P437"/><text:p text:style-name="P437">/**</text:p><text:p text:style-name="P437"><text:soft-page-break/><text:s/>* Number of seconds to report local best fitness.</text:p><text:p text:style-name="P437"><text:s/>*/</text:p><text:p text:style-name="P437">const BEST_FITNESS_REPORT_INTERVAL = 600;</text:p><text:p text:style-name="P437"/><text:p text:style-name="P437">/**</text:p><text:p text:style-name="P437"><text:s/>* Constructing trainer by using database data or user defined parameters.</text:p><text:p text:style-name="P437"><text:s/>*</text:p><text:p text:style-name="P437"><text:s/>* @author Todor Balabanov</text:p><text:p text:style-name="P437"><text:s/>*</text:p><text:p text:style-name="P437"><text:s/>* @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P437"><text:s/>*</text:p><text:p text:style-name="P437"><text:s/>* @date 12 Sep 2009</text:p><text:p text:style-name="P437"><text:s/>*/</text:p><text:p text:style-name="P437">function Trainer() {</text:p><text:p text:style-name="P437"><text:tab/>/**</text:p><text:p text:style-name="P437"><text:tab/> * At start there is no report at all.</text:p><text:p text:style-name="P437"><text:tab/> */</text:p><text:p text:style-name="P437"><text:tab/>this.lastBestFitnessReportTime = 0;</text:p><text:p text:style-name="P437"/><text:p text:style-name="P437"><text:tab/>/**</text:p><text:p text:style-name="P437"><text:tab/> * Statistic counters dynamic instance.</text:p><text:p text:style-name="P437"><text:tab/> */</text:p><text:p text:style-name="P437"><text:tab/>this.counters = new Counter();</text:p><text:p text:style-name="P437"/><text:p text:style-name="P437"><text:tab/>/**</text:p><text:p text:style-name="P437"><text:tab/> * HTTP comunication dynamic instance.</text:p><text:p text:style-name="P437"><text:tab/> */</text:p><text:p text:style-name="P437"><text:tab/>this.http = new JsonHttpCommunicator();</text:p><text:p text:style-name="P437"/><text:p text:style-name="P437"><text:tab/>/*</text:p><text:p text:style-name="P437"><text:tab/> * Estimate work done.</text:p><text:p text:style-name="P437"><text:tab/> */</text:p><text:p text:style-name="P437"><text:tab/>this.counters.setValue(&quot;Training start time&quot;, &quot;&quot; + time(null));</text:p><text:p text:style-name="P437"/><text:p text:style-name="P437"><text:tab/>/**</text:p><text:p text:style-name="P437"><text:tab/> * Artificial neural network trainer.</text:p><text:p text:style-name="P437"><text:tab/> *</text:p><text:p text:style-name="P437"><text:tab/> * @author Daniel Chutrov</text:p><text:p text:style-name="P437"><text:tab/> *</text:p><text:p text:style-name="P437"><text:tab/> * @email d.chutrov@gmail.com</text:p><text:p text:style-name="P437"><text:tab/> *</text:p><text:p text:style-name="P437"><text:tab/> * @date 29 Dec 2010</text:p><text:p text:style-name="P437"><text:tab/> */</text:p><text:p text:style-name="P437"><text:tab/>this.setup = function(parameters) {</text:p><text:p text:style-name="P437"><text:tab/><text:tab/>/**</text:p><text:p text:style-name="P437"><text:tab/><text:tab/> * MetaTrader 4 chart symbol.</text:p><text:p text:style-name="P437"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P437"><text:tab/><text:tab/>this.symbol = parameters.symbol;</text:p><text:p text:style-name="P437"/><text:p text:style-name="P437"><text:tab/><text:tab/>/**</text:p><text:p text:style-name="P437"><text:tab/><text:tab/> * MetaTrader 4 chart period.</text:p><text:p text:style-name="P437"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P437"><text:tab/><text:tab/>this.period = parameters.period;</text:p><text:p text:style-name="P437"/><text:p text:style-name="P437"><text:tab/><text:tab/>/**</text:p><text:p text:style-name="P437"><text:tab/><text:tab/> * Training set dynamic instance.</text:p><text:p text:style-name="P437"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P437"><text:tab/><text:tab/>this.ts = new TrainingSet();</text:p><text:p text:style-name="P437"/><text:p text:style-name="P437"><text:tab/><text:tab/>/**</text:p><text:p text:style-name="P437"><text:tab/><text:tab/> * Artificial neural network dynamic instance.</text:p><text:p text:style-name="P437"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P437"><text:tab/><text:tab/>this.ann = new ANN(counters, ts, parameters.neuronsAmount, parameters.learn, parameters.forecast, period);</text:p><text:p text:style-name="P437"/><text:p text:style-name="P437"><text:tab/><text:tab/>/**</text:p><text:p text:style-name="P437"><text:tab/><text:tab/> * Differential evolution dynamic instance.</text:p><text:p text:style-name="P437"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P437"><text:tab/><text:tab/>this.de = new DE();</text:p><text:p text:style-name="P437"/><text:p text:style-name="P437"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P437"><text:tab/><text:tab/>* At the beginning there is no training set.</text:p><text:p text:style-name="P437"><text:tab/><text:tab/>*/</text:p><text:p text:style-name="P437"><text:tab/><text:tab/>var result = http.loadTrainingSet(symbol, period, ts.getRates(), ts.getSize());</text:p><text:p text:style-name="P437"><text:tab/><text:tab/>this.ts = new TrainingSet(result[0], result[1], parameters.learn, parameters.forecast);</text:p><text:p text:style-name="P437"><text:tab/><text:tab/>ts.splitData(parameters.learn, parameters.forecast); </text:p><text:p text:style-name="P437"/><text:p text:style-name="P437"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P437"><text:tab/><text:tab/> * Create object structure.</text:p><text:p text:style-name="P437"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P437"><text:tab/><text:tab/>result = http.loadTrainerObjects(this.ann, this.de, parameters);</text:p><text:p text:style-name="P437"><text:tab/><text:tab/>this.ann = result[0];</text:p><text:p text:style-name="P437"><text:tab/><text:tab/>this.de = result[1];</text:p><text:p text:style-name="P437"><text:tab/><text:tab/>ann.setTrainingSetPointer(this.ts);</text:p><text:p text:style-name="P437"><text:tab/>};</text:p><text:p text:style-name="P437"/><text:p text:style-name="P437"><text:tab/>/**</text:p><text:p text:style-name="P437"><text:tab/> * Update training set.</text:p><text:p text:style-name="P437"><text:tab/> *</text:p><text:p text:style-name="P437"><text:tab/> * @param rates Array with rates values.</text:p><text:p text:style-name="P437"><text:tab/> *</text:p><text:p text:style-name="P437"><text:tab/> * @param size Size of all parallel arrays.</text:p><text:p text:style-name="P437"><text:tab/> *</text:p><text:p text:style-name="P437"><text:tab/> * @author Daniel Chutrov</text:p><text:p text:style-name="P437"><text:tab/> *</text:p><text:p text:style-name="P437"><text:tab/> * @email d.chutrov@gmail.com</text:p><text:p text:style-name="P437"><text:tab/> *</text:p><text:p text:style-name="P437"><text:tab/> * @date 23 Dec 2010</text:p><text:p text:style-name="P437"><text:tab/> */</text:p><text:p text:style-name="P437"><text:tab/>this.updateTrainingSet = function(rates, size) {</text:p><text:p text:style-name="P437"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P437"><text:tab/><text:tab/> * Do not update if there is no new data at latest known time.</text:p><text:p text:style-name="P437"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P437"><text:tab/><text:tab/>if (ts.getSize() == size &amp;&amp; ts.getTime(ts.getSize() - 1) == rates[size - 1].time) {</text:p><text:p text:style-name="P437"><text:tab/><text:tab/><text:tab/>return;</text:p><text:p text:style-name="P437"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P437"/><text:p text:style-name="P437"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P437"><text:tab/><text:tab/> * Create new training set object and swap it with the old one.</text:p><text:p text:style-name="P437"><text:tab/><text:tab/> * Constructor with merge capabilities also can be used.</text:p><text:p text:style-name="P437"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P437"><text:tab/><text:tab/>ts = new TrainingSet(rates, size, ann.getNeurons().getInputNeuronsAmount(), ann.getNeurons().getOutputNeuronsAmount());</text:p><text:p text:style-name="P437"/><text:p text:style-name="P437"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P437"><text:tab/><text:tab/> * Update ANN training set pointer.</text:p><text:p text:style-name="P437"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P437"><text:tab/><text:tab/>ann.setTrainingSetPointer(ts);</text:p><text:p text:style-name="P437"/><text:p text:style-name="P437"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P437"><text:tab/><text:tab/> * Estimate work done.</text:p><text:p text:style-name="P437"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P437"><text:tab/><text:tab/>counters.setValue(&quot;Training set size&quot;, ts.getSize());</text:p><text:p text:style-name="P437"><text:tab/>};</text:p><text:p text:style-name="P437"/><text:p text:style-name="P437"><text:tab/>/**</text:p><text:p text:style-name="P437"><text:tab/> * Do training process.</text:p><text:p text:style-name="P437"><text:soft-page-break/><text:tab/> *</text:p><text:p text:style-name="P437"><text:tab/> * @author Daniel Chutrov</text:p><text:p text:style-name="P437"><text:tab/> *</text:p><text:p text:style-name="P437"><text:tab/> * @email d.chutrov@gmail.com</text:p><text:p text:style-name="P437"><text:tab/> *</text:p><text:p text:style-name="P437"><text:tab/> * @date 23 Dec 2010</text:p><text:p text:style-name="P437"><text:tab/> */</text:p><text:p text:style-name="P437"><text:tab/>this.train = function() {</text:p><text:p text:style-name="P437"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P437"><text:tab/><text:tab/> * If training set is not present training can not be done.</text:p><text:p text:style-name="P437"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P437"><text:tab/><text:tab/>if (ts.getSize() == 0) {</text:p><text:p text:style-name="P437"><text:tab/><text:tab/><text:tab/>return;</text:p><text:p text:style-name="P437"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P437"/><text:p text:style-name="P437"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P437"><text:tab/><text:tab/> * Run one epoche of evolution.</text:p><text:p text:style-name="P437"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P437"><text:tab/><text:tab/>de.evolve();</text:p><text:p text:style-name="P437"/><text:p text:style-name="P437"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P437"><text:tab/><text:tab/> * Report best chromosome at regular time interval.</text:p><text:p text:style-name="P437"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P437"><text:tab/><text:tab/>if (time(null) - BEST_FITNESS_REPORT_INTERVAL &gt; lastBestFitnessReportTime) {</text:p><text:p text:style-name="P437"><text:tab/><text:tab/><text:tab/>reportLocalBestFitness();</text:p><text:p text:style-name="P437"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P437"><text:tab/>};</text:p><text:p text:style-name="P437"/><text:p text:style-name="P437"><text:tab/>/**</text:p><text:p text:style-name="P437"><text:tab/> * Obtain predicted value.</text:p><text:p text:style-name="P437"><text:tab/> *</text:p><text:p text:style-name="P437"><text:tab/> * @return Predicted value.</text:p><text:p text:style-name="P437"><text:tab/> *</text:p><text:p text:style-name="P437"><text:tab/> * @author Daniel Chutrov</text:p><text:p text:style-name="P437"><text:tab/> *</text:p><text:p text:style-name="P437"><text:tab/> * @email d.chutrov@gmail.com</text:p><text:p text:style-name="P437"><text:tab/> *</text:p><text:p text:style-name="P437"><text:tab/> * @date 23 Dec 2010</text:p><text:p text:style-name="P437"><text:tab/> */</text:p><text:p text:style-name="P437"><text:tab/>this.predict = function() {</text:p><text:p text:style-name="P437"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P437"><text:tab/><text:tab/> * If training set is not present training can not be done.</text:p><text:p text:style-name="P437"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P437"><text:tab/><text:tab/>if (ts.getSize() == 0) {</text:p><text:p text:style-name="P437"><text:tab/><text:tab/><text:tab/>return (0 );</text:p><text:p text:style-name="P437"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P437"/><text:p text:style-name="P437"><text:tab/><text:tab/>return ( ann.getPrediction() );</text:p><text:p text:style-name="P437"><text:tab/>};</text:p><text:p text:style-name="P437"/><text:p text:style-name="P437"><text:tab/>/**</text:p><text:p text:style-name="P437"><text:tab/> * Report local best fitness.</text:p><text:p text:style-name="P437"><text:tab/> *</text:p><text:p text:style-name="P437"><text:tab/> * @author Daniel Chutrov</text:p><text:p text:style-name="P437"><text:tab/> *</text:p><text:p text:style-name="P437"><text:tab/> * @email d.chutrov@gmail.com</text:p><text:p text:style-name="P437"><text:tab/> *</text:p><text:p text:style-name="P437"><text:tab/> * @date 23 Dec 2010</text:p><text:p text:style-name="P437"><text:tab/> */</text:p><text:p text:style-name="P437"><text:tab/>this.reportLocalBestFitness = function() {</text:p><text:p text:style-name="P437"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P437"><text:tab/><text:tab/> * Remote best fitness to be used as level for better result server report.</text:p><text:p text:style-name="P437"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P437"><text:tab/><text:tab/>var remoteBestFitness = RAND_MAX;</text:p><text:p text:style-name="P437"/><text:p text:style-name="P437"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P437"><text:tab/><text:tab/> * Get pointers needed.</text:p><text:p text:style-name="P437"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P437"><text:tab/><text:tab/>var activities = ann.getActivities();</text:p><text:p text:style-name="P437"><text:tab/><text:tab/>var neurons = ann.getNeurons();</text:p><text:p text:style-name="P437"/><text:p text:style-name="P437"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P437"><text:tab/><text:tab/> * Do not handle zero size ANNs.</text:p><text:p text:style-name="P437"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P437"><text:tab/><text:tab/>if (activities.dimension() == 0 || neurons.dimension() == 0) {</text:p><text:p text:style-name="P437"><text:tab/><text:tab/><text:tab/>return;</text:p><text:p text:style-name="P437"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P437"/><text:p text:style-name="P437"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P437"><text:tab/><text:tab/> * Check remote best fitness.</text:p><text:p text:style-name="P437"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P437"><text:tab/><text:tab/>remoteBestFitness = http.loadRemoteBestFitness(symbol, period, neurons, activities);</text:p><text:p text:style-name="P437"/><text:p text:style-name="P437"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P437"><text:tab/><text:tab/> * Load Compare remote and local best fitness value.</text:p><text:p text:style-name="P437"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P437"><text:tab/><text:tab/>var population = de.getPopulation();</text:p><text:p text:style-name="P437"><text:tab/><text:tab/>if (population.getBestFitness() &lt; remoteBestFitness) {</text:p><text:p text:style-name="P437"><text:tab/><text:tab/><text:tab/>var weights = population[population.getBestFitnessIndex()].getWeights();</text:p><text:p text:style-name="P437"/><text:p text:style-name="P437"><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P437"><text:tab/><text:tab/><text:tab/> * Do not handle zero size ANNs.</text:p><text:p text:style-name="P437"><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P437"><text:tab/><text:tab/><text:tab/>if (weights.dimension() &gt; 0) {</text:p><text:p text:style-name="P437"><text:tab/><text:tab/><text:tab/><text:tab/>http.saveSingleANN(symbol, period, population.getBestFitness(), neurons, weights, activities);</text:p><text:p text:style-name="P437"><text:tab/><text:tab/><text:tab/><text:tab/>http.saveTrainingSet(symbol, period, ts.getRates(), ts.getSize());</text:p><text:p text:style-name="P437"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P437"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P437"/><text:p text:style-name="P437"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P437"><text:tab/><text:tab/> * Mark last time checked for server best fitness.</text:p><text:p text:style-name="P437"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P437"><text:tab/><text:tab/>lastBestFitnessReportTime = time(NULL);</text:p><text:p text:style-name="P437"><text:tab/>};</text:p><text:p text:style-name="P437"/><text:p text:style-name="P437"><text:tab/>this.finalize = function() {</text:p><text:p text:style-name="P437"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P437"><text:tab/><text:tab/> * Report local best fitness value.</text:p><text:p text:style-name="P437"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P437"><text:tab/><text:tab/>reportLocalBestFitness();</text:p><text:p text:style-name="P437"/><text:p text:style-name="P437"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P437"><text:tab/><text:tab/> * Estimate work done.</text:p><text:p text:style-name="P437"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P437"><text:tab/><text:tab/>counters.setValue(&quot;Training end time seconds&quot;, clock() / CLOCKS_PER_SEC);</text:p><text:p text:style-name="P437"/><text:p text:style-name="P437"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P437"><text:tab/><text:tab/> * Report training results.</text:p><text:p text:style-name="P437"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P437"><text:tab/><text:tab/>if (DO_FINAL_REPORT == true) {</text:p><text:p text:style-name="P437"><text:tab/><text:tab/><text:tab/>console.log(&quot;================================================================================&quot;);</text:p><text:p text:style-name="P437"><text:tab/><text:tab/><text:tab/>console.log(counters);</text:p><text:p text:style-name="P437"><text:tab/><text:tab/><text:tab/>console.log(&quot;================================================================================&quot;);</text:p><text:p text:style-name="P437"><text:tab/><text:tab/><text:tab/>console.log(ann);</text:p><text:p text:style-name="P437"><text:tab/><text:tab/><text:tab/>console.log(&quot;================================================================================&quot;);</text:p><text:p text:style-name="P437"><text:soft-page-break/><text:tab/><text:tab/><text:tab/>console.log(de);</text:p><text:p text:style-name="P437"><text:tab/><text:tab/><text:tab/>console.log(&quot;================================================================================&quot;);</text:p><text:p text:style-name="P437"><text:tab/><text:tab/><text:tab/>console.log(ts);</text:p><text:p text:style-name="P437"><text:tab/><text:tab/><text:tab/>console.log(&quot;================================================================================&quot;);</text:p><text:p text:style-name="P437"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P437"><text:tab/>};</text:p><text:p text:style-name="P437">}</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5716_1486593966"/><text:s text:c="4"/>TrainingExample.js<text:bookmark-end text:name="__RefHeading___Toc5716_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P438">/*******************************************************************************</text:p><text:p text:style-name="P438"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P438"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P438"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P438"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P438"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P438"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P438"><text:s/>* Copyright (C) 2008-2011 by Todor Balabanov <text:s/>( tdb@tbsoft.eu ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P438"><text:s/>* <text:s text:c="27"/>Iliyan Zankinski ( iliyan_mf@abv.bg ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P438"><text:s/>* <text:s text:c="27"/>Galq Cirkalova <text:s text:c="2"/>( galq_cirkalova@abv.bg ) <text:s text:c="6"/>*</text:p><text:p text:style-name="P438"><text:s/>* <text:s text:c="27"/>Ivan Grozev <text:s text:c="5"/>( ivan.iliev.grozev@gmail.com ) *</text:p><text:p text:style-name="P438"><text:s/>* <text:s text:c="27"/>Daniel Chutrov <text:s text:c="2"/>( d.chutrov@gmail.com ) <text:s text:c="8"/>*</text:p><text:p text:style-name="P438"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P438"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P438"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P438"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P438"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P438"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P438"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P438"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P438"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P438"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P438"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P438"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P438"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P438"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P438"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P438"/><text:p text:style-name="P438">/**</text:p><text:p text:style-name="P438"><text:s/>* Size of arrays with input split digits.</text:p><text:p text:style-name="P438"><text:s/>*/</text:p><text:p text:style-name="P438">const NUMBER_OF_INPUT_SPLIT_DIGITS = 10;</text:p><text:p text:style-name="P438"/><text:p text:style-name="P438">/**</text:p><text:p text:style-name="P438"><text:s/>* Size of arrays with output split digits.</text:p><text:p text:style-name="P438"><text:s/>*/</text:p><text:p text:style-name="P438">const NUMBER_OF_OUTPUT_SPLIT_DIGITS = 5;</text:p><text:p text:style-name="P438"/><text:p text:style-name="P438">/**</text:p><text:p text:style-name="P438"><text:s/>* Single training example structure.</text:p><text:p text:style-name="P438"><text:s/>*</text:p><text:p text:style-name="P438"><text:s/>* @author Daniel Chutrov</text:p><text:p text:style-name="P438"><text:s/>*</text:p><text:p text:style-name="P438"><text:s/>* @email d.chutrov@gmail.com</text:p><text:p text:style-name="P438"><text:s/>*</text:p><text:p text:style-name="P438"><text:s/>* @date 25 Dec 2010</text:p><text:p text:style-name="P438"><text:s/>*/</text:p><text:p text:style-name="P438">function TrainingExample() {</text:p><text:p text:style-name="P438"><text:tab/>/**</text:p><text:p text:style-name="P438"><text:tab/> * Rate time values.</text:p><text:p text:style-name="P438"><text:tab/> */</text:p><text:p text:style-name="P438"><text:tab/>this.inputted = [];</text:p><text:p text:style-name="P438"/><text:p text:style-name="P438"><text:tab/>/**</text:p><text:p text:style-name="P438"><text:tab/> * Expected values.</text:p><text:p text:style-name="P438"><text:tab/> */</text:p><text:p text:style-name="P438"><text:tab/>this.expected = [];</text:p><text:p text:style-name="P438"/><text:p text:style-name="P438"><text:tab/>/**</text:p><text:p text:style-name="P438"><text:tab/> * Predicted values.</text:p><text:p text:style-name="P438"><text:tab/> */</text:p><text:p text:style-name="P438"><text:tab/>this.predicted = [];</text:p><text:p text:style-name="P438">}</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5718_1486593966"/><text:s text:c="4"/>TrainingSet.js<text:bookmark-end text:name="__RefHeading___Toc5718_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P439">/*******************************************************************************</text:p><text:p text:style-name="P439"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P439"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P439"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P439"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P439"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P439"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P439"><text:s/>* Copyright (C) 2008-2011 by Todor Balabanov <text:s/>( tdb@tbsoft.eu ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P439"><text:s/>* <text:s text:c="27"/>Iliyan Zankinski ( iliyan_mf@abv.bg ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P439"><text:s/>* <text:s text:c="27"/>Galq Cirkalova <text:s text:c="2"/>( galq_cirkalova@abv.bg ) <text:s text:c="6"/>*</text:p><text:p text:style-name="P439"><text:s/>* <text:s text:c="27"/>Ivan Grozev <text:s text:c="5"/>( ivan.iliev.grozev@gmail.com ) *</text:p><text:p text:style-name="P439"><text:s/>* <text:s text:c="27"/>Daniel Chutrov <text:s text:c="2"/>( d.chutrov@gmail.com ) <text:s text:c="8"/>*</text:p><text:p text:style-name="P439"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P439"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P439"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P439"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P439"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P439"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P439"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P439"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P439"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P439"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P439"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P439"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P439"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P439"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P439"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P439"/><text:p text:style-name="P439">/**</text:p><text:p text:style-name="P439"><text:s/>* Floating point factor to convert from floating point to integer.</text:p><text:p text:style-name="P439"><text:s/>*/</text:p><text:p text:style-name="P439">const FLOATING_POINT_FACTOR = 10000.0;</text:p><text:p text:style-name="P439"/><text:p text:style-name="P439">/**</text:p><text:p text:style-name="P439"><text:s/>* Artificial neural network training set.</text:p><text:p text:style-name="P439"><text:s/>*</text:p><text:p text:style-name="P439"><text:soft-page-break/><text:s/>* @author Daniel Chutrov</text:p><text:p text:style-name="P439"><text:s/>*</text:p><text:p text:style-name="P439"><text:s/>* @email d.chutrov@gmail.com</text:p><text:p text:style-name="P439"><text:s/>*</text:p><text:p text:style-name="P439"><text:s/>* @date 19 Dec 2010</text:p><text:p text:style-name="P439"><text:s/>*/</text:p><text:p text:style-name="P439">function TrainingSet(rates, size, past, future) {</text:p><text:p text:style-name="P439"><text:tab/>/**</text:p><text:p text:style-name="P439"><text:tab/> * Split number digits in separate double values. Devide each double value by 10.</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @param values Output values array.</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @param size Available array cells for number splitting.</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @param number Number to be split.</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @author Daniel Chutrov</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @email d.chutrov@gmail.com</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @date 23 Dec 2010</text:p><text:p text:style-name="P439"><text:tab/> */</text:p><text:p text:style-name="P439"><text:tab/>this.splitDigits = function(values, size, number) {</text:p><text:p text:style-name="P439"><text:tab/><text:tab/>for (var i = size - 1; i &gt;= 0; i--) {</text:p><text:p text:style-name="P439"><text:tab/><text:tab/><text:tab/>values[i] = ((number % 10) / 10.0);</text:p><text:p text:style-name="P439"><text:tab/><text:tab/><text:tab/>number /= 10;</text:p><text:p text:style-name="P439"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P439"><text:tab/>};</text:p><text:p text:style-name="P439"/><text:p text:style-name="P439"><text:tab/>/**</text:p><text:p text:style-name="P439"><text:tab/> * Merge number digits in sigle number value. Multiply each double value by 10.</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @param values Input values array.</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @param size Array cells of number to merge.</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @return Merged number.</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @author Daniel Chutrov</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @email d.chutrov@gmail.com</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @date 23 Dec 2010</text:p><text:p text:style-name="P439"><text:tab/> */</text:p><text:p text:style-name="P439"><text:tab/>this.mergeDigits = function(values, size) {</text:p><text:p text:style-name="P439"><text:tab/><text:tab/>var result = 0.0;</text:p><text:p text:style-name="P439"><text:tab/><text:tab/>var multiplier = 1.0;</text:p><text:p text:style-name="P439"/><text:p text:style-name="P439"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P439"><text:tab/><text:tab/> * Plus 0.5 is for rounding.</text:p><text:p text:style-name="P439"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P439"><text:tab/><text:tab/>for (var i = size - 1; i &gt;= 0; i--) {</text:p><text:p text:style-name="P439"><text:tab/><text:tab/><text:tab/>result += Math.floor((values[i] * 10.0 + 0.5) * multiplier);</text:p><text:p text:style-name="P439"><text:tab/><text:tab/><text:tab/>multiplier *= 10;</text:p><text:p text:style-name="P439"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P439"/><text:p text:style-name="P439"><text:tab/><text:tab/>return result;</text:p><text:p text:style-name="P439"><text:tab/>};</text:p><text:p text:style-name="P439"/><text:p text:style-name="P439"><text:tab/>/**</text:p><text:p text:style-name="P439"><text:tab/> * Check for specific time record.</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @return True if time record is found, false otherwise.</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @author Daniel Chutrov</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @email d.chutrov@gmail.com</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @date 23 Dec 2010</text:p><text:p text:style-name="P439"><text:tab/> */</text:p><text:p text:style-name="P439"><text:tab/>this.isTimeFound = function(time) {</text:p><text:p text:style-name="P439"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P439"><text:tab/><text:tab/> * Left side is the begining. Right side is the end.</text:p><text:p text:style-name="P439"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P439"><text:tab/><text:tab/>var left = 0;</text:p><text:p text:style-name="P439"><text:tab/><text:tab/>var right = size - 1;</text:p><text:p text:style-name="P439"><text:tab/><text:tab/>var middle;</text:p><text:p text:style-name="P439"/><text:p text:style-name="P439"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P439"><text:tab/><text:tab/> * Binary search.</text:p><text:p text:style-name="P439"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P439"><text:tab/><text:tab/>do {</text:p><text:p text:style-name="P439"><text:tab/><text:tab/><text:tab/>middle = (left + right) / 2;</text:p><text:p text:style-name="P439"><text:tab/><text:tab/><text:tab/>if (this.rates[middle].time == time) {</text:p><text:p text:style-name="P439"><text:tab/><text:tab/><text:tab/><text:tab/>return (true );</text:p><text:p text:style-name="P439"><text:tab/><text:tab/><text:tab/>} else if (left &gt;= right) {</text:p><text:p text:style-name="P439"><text:tab/><text:tab/><text:tab/><text:tab/>return (false );</text:p><text:p text:style-name="P439"><text:tab/><text:tab/><text:tab/>} else if (time &lt; this.rates[middle].time) {</text:p><text:p text:style-name="P439"><text:tab/><text:tab/><text:tab/><text:tab/>right = middle - 1;</text:p><text:p text:style-name="P439"><text:tab/><text:tab/><text:tab/>} else if (time &gt; this.rates[middle].time) {</text:p><text:p text:style-name="P439"><text:tab/><text:tab/><text:tab/><text:tab/>left = middle + 1;</text:p><text:p text:style-name="P439"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P439"><text:tab/><text:tab/>} while ( true );</text:p><text:p text:style-name="P439"/><text:p text:style-name="P439"><text:tab/><text:tab/>return (false );</text:p><text:p text:style-name="P439"><text:tab/>};</text:p><text:p text:style-name="P439"/><text:p text:style-name="P439"><text:tab/>/**</text:p><text:p text:style-name="P439"><text:tab/> * Load splitted digits.</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @param past How many bars in the past.</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @param future How many bars in the future.</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @date 12 Aug 2015</text:p><text:p text:style-name="P439"><text:tab/> */</text:p><text:p text:style-name="P439"><text:tab/>this.splitData = function(past, future) {</text:p><text:p text:style-name="P439"><text:tab/><text:tab/>var j = 0;</text:p><text:p text:style-name="P439"><text:tab/><text:tab/>for (var i = future; i &lt; rates.length - past; i++, j++) {</text:p><text:p text:style-name="P439"><text:tab/><text:tab/><text:tab/>examples[j].inputted = getBarsInPast(i, past);</text:p><text:p text:style-name="P439"><text:tab/><text:tab/><text:tab/>examples[j].expected = getBarsInFuture(i + 1, future);</text:p><text:p text:style-name="P439"><text:tab/><text:tab/><text:tab/>examples[j].predicted = getBarsInFuture(i + 1, future);</text:p><text:p text:style-name="P439"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P439"/><text:p text:style-name="P439"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P439"><text:tab/><text:tab/> * Examples are less than the historical bars. Reduction is according future window size.</text:p><text:p text:style-name="P439"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P439"><text:tab/><text:tab/>examples = examples.slice(0, j);</text:p><text:p text:style-name="P439"><text:tab/>};</text:p><text:p text:style-name="P439"/><text:p text:style-name="P439"><text:tab/>/**</text:p><text:p text:style-name="P439"><text:soft-page-break/><text:tab/> * Load splitted digits.</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @author Daniel Chutrov</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @email d.chutrov@gmail.com</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @date 20 Dec 2010</text:p><text:p text:style-name="P439"><text:tab/> */</text:p><text:p text:style-name="P439"><text:tab/>this.splitData = function() {</text:p><text:p text:style-name="P439"><text:tab/><text:tab/>for (var i = 0; i &lt; size; i++) {</text:p><text:p text:style-name="P439"><text:tab/><text:tab/><text:tab/>splitDigits(examples[i].time, examples.NUMBER_OF_INPUT_SPLIT_DIGITS, rates[i].time);</text:p><text:p text:style-name="P439"/><text:p text:style-name="P439"><text:tab/><text:tab/><text:tab/>//TODO Some mechanisum of changing predicted value should be implemented.</text:p><text:p text:style-name="P439"><text:tab/><text:tab/><text:tab/>splitDigits(examples[i].expected, examples.NUMBER_OF_OUTPUT_SPLIT_DIGITS, (FLOATING_POINT_FACTOR * (rates[i].open + rates[i].close) / 2.0));</text:p><text:p text:style-name="P439"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P439"><text:tab/>};</text:p><text:p text:style-name="P439"/><text:p text:style-name="P439"><text:tab/>/**</text:p><text:p text:style-name="P439"><text:tab/> * Parallel arrays size getter.</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @return Arrays size.</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @author Galq Cirkalova</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @email galq_cirkalova@abv.bg</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @date 06 Apr 2009</text:p><text:p text:style-name="P439"><text:tab/> */</text:p><text:p text:style-name="P439"><text:tab/>this.getSize = function() {</text:p><text:p text:style-name="P439"><text:tab/><text:tab/>return examples.length;</text:p><text:p text:style-name="P439"><text:tab/>};</text:p><text:p text:style-name="P439"/><text:p text:style-name="P439"><text:tab/>/**</text:p><text:p text:style-name="P439"><text:tab/> * Rates pointer getter.</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @return Rates pointer.</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @date 23 Sep 2009</text:p><text:p text:style-name="P439"><text:tab/> */</text:p><text:p text:style-name="P439"><text:tab/>this.getRates = function() {</text:p><text:p text:style-name="P439"><text:tab/><text:tab/>return rates;</text:p><text:p text:style-name="P439"><text:tab/>};</text:p><text:p text:style-name="P439"/><text:p text:style-name="P439"><text:tab/>/**</text:p><text:p text:style-name="P439"><text:tab/> * Open price at index getter.</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @return Open price at index.</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @author Galq Cirkalova</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @email galq_cirkalova@abv.bg</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @date 06 Apr 2009</text:p><text:p text:style-name="P439"><text:tab/> */</text:p><text:p text:style-name="P439"><text:tab/>this.getOpen = function(index) {</text:p><text:p text:style-name="P439"><text:tab/><text:tab/>if (index &gt;= 0 &amp;&amp; index &lt; rates.length) {</text:p><text:p text:style-name="P439"><text:tab/><text:tab/><text:tab/>return (rates[index].open );</text:p><text:p text:style-name="P439"><text:tab/><text:tab/>} else {</text:p><text:p text:style-name="P439"><text:tab/><text:tab/><text:tab/>//TODO Do better exception handling.</text:p><text:p text:style-name="P439"><text:tab/><text:tab/><text:tab/>return (0 );</text:p><text:p text:style-name="P439"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P439"><text:tab/>};</text:p><text:p text:style-name="P439"/><text:p text:style-name="P439"><text:tab/>/**</text:p><text:p text:style-name="P439"><text:tab/> * Close price at index getter.</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @return Close price at index.</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @author Galq Cirkalova</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @email galq_cirkalova@abv.bg</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @date 06 Apr 2009</text:p><text:p text:style-name="P439"><text:tab/> */</text:p><text:p text:style-name="P439"><text:tab/>this.getClose = function(index) {</text:p><text:p text:style-name="P439"><text:tab/><text:tab/>if (index &gt;= 0 &amp;&amp; index &lt; rates.length) {</text:p><text:p text:style-name="P439"><text:tab/><text:tab/><text:tab/>return (rates[index].close );</text:p><text:p text:style-name="P439"><text:tab/><text:tab/>} else {</text:p><text:p text:style-name="P439"><text:tab/><text:tab/><text:tab/>//TODO Do better exception handling.</text:p><text:p text:style-name="P439"><text:tab/><text:tab/><text:tab/>return (0 );</text:p><text:p text:style-name="P439"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P439"><text:tab/>};</text:p><text:p text:style-name="P439"/><text:p text:style-name="P439"><text:tab/>/**</text:p><text:p text:style-name="P439"><text:tab/> * Highest price at index getter.</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @return Highest price at index.</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @author Galq Cirkalova</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @email galq_cirkalova@abv.bg</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @date 08 Apr 2009</text:p><text:p text:style-name="P439"><text:tab/> */</text:p><text:p text:style-name="P439"><text:tab/>this.getHigh = function(index) {</text:p><text:p text:style-name="P439"><text:tab/><text:tab/>if (index &gt;= 0 &amp;&amp; index &lt; rates.length) {</text:p><text:p text:style-name="P439"><text:tab/><text:tab/><text:tab/>return (rates[index].high );</text:p><text:p text:style-name="P439"><text:tab/><text:tab/>} else {</text:p><text:p text:style-name="P439"><text:tab/><text:tab/><text:tab/>//TODO Do better exception handling.</text:p><text:p text:style-name="P439"><text:tab/><text:tab/><text:tab/>return (0 );</text:p><text:p text:style-name="P439"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P439"><text:tab/>};</text:p><text:p text:style-name="P439"/><text:p text:style-name="P439"><text:tab/>/**</text:p><text:p text:style-name="P439"><text:tab/> * Lowest price at index getter.</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @return Lowest price at index.</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @author Galq Cirkalova</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @email galq_cirkalova@abv.bg</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @date 08 Apr 2009</text:p><text:p text:style-name="P439"><text:tab/> */</text:p><text:p text:style-name="P439"><text:tab/>this.getLow = function(index) {</text:p><text:p text:style-name="P439"><text:tab/><text:tab/>if (index &gt;= 0 &amp;&amp; index &lt; rates.length) {</text:p><text:p text:style-name="P439"><text:tab/><text:tab/><text:tab/>return (rates[index].low );</text:p><text:p text:style-name="P439"><text:tab/><text:tab/>} else {</text:p><text:p text:style-name="P439"><text:tab/><text:tab/><text:tab/>//TODO Do better exception handling.</text:p><text:p text:style-name="P439"><text:tab/><text:tab/><text:tab/>return (0 );</text:p><text:p text:style-name="P439"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P439"><text:soft-page-break/><text:tab/>};</text:p><text:p text:style-name="P439"/><text:p text:style-name="P439"><text:tab/>/**</text:p><text:p text:style-name="P439"><text:tab/> * UNIX time at index getter.</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @return UNIX time at index.</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @author Galq Cirkalova</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @email galq_cirkalova@abv.bg</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @date 08 Apr 2009</text:p><text:p text:style-name="P439"><text:tab/> */</text:p><text:p text:style-name="P439"><text:tab/>this.getTime = function(index) {</text:p><text:p text:style-name="P439"><text:tab/><text:tab/>if (index &gt;= 0 &amp;&amp; index &lt; rates.length) {</text:p><text:p text:style-name="P439"><text:tab/><text:tab/><text:tab/>return (rates[index].time );</text:p><text:p text:style-name="P439"><text:tab/><text:tab/>} else {</text:p><text:p text:style-name="P439"><text:tab/><text:tab/><text:tab/>//TODO Do better exception handling.</text:p><text:p text:style-name="P439"><text:tab/><text:tab/><text:tab/>return (0 );</text:p><text:p text:style-name="P439"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P439"><text:tab/>};</text:p><text:p text:style-name="P439"/><text:p text:style-name="P439"><text:tab/>/**</text:p><text:p text:style-name="P439"><text:tab/> * Amount bars in the past from the index.</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @param index Starting point.</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @param amount How many bars in the past.</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @return Values of bars.</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @email todor.balabanov@gmial.com</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @date 12 Aug 2015</text:p><text:p text:style-name="P439"><text:tab/> */</text:p><text:p text:style-name="P439"><text:tab/>this.getBarsInPast = function(index, amount) {</text:p><text:p text:style-name="P439"><text:tab/><text:tab/>//TODO Implement ANNIO structure.</text:p><text:p text:style-name="P439"><text:tab/><text:tab/>result = new Array(amount);</text:p><text:p text:style-name="P439"/><text:p text:style-name="P439"><text:tab/><text:tab/>if (index + amount &gt; rates.length) {</text:p><text:p text:style-name="P439"><text:tab/><text:tab/><text:tab/>//TODO Report exception.</text:p><text:p text:style-name="P439"><text:tab/><text:tab/><text:tab/>return;</text:p><text:p text:style-name="P439"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P439"/><text:p text:style-name="P439"><text:tab/><text:tab/>for (var i = 0; i &lt; amount; i++) {</text:p><text:p text:style-name="P439"><text:tab/><text:tab/><text:tab/>//TODO Some mechanisum of changing predicted value should be implemented.</text:p><text:p text:style-name="P439"><text:tab/><text:tab/><text:tab/>result[i] = (rates[index + i].high + rates[index + i].low) / 2;</text:p><text:p text:style-name="P439"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P439"/><text:p text:style-name="P439"><text:tab/><text:tab/>return result;</text:p><text:p text:style-name="P439"><text:tab/>};</text:p><text:p text:style-name="P439"/><text:p text:style-name="P439"><text:tab/>/**</text:p><text:p text:style-name="P439"><text:tab/> * Amount bars in the future from the index.</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @param index Starting point.</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @param amount How many bars in the future.</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @return Values of bars.</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @email todor.balabanov@gmial.com</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @date 12 Aug 2015</text:p><text:p text:style-name="P439"><text:tab/> */</text:p><text:p text:style-name="P439"><text:tab/>this.getBarsInFuture = function(index, amount) {</text:p><text:p text:style-name="P439"><text:tab/><text:tab/>//TODO Implement ANNIO structure.</text:p><text:p text:style-name="P439"><text:tab/><text:tab/>result = new Array(amount);</text:p><text:p text:style-name="P439"/><text:p text:style-name="P439"><text:tab/><text:tab/>if (index - amount &lt; 0) {</text:p><text:p text:style-name="P439"><text:tab/><text:tab/><text:tab/>//TODO Report exception.</text:p><text:p text:style-name="P439"><text:tab/><text:tab/><text:tab/>return;</text:p><text:p text:style-name="P439"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P439"/><text:p text:style-name="P439"><text:tab/><text:tab/>for (var i = 0; i &lt; amount; i++) {</text:p><text:p text:style-name="P439"><text:tab/><text:tab/><text:tab/>//TODO Some mechanisum of changing predicted value should be implemented.</text:p><text:p text:style-name="P439"><text:tab/><text:tab/><text:tab/>result[i] = (rates[index - i].high + rates[index - i].low) / 2;</text:p><text:p text:style-name="P439"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P439"/><text:p text:style-name="P439"><text:tab/><text:tab/>return result;</text:p><text:p text:style-name="P439"><text:tab/>};</text:p><text:p text:style-name="P439"/><text:p text:style-name="P439"><text:tab/>/**</text:p><text:p text:style-name="P439"><text:tab/> * UNIX time at index pointer getter.</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @return UNIX time at index pointer.</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @date 09 Sep 2009</text:p><text:p text:style-name="P439"><text:tab/> */</text:p><text:p text:style-name="P439"><text:tab/>this.getSplittedInputted = function(index) {</text:p><text:p text:style-name="P439"><text:tab/><text:tab/>if (index &gt;= 0 &amp;&amp; index &lt; rates.length) {</text:p><text:p text:style-name="P439"><text:tab/><text:tab/><text:tab/>return (examples[index].inputted );</text:p><text:p text:style-name="P439"><text:tab/><text:tab/>} else {</text:p><text:p text:style-name="P439"><text:tab/><text:tab/><text:tab/>//TODO Do better exception handling.</text:p><text:p text:style-name="P439"><text:tab/><text:tab/><text:tab/>return [];</text:p><text:p text:style-name="P439"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P439"><text:tab/>};</text:p><text:p text:style-name="P439"/><text:p text:style-name="P439"><text:tab/>/**</text:p><text:p text:style-name="P439"><text:tab/> * Expected value at index pointer getter.</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @return Expected value at index pointer.</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @date 09 Sep 2009</text:p><text:p text:style-name="P439"><text:tab/> */</text:p><text:p text:style-name="P439"><text:tab/>this.getSplittedExpected = function(index) {</text:p><text:p text:style-name="P439"><text:tab/><text:tab/>if (index &gt;= 0 &amp;&amp; index &lt; rates.length) {</text:p><text:p text:style-name="P439"><text:tab/><text:tab/><text:tab/>return (examples[index].expected );</text:p><text:p text:style-name="P439"><text:tab/><text:tab/>} else {</text:p><text:p text:style-name="P439"><text:tab/><text:tab/><text:tab/>//TODO Do better exception handling.</text:p><text:p text:style-name="P439"><text:tab/><text:tab/><text:tab/>return [];</text:p><text:p text:style-name="P439"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P439"><text:tab/>};</text:p><text:p text:style-name="P439"><text:soft-page-break/></text:p><text:p text:style-name="P439"><text:tab/>/**</text:p><text:p text:style-name="P439"><text:tab/> * Predicted value at index pointer getter.</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @return Predicted value at index pointer.</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @date 09 Sep 2009</text:p><text:p text:style-name="P439"><text:tab/> */</text:p><text:p text:style-name="P439"><text:tab/>this.getSplittedPredicted = function(index) {</text:p><text:p text:style-name="P439"><text:tab/><text:tab/>if (index &gt;= 0 &amp;&amp; index &lt; rates.length) {</text:p><text:p text:style-name="P439"><text:tab/><text:tab/><text:tab/>return examples[index].predicted;</text:p><text:p text:style-name="P439"><text:tab/><text:tab/>} else {</text:p><text:p text:style-name="P439"><text:tab/><text:tab/><text:tab/>//TODO Do better exception handling.</text:p><text:p text:style-name="P439"><text:tab/><text:tab/><text:tab/>return [];</text:p><text:p text:style-name="P439"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P439"><text:tab/>};</text:p><text:p text:style-name="P439"/><text:p text:style-name="P439"><text:tab/>/**</text:p><text:p text:style-name="P439"><text:tab/> * Array index at moment in time getter.</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @param atMoment UNIX timestamp value.</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @return Array index at specific time moment.</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @author Galq Cirkalova</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @email galq_cirkalova@abv.bg</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @date 09 Apr 2009</text:p><text:p text:style-name="P439"><text:tab/> */</text:p><text:p text:style-name="P439"><text:tab/>this.getIndexAtTime = function(atMoment) {</text:p><text:p text:style-name="P439"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P439"><text:tab/><text:tab/> * Left side is the begining. Right side is the end.</text:p><text:p text:style-name="P439"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P439"><text:tab/><text:tab/>var left = 0;</text:p><text:p text:style-name="P439"><text:tab/><text:tab/>var right = rates.length - 1;</text:p><text:p text:style-name="P439"><text:tab/><text:tab/>var middle;</text:p><text:p text:style-name="P439"/><text:p text:style-name="P439"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P439"><text:tab/><text:tab/> * Binary search.</text:p><text:p text:style-name="P439"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P439"><text:tab/><text:tab/>do {</text:p><text:p text:style-name="P439"><text:tab/><text:tab/><text:tab/>middle = (left + right) / 2;</text:p><text:p text:style-name="P439"/><text:p text:style-name="P439"><text:tab/><text:tab/><text:tab/>if (rates[middle].time == atMoment) {</text:p><text:p text:style-name="P439"><text:tab/><text:tab/><text:tab/><text:tab/>return (middle );</text:p><text:p text:style-name="P439"><text:tab/><text:tab/><text:tab/>} else if (left &gt;= right) {</text:p><text:p text:style-name="P439"><text:tab/><text:tab/><text:tab/><text:tab/>return (-1 );</text:p><text:p text:style-name="P439"><text:tab/><text:tab/><text:tab/>} else if (atMoment &lt; rates[middle].time) {</text:p><text:p text:style-name="P439"><text:tab/><text:tab/><text:tab/><text:tab/>right = middle - 1;</text:p><text:p text:style-name="P439"><text:tab/><text:tab/><text:tab/>} else if (atMoment &gt; rates[middle].time) {</text:p><text:p text:style-name="P439"><text:tab/><text:tab/><text:tab/><text:tab/>left = middle + 1;</text:p><text:p text:style-name="P439"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P439"><text:tab/><text:tab/>} while ( true );</text:p><text:p text:style-name="P439"/><text:p text:style-name="P439"><text:tab/><text:tab/>return -1;</text:p><text:p text:style-name="P439"><text:tab/>};</text:p><text:p text:style-name="P439"/><text:p text:style-name="P439"><text:tab/>/**</text:p><text:p text:style-name="P439"><text:tab/> * Open price at moment in time getter.</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @return Open price at moment in time.</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @author Galq Cirkalova</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @email galq_cirkalova@abv.bg</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @date 09 Apr 2009</text:p><text:p text:style-name="P439"><text:tab/> */</text:p><text:p text:style-name="P439"><text:tab/>this.getOpen2 = function(atMoment) {</text:p><text:p text:style-name="P439"><text:tab/><text:tab/>var index = getIndexAtTime(atMoment);</text:p><text:p text:style-name="P439"/><text:p text:style-name="P439"><text:tab/><text:tab/>if (index &gt;= 0) {</text:p><text:p text:style-name="P439"><text:tab/><text:tab/><text:tab/>return (rates[index].open );</text:p><text:p text:style-name="P439"><text:tab/><text:tab/>} else {</text:p><text:p text:style-name="P439"><text:tab/><text:tab/><text:tab/>//TODO Do better exception handling.</text:p><text:p text:style-name="P439"><text:tab/><text:tab/><text:tab/>return (0 );</text:p><text:p text:style-name="P439"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P439"/><text:p text:style-name="P439"><text:tab/>};</text:p><text:p text:style-name="P439"/><text:p text:style-name="P439"><text:tab/>/**</text:p><text:p text:style-name="P439"><text:tab/> * Close price at moment in time getter.</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @return Close price at moment in time.</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @author Galq Cirkalova</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @email galq_cirkalova@abv.bg</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @date 09 Apr 2009</text:p><text:p text:style-name="P439"><text:tab/> */</text:p><text:p text:style-name="P439"><text:tab/>this.getClose2 = function(atMoment) {</text:p><text:p text:style-name="P439"><text:tab/><text:tab/>var index = getIndexAtTime(atMoment);</text:p><text:p text:style-name="P439"/><text:p text:style-name="P439"><text:tab/><text:tab/>if (index &gt;= 0) {</text:p><text:p text:style-name="P439"><text:tab/><text:tab/><text:tab/>return (rates[index].close );</text:p><text:p text:style-name="P439"><text:tab/><text:tab/>} else {</text:p><text:p text:style-name="P439"><text:tab/><text:tab/><text:tab/>//TODO Do better exception handling.</text:p><text:p text:style-name="P439"><text:tab/><text:tab/><text:tab/>return (0 );</text:p><text:p text:style-name="P439"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P439"><text:tab/>};</text:p><text:p text:style-name="P439"/><text:p text:style-name="P439"><text:tab/>/**</text:p><text:p text:style-name="P439"><text:tab/> * Highest price at moment in time getter.</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @return Highest price at moment in time.</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @author Galq Cirkalova</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @email galq_cirkalova@abv.bg</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @date 21 Apr 2009</text:p><text:p text:style-name="P439"><text:tab/> */</text:p><text:p text:style-name="P439"><text:tab/>this.getHigh2 = function(atMoment) {</text:p><text:p text:style-name="P439"><text:tab/><text:tab/>var index = getIndexAtTime(atMoment);</text:p><text:p text:style-name="P439"/><text:p text:style-name="P439"><text:tab/><text:tab/>if (index &gt;= 0) {</text:p><text:p text:style-name="P439"><text:tab/><text:tab/><text:tab/>return (rates[index].high );</text:p><text:p text:style-name="P439"><text:tab/><text:tab/>} else {</text:p><text:p text:style-name="P439"><text:tab/><text:tab/><text:tab/>//TODO Do better exception handling.</text:p><text:p text:style-name="P439"><text:soft-page-break/><text:tab/><text:tab/><text:tab/>return (0 );</text:p><text:p text:style-name="P439"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P439"><text:tab/>};</text:p><text:p text:style-name="P439"/><text:p text:style-name="P439"><text:tab/>/**</text:p><text:p text:style-name="P439"><text:tab/> * Lowest price at moment in time getter.</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @return Lowest price at moment in time.</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @author Galq Cirkalova</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @email galq_cirkalova@abv.bg</text:p><text:p text:style-name="P439"><text:tab/> *</text:p><text:p text:style-name="P439"><text:tab/> * @date 21 Apr 2009</text:p><text:p text:style-name="P439"><text:tab/> */</text:p><text:p text:style-name="P439"><text:tab/>this.getLow2 = function(atMoment) {</text:p><text:p text:style-name="P439"><text:tab/><text:tab/>var index = getIndexAtTime(atMoment);</text:p><text:p text:style-name="P439"/><text:p text:style-name="P439"><text:tab/><text:tab/>if (index &gt;= 0) {</text:p><text:p text:style-name="P439"><text:tab/><text:tab/><text:tab/>return (rates[index].low );</text:p><text:p text:style-name="P439"><text:tab/><text:tab/>} else {</text:p><text:p text:style-name="P439"><text:tab/><text:tab/><text:tab/>//TODO Do better exception handling.</text:p><text:p text:style-name="P439"><text:tab/><text:tab/><text:tab/>return (0 );</text:p><text:p text:style-name="P439"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P439"><text:tab/>};</text:p><text:p text:style-name="P439"/><text:p text:style-name="P439"><text:tab/>/*</text:p><text:p text:style-name="P439"><text:tab/> * It is not possible arrays size to be negative number.</text:p><text:p text:style-name="P439"><text:tab/> */</text:p><text:p text:style-name="P439"><text:tab/>if (size &lt; 0) {</text:p><text:p text:style-name="P439"><text:tab/><text:tab/>size = 0;</text:p><text:p text:style-name="P439"><text:tab/>}</text:p><text:p text:style-name="P439"/><text:p text:style-name="P439"><text:tab/>/**</text:p><text:p text:style-name="P439"><text:tab/> * Array with training examples.</text:p><text:p text:style-name="P439"><text:tab/> */</text:p><text:p text:style-name="P439"><text:tab/>this.rates = new Array(size);</text:p><text:p text:style-name="P439"/><text:p text:style-name="P439"><text:tab/>/**</text:p><text:p text:style-name="P439"><text:tab/> * Array with training examples.</text:p><text:p text:style-name="P439"><text:tab/> */</text:p><text:p text:style-name="P439"><text:tab/>this.examples = new Array(size);</text:p><text:p text:style-name="P439"/><text:p text:style-name="P439"><text:tab/>/*</text:p><text:p text:style-name="P439"><text:tab/> * Array revers because of MetaTrader 4 data presentation.</text:p><text:p text:style-name="P439"><text:tab/> */</text:p><text:p text:style-name="P439"><text:tab/>for ( i = 0; i &lt; size; i++) {</text:p><text:p text:style-name="P439"><text:tab/><text:tab/>this.rates[i] = rates[size - i - 1];</text:p><text:p text:style-name="P439"><text:tab/><text:tab/>this.examples[i] = new TrainingExample();</text:p><text:p text:style-name="P439"><text:tab/>}</text:p><text:p text:style-name="P439"/><text:p text:style-name="P439"><text:tab/>splitData(past, future);</text:p><text:p text:style-name="P439">}</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5720_1486593966"/><text:s text:c="4"/>WeightsMatrix.js<text:bookmark-end text:name="__RefHeading___Toc5720_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P440">/*******************************************************************************</text:p><text:p text:style-name="P440"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P440"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P440"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P440"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P440"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P440"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P440"><text:s/>* Copyright (C) 2008-2011 by Todor Balabanov <text:s/>( tdb@tbsoft.eu ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P440"><text:s/>* <text:s text:c="27"/>Iliyan Zankinski ( iliyan_mf@abv.bg ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P440"><text:s/>* <text:s text:c="27"/>Galq Cirkalova <text:s text:c="2"/>( galq_cirkalova@abv.bg ) <text:s text:c="6"/>*</text:p><text:p text:style-name="P440"><text:s/>* <text:s text:c="27"/>Ivan Grozev <text:s text:c="5"/>( ivan.iliev.grozev@gmail.com ) *</text:p><text:p text:style-name="P440"><text:s/>* <text:s text:c="27"/>Daniel Chutrov <text:s text:c="2"/>( d.chutrov@gmail.com ) <text:s text:c="8"/>*</text:p><text:p text:style-name="P440"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P440"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P440"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P440"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P440"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P440"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P440"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P440"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P440"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P440"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P440"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P440"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P440"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P440"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P440"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P440"/><text:p text:style-name="P440">/**</text:p><text:p text:style-name="P440"><text:s/>* ANN typology graph adjacency matrix class.</text:p><text:p text:style-name="P440"><text:s/>*</text:p><text:p text:style-name="P440"><text:s/>* @author Todor Balabanov</text:p><text:p text:style-name="P440"><text:s/>*</text:p><text:p text:style-name="P440"><text:s/>* @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P440"><text:s/>*</text:p><text:p text:style-name="P440"><text:s/>* @date 03 Aug 2011</text:p><text:p text:style-name="P440"><text:s/>*/</text:p><text:p text:style-name="P440">function WeightsMatrix(size) {</text:p><text:p text:style-name="P440"><text:tab/>/**</text:p><text:p text:style-name="P440"><text:tab/> * Matrix values.</text:p><text:p text:style-name="P440"><text:tab/> */</text:p><text:p text:style-name="P440"><text:tab/>this.values = new Array(size);</text:p><text:p text:style-name="P440"/><text:p text:style-name="P440"><text:tab/>for (var i = 0; i &lt; size; i++) {</text:p><text:p text:style-name="P440"><text:tab/><text:tab/>this.values[i] = new Array(size);</text:p><text:p text:style-name="P440"><text:tab/>}</text:p><text:p text:style-name="P440"><text:tab/>for (var i = 0; i &lt; size; i++) {</text:p><text:p text:style-name="P440"><text:tab/><text:tab/>for ( j = 0; j &lt; size; j++) {</text:p><text:p text:style-name="P440"><text:tab/><text:tab/><text:tab/>values[i][j] = 0.0;</text:p><text:p text:style-name="P440"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P440"><text:tab/>}</text:p><text:p text:style-name="P440"/><text:p text:style-name="P440"><text:tab/>/**</text:p><text:p text:style-name="P440"><text:tab/> * Size of the square matrix getter.</text:p><text:p text:style-name="P440"><text:tab/> *</text:p><text:p text:style-name="P440"><text:tab/> * @return Size of the square matrix.</text:p><text:p text:style-name="P440"><text:tab/> *</text:p><text:p text:style-name="P440"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P440"><text:tab/> *</text:p><text:p text:style-name="P440"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P440"><text:tab/> *</text:p><text:p text:style-name="P440"><text:tab/> * @date 03 Aug 2011</text:p><text:p text:style-name="P440"><text:tab/> */</text:p><text:p text:style-name="P440"><text:soft-page-break/><text:tab/>this.dimension = function() {</text:p><text:p text:style-name="P440"><text:tab/><text:tab/>return values.length;</text:p><text:p text:style-name="P440"><text:tab/>};</text:p><text:p text:style-name="P440"><text:tab/></text:p><text:p text:style-name="P440"><text:tab/>/**</text:p><text:p text:style-name="P440"><text:tab/> * Matrix elements accessor.</text:p><text:p text:style-name="P440"><text:tab/> *</text:p><text:p text:style-name="P440"><text:tab/> * @param col Column.</text:p><text:p text:style-name="P440"><text:tab/> *</text:p><text:p text:style-name="P440"><text:tab/> * @param row Row.</text:p><text:p text:style-name="P440"><text:tab/> *</text:p><text:p text:style-name="P440"><text:tab/> * @return Constant element value.</text:p><text:p text:style-name="P440"><text:tab/> *</text:p><text:p text:style-name="P440"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P440"><text:tab/> *</text:p><text:p text:style-name="P440"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P440"><text:tab/> *</text:p><text:p text:style-name="P440"><text:tab/> * @date 03 Aug 2011</text:p><text:p text:style-name="P440"><text:tab/> */</text:p><text:p text:style-name="P440"><text:tab/>this.get = function(col, row) {</text:p><text:p text:style-name="P440"><text:tab/><text:tab/>if (col&lt;0 || col&gt;=values.size() || row&lt;0 || row&gt;=values.size()) {</text:p><text:p text:style-name="P440"><text:tab/><text:tab/><text:tab/>//TODO Do exception handling.</text:p><text:p text:style-name="P440"><text:tab/><text:tab/><text:tab/>return( 0.0 );</text:p><text:p text:style-name="P440"><text:tab/><text:tab/>};</text:p><text:p text:style-name="P440"><text:tab/></text:p><text:p text:style-name="P440"><text:tab/><text:tab/>return values[col][row];</text:p><text:p text:style-name="P440"><text:tab/>};</text:p><text:p text:style-name="P440"/><text:p text:style-name="P440"><text:tab/>/**</text:p><text:p text:style-name="P440"><text:tab/> * Matrix elements accessor.</text:p><text:p text:style-name="P440"><text:tab/> *</text:p><text:p text:style-name="P440"><text:tab/> * @param col Column.</text:p><text:p text:style-name="P440"><text:tab/> *</text:p><text:p text:style-name="P440"><text:tab/> * @param row Row.</text:p><text:p text:style-name="P440"><text:tab/> *</text:p><text:p text:style-name="P440"><text:tab/> * @return Constant element value.</text:p><text:p text:style-name="P440"><text:tab/> *</text:p><text:p text:style-name="P440"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P440"><text:tab/> *</text:p><text:p text:style-name="P440"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P440"><text:tab/> *</text:p><text:p text:style-name="P440"><text:tab/> * @date 03 Aug 2011</text:p><text:p text:style-name="P440"><text:tab/> */</text:p><text:p text:style-name="P440"><text:tab/>this.set = function(col, row, value) {</text:p><text:p text:style-name="P440"><text:tab/><text:tab/>if (col&lt;0 || col&gt;=values.size() || row&lt;0 || row&gt;=values.size()) {</text:p><text:p text:style-name="P440"><text:tab/><text:tab/><text:tab/>//TODO Do exception handling.</text:p><text:p text:style-name="P440"><text:tab/><text:tab/><text:tab/>return value;</text:p><text:p text:style-name="P440"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P440"><text:tab/></text:p><text:p text:style-name="P440"><text:tab/><text:tab/>values[col][row] = value;</text:p><text:p text:style-name="P440"><text:tab/></text:p><text:p text:style-name="P440"><text:tab/><text:tab/>return( values[col][row] );</text:p><text:p text:style-name="P440"><text:tab/>};</text:p><text:p text:style-name="P440">}</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5722_1486593966"/><text:s text:c="4"/>cstdlib.js<text:bookmark-end text:name="__RefHeading___Toc5722_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P441">/*******************************************************************************</text:p><text:p text:style-name="P441"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P441"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P441"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P441"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P441"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P441"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P441"><text:s/>* Copyright (C) 2008-2011 by Todor Balabanov <text:s/>( tdb@tbsoft.eu ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P441"><text:s/>* <text:s text:c="27"/>Iliyan Zankinski ( iliyan_mf@abv.bg ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P441"><text:s/>* <text:s text:c="27"/>Galq Cirkalova <text:s text:c="2"/>( galq_cirkalova@abv.bg ) <text:s text:c="6"/>*</text:p><text:p text:style-name="P441"><text:s/>* <text:s text:c="27"/>Ivan Grozev <text:s text:c="5"/>( ivan.iliev.grozev@gmail.com ) *</text:p><text:p text:style-name="P441"><text:s/>* <text:s text:c="27"/>Daniel Chutrov <text:s text:c="2"/>( d.chutrov@gmail.com ) <text:s text:c="8"/>*</text:p><text:p text:style-name="P441"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P441"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P441"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P441"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P441"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P441"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P441"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P441"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P441"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P441"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P441"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P441"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P441"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P441"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P441"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P441"/><text:p text:style-name="P441">/**</text:p><text:p text:style-name="P441"><text:s/>* Default random maximum value.</text:p><text:p text:style-name="P441"><text:s/>*/</text:p><text:p text:style-name="P441">const RAND_MAX = 32767;</text:p><text:p text:style-name="P441"/><text:p text:style-name="P441">/**</text:p><text:p text:style-name="P441"><text:s/>* System random generation function.</text:p><text:p text:style-name="P441"><text:s/>*/</text:p><text:p text:style-name="P441">function rand() {</text:p><text:p text:style-name="P441"><text:tab/>return Math.floor(Math.random() * (RAND_MAX + 1));</text:p><text:p text:style-name="P441">}</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5724_1486593966"/><text:s text:c="4"/>ctime.js<text:bookmark-end text:name="__RefHeading___Toc5724_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P442">/*******************************************************************************</text:p><text:p text:style-name="P442"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P442"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P442"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P442"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P442"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P442"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P442"><text:s/>* Copyright (C) 2008-2011 by Todor Balabanov <text:s/>( tdb@tbsoft.eu ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P442"><text:s/>* <text:s text:c="27"/>Iliyan Zankinski ( iliyan_mf@abv.bg ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P442"><text:s/>* <text:s text:c="27"/>Galq Cirkalova <text:s text:c="2"/>( galq_cirkalova@abv.bg ) <text:s text:c="6"/>*</text:p><text:p text:style-name="P442"><text:s/>* <text:s text:c="27"/>Ivan Grozev <text:s text:c="5"/>( ivan.iliev.grozev@gmail.com ) *</text:p><text:p text:style-name="P442"><text:s/>* <text:s text:c="27"/>Daniel Chutrov <text:s text:c="2"/>( d.chutrov@gmail.com ) <text:s text:c="8"/>*</text:p><text:p text:style-name="P442"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P442"><text:soft-page-break/><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P442"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P442"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P442"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P442"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P442"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P442"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P442"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P442"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P442"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P442"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P442"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P442"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P442"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P442"/><text:p text:style-name="P442">/**</text:p><text:p text:style-name="P442"><text:s/>* System random generation function.</text:p><text:p text:style-name="P442"><text:s/>*/</text:p><text:p text:style-name="P442">function time(value) {</text:p><text:p text:style-name="P442"><text:tab/>return Math.round(new Date().getTime()/1000);</text:p><text:p text:style-name="P442">}</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5726_1486593966"/><text:s text:c="4"/>index.html<text:bookmark-end text:name="__RefHeading___Toc5726_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P443">&lt;!DOCTYPE html&gt;</text:p><text:p text:style-name="P443"/><text:p text:style-name="P443">&lt;!--</text:p><text:p text:style-name="P443">*******************************************************************************</text:p><text:p text:style-name="P443">* <text:s text:c="76"/>*</text:p><text:p text:style-name="P443">* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P443">* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P443">* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P443">* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P443">* <text:s text:c="76"/>*</text:p><text:p text:style-name="P443">* Copyright (C) 2008-2011 by Todor Balabanov <text:s/>( tdb@tbsoft.eu ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P443">* <text:s text:c="27"/>Iliyan Zankinski ( iliyan_mf@abv.bg ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P443">* <text:s text:c="27"/>Galq Cirkalova <text:s text:c="2"/>( galq_cirkalova@abv.bg ) <text:s text:c="6"/>*</text:p><text:p text:style-name="P443">* <text:s text:c="27"/>Ivan Grozev <text:s text:c="5"/>( ivan.iliev.grozev@gmail.com ) *</text:p><text:p text:style-name="P443">* <text:s text:c="27"/>Daniel Chutrov <text:s text:c="2"/>( d.chutrov@gmail.com ) <text:s text:c="8"/>*</text:p><text:p text:style-name="P443">* <text:s text:c="76"/>*</text:p><text:p text:style-name="P443">* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P443">* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P443">* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P443">* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P443">* <text:s text:c="76"/>*</text:p><text:p text:style-name="P443">* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P443">* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P443">* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P443">* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P443">* <text:s text:c="76"/>*</text:p><text:p text:style-name="P443">* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P443">* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P443">* <text:s text:c="76"/>*</text:p><text:p text:style-name="P443">*******************************************************************************</text:p><text:p text:style-name="P443">--&gt;</text:p><text:p text:style-name="P443"/><text:p text:style-name="P443">&lt;html lang=&quot;bg&quot;&gt;</text:p><text:p text:style-name="P443"><text:tab/>&lt;head&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/>&lt;title&gt;.:: Даниел Чутров - Дипломна работа - ТУЕС към ТУ-София ::.&lt;/title&gt;</text:p><text:p text:style-name="P443"/><text:p text:style-name="P443"><text:tab/><text:tab/>&lt;meta charset=&quot;utf-8&quot;&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/>&lt;meta name=&quot;keywords&quot; content=&quot;&quot; /&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/>&lt;meta name=&quot;description&quot; content=&quot;&quot; /&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/>&lt;link href=&quot;style.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot; media=&quot;screen&quot; /&gt;</text:p><text:p text:style-name="P443"/><text:p text:style-name="P443"><text:tab/><text:tab/>&lt;!-- External includes. --&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/>&lt;script src=&quot;ModelParameters.js&quot;&gt;&lt;/script&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/>&lt;script src=&quot;Trainer.js&quot;&gt;&lt;/script&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/>&lt;!-- External includes. --&gt;</text:p><text:p text:style-name="P443"/><text:p text:style-name="P443"><text:tab/><text:tab/>&lt;!-- Ajax distributed computing code. --&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/>&lt;script type=&quot;text/javascript&quot;&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/>/**</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/> * Is running flag to control training process.</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/>var isRunning = true;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/></text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/>/**</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/> * Training object.</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/>var trainer = null;</text:p><text:p text:style-name="P443"/><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/>/**</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/> *</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/> *</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/> * @author Daniel Chutrov</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/> *</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/> * @email d.chutrov@gmail.com</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/> *</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/> * @date 31 Jan 2011</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/>function init() {</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/>var parameters = new ModelParameters();</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/></text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/>parameters.dbId = document.getElementById(&apos;annId&apos;).value;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/>parameters.symbol = document.getElementById(&apos;symbol&apos;).value;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/>parameters.period = document.getElementById(&apos;period&apos;).value;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/>parameters.neuronsAmount = document.getElementById(&apos;numberOfNeurons&apos;).value;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/>parameters.populationSize = document.getElementById(&apos;populationSize&apos;).value;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/>parameters.bars = document.getElementById(&apos;numberOfBars&apos;).value;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/></text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/>trainer = new Trainer();</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/>trainer.setup(parameters);</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P443"/><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/>/**</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/> *</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/> *</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/> * @author Daniel Chutrov</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/> *</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/> * @email d.chutrov@gmail.com</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/> *</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/> * @date 31 Jan 2011</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/>function doCalculation() {</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/> * Call training procedure.</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/>trainer.train();</text:p><text:p text:style-name="P443"><text:soft-page-break/><text:tab/><text:tab/><text:tab/><text:tab/>document.getElementById(&apos;prediction&apos;).innerHTML = trainer.predict();</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P443"/><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/> * Setup time interval for calculation calling.</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/>setInterval(&quot;doCalculation()&quot;, 3000);</text:p><text:p text:style-name="P443"><text:tab/><text:tab/>&lt;/script&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/>&lt;!-- Ajax distributed computing code. --&gt;</text:p><text:p text:style-name="P443"><text:tab/>&lt;/head&gt;</text:p><text:p text:style-name="P443"/><text:p text:style-name="P443"><text:tab/>&lt;body onload=&quot;init();doCalculation();&quot;&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/>&lt;div id=&quot;main&quot;&gt;</text:p><text:p text:style-name="P443"/><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/>&lt;div id=&quot;top&quot;&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/>&lt;div id=&quot;logo&quot;&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;h1&gt;Даниел Чутров&lt;/h1&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;h2&gt;Дипломна работа - ТУЕС към ТУ-София - 2011&lt;/h2&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/>&lt;/div&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/>&lt;div id=&quot;menu&quot;&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;ul&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;li&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;a href=&quot;#&quot;&gt;Начало&lt;/a&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;/li&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;li&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;a href=&quot;#&quot;&gt;Продукти&lt;/a&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;/li&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;li&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;a href=&quot;#&quot;&gt;Услуги&lt;/a&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;/li&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;li&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;a href=&quot;#&quot;&gt;Галерия&lt;/a&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;/li&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;li&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;a href=&quot;#&quot;&gt;За нас&lt;/a&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;/li&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;li&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;a href=&quot;mailto:d.chutrov@gmail.com&quot;&gt;Контакти&lt;/a&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;/li&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;/ul&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/>&lt;/div&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/>&lt;/div&gt;</text:p><text:p text:style-name="P443"/><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/>&lt;div id=&quot;middle&quot;&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/>&lt;div id=&quot;left&quot;&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;div id=&quot;search&quot;&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;form <text:s/>id=&quot;simulationParameters&quot; method=&quot;post&quot; action=&quot;&quot; accept-charset=&quot;utf-8&quot;&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;table border=&quot;0&quot;&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;tr&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;td align=&quot;right&quot;&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;p&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>Прогноза:&amp;nbsp;&amp;nbsp;&amp;nbsp;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;/p&gt;&lt;/td&gt;&lt;td align=&quot;right&quot;&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;p&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;span id=&quot;prediction&quot;&gt; &lt;/span&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;/p&gt;&lt;/td&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;/tr&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;/table&gt;</text:p><text:p text:style-name="P443"/><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;div id=&quot;searchInpTxt&quot;&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;table border=&quot;0&quot;&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;tr&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;th align=&quot;center&quot;&gt;Параметър&lt;/th&gt;&lt;th align=&quot;left&quot;&gt;Стойност&lt;/th&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;/tr&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;tr&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;td align=&quot;right&quot;&gt;ID:&lt;/td&gt;&lt;td&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;input id=&quot;annId&quot; type=&quot;text&quot; class=&quot;text&quot; value=&quot;1&quot; /&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;/td&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;/tr&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;tr&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;td align=&quot;right&quot;&gt;Symbol:&lt;/td&gt;&lt;td&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;input id=&quot;symbol&quot; type=&quot;text&quot; class=&quot;text&quot; value=&quot;EURUSD&quot; /&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;/td&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;/tr&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;tr&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;td align=&quot;right&quot;&gt;Period:&lt;/td&gt;&lt;td&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;input id=&quot;period&quot; type=&quot;text&quot; class=&quot;text&quot; value=&quot;M1&quot; /&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;/td&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;/tr&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;tr&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;td align=&quot;right&quot;&gt;Брой неврони:&lt;/td&gt;&lt;td&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;input id=&quot;numberOfNeurons&quot; type=&quot;text&quot; class=&quot;text&quot; value=&quot;20&quot; /&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;/td&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;/tr&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;tr&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;td align=&quot;right&quot;&gt;Популация:&lt;/td&gt;&lt;td&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;input id=&quot;populationSize&quot; type=&quot;text&quot; class=&quot;text&quot; value=&quot;40&quot; /&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;/td&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;/tr&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;tr&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;td align=&quot;right&quot;&gt;Брой барове:&lt;/td&gt;&lt;td&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;input id=&quot;numberOfBars&quot; type=&quot;text&quot; class=&quot;text&quot; value=&quot;5&quot; /&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;/td&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;/tr&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;/table&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;/div&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;div id=&quot;searchInpSub&quot;&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;input id=&quot;start&quot; type=&quot;submit&quot; class=&quot;submit&quot; value=&quot;&quot; /&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;/div&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;/form&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;/div&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;div id=&quot;left_mid&quot;&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;h3&gt;Новини&lt;/h3&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;h4&gt;10 Фев 2011&lt;/h4&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;p&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>Випуск 2010/2011, на ТУЕС към ТУ-София, предава разработените си дипломни работи, по предварително зададен график. &lt;a href=&quot;#&quot;&gt;подробности&lt;/a&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;/p&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;h4&gt;16 Фев 2011&lt;/h4&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;p&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>Процесът за предаване на дипломни работи протече в рамките на една седмица, като срокът за разработка на някои бе удължен, по молба утвърдена от дипломните ръководители. &lt;a href=&quot;#&quot;&gt;подробности&lt;/a&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;/p&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;h4&gt;11 Мар 2011&lt;/h4&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;p&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>Дипломните работи окончателно бяха внесени в деловодството на училището, за назначаване на рецензенти и определяне на дати за защита. &lt;a href=&quot;#&quot;&gt;подробности&lt;/a&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;/p&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;/div&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;div id=&quot;left_bot&quot;&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;h3&gt;Полезни връзки&lt;/h3&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;ul&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;li&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&amp;raquo; &lt;a href=&quot;http://vitoshatrade.tbsoft.eu/&quot;&gt;VitoshaTrade&lt;/a&gt;</text:p><text:p text:style-name="P443"><text:soft-page-break/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;/li&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;li&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&amp;raquo; &lt;a href=&quot;http://www.tradingsolutions.com/&quot;&gt;TradingSolutions&lt;/a&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;/li&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;li&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&amp;raquo; &lt;a href=&quot;http://www.moneybee.net/&quot;&gt;MoneyBee&lt;/a&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;/li&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;li&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&amp;raquo; &lt;a href=&quot;http://www.gstock.com/&quot;&gt;GStock&lt;/a&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;/li&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;li&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&amp;raquo; &lt;a href=&quot;http://www.elsys-bg.org/&quot;&gt;ТУЕС към ТУ-София&lt;/a&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;/li&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;li&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&amp;raquo; &lt;a href=&quot;http://www.tu-sofia.bg/&quot;&gt;ТУ София&lt;/a&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;/li&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;/ul&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;/div&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/>&lt;/div&gt;</text:p><text:p text:style-name="P443"/><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/>&lt;div id=&quot;right&quot;&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;div id=&quot;right_top&quot;&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;h3 class=&quot;firsth3&quot;&gt;Уеб базирани системи за разпределени изчизления:&lt;/h3&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;p&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>Уеб базираните системи за разпределени изчисления използват възможностите за изпълнение на програмен код, от страна на потребителските компютри, в рамките на уеб браузъра. За създаването на уеб базирани системи най-често се използват технологиите Java Applets, Adobe Flash, AJAX и други.</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;/p&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;p&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>В настоящата дипломна работа е представена уеб базирана система за разпределени изчисления, базирана на AJAX. Целта на системата е да обучава изкуствени невронни мрежи за прогнозиране на валутни курсове. Обучението се осъществява с популационен евристиччен алгоритъм - диференциална еволюция.</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;/p&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;h3&gt;Информация&lt;/h3&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;p&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>Разработката е част от проекта &lt;a href=&quot;http://vitoshatrade.tbsoft.eu/&quot; target=&quot;_blank&quot;&gt;VitoshaTrade&lt;/a&gt;.</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;/p&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;/div&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;div id=&quot;right_mid&quot;&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;div id=&quot;right_mid_1&quot;&gt;&lt;img src=&quot;images/photo1.jpg&quot; width=&quot;162&quot; height=&quot;102&quot; alt=&quot;&quot; /&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;h4&gt;&lt;a href=&quot;http://www.compsystech.org/&quot;&gt;CompSysTech 2011&lt;/a&gt;&lt;/h4&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;p&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>CompSysTech е международна конференция, организирана от българската академична област.</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;/p&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;/div&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;div id=&quot;right_mid_2&quot;&gt;&lt;img src=&quot;images/photo2.jpg&quot; width=&quot;162&quot; height=&quot;102&quot; alt=&quot;&quot; /&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;h4&gt;&lt;a href=&quot;http://www.sigevo.org/gecco-2011/&quot;&gt;GECCO 2011&lt;/a&gt;&lt;/h4&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;p&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>GECCO е най-голямата и престижна конференция за еволюционни алгоритми.</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;/p&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;/div&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;div id=&quot;right_mid_3&quot;&gt;&lt;img src=&quot;images/photo3.jpg&quot; width=&quot;162&quot; height=&quot;102&quot; alt=&quot;&quot; /&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;h4&gt;&lt;a href=&quot;http://parallel.bas.bg/Conferences/SciCom11.html&quot;&gt;LSSC 2011&lt;/a&gt;&lt;/h4&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;p&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>LSSC е българска конференция с международно участие, посветена на агоритмични проблеми трудни за пресмятане.</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;/p&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;/div&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;div id=&quot;right_mid_4&quot;&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&amp;nbsp;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;/div&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;/div&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;div id=&quot;right_bot&quot;&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;h3 class=&quot;firsth3&quot;&gt;Инсталиране&lt;/h3&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;p&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>От страна на крайния потребител, не е нужна инсталация на допълнителни модули. Достатъчно е крайният потребител да има AJAX съвместим уеб браузър. За да се вгради в уеб страница изчислителният модул, то трябва да се добавят фрагменти код и да се подсигури връзка с отдалечен уеб сървър.</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;/p&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;h3&gt;Юридически аспекти&lt;/h3&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;p&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>Най-популярните системи за разпределени изчисления разчитат на дарени изчислителни ресурси от потребители в глобалната мрежа. Този акт на дарение е обвързан с някои юридически особености. На първо място, лицето стартиращо модули за разпределени изчисления трябва да има административното право за извършването на подобно действие. На второ място, нужно е изричното съгласие на крайните потребители, ако тяхната изчислителна система ще се използва за допълнителни цели (в случая разпределени изчисления на фонов режим).</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;/p&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;/div&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/>&lt;/div&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/>&lt;/div&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/>&lt;div id=&quot;bottom&quot;&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/>&lt;p&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>Copyright &amp;copy; &lt;a href=&quot;mailto:d.chutrov@gmail.com&quot;&gt;Даниел Чутров&lt;/a&gt; / Дизайн: &lt;a href=&quot;http://www.alphastudio.pl&quot; target=&quot;_blank&quot;&gt;Alpha Studio - Darmowe Szablony&lt;/a&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/><text:tab/>&lt;/p&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/><text:tab/>&lt;/div&gt;</text:p><text:p text:style-name="P443"><text:tab/><text:tab/>&lt;/div&gt;</text:p><text:p text:style-name="P443"><text:tab/>&lt;/body&gt;</text:p><text:p text:style-name="P443">&lt;/html&gt;</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5728_1486593966"/><text:s text:c="4"/>style.css<text:bookmark-end text:name="__RefHeading___Toc5728_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P443">* {</text:p><text:p text:style-name="P443"><text:tab/>margin: 0;</text:p><text:p text:style-name="P443"><text:tab/>padding: 0;</text:p><text:p text:style-name="P443">}</text:p><text:p text:style-name="P443"/><text:p text:style-name="P443">body {</text:p><text:p text:style-name="P443"><text:tab/>padding: 30px 0;</text:p><text:p text:style-name="P443"><text:tab/>font: 13px Arial, Helvetica, sans-serif;</text:p><text:p text:style-name="P443"><text:tab/>text-align: center;</text:p><text:p text:style-name="P443"><text:tab/>color: #7C6031;</text:p><text:p text:style-name="P443"><text:tab/>background: #EEF6E9;</text:p><text:p text:style-name="P443">}</text:p><text:p text:style-name="P443"/><text:p text:style-name="P443">h1 {</text:p><text:p text:style-name="P443"><text:tab/>position: absolute;</text:p><text:p text:style-name="P443"><text:tab/>left: 15px;</text:p><text:p text:style-name="P443"><text:tab/>top: 15px;</text:p><text:p text:style-name="P443"><text:tab/>font: 30px Tahoma, Arial, Helvetica, sans-serif;</text:p><text:p text:style-name="P443"><text:tab/>text-transform: uppercase;</text:p><text:p text:style-name="P443"><text:tab/>color: White;</text:p><text:p text:style-name="P443">}</text:p><text:p text:style-name="P443"/><text:p text:style-name="P443">h2 {</text:p><text:p text:style-name="P443"><text:tab/>position: absolute;</text:p><text:p text:style-name="P443"><text:tab/>left: 15px;</text:p><text:p text:style-name="P443"><text:tab/>top: 157px;</text:p><text:p text:style-name="P443"><text:tab/>font: 18px Tahoma, Arial, Helvetica, sans-serif;</text:p><text:p text:style-name="P443"><text:tab/>color: White;</text:p><text:p text:style-name="P443">}</text:p><text:p text:style-name="P443"/><text:p text:style-name="P443">h3 {</text:p><text:p text:style-name="P443"><text:tab/>padding: 30px 0 5px 0;</text:p><text:p text:style-name="P443"><text:soft-page-break/><text:tab/>font: bold 16px Arial, Helvetica, sans-serif;</text:p><text:p text:style-name="P443"><text:tab/>letter-spacing: 1px;</text:p><text:p text:style-name="P443">}</text:p><text:p text:style-name="P443"/><text:p text:style-name="P443">h3.firsth3 {</text:p><text:p text:style-name="P443"><text:tab/>padding-top: 0;</text:p><text:p text:style-name="P443">}</text:p><text:p text:style-name="P443"/><text:p text:style-name="P443">p {</text:p><text:p text:style-name="P443"><text:tab/>padding: 5px 0;</text:p><text:p text:style-name="P443"><text:tab/>font: 13px/18px Arial, Helvetica, sans-serif;</text:p><text:p text:style-name="P443"><text:tab/>text-align: justify;</text:p><text:p text:style-name="P443"><text:tab/>color: #7C6031;</text:p><text:p text:style-name="P443">}</text:p><text:p text:style-name="P443"/><text:p text:style-name="P443">a {</text:p><text:p text:style-name="P443"><text:tab/>text-decoration: none;</text:p><text:p text:style-name="P443"><text:tab/>color: #3076E3;</text:p><text:p text:style-name="P443">}</text:p><text:p text:style-name="P443"/><text:p text:style-name="P443">a:hover {</text:p><text:p text:style-name="P443"><text:tab/>text-decoration: underline;</text:p><text:p text:style-name="P443"><text:tab/>color: #3076E3;</text:p><text:p text:style-name="P443">}</text:p><text:p text:style-name="P443"/><text:p text:style-name="P443">img {</text:p><text:p text:style-name="P443"><text:tab/>border: none;</text:p><text:p text:style-name="P443">}</text:p><text:p text:style-name="P443"/><text:p text:style-name="P443">#main {</text:p><text:p text:style-name="P443"><text:tab/>margin: 0 auto;</text:p><text:p text:style-name="P443"><text:tab/>padding: 10px 0 0 0;</text:p><text:p text:style-name="P443"><text:tab/>width: 820px;</text:p><text:p text:style-name="P443"><text:tab/>text-align: left;</text:p><text:p text:style-name="P443"><text:tab/>background: #B4DA9F;</text:p><text:p text:style-name="P443">}</text:p><text:p text:style-name="P443"/><text:p text:style-name="P443">#top {</text:p><text:p text:style-name="P443"><text:tab/>position: relative;</text:p><text:p text:style-name="P443"><text:tab/>margin: 0 10px;</text:p><text:p text:style-name="P443"><text:tab/>width: 800px;</text:p><text:p text:style-name="P443"><text:tab/>height: 253px;</text:p><text:p text:style-name="P443"><text:tab/>background: #7DB357 url(images/top.jpg) no-repeat top;</text:p><text:p text:style-name="P443">}</text:p><text:p text:style-name="P443"/><text:p text:style-name="P443">#logo {</text:p><text:p text:style-name="P443"><text:tab/>height: 179px;</text:p><text:p text:style-name="P443">}</text:p><text:p text:style-name="P443"/><text:p text:style-name="P443">#menu {</text:p><text:p text:style-name="P443"><text:tab/>margin: 0 10px;</text:p><text:p text:style-name="P443"><text:tab/>height: 74px;</text:p><text:p text:style-name="P443">}</text:p><text:p text:style-name="P443"/><text:p text:style-name="P443">#menu ul {</text:p><text:p text:style-name="P443"><text:tab/>list-style: none;</text:p><text:p text:style-name="P443">}</text:p><text:p text:style-name="P443"/><text:p text:style-name="P443">#menu ul li {</text:p><text:p text:style-name="P443"><text:tab/>float: left;</text:p><text:p text:style-name="P443"><text:tab/>display: block;</text:p><text:p text:style-name="P443"><text:tab/>padding: 0 25px;</text:p><text:p text:style-name="P443">}</text:p><text:p text:style-name="P443"/><text:p text:style-name="P443">#menu ul li a {</text:p><text:p text:style-name="P443"><text:tab/>font: bold 12px/74px Arial, Helvetica, sans-serif;</text:p><text:p text:style-name="P443"><text:tab/>text-transform: uppercase;</text:p><text:p text:style-name="P443"><text:tab/>text-decoration: none;</text:p><text:p text:style-name="P443"><text:tab/>color: #EEF6E9;</text:p><text:p text:style-name="P443">}</text:p><text:p text:style-name="P443"/><text:p text:style-name="P443">#menu ul li a:hover {</text:p><text:p text:style-name="P443"><text:tab/>text-decoration: none;</text:p><text:p text:style-name="P443"><text:tab/>color: White;</text:p><text:p text:style-name="P443">}</text:p><text:p text:style-name="P443"/><text:p text:style-name="P443">#middle {</text:p><text:p text:style-name="P443"><text:tab/>margin: 0 10px;</text:p><text:p text:style-name="P443"><text:tab/>padding: 10px 0 0 0;</text:p><text:p text:style-name="P443">}</text:p><text:p text:style-name="P443"/><text:p text:style-name="P443">#left {</text:p><text:p text:style-name="P443"><text:tab/>float: left;</text:p><text:p text:style-name="P443"><text:tab/>width: 270px;</text:p><text:p text:style-name="P443"><text:tab/>background: #D2E7C5;</text:p><text:p text:style-name="P443">}</text:p><text:p text:style-name="P443"/><text:p text:style-name="P443">#left h3 {</text:p><text:p text:style-name="P443"><text:tab/>padding: 0;</text:p><text:p text:style-name="P443"><text:tab/>font: bold 14px Arial, Helvetica, sans-serif;</text:p><text:p text:style-name="P443"><text:tab/>text-align: center;</text:p><text:p text:style-name="P443"><text:tab/>text-transform: uppercase;</text:p><text:p text:style-name="P443"><text:tab/>letter-spacing: 1px;</text:p><text:p text:style-name="P443"><text:tab/>color: #3FA14B;</text:p><text:p text:style-name="P443">}</text:p><text:p text:style-name="P443"/><text:p text:style-name="P443">#left h4 {</text:p><text:p text:style-name="P443"><text:tab/>padding: 18px 0 0 0;</text:p><text:p text:style-name="P443"><text:tab/>font: bold 12px Arial, Helvetica, sans-serif;</text:p><text:p text:style-name="P443"><text:tab/>color: #3FA14B;</text:p><text:p text:style-name="P443">}</text:p><text:p text:style-name="P443"/><text:p text:style-name="P443">#left p {</text:p><text:p text:style-name="P443"><text:tab/>padding: 5px 0;</text:p><text:p text:style-name="P443"><text:tab/>font: 12px/17px Arial, Helvetica, sans-serif;</text:p><text:p text:style-name="P443"><text:tab/>color: #3FA14B;</text:p><text:p text:style-name="P443">}</text:p><text:p text:style-name="P443"/><text:p text:style-name="P443">#search {</text:p><text:p text:style-name="P443"><text:tab/>margin: 10px;</text:p><text:p text:style-name="P443"><text:tab/>height: 220px;</text:p><text:p text:style-name="P443"><text:tab/>text-align: center;</text:p><text:p text:style-name="P443"><text:tab/>background: #7DB357;</text:p><text:p text:style-name="P443">}</text:p><text:p text:style-name="P443"/><text:p text:style-name="P443">#search p {</text:p><text:p text:style-name="P443"><text:tab/>padding: 12px 0 0 0;</text:p><text:p text:style-name="P443"><text:tab/>font: bold 14px/20px Arial, Helvetica, sans-serif;</text:p><text:p text:style-name="P443"><text:tab/>text-align: center;</text:p><text:p text:style-name="P443"><text:tab/>color: #EEF6E9;</text:p><text:p text:style-name="P443">}</text:p><text:p text:style-name="P443"/><text:p text:style-name="P443">#formSearch {</text:p><text:p text:style-name="P443"><text:tab/>margin: 0 auto;</text:p><text:p text:style-name="P443"><text:tab/>width: 200px;</text:p><text:p text:style-name="P443"><text:soft-page-break/>}</text:p><text:p text:style-name="P443"/><text:p text:style-name="P443">#searchInpTxt {</text:p><text:p text:style-name="P443"><text:tab/>float: left;</text:p><text:p text:style-name="P443"><text:tab/>width: 190px;</text:p><text:p text:style-name="P443"><text:tab/>height: 170px;</text:p><text:p text:style-name="P443"><text:tab/>background: #D2E7C5;</text:p><text:p text:style-name="P443"><text:tab/>border: 1px solid #63A13E;</text:p><text:p text:style-name="P443">}</text:p><text:p text:style-name="P443"/><text:p text:style-name="P443">#search input.text {</text:p><text:p text:style-name="P443"><text:tab/>display: block;</text:p><text:p text:style-name="P443"><text:tab/>margin: 4px 0 0 2px;</text:p><text:p text:style-name="P443"><text:tab/>width: 60px;</text:p><text:p text:style-name="P443"><text:tab/>font: 14px Arial, Helvetica, sans-serif;</text:p><text:p text:style-name="P443"><text:tab/>color: #4E7C31;</text:p><text:p text:style-name="P443"><text:tab/>background: none;</text:p><text:p text:style-name="P443"><text:tab/>border: 1px solid #63A13E;</text:p><text:p text:style-name="P443">}</text:p><text:p text:style-name="P443"/><text:p text:style-name="P443">#searchInpSub {</text:p><text:p text:style-name="P443"><text:tab/>float: left;</text:p><text:p text:style-name="P443"><text:tab/>width: 26px;</text:p><text:p text:style-name="P443"><text:tab/>height: 24px;</text:p><text:p text:style-name="P443"><text:tab/>background: url(images/go.gif);</text:p><text:p text:style-name="P443"><text:tab/>border: 1px solid #63A13E;</text:p><text:p text:style-name="P443">}</text:p><text:p text:style-name="P443"/><text:p text:style-name="P443">#search input.submit {</text:p><text:p text:style-name="P443"><text:tab/>display: block;</text:p><text:p text:style-name="P443"><text:tab/>float: right;</text:p><text:p text:style-name="P443"><text:tab/>width: 26px;</text:p><text:p text:style-name="P443"><text:tab/>height: 24px;</text:p><text:p text:style-name="P443"><text:tab/>background: none;</text:p><text:p text:style-name="P443"><text:tab/>border: none;</text:p><text:p text:style-name="P443">}</text:p><text:p text:style-name="P443"/><text:p text:style-name="P443">#left_mid {</text:p><text:p text:style-name="P443"><text:tab/>padding: 15px;</text:p><text:p text:style-name="P443">}</text:p><text:p text:style-name="P443"/><text:p text:style-name="P443">#left_bot {</text:p><text:p text:style-name="P443"><text:tab/>margin: 10px;</text:p><text:p text:style-name="P443"><text:tab/>padding: 15px;</text:p><text:p text:style-name="P443"><text:tab/>color: #D2E7C5;</text:p><text:p text:style-name="P443"><text:tab/>background: #7DB357;</text:p><text:p text:style-name="P443">}</text:p><text:p text:style-name="P443"/><text:p text:style-name="P443">#left_bot h3 {</text:p><text:p text:style-name="P443"><text:tab/>color: #EEF6E9;</text:p><text:p text:style-name="P443">}</text:p><text:p text:style-name="P443"/><text:p text:style-name="P443">#left ul {</text:p><text:p text:style-name="P443"><text:tab/>list-style: none;</text:p><text:p text:style-name="P443"><text:tab/>padding: 10px 0 0 0;</text:p><text:p text:style-name="P443">}</text:p><text:p text:style-name="P443"/><text:p text:style-name="P443">#left ul li {</text:p><text:p text:style-name="P443"><text:tab/>padding: 0 0 0 16px;</text:p><text:p text:style-name="P443"><text:tab/>text-align: left;</text:p><text:p text:style-name="P443">}</text:p><text:p text:style-name="P443"/><text:p text:style-name="P443">#left ul li a {</text:p><text:p text:style-name="P443"><text:tab/>font: 12px/20px Arial, Helvetica, sans-serif;</text:p><text:p text:style-name="P443"><text:tab/>text-decoration: none;</text:p><text:p text:style-name="P443"><text:tab/>color: #D2E7C5;</text:p><text:p text:style-name="P443">}</text:p><text:p text:style-name="P443"/><text:p text:style-name="P443">#left ul li a:hover {</text:p><text:p text:style-name="P443"><text:tab/>text-decoration: underline;</text:p><text:p text:style-name="P443"><text:tab/>color: #EEF6E9;</text:p><text:p text:style-name="P443">}</text:p><text:p text:style-name="P443"/><text:p text:style-name="P443">#right {</text:p><text:p text:style-name="P443"><text:tab/>float: right;</text:p><text:p text:style-name="P443"><text:tab/>width: 520px;</text:p><text:p text:style-name="P443">}</text:p><text:p text:style-name="P443"/><text:p text:style-name="P443">#right_top {</text:p><text:p text:style-name="P443"><text:tab/>margin: 0 0 10px 0;</text:p><text:p text:style-name="P443"><text:tab/>padding: 15px;</text:p><text:p text:style-name="P443"><text:tab/>background: #D2E7C5;</text:p><text:p text:style-name="P443">}</text:p><text:p text:style-name="P443"/><text:p text:style-name="P443">#right_mid {</text:p><text:p text:style-name="P443"><text:tab/>margin: 0 0 10px 0;</text:p><text:p text:style-name="P443"><text:tab/>padding: 0 8px;</text:p><text:p text:style-name="P443"><text:tab/>background: #63A13E;</text:p><text:p text:style-name="P443">}</text:p><text:p text:style-name="P443"/><text:p text:style-name="P443">#right_mid h4 {</text:p><text:p text:style-name="P443"><text:tab/>padding: 5px 9px 7px 9px;</text:p><text:p text:style-name="P443"><text:tab/>font-size: 12px;</text:p><text:p text:style-name="P443"><text:tab/>text-align: left;</text:p><text:p text:style-name="P443">}</text:p><text:p text:style-name="P443"/><text:p text:style-name="P443">#right_mid p {</text:p><text:p text:style-name="P443"><text:tab/>padding: 0 9px;</text:p><text:p text:style-name="P443"><text:tab/>font: 11px/15px Arial, Helvetica, sans-serif;</text:p><text:p text:style-name="P443"><text:tab/>text-align: left;</text:p><text:p text:style-name="P443"><text:tab/>color: #D2E7C5;</text:p><text:p text:style-name="P443">}</text:p><text:p text:style-name="P443"/><text:p text:style-name="P443">#right_mid a {</text:p><text:p text:style-name="P443"><text:tab/>text-transform: uppercase;</text:p><text:p text:style-name="P443"><text:tab/>text-decoration: none;</text:p><text:p text:style-name="P443"><text:tab/>color: #A0B7D9;</text:p><text:p text:style-name="P443">}</text:p><text:p text:style-name="P443"/><text:p text:style-name="P443">#right_mid a:hover {</text:p><text:p text:style-name="P443"><text:tab/>text-decoration: underline;</text:p><text:p text:style-name="P443"><text:tab/>color: #A0B7D9;</text:p><text:p text:style-name="P443">}</text:p><text:p text:style-name="P443"/><text:p text:style-name="P443">#right_mid_1, #right_mid_2 {</text:p><text:p text:style-name="P443"><text:tab/>float: left;</text:p><text:p text:style-name="P443"><text:tab/>width: 168px;</text:p><text:p text:style-name="P443"><text:tab/>padding: 10px 0;</text:p><text:p text:style-name="P443"><text:tab/>text-align: center;</text:p><text:p text:style-name="P443">}</text:p><text:p text:style-name="P443"/><text:p text:style-name="P443">#right_mid_3 {</text:p><text:p text:style-name="P443"><text:tab/>float: right;</text:p><text:p text:style-name="P443"><text:tab/>width: 168px;</text:p><text:p text:style-name="P443"><text:tab/>padding: 10px 0;</text:p><text:p text:style-name="P443"><text:soft-page-break/><text:tab/>text-align: center;</text:p><text:p text:style-name="P443">}</text:p><text:p text:style-name="P443"/><text:p text:style-name="P443">#right_mid_4 {</text:p><text:p text:style-name="P443"><text:tab/>clear: both;</text:p><text:p text:style-name="P443"><text:tab/>height: 5px;</text:p><text:p text:style-name="P443"><text:tab/>overflow: hidden;</text:p><text:p text:style-name="P443">}</text:p><text:p text:style-name="P443"/><text:p text:style-name="P443">#right_bot {</text:p><text:p text:style-name="P443"><text:tab/>padding: 15px;</text:p><text:p text:style-name="P443"><text:tab/>background: #D2E7C5;</text:p><text:p text:style-name="P443">}</text:p><text:p text:style-name="P443"/><text:p text:style-name="P443">#bottom {</text:p><text:p text:style-name="P443"><text:tab/>clear: both;</text:p><text:p text:style-name="P443"><text:tab/>padding: 0 0 0 25px;</text:p><text:p text:style-name="P443">}</text:p><text:p text:style-name="P443"/><text:p text:style-name="P443">#bottom p {</text:p><text:p text:style-name="P443"><text:tab/>padding: 0;</text:p><text:p text:style-name="P443"><text:tab/>font: 11px/40px Arial, Helvetica, sans-serif;</text:p><text:p text:style-name="P443"><text:tab/>color: #3FA14B;</text:p><text:p text:style-name="P443">}</text:p><text:p text:style-name="P443"/><text:p text:style-name="P443">#bottom a, #bottom a:hover {</text:p><text:p text:style-name="P443"><text:tab/>color: #3FA14B;</text:p><text:p text:style-name="P443">}</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5730_1486593966"/><text:s text:c="4"/>build.bat<text:bookmark-end text:name="__RefHeading___Toc5730_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P444">@echo off</text:p><text:p text:style-name="P444"/><text:p text:style-name="P444">rem ###############################################################################</text:p><text:p text:style-name="P444">rem # <text:s text:c="76"/>#</text:p><text:p text:style-name="P444">rem # VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>#</text:p><text:p text:style-name="P444">rem # Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>#</text:p><text:p text:style-name="P444">rem # Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>#</text:p><text:p text:style-name="P444">rem # the capital of Bulgaria. <text:s text:c="51"/>#</text:p><text:p text:style-name="P444">rem # <text:s text:c="76"/>#</text:p><text:p text:style-name="P444">rem # Copyright (C) 2008-2010 by Todor Balabanov <text:s/>( tdb@tbsoft.eu ) <text:s text:c="14"/>#</text:p><text:p text:style-name="P444">rem # <text:s text:c="27"/>Iliyan Zankinski ( iliyan_mf@abv.bg ) <text:s text:c="11"/>#</text:p><text:p text:style-name="P444">rem # <text:s text:c="27"/>Galq Cirkalova <text:s text:c="2"/>( galq_cirkalova@abv.bg ) <text:s text:c="6"/>#</text:p><text:p text:style-name="P444">rem # <text:s text:c="27"/>Ivan Grozev <text:s text:c="5"/>( ivan.iliev.grozev@gmail.com ) #</text:p><text:p text:style-name="P444">rem # <text:s text:c="27"/>Momchil Anachkov ( mZer0000@gmail.com ) <text:s text:c="9"/>#</text:p><text:p text:style-name="P444">rem # <text:s text:c="76"/>#</text:p><text:p text:style-name="P444">rem # This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>#</text:p><text:p text:style-name="P444">rem # it under the terms of the GNU General Public License as published by <text:s text:c="7"/>#</text:p><text:p text:style-name="P444">rem # the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>#</text:p><text:p text:style-name="P444">rem # (at your option) any later version. <text:s text:c="40"/>#</text:p><text:p text:style-name="P444">rem # <text:s text:c="76"/>#</text:p><text:p text:style-name="P444">rem # This program is distributed in the hope that it will be useful, <text:s text:c="12"/>#</text:p><text:p text:style-name="P444">rem # but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>#</text:p><text:p text:style-name="P444">rem # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>#</text:p><text:p text:style-name="P444">rem # GNU General Public License for more details. <text:s text:c="31"/>#</text:p><text:p text:style-name="P444">rem # <text:s text:c="76"/>#</text:p><text:p text:style-name="P444">rem # You should have received a copy of the GNU General Public License <text:s text:c="10"/>#</text:p><text:p text:style-name="P444">rem # along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>#</text:p><text:p text:style-name="P444">rem # <text:s text:c="76"/>#</text:p><text:p text:style-name="P444">rem ###############################################################################</text:p><text:p text:style-name="P444"/><text:p text:style-name="P444">rem ############################################################################</text:p><text:p text:style-name="P444">rem # Check input parameters. <text:s text:c="49"/>#</text:p><text:p text:style-name="P444">rem ############################################################################</text:p><text:p text:style-name="P444">if &quot;%~1&quot;==&quot;&quot; goto end</text:p><text:p text:style-name="P444"/><text:p text:style-name="P444">rem ############################################################################</text:p><text:p text:style-name="P444">rem # Create web back-end directory. <text:s text:c="42"/>#</text:p><text:p text:style-name="P444">rem ############################################################################</text:p><text:p text:style-name="P444">md &quot;%~dp1backend\&quot;</text:p><text:p text:style-name="P444"/><text:p text:style-name="P444">rem ############################################################################</text:p><text:p text:style-name="P444">rem # Compilation. <text:s text:c="60"/>#</text:p><text:p text:style-name="P444">rem ############################################################################</text:p><text:p text:style-name="P444">javac.exe -d ./binaries ./source/*.java -classpath ./binaries</text:p><text:p text:style-name="P444"/><text:p text:style-name="P444">rem ############################################################################</text:p><text:p text:style-name="P444">rem # Archiving. <text:s text:c="62"/>#</text:p><text:p text:style-name="P444">rem ############################################################################</text:p><text:p text:style-name="P444">cd binaries</text:p><text:p text:style-name="P444">jar.exe cf VitoshaTrade.jar *.class</text:p><text:p text:style-name="P444">cd ..</text:p><text:p text:style-name="P444"/><text:p text:style-name="P444">rem ############################################################################</text:p><text:p text:style-name="P444">rem # Deployment. <text:s text:c="61"/>#</text:p><text:p text:style-name="P444">rem ############################################################################</text:p><text:p text:style-name="P444">rem copy .\binaries\*.class &quot;%~dp1backend\&quot;</text:p><text:p text:style-name="P444">copy .\binaries\*.jar &quot;%~dp1backend\&quot;</text:p><text:p text:style-name="P444">copy .\source\*.html &quot;%~dp1backend\&quot;</text:p><text:p text:style-name="P444"/><text:p text:style-name="P444">rem ############################################################################</text:p><text:p text:style-name="P444">rem # End of the srcipt if there are no input parameters. <text:s text:c="21"/>#</text:p><text:p text:style-name="P444">rem ############################################################################</text:p><text:p text:style-name="P444">:end</text:p><text:p text:style-name="P444"/><text:p text:style-name="P444">rem ############################################################################</text:p><text:p text:style-name="P444">rem # Stop screen. <text:s text:c="60"/>#</text:p><text:p text:style-name="P444">rem ############################################################################</text:p><text:p text:style-name="P444">pause</text:p><text:p text:style-name="P444"/><text:p text:style-name="P444">@echo on</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5732_1486593966"/><text:s text:c="4"/>index.html<text:bookmark-end text:name="__RefHeading___Toc5732_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P445">&lt;!--</text:p><text:p text:style-name="P445"><text:s/>*******************************************************************************</text:p><text:p text:style-name="P445"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P445"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P445"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P445"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P445"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P445"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P445"><text:soft-page-break/><text:s/>* Copyright (C) 2008-2010 by Todor Balabanov <text:s/>( tdb@tbsoft.eu ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P445"><text:s/>* <text:s text:c="27"/>Iliyan Zankinski ( iliyan_mf@abv.bg ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P445"><text:s/>* <text:s text:c="27"/>Galq Cirkalova <text:s text:c="2"/>( galq_cirkalova@abv.bg ) <text:s text:c="6"/>*</text:p><text:p text:style-name="P445"><text:s/>* <text:s text:c="27"/>Ivan Grozev <text:s text:c="5"/>( ivan.iliev.grozev@gmail.com ) *</text:p><text:p text:style-name="P445"><text:s/>* <text:s text:c="27"/>Momchil Anachkov ( mZer0000@gmail.com ) <text:s text:c="9"/>*</text:p><text:p text:style-name="P445"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P445"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P445"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P445"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P445"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P445"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P445"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P445"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P445"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P445"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P445"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P445"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P445"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P445"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P445"><text:s/>*******************************************************************************</text:p><text:p text:style-name="P445">--&gt;</text:p><text:p text:style-name="P445"/><text:p text:style-name="P445">&lt;html&gt;</text:p><text:p text:style-name="P445"><text:tab/>&lt;head&gt;</text:p><text:p text:style-name="P445"><text:tab/><text:tab/>&lt;title&gt;.:: VitoshaTrade - backend ::.&lt;/title&gt;</text:p><text:p text:style-name="P445"><text:tab/><text:tab/>&lt;style&gt;</text:p><text:p text:style-name="P445"><text:tab/><text:tab/><text:tab/>body {text-align: center}</text:p><text:p text:style-name="P445"><text:tab/><text:tab/>&lt;/style&gt;</text:p><text:p text:style-name="P445"><text:tab/>&lt;/head&gt;</text:p><text:p text:style-name="P445"/><text:p text:style-name="P445">&lt;body&gt;</text:p><text:p text:style-name="P445">&lt;h1&gt; Vitosha Trade Applet &lt;/h1&gt;</text:p><text:p text:style-name="P445">&lt;applet width=&quot;800&quot; height=&quot;600&quot; codebase=&quot;.&quot; code=&quot;eu.veldsoft.backend.VitoshaTradeApplet.class&quot; archive=&quot;VitoshaTrade.jar&quot;&gt;&lt;/applet&gt;</text:p><text:p text:style-name="P445">&lt;/body&gt;</text:p><text:p text:style-name="P445">&lt;/html&gt;</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5734_1486593966"/><text:s text:c="4"/>ArtificialNeuralNetwork.java<text:bookmark-end text:name="__RefHeading___Toc5734_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P446">package eu.veldsoft.backend;</text:p><text:p text:style-name="P446"/><text:p text:style-name="P446">/*******************************************************************************</text:p><text:p text:style-name="P446"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P446"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P446"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P446"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P446"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P446"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P446"><text:s/>* Copyright (C) 2008-2011 by Todor Balabanov <text:s/>( tdb@tbsoft.eu ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P446"><text:s/>* <text:s text:c="27"/>Iliyan Zankinski ( iliyan_mf@abv.bg ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P446"><text:s/>* <text:s text:c="27"/>Galq Cirkalova <text:s text:c="2"/>( galq_cirkalova@abv.bg ) <text:s text:c="6"/>*</text:p><text:p text:style-name="P446"><text:s/>* <text:s text:c="27"/>Ivan Grozev <text:s text:c="5"/>( ivan.iliev.grozev@gmail.com ) *</text:p><text:p text:style-name="P446"><text:s/>* <text:s text:c="27"/>Momchil Anachkov ( mZer0000@gmail.com ) <text:s text:c="9"/>*</text:p><text:p text:style-name="P446"><text:s/>* <text:s text:c="27"/>Ralitza Koleva <text:s text:c="2"/>( rallly@abv.bg ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P446"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P446"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P446"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P446"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P446"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P446"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P446"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P446"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P446"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P446"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P446"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P446"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P446"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P446"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P446"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P446"/><text:p text:style-name="P446">/**</text:p><text:p text:style-name="P446"><text:s/>* Data structure containing ANN for visual representation.</text:p><text:p text:style-name="P446"><text:s/>* </text:p><text:p text:style-name="P446"><text:s/>* @author Momchil Anachkov</text:p><text:p text:style-name="P446"><text:s/>* </text:p><text:p text:style-name="P446"><text:s/>* @email mZer0000@gmail.com</text:p><text:p text:style-name="P446"><text:s/>* </text:p><text:p text:style-name="P446"><text:s/>* @date 24 Dec 2010</text:p><text:p text:style-name="P446"><text:s/>*/</text:p><text:p text:style-name="P446">public class ArtificialNeuralNetwork {</text:p><text:p text:style-name="P446"/><text:p text:style-name="P446"><text:tab/>/**</text:p><text:p text:style-name="P446"><text:tab/> * Regular neuron flag.</text:p><text:p text:style-name="P446"><text:tab/> */</text:p><text:p text:style-name="P446"><text:tab/>static final int REGULAR_NEURON = 0x00;</text:p><text:p text:style-name="P446"/><text:p text:style-name="P446"><text:tab/>/**</text:p><text:p text:style-name="P446"><text:tab/> * Bias neuron flag.</text:p><text:p text:style-name="P446"><text:tab/> */</text:p><text:p text:style-name="P446"><text:tab/>static final int BIAS_NEURON = 0x01;</text:p><text:p text:style-name="P446"/><text:p text:style-name="P446"><text:tab/>/**</text:p><text:p text:style-name="P446"><text:tab/> * Input neuron flag.</text:p><text:p text:style-name="P446"><text:tab/> */</text:p><text:p text:style-name="P446"><text:tab/>static final int INPUT_NEURON = 0x02;</text:p><text:p text:style-name="P446"/><text:p text:style-name="P446"><text:tab/>/**</text:p><text:p text:style-name="P446"><text:tab/> * Output neuron flag.</text:p><text:p text:style-name="P446"><text:tab/> */</text:p><text:p text:style-name="P446"><text:tab/>static final int OUTPUT_NEURON = 0x04;</text:p><text:p text:style-name="P446"/><text:p text:style-name="P446"><text:tab/>/**</text:p><text:p text:style-name="P446"><text:tab/> * Representing the ID of the ANN.</text:p><text:p text:style-name="P446"><text:tab/> */</text:p><text:p text:style-name="P446"><text:tab/>int id;</text:p><text:p text:style-name="P446"/><text:p text:style-name="P446"><text:tab/>/**</text:p><text:p text:style-name="P446"><text:tab/> * Containing the currency pair.</text:p><text:p text:style-name="P446"><text:tab/> */</text:p><text:p text:style-name="P446"><text:tab/>String symbol;</text:p><text:p text:style-name="P446"/><text:p text:style-name="P446"><text:tab/>/**</text:p><text:p text:style-name="P446"><text:tab/> * Representing the time period for the bars.</text:p><text:p text:style-name="P446"><text:tab/> */</text:p><text:p text:style-name="P446"><text:tab/>int period;</text:p><text:p text:style-name="P446"/><text:p text:style-name="P446"><text:tab/>/**</text:p><text:p text:style-name="P446"><text:tab/> * Representing the number of neurons for the selected ANN.</text:p><text:p text:style-name="P446"><text:tab/> */</text:p><text:p text:style-name="P446"><text:tab/>int numberOfNeurons;</text:p><text:p text:style-name="P446"><text:soft-page-break/></text:p><text:p text:style-name="P446"><text:tab/>/**</text:p><text:p text:style-name="P446"><text:tab/> * Containing the flags for the selected neuron.</text:p><text:p text:style-name="P446"><text:tab/> */</text:p><text:p text:style-name="P446"><text:tab/>int flags[];</text:p><text:p text:style-name="P446"/><text:p text:style-name="P446"><text:tab/>/**</text:p><text:p text:style-name="P446"><text:tab/> * Representing weights fitness value.</text:p><text:p text:style-name="P446"><text:tab/> */</text:p><text:p text:style-name="P446"><text:tab/>double fitness;</text:p><text:p text:style-name="P446"/><text:p text:style-name="P446"><text:tab/>/**</text:p><text:p text:style-name="P446"><text:tab/> * Containing the weight variables for the links.</text:p><text:p text:style-name="P446"><text:tab/> */</text:p><text:p text:style-name="P446"><text:tab/>double weights[][];</text:p><text:p text:style-name="P446"/><text:p text:style-name="P446"><text:tab/>/**</text:p><text:p text:style-name="P446"><text:tab/> * Containing the activity variables for the links.</text:p><text:p text:style-name="P446"><text:tab/> */</text:p><text:p text:style-name="P446"><text:tab/>double activities[][];</text:p><text:p text:style-name="P446"/><text:p text:style-name="P446"><text:tab/>/**</text:p><text:p text:style-name="P446"><text:tab/> * Neurons out signals.</text:p><text:p text:style-name="P446"><text:tab/> */</text:p><text:p text:style-name="P446"><text:tab/>double signals[];</text:p><text:p text:style-name="P446"/><text:p text:style-name="P446"><text:tab/>/**</text:p><text:p text:style-name="P446"><text:tab/> * Neurons out errors.</text:p><text:p text:style-name="P446"><text:tab/> */</text:p><text:p text:style-name="P446"><text:tab/>double errors[];</text:p><text:p text:style-name="P446"/><text:p text:style-name="P446"><text:tab/>/**</text:p><text:p text:style-name="P446"><text:tab/> * Containing the coordinates of the neurons for the selected ANN.</text:p><text:p text:style-name="P446"><text:tab/> */</text:p><text:p text:style-name="P446"><text:tab/>int coordinates[][];</text:p><text:p text:style-name="P446"/><text:p text:style-name="P446"><text:tab/>/**</text:p><text:p text:style-name="P446"><text:tab/> * Size of input layer.</text:p><text:p text:style-name="P446"><text:tab/> * </text:p><text:p text:style-name="P446"><text:tab/> * @return The size of the input layer.</text:p><text:p text:style-name="P446"><text:tab/> * </text:p><text:p text:style-name="P446"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P446"><text:tab/> * </text:p><text:p text:style-name="P446"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P446"><text:tab/> * </text:p><text:p text:style-name="P446"><text:tab/> * @date 31 Aug 2015</text:p><text:p text:style-name="P446"><text:tab/> */</text:p><text:p text:style-name="P446"><text:tab/>int numberOfInputNeurons() {</text:p><text:p text:style-name="P446"><text:tab/><text:tab/>int size = 0;</text:p><text:p text:style-name="P446"/><text:p text:style-name="P446"><text:tab/><text:tab/>for (int k = 0; k &lt; flags.length; k++) {</text:p><text:p text:style-name="P446"><text:tab/><text:tab/><text:tab/>if (flags[k] != INPUT_NEURON) {</text:p><text:p text:style-name="P446"><text:tab/><text:tab/><text:tab/><text:tab/>continue;</text:p><text:p text:style-name="P446"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P446"/><text:p text:style-name="P446"><text:tab/><text:tab/><text:tab/>size++;</text:p><text:p text:style-name="P446"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P446"/><text:p text:style-name="P446"><text:tab/><text:tab/>return size;</text:p><text:p text:style-name="P446"><text:tab/>}</text:p><text:p text:style-name="P446"/><text:p text:style-name="P446"><text:tab/>/**</text:p><text:p text:style-name="P446"><text:tab/> * Size of hidden layer.</text:p><text:p text:style-name="P446"><text:tab/> * </text:p><text:p text:style-name="P446"><text:tab/> * @return The size of the hidden layer.</text:p><text:p text:style-name="P446"><text:tab/> * </text:p><text:p text:style-name="P446"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P446"><text:tab/> * </text:p><text:p text:style-name="P446"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P446"><text:tab/> * </text:p><text:p text:style-name="P446"><text:tab/> * @date 31 Aug 2015</text:p><text:p text:style-name="P446"><text:tab/> */</text:p><text:p text:style-name="P446"><text:tab/>int numberOfHiddenNeurons() {</text:p><text:p text:style-name="P446"><text:tab/><text:tab/>int size = 0;</text:p><text:p text:style-name="P446"/><text:p text:style-name="P446"><text:tab/><text:tab/>for (int k = 0; k &lt; flags.length; k++) {</text:p><text:p text:style-name="P446"><text:tab/><text:tab/><text:tab/>if (flags[k] != REGULAR_NEURON) {</text:p><text:p text:style-name="P446"><text:tab/><text:tab/><text:tab/><text:tab/>continue;</text:p><text:p text:style-name="P446"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P446"/><text:p text:style-name="P446"><text:tab/><text:tab/><text:tab/>size++;</text:p><text:p text:style-name="P446"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P446"/><text:p text:style-name="P446"><text:tab/><text:tab/>return size;</text:p><text:p text:style-name="P446"><text:tab/>}</text:p><text:p text:style-name="P446"/><text:p text:style-name="P446"><text:tab/>/**</text:p><text:p text:style-name="P446"><text:tab/> * Size of output layer.</text:p><text:p text:style-name="P446"><text:tab/> * </text:p><text:p text:style-name="P446"><text:tab/> * @return The size of the output layer.</text:p><text:p text:style-name="P446"><text:tab/> * </text:p><text:p text:style-name="P446"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P446"><text:tab/> * </text:p><text:p text:style-name="P446"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P446"><text:tab/> * </text:p><text:p text:style-name="P446"><text:tab/> * @date 31 Aug 2015</text:p><text:p text:style-name="P446"><text:tab/> */</text:p><text:p text:style-name="P446"><text:tab/>int numberOfOutputNeurons() {</text:p><text:p text:style-name="P446"><text:tab/><text:tab/>int size = 0;</text:p><text:p text:style-name="P446"/><text:p text:style-name="P446"><text:tab/><text:tab/>for (int k = 0; k &lt; flags.length; k++) {</text:p><text:p text:style-name="P446"><text:tab/><text:tab/><text:tab/>if (flags[k] != OUTPUT_NEURON) {</text:p><text:p text:style-name="P446"><text:tab/><text:tab/><text:tab/><text:tab/>continue;</text:p><text:p text:style-name="P446"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P446"/><text:p text:style-name="P446"><text:tab/><text:tab/><text:tab/>size++;</text:p><text:p text:style-name="P446"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P446"/><text:p text:style-name="P446"><text:tab/><text:tab/>return size;</text:p><text:p text:style-name="P446"><text:tab/>}</text:p><text:p text:style-name="P446">}</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5736_1486593966"/><text:s text:c="4"/>ConnectionPane.java<text:bookmark-end text:name="__RefHeading___Toc5736_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P447">package eu.veldsoft.backend;</text:p><text:p text:style-name="P447"/><text:p text:style-name="P447">/*******************************************************************************</text:p><text:p text:style-name="P447"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P447"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P447"><text:soft-page-break/><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P447"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P447"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P447"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P447"><text:s/>* Copyright (C) 2008-2011 by Todor Balabanov <text:s/>( tdb@tbsoft.eu ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P447"><text:s/>* <text:s text:c="27"/>Iliyan Zankinski ( iliyan_mf@abv.bg ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P447"><text:s/>* <text:s text:c="27"/>Galq Cirkalova <text:s text:c="2"/>( galq_cirkalova@abv.bg ) <text:s text:c="6"/>*</text:p><text:p text:style-name="P447"><text:s/>* <text:s text:c="27"/>Ivan Grozev <text:s text:c="5"/>( ivan.iliev.grozev@gmail.com ) *</text:p><text:p text:style-name="P447"><text:s/>* <text:s text:c="27"/>Momchil Anachkov ( mZer0000@gmail.com ) <text:s text:c="9"/>*</text:p><text:p text:style-name="P447"><text:s/>* <text:s text:c="27"/>Ralitza Koleva <text:s text:c="2"/>( rallly@abv.bg ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P447"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P447"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P447"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P447"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P447"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P447"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P447"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P447"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P447"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P447"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P447"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P447"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P447"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P447"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P447"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P447"/><text:p text:style-name="P447">import java.awt.Dimension;</text:p><text:p text:style-name="P447">import java.awt.GridLayout;</text:p><text:p text:style-name="P447">import java.awt.event.ActionEvent;</text:p><text:p text:style-name="P447">import java.awt.event.ActionListener;</text:p><text:p text:style-name="P447"/><text:p text:style-name="P447">import javax.swing.JLabel;</text:p><text:p text:style-name="P447">import javax.swing.JPanel;</text:p><text:p text:style-name="P447">import javax.swing.JTextField;</text:p><text:p text:style-name="P447"/><text:p text:style-name="P447">/**</text:p><text:p text:style-name="P447"><text:s/>* Panel with GUI controls for Connection Management.</text:p><text:p text:style-name="P447"><text:s/>* </text:p><text:p text:style-name="P447"><text:s/>* @author Momchil Anachkov</text:p><text:p text:style-name="P447"><text:s/>* </text:p><text:p text:style-name="P447"><text:s/>* @email mZer0000@gmail.com</text:p><text:p text:style-name="P447"><text:s/>* </text:p><text:p text:style-name="P447"><text:s/>* @date 18 Nov 2010</text:p><text:p text:style-name="P447"><text:s/>*/</text:p><text:p text:style-name="P447">class ConnectionPane extends JPanel {</text:p><text:p text:style-name="P447"><text:tab/>/**</text:p><text:p text:style-name="P447"><text:tab/> * Default serial version UID.</text:p><text:p text:style-name="P447"><text:tab/> */</text:p><text:p text:style-name="P447"><text:tab/>private static final long serialVersionUID = 1L;</text:p><text:p text:style-name="P447"/><text:p text:style-name="P447"><text:tab/>/**</text:p><text:p text:style-name="P447"><text:tab/> * Parent applet reference.</text:p><text:p text:style-name="P447"><text:tab/> */</text:p><text:p text:style-name="P447"><text:tab/>private VitoshaTradeApplet parent = null;</text:p><text:p text:style-name="P447"/><text:p text:style-name="P447"><text:tab/>/**</text:p><text:p text:style-name="P447"><text:tab/> * GUI control for obtaining the source neuron for a specific connection.</text:p><text:p text:style-name="P447"><text:tab/> */</text:p><text:p text:style-name="P447"><text:tab/>private JTextField neuronSource = new JTextField();</text:p><text:p text:style-name="P447"/><text:p text:style-name="P447"><text:tab/>/**</text:p><text:p text:style-name="P447"><text:tab/> * GUI control for obtaining the neuron-recipient for a specific connection.</text:p><text:p text:style-name="P447"><text:tab/> */</text:p><text:p text:style-name="P447"><text:tab/>private JTextField neuronDestination = new JTextField();</text:p><text:p text:style-name="P447"/><text:p text:style-name="P447"><text:tab/>/**</text:p><text:p text:style-name="P447"><text:tab/> * GUI control for obtaining and setting the activity for a specific</text:p><text:p text:style-name="P447"><text:tab/> * connection.</text:p><text:p text:style-name="P447"><text:tab/> */</text:p><text:p text:style-name="P447"><text:tab/>private JTextField activity = new JTextField();</text:p><text:p text:style-name="P447"/><text:p text:style-name="P447"><text:tab/>/**</text:p><text:p text:style-name="P447"><text:tab/> * GUI control for obtaining the weight for a specific connection.</text:p><text:p text:style-name="P447"><text:tab/> */</text:p><text:p text:style-name="P447"><text:tab/>private JTextField weight = new JTextField();</text:p><text:p text:style-name="P447"/><text:p text:style-name="P447"><text:tab/>/**</text:p><text:p text:style-name="P447"><text:tab/> * Constructing connection pane.</text:p><text:p text:style-name="P447"><text:tab/> * </text:p><text:p text:style-name="P447"><text:tab/> * @param parent</text:p><text:p text:style-name="P447"><text:tab/> * <text:s text:c="11"/>The parent class.</text:p><text:p text:style-name="P447"><text:tab/> * </text:p><text:p text:style-name="P447"><text:tab/> * @author Momchil Anachkov</text:p><text:p text:style-name="P447"><text:tab/> * </text:p><text:p text:style-name="P447"><text:tab/> * @email mZer0000@gmail.com</text:p><text:p text:style-name="P447"><text:tab/> * </text:p><text:p text:style-name="P447"><text:tab/> * @date 18 Nov 2010</text:p><text:p text:style-name="P447"><text:tab/> */</text:p><text:p text:style-name="P447"><text:tab/>public ConnectionPane(final VitoshaTradeApplet parent) {</text:p><text:p text:style-name="P447"><text:tab/><text:tab/>this.parent = parent;</text:p><text:p text:style-name="P447"><text:tab/><text:tab/>this.setPreferredSize(new Dimension(VitoshaTradeApplet.EAST_PANE_WIDTH,</text:p><text:p text:style-name="P447"><text:tab/><text:tab/><text:tab/><text:tab/>VitoshaTradeApplet.EAST_PANE_HEIGHT));</text:p><text:p text:style-name="P447"/><text:p text:style-name="P447"><text:tab/><text:tab/>setLayout(new GridLayout(25, 1));</text:p><text:p text:style-name="P447"/><text:p text:style-name="P447"><text:tab/><text:tab/>add(new JLabel(Texts.LABEL_DESTINATION));</text:p><text:p text:style-name="P447"><text:tab/><text:tab/>add(neuronSource);</text:p><text:p text:style-name="P447"><text:tab/><text:tab/>neuronSource.setEditable(false);</text:p><text:p text:style-name="P447"/><text:p text:style-name="P447"><text:tab/><text:tab/>add(new JLabel(Texts.LABEL_SOURCE));</text:p><text:p text:style-name="P447"><text:tab/><text:tab/>add(neuronDestination);</text:p><text:p text:style-name="P447"><text:tab/><text:tab/>neuronDestination.setEditable(false);</text:p><text:p text:style-name="P447"/><text:p text:style-name="P447"><text:tab/><text:tab/>add(new JLabel(Texts.LABEL_WEIGHT));</text:p><text:p text:style-name="P447"><text:tab/><text:tab/>add(weight);</text:p><text:p text:style-name="P447"/><text:p text:style-name="P447"><text:tab/><text:tab/>add(new JLabel(Texts.LABEL_ACTIVITY));</text:p><text:p text:style-name="P447"><text:tab/><text:tab/>add(activity);</text:p><text:p text:style-name="P447"/><text:p text:style-name="P447"><text:tab/><text:tab/>weight.addActionListener(new ActionListener() {</text:p><text:p text:style-name="P447"><text:tab/><text:tab/><text:tab/>public void actionPerformed(ActionEvent �) {</text:p><text:p text:style-name="P447"><text:tab/><text:tab/><text:tab/><text:tab/>parent.ann.weights[Integer.parseInt(neuronSource.getText())][Integer</text:p><text:p text:style-name="P447"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>.parseInt(neuronDestination.getText())] = Double</text:p><text:p text:style-name="P447"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>.parseDouble(weight.getText());</text:p><text:p text:style-name="P447"><text:tab/><text:tab/><text:tab/><text:tab/>parent.workArea.repaint();</text:p><text:p text:style-name="P447"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P447"><text:tab/><text:tab/>});</text:p><text:p text:style-name="P447"/><text:p text:style-name="P447"><text:tab/><text:tab/>activity.addActionListener(new ActionListener() {</text:p><text:p text:style-name="P447"><text:tab/><text:tab/><text:tab/>public void actionPerformed(ActionEvent �) {</text:p><text:p text:style-name="P447"><text:tab/><text:tab/><text:tab/><text:tab/>parent.ann.activities[Integer.parseInt(neuronSource.getText())][Integer</text:p><text:p text:style-name="P447"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>.parseInt(neuronDestination.getText())] = Double</text:p><text:p text:style-name="P447"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>.parseDouble(activity.getText());</text:p><text:p text:style-name="P447"><text:tab/><text:tab/><text:tab/><text:tab/>parent.workArea.repaint();</text:p><text:p text:style-name="P447"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P447"><text:soft-page-break/><text:tab/><text:tab/>});</text:p><text:p text:style-name="P447"><text:tab/>}</text:p><text:p text:style-name="P447"/><text:p text:style-name="P447"><text:tab/>/**</text:p><text:p text:style-name="P447"><text:tab/> * Loading connection properties.</text:p><text:p text:style-name="P447"><text:tab/> * </text:p><text:p text:style-name="P447"><text:tab/> * @param sourceIndex</text:p><text:p text:style-name="P447"><text:tab/> * <text:s text:c="11"/>Source neuron of selected connection.</text:p><text:p text:style-name="P447"><text:tab/> * </text:p><text:p text:style-name="P447"><text:tab/> * @param destinationIndex</text:p><text:p text:style-name="P447"><text:tab/> * <text:s text:c="11"/>Destination neuron of selected connection.</text:p><text:p text:style-name="P447"><text:tab/> * </text:p><text:p text:style-name="P447"><text:tab/> * @param connectionActivity</text:p><text:p text:style-name="P447"><text:tab/> * <text:s text:c="11"/>Activity of selected connection.</text:p><text:p text:style-name="P447"><text:tab/> * </text:p><text:p text:style-name="P447"><text:tab/> * @param connectionWeight</text:p><text:p text:style-name="P447"><text:tab/> * <text:s text:c="11"/>Weight of selected connection.</text:p><text:p text:style-name="P447"><text:tab/> * </text:p><text:p text:style-name="P447"><text:tab/> * @author Momchil Anachkov</text:p><text:p text:style-name="P447"><text:tab/> * </text:p><text:p text:style-name="P447"><text:tab/> * @email mZer0000@gmail.com</text:p><text:p text:style-name="P447"><text:tab/> * </text:p><text:p text:style-name="P447"><text:tab/> * @date 01 Feb 2010</text:p><text:p text:style-name="P447"><text:tab/> */</text:p><text:p text:style-name="P447"><text:tab/>void setValues(int sourceIndex, int destinationIndex,</text:p><text:p text:style-name="P447"><text:tab/><text:tab/><text:tab/>double connectionActivity, double connectionWeight) {</text:p><text:p text:style-name="P447"><text:tab/><text:tab/>neuronSource.setText(&quot;&quot; + sourceIndex);</text:p><text:p text:style-name="P447"><text:tab/><text:tab/>neuronDestination.setText(&quot;&quot; + destinationIndex);</text:p><text:p text:style-name="P447"><text:tab/><text:tab/>activity.setText(&quot;&quot; + connectionActivity);</text:p><text:p text:style-name="P447"><text:tab/><text:tab/>weight.setText(&quot;&quot; + connectionWeight);</text:p><text:p text:style-name="P447"><text:tab/>}</text:p><text:p text:style-name="P447">}</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5738_1486593966"/><text:s text:c="4"/>DatabaseHelper.java<text:bookmark-end text:name="__RefHeading___Toc5738_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P448">package eu.veldsoft.backend;</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448">/*******************************************************************************</text:p><text:p text:style-name="P448"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P448"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P448"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P448"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P448"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P448"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P448"><text:s/>* Copyright (C) 2008-2011 by Todor Balabanov <text:s/>( tdb@tbsoft.eu ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P448"><text:s/>* <text:s text:c="27"/>Iliyan Zankinski ( iliyan_mf@abv.bg ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P448"><text:s/>* <text:s text:c="27"/>Galq Cirkalova <text:s text:c="2"/>( galq_cirkalova@abv.bg ) <text:s text:c="6"/>*</text:p><text:p text:style-name="P448"><text:s/>* <text:s text:c="27"/>Ivan Grozev <text:s text:c="5"/>( ivan.iliev.grozev@gmail.com ) *</text:p><text:p text:style-name="P448"><text:s/>* <text:s text:c="27"/>Momchil Anachkov ( mZer0000@gmail.com ) <text:s text:c="9"/>*</text:p><text:p text:style-name="P448"><text:s/>* <text:s text:c="27"/>Ralitza Koleva <text:s text:c="2"/>( rallly@abv.bg ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P448"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P448"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P448"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P448"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P448"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P448"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P448"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P448"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P448"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P448"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P448"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P448"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P448"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P448"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P448"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448">import java.sql.Connection;</text:p><text:p text:style-name="P448">import java.sql.DriverManager;</text:p><text:p text:style-name="P448">import java.sql.ResultSet;</text:p><text:p text:style-name="P448">import java.sql.Statement;</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448">/**</text:p><text:p text:style-name="P448"><text:s/>* Database helping class.</text:p><text:p text:style-name="P448"><text:s/>* </text:p><text:p text:style-name="P448"><text:s/>* @author Momchil Anachkov</text:p><text:p text:style-name="P448"><text:s/>* </text:p><text:p text:style-name="P448"><text:s/>* @email mZer0000@gmail.com</text:p><text:p text:style-name="P448"><text:s/>* </text:p><text:p text:style-name="P448"><text:s/>* @date 19 Dec 2010</text:p><text:p text:style-name="P448"><text:s/>*/</text:p><text:p text:style-name="P448">class DatabaseHelper {</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/>/**</text:p><text:p text:style-name="P448"><text:tab/> * SQL query for selecting all ANN ids, symbols and periods.</text:p><text:p text:style-name="P448"><text:tab/> */</text:p><text:p text:style-name="P448"><text:tab/>private static final String SQL_QUERY_SYMBOL_PERIOD_ID = &quot;SELECT currency_pairs.symbol, time_periods.period, ann.id FROM ann, ann_kind, time_periods, currency_pairs WHERE currency_pairs.id=ann_kind.currency_pairs_id AND time_periods.id=currency_pairs.period_id AND ann.ann_kind_id=ann_kind.id ORDER BY ann.id;&quot;;</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/>/**</text:p><text:p text:style-name="P448"><text:tab/> * SQL query for selecting all ANN ids, symbols and periods by symbol.</text:p><text:p text:style-name="P448"><text:tab/> */</text:p><text:p text:style-name="P448"><text:tab/>private static final String SQL_QUERY_SYMBOL_PERIOD_ID_BY_SYMBOL = &quot;SELECT currency_pairs.symbol, time_periods.period, ann.id FROM ann, ann_kind, time_periods, currency_pairs WHERE ann.ann_kind_id=ann_kind.id AND ann_kind.currency_pairs_id=currency_pairs.id AND time_periods.id=currency_pairs.period_id AND currency_pairs.symbol=&apos;%s&apos; ORDER BY ann.id;&quot;;</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/>/**</text:p><text:p text:style-name="P448"><text:tab/> * SQL query for selecting all ANN ids, symbols and periods by period.</text:p><text:p text:style-name="P448"><text:tab/> */</text:p><text:p text:style-name="P448"><text:tab/>private static final String SQL_QUERY_SYMBOL_PERIOD_ID_BY_PERIOD = &quot;SELECT currency_pairs.symbol, time_periods.period, ann.id FROM ann, ann_kind, time_periods, currency_pairs WHERE ann_kind.currency_pairs_id=currency_pairs.id AND time_periods.id=currency_pairs.period_id AND time_periods.id=%d AND ann.ann_kind_id=ann_kind.id ORDER BY ann.id;&quot;;</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/>/**</text:p><text:p text:style-name="P448"><text:tab/> * SQL query for selecting all ANN ids, symbols and periods by symbol and</text:p><text:p text:style-name="P448"><text:tab/> * period.</text:p><text:p text:style-name="P448"><text:tab/> */</text:p><text:p text:style-name="P448"><text:tab/>private static final String SQL_QUERY_SYMBOL_PERIOD_ID_BY_SYMBOL_AND_PERIOD = &quot;SELECT currency_pairs.symbol, time_periods.period, ann.id FROM ann, ann_kind, time_periods, currency_pairs WHERE currency_pairs.symbol=&apos;%s&apos; AND period_id=%d AND ann_kind.currency_pairs_id=currency_pairs.id AND time_periods.id=currency_pairs.period_id AND ann.ann_kind_id=ann_kind.id ORDER BY ann.id;&quot;;</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/>/**</text:p><text:p text:style-name="P448"><text:tab/> * SQL query for selecting information about all ANN kinds ids symbol,</text:p><text:p text:style-name="P448"><text:tab/> * period.</text:p><text:p text:style-name="P448"><text:tab/> */</text:p><text:p text:style-name="P448"><text:tab/>private static final String SQL_QUERY_ANN_KINDS_ID = &quot;SELECT ann_kind.id AS id, currency_pairs.symbol AS symbol, time_periods.id AS period FROM ann_kind, time_periods, currency_pairs WHERE ann_kind.currency_pairs_id=currency_pairs.id AND time_periods.id=currency_pairs.period_id &quot;;</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/>/**</text:p><text:p text:style-name="P448"><text:tab/> * SQL query for selecting ANN values by ANN id.</text:p><text:p text:style-name="P448"><text:tab/> */</text:p><text:p text:style-name="P448"><text:tab/>private static final String SQL_QUERY_ANN_BY_ID = &quot;SELECT ann.id AS id, currency_pairs.symbol AS symbol, time_periods.id AS period_id, ann_kind.number_of_neurons, ann_kind.flags, ann.fitness, ann.weights, ann_kind.activities, neurons_coordinates.coordinates FROM ann, ann_kind, neurons_coordinates, currency_pairs, time_periods WHERE ann.id=%d AND neurons_coordinates.ann_id=ann.id AND ann_kind.currency_pairs_id=currency_pairs.id AND currency_pairs.period_id=time_periods.id AND ann.ann_kind_id = ann_kind.id;&quot;;</text:p><text:p text:style-name="P448"><text:soft-page-break/></text:p><text:p text:style-name="P448"><text:tab/>/**</text:p><text:p text:style-name="P448"><text:tab/> * SQL query for selecting currency pairs ID by simbol and period.</text:p><text:p text:style-name="P448"><text:tab/> */</text:p><text:p text:style-name="P448"><text:tab/>private static final String SQL_QUERY_CURRENCY_PAIR_BY_CURRENCY_PAIR_AND_PERIOD = &quot;SELECT id FROM currency_pairs WHERE symbol=&apos;%s&apos; AND period_id=%d&quot;;</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/>/**</text:p><text:p text:style-name="P448"><text:tab/> * SQL query for checking if selected ANN has neuron coordinates.</text:p><text:p text:style-name="P448"><text:tab/> */</text:p><text:p text:style-name="P448"><text:tab/>private static final String SQL_QUERY_HAS_COORDINATES = &quot;SELECT * FROM neurons_coordinates WHERE neurons_coordinates.ann_id=%d;&quot;;</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/>/**</text:p><text:p text:style-name="P448"><text:tab/> * SQL query for obtaining number of neurons.</text:p><text:p text:style-name="P448"><text:tab/> */</text:p><text:p text:style-name="P448"><text:tab/>private static final String SQL_QUERY_NUMBER_OF_NEURONS = &quot;SELECT ann_kind.number_of_neurons FROM ann, ann_kind WHERE ann.ann_kind_id = ann_kind.id AND ann.id = %d;&quot;;</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/>/**</text:p><text:p text:style-name="P448"><text:tab/> * SQL query for insertion of default initial coordinates.</text:p><text:p text:style-name="P448"><text:tab/> */</text:p><text:p text:style-name="P448"><text:tab/>private static final String SQL_QUERY_INSERT_DEFAULT_COORDINATES = &quot;INSERT INTO neurons_coordinates (ann_id, coordinates) VALUES (%d, &apos;%s&apos;);&quot;;</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/>/**</text:p><text:p text:style-name="P448"><text:tab/> * SQL query updating neurons flags and weights activities.</text:p><text:p text:style-name="P448"><text:tab/> */</text:p><text:p text:style-name="P448"><text:tab/>private static final String SQL_QUERY_UPDATE_FLAGS_AND_ACTIVITIES = &quot;UPDATE ann_kind SET flags = &apos;%s&apos;, activities = &apos;%s&apos; WHERE ann_kind.id = (SELECT ann_kind_id FROM ann WHERE ann.id = %d);&quot;;</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/>/**</text:p><text:p text:style-name="P448"><text:tab/> * SQL query updating weights.</text:p><text:p text:style-name="P448"><text:tab/> */</text:p><text:p text:style-name="P448"><text:tab/>private static final String SQL_QUERY_UPDATE_WEIGHTS = &quot;UPDATE ann SET weights = &apos;%s&apos; WHERE ann.id = %d;&quot;;</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/>/**</text:p><text:p text:style-name="P448"><text:tab/> * SQL query for updating neurons coordinates.</text:p><text:p text:style-name="P448"><text:tab/> */</text:p><text:p text:style-name="P448"><text:tab/>private static final String SQL_QUERY_UPDATE_COORDINATES = &quot;UPDATE neurons_coordinates SET coordinates = &apos;%s&apos; WHERE neurons_coordinates.ann_id = &apos;%d&apos;;&quot;;</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/>/**</text:p><text:p text:style-name="P448"><text:tab/> * SQL query for inserting information about a new ANN kind.</text:p><text:p text:style-name="P448"><text:tab/> */</text:p><text:p text:style-name="P448"><text:tab/>private static final String SQL_QUERY_INSERT_ANN_KIND = &quot;INSERT INTO ann_kind(currency_pairs_id, number_of_neurons, flags, activities) VALUES (&apos;%s&apos;, &apos;%d&apos;, &apos;%s&apos;, &apos;%s&apos;)&quot;;</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/>/**</text:p><text:p text:style-name="P448"><text:tab/> * SQL query for inserting information about a new ANN.</text:p><text:p text:style-name="P448"><text:tab/> */</text:p><text:p text:style-name="P448"><text:tab/>private static final String SQL_QUERY_INSERT_ANN = &quot;INSERT INTO ann(ann_kind_id, fitness, weights) VALUES(&apos;%d&apos;, &apos;%d&apos;, &apos;%s&apos;)&quot;;</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/>/**</text:p><text:p text:style-name="P448"><text:tab/> * SQL query for deleting information about an ANN kind.</text:p><text:p text:style-name="P448"><text:tab/> */</text:p><text:p text:style-name="P448"><text:tab/>private static final String SQL_QUERY_DELETE_ANN_KIND = &quot;DELETE FROM ann_kind WHERE id IN (SELECT ann_kind_id FROM ann WHERE id=&apos;%d&apos;)&quot;;</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/>/**</text:p><text:p text:style-name="P448"><text:tab/> * SQL query for deleting information about an ANN.</text:p><text:p text:style-name="P448"><text:tab/> */</text:p><text:p text:style-name="P448"><text:tab/>private static final String SQL_QUERY_DELETE_ANN = &quot;DELETE FROM ann WHERE id=&apos;%d&apos;&quot;;</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/>/**</text:p><text:p text:style-name="P448"><text:tab/> * SQL query for inserting information about a new ANN.</text:p><text:p text:style-name="P448"><text:tab/> */</text:p><text:p text:style-name="P448"><text:tab/>private static final String SQL_QUERY_INSERT_ANN_COORDINATES = &quot;INSERT INTO neurons_coordinates(ann_id, coordinates) VALUES(&apos;%d&apos;, &apos;%s&apos;)&quot;;</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/>/**</text:p><text:p text:style-name="P448"><text:tab/> * SQL query for selecting currency pairs.</text:p><text:p text:style-name="P448"><text:tab/> */</text:p><text:p text:style-name="P448"><text:tab/>private static final String SQL_QUERY_SYMBOL = &quot;SELECT DISTINCT symbol FROM currency_pairs&quot;;</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/>/**</text:p><text:p text:style-name="P448"><text:tab/> * SQL query for selecting periods.</text:p><text:p text:style-name="P448"><text:tab/> */</text:p><text:p text:style-name="P448"><text:tab/>private static final String SQL_QUERY_PERIOD = &quot;SELECT id, period FROM time_periods&quot;;</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/>/**</text:p><text:p text:style-name="P448"><text:tab/> * Containing the MYSQL driver for the connection.</text:p><text:p text:style-name="P448"><text:tab/> */</text:p><text:p text:style-name="P448"><text:tab/>private static final String MYSQL_DRIVER = &quot;com.mysql.jdbc.Driver&quot;;</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/>/**</text:p><text:p text:style-name="P448"><text:tab/> * Default minimum x coordinate to be written into database.</text:p><text:p text:style-name="P448"><text:tab/> */</text:p><text:p text:style-name="P448"><text:tab/>private static final int DEFAULT_MIN_X_COORDINATE = 100;</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/>/**</text:p><text:p text:style-name="P448"><text:tab/> * Default minimum y coordinate to be written into database.</text:p><text:p text:style-name="P448"><text:tab/> */</text:p><text:p text:style-name="P448"><text:tab/>private static final int DEFAULT_MIN_Y_COORDINATE = 100;</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/>/**</text:p><text:p text:style-name="P448"><text:tab/> * Default maximum x coordinate to be written into database.</text:p><text:p text:style-name="P448"><text:tab/> */</text:p><text:p text:style-name="P448"><text:tab/>private static final int DEFAULT_MAX_X_COORDINATE = 500;</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/>/**</text:p><text:p text:style-name="P448"><text:tab/> * Default maximum y coordinate to be written into database.</text:p><text:p text:style-name="P448"><text:tab/> */</text:p><text:p text:style-name="P448"><text:tab/>private static final int DEFAULT_MAX_Y_COORDINATE = 500;</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/>/**</text:p><text:p text:style-name="P448"><text:tab/> * Containing the address where the database is hosted.</text:p><text:p text:style-name="P448"><text:tab/> */</text:p><text:p text:style-name="P448"><text:tab/>private String host;</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/>/**</text:p><text:p text:style-name="P448"><text:tab/> * Representing the port number for the host.</text:p><text:p text:style-name="P448"><text:tab/> */</text:p><text:p text:style-name="P448"><text:tab/>private int port;</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/>/**</text:p><text:p text:style-name="P448"><text:tab/> * Containing the name of the database.</text:p><text:p text:style-name="P448"><text:tab/> */</text:p><text:p text:style-name="P448"><text:tab/>private String databaseName;</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/>/**</text:p><text:p text:style-name="P448"><text:tab/> * Containing the username for logging in.</text:p><text:p text:style-name="P448"><text:tab/> */</text:p><text:p text:style-name="P448"><text:tab/>private String username;</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/>/**</text:p><text:p text:style-name="P448"><text:tab/> * Containing the password for logging in.</text:p><text:p text:style-name="P448"><text:tab/> */</text:p><text:p text:style-name="P448"><text:tab/>private String password;</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/>/**</text:p><text:p text:style-name="P448"><text:tab/> * Link to the database server.</text:p><text:p text:style-name="P448"><text:tab/> */</text:p><text:p text:style-name="P448"><text:soft-page-break/><text:tab/>private Connection connection;</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/>/**</text:p><text:p text:style-name="P448"><text:tab/> * Constructing the database helping class with passed parameters.</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @param host</text:p><text:p text:style-name="P448"><text:tab/> * <text:s text:c="11"/>The address where the database is hosted.</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @param port</text:p><text:p text:style-name="P448"><text:tab/> * <text:s text:c="11"/>The port number for the host.</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @param databaseName</text:p><text:p text:style-name="P448"><text:tab/> * <text:s text:c="11"/>The name of the database.</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @param username</text:p><text:p text:style-name="P448"><text:tab/> * <text:s text:c="11"/>The username for logging into the server.</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @param password</text:p><text:p text:style-name="P448"><text:tab/> * <text:s text:c="11"/>The password for logging into the server.</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @author Momchil Anachkov</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @email mZer0000@gmail.com</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @date 18 Dec 2010</text:p><text:p text:style-name="P448"><text:tab/> */</text:p><text:p text:style-name="P448"><text:tab/>public DatabaseHelper(String host, int port, String databaseName,</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>String username, String password) {</text:p><text:p text:style-name="P448"><text:tab/><text:tab/>super();</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/><text:tab/>this.host = host;</text:p><text:p text:style-name="P448"><text:tab/><text:tab/>this.port = port;</text:p><text:p text:style-name="P448"><text:tab/><text:tab/>this.databaseName = databaseName;</text:p><text:p text:style-name="P448"><text:tab/><text:tab/>this.username = username;</text:p><text:p text:style-name="P448"><text:tab/><text:tab/>this.password = password;</text:p><text:p text:style-name="P448"><text:tab/>}</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/>/**</text:p><text:p text:style-name="P448"><text:tab/> * Constructing the database helping class without passed parameters.</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @author Momchil Anachkov</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @email mZer0000@gmail.com</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @date 18 Dec 2010</text:p><text:p text:style-name="P448"><text:tab/> */</text:p><text:p text:style-name="P448"><text:tab/>public DatabaseHelper() {</text:p><text:p text:style-name="P448"><text:tab/><text:tab/>this(&quot;&quot;, 0, &quot;&quot;, &quot;&quot;, &quot;&quot;);</text:p><text:p text:style-name="P448"><text:tab/>}</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/>/**</text:p><text:p text:style-name="P448"><text:tab/> * Database host URL getter.</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @author Momchil Anachkov</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @email mZer0000@gmail.com</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @date 18 Dec 2010</text:p><text:p text:style-name="P448"><text:tab/> */</text:p><text:p text:style-name="P448"><text:tab/>public String getHost() {</text:p><text:p text:style-name="P448"><text:tab/><text:tab/>return host;</text:p><text:p text:style-name="P448"><text:tab/>}</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/>/**</text:p><text:p text:style-name="P448"><text:tab/> * Database host URL setter.</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @param host</text:p><text:p text:style-name="P448"><text:tab/> * <text:s text:c="11"/>The host to be set.</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @author Momchil Anachkov</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @email mZer0000@gmail.com</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @date 18 Dec 2010</text:p><text:p text:style-name="P448"><text:tab/> */</text:p><text:p text:style-name="P448"><text:tab/>public void setHost(String host) {</text:p><text:p text:style-name="P448"><text:tab/><text:tab/>this.host = host;</text:p><text:p text:style-name="P448"><text:tab/>}</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/>/**</text:p><text:p text:style-name="P448"><text:tab/> * Databes server port getter.</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @author Momchil Anachkov</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @email mZer0000@gmail.com</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @date 18 Dec 2010</text:p><text:p text:style-name="P448"><text:tab/> */</text:p><text:p text:style-name="P448"><text:tab/>public int getPort() {</text:p><text:p text:style-name="P448"><text:tab/><text:tab/>return port;</text:p><text:p text:style-name="P448"><text:tab/>}</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/>/**</text:p><text:p text:style-name="P448"><text:tab/> * Databes server port setter.</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @param port</text:p><text:p text:style-name="P448"><text:tab/> * <text:s text:c="11"/>The port to be set.</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @author Momchil Anachkov</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @email mZer0000@gmail.com</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @date 18 Dec 2010</text:p><text:p text:style-name="P448"><text:tab/> */</text:p><text:p text:style-name="P448"><text:tab/>public void setPort(int port) {</text:p><text:p text:style-name="P448"><text:tab/><text:tab/>this.port = port;</text:p><text:p text:style-name="P448"><text:tab/>}</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/>/**</text:p><text:p text:style-name="P448"><text:tab/> * Database name getter.</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @author Momchil Anachkov</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @email mZer0000@gmail.com</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @date 18 Dec 2010</text:p><text:p text:style-name="P448"><text:tab/> */</text:p><text:p text:style-name="P448"><text:tab/>public String getDatabaseName() {</text:p><text:p text:style-name="P448"><text:tab/><text:tab/>return databaseName;</text:p><text:p text:style-name="P448"><text:tab/>}</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/>/**</text:p><text:p text:style-name="P448"><text:tab/> * Database name setter.</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @param databaseName</text:p><text:p text:style-name="P448"><text:soft-page-break/><text:tab/> * <text:s text:c="11"/>The database name to be set.</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @author Momchil Anachkov</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @email mZer0000@gmail.com</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @date 18 Dec 2010</text:p><text:p text:style-name="P448"><text:tab/> */</text:p><text:p text:style-name="P448"><text:tab/>public void setDatabaseName(String databaseName) {</text:p><text:p text:style-name="P448"><text:tab/><text:tab/>this.databaseName = databaseName;</text:p><text:p text:style-name="P448"><text:tab/>}</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/>/**</text:p><text:p text:style-name="P448"><text:tab/> * Database username getter.</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @author Momchil Anachkov</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @email mZer0000@gmail.com</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @date 18 Dec 2010</text:p><text:p text:style-name="P448"><text:tab/> */</text:p><text:p text:style-name="P448"><text:tab/>public String getUsername() {</text:p><text:p text:style-name="P448"><text:tab/><text:tab/>return username;</text:p><text:p text:style-name="P448"><text:tab/>}</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/>/**</text:p><text:p text:style-name="P448"><text:tab/> * Database username setter.</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @param username</text:p><text:p text:style-name="P448"><text:tab/> * <text:s text:c="11"/>The username to be set.</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @author Momchil Anachkov</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @email mZer0000@gmail.com</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @date 18 Dec 2010</text:p><text:p text:style-name="P448"><text:tab/> */</text:p><text:p text:style-name="P448"><text:tab/>public void setUsername(String username) {</text:p><text:p text:style-name="P448"><text:tab/><text:tab/>this.username = username;</text:p><text:p text:style-name="P448"><text:tab/>}</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/>/**</text:p><text:p text:style-name="P448"><text:tab/> * Database password getter.</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @author Momchil Anachkov</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @email mZer0000@gmail.com</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @date 18 Dec 2010</text:p><text:p text:style-name="P448"><text:tab/> */</text:p><text:p text:style-name="P448"><text:tab/>public String getPassword() {</text:p><text:p text:style-name="P448"><text:tab/><text:tab/>return password;</text:p><text:p text:style-name="P448"><text:tab/>}</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/>/**</text:p><text:p text:style-name="P448"><text:tab/> * Database password setter.</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @param password</text:p><text:p text:style-name="P448"><text:tab/> * <text:s text:c="11"/>The password to be set.</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @author Momchil Anachkov</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @email mZer0000@gmail.com</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @date 18 Dec 2010</text:p><text:p text:style-name="P448"><text:tab/> */</text:p><text:p text:style-name="P448"><text:tab/>public void setPassword(String password) {</text:p><text:p text:style-name="P448"><text:tab/><text:tab/>this.password = password;</text:p><text:p text:style-name="P448"><text:tab/>}</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/>/**</text:p><text:p text:style-name="P448"><text:tab/> * Connecting to database.</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @author Momchil Anachkov</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @email mZer0000@gmail.com</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @date 18 Dec 2010</text:p><text:p text:style-name="P448"><text:tab/> */</text:p><text:p text:style-name="P448"><text:tab/>public void connect() throws Exception {</text:p><text:p text:style-name="P448"><text:tab/><text:tab/>Class.forName(MYSQL_DRIVER).newInstance();</text:p><text:p text:style-name="P448"><text:tab/><text:tab/>connection = DriverManager.getConnection(&quot;jdbc:mysql://&quot; + host + &quot;:&quot;</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/>+ port + &quot;/&quot; + databaseName, username, password);</text:p><text:p text:style-name="P448"><text:tab/>}</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/>/**</text:p><text:p text:style-name="P448"><text:tab/> * Disconnecting from database.</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @author Momchil Anachkov</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @email mZer0000@gmail.com</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @date 18 Dec 2010</text:p><text:p text:style-name="P448"><text:tab/> */</text:p><text:p text:style-name="P448"><text:tab/>public void disconnect() throws Exception {</text:p><text:p text:style-name="P448"><text:tab/><text:tab/>connection.close();</text:p><text:p text:style-name="P448"><text:tab/>}</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/>/**</text:p><text:p text:style-name="P448"><text:tab/> * Provide list with available networks.</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @author Momchil Anachkov</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @email mZer0000@gmail.com</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @date 18 Dec 2010</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @return 2D array of strings with ANN information (id, symbol, period).</text:p><text:p text:style-name="P448"><text:tab/> */</text:p><text:p text:style-name="P448"><text:tab/>public String[][] loadAnnList() {</text:p><text:p text:style-name="P448"><text:tab/><text:tab/>String[][] result = null;</text:p><text:p text:style-name="P448"><text:tab/><text:tab/>try {</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>Statement select = connection.createStatement();</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>ResultSet resultSet = select</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>.executeQuery(SQL_QUERY_SYMBOL_PERIOD_ID);</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>resultSet.last();</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>int size = resultSet.getRow();</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>resultSet.beforeFirst();</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>if (size &gt; 0) {</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/>result = new String[size][3];</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/>int i = 0;</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/>while (resultSet.next() == true) {</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>result[i][0] = resultSet.getString(&quot;symbol&quot;);</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>result[i][1] = resultSet.getString(&quot;period&quot;);</text:p><text:p text:style-name="P448"><text:soft-page-break/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>result[i][2] = Integer.toString(resultSet.getInt(&quot;id&quot;));</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>i++;</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P448"><text:tab/><text:tab/>} catch (Exception ex) {</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>result = null;</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>System.err.println(Texts.ERROR_LOAD_ANN_LIST);</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>ex.printStackTrace();</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>// TODO Inform user that there is no valid ANN list.</text:p><text:p text:style-name="P448"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/><text:tab/>return (result);</text:p><text:p text:style-name="P448"><text:tab/>}</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/>/**</text:p><text:p text:style-name="P448"><text:tab/> * Provide list with available networks.</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @param symbol</text:p><text:p text:style-name="P448"><text:tab/> * <text:s text:c="11"/>Currency pair symbol.</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @author Momchil Anachkov</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @email mZer0000@gmail.com</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @date 18 Dec 2010</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @return 2D array of strings with ANN information (id, symbol, period).</text:p><text:p text:style-name="P448"><text:tab/> */</text:p><text:p text:style-name="P448"><text:tab/>public String[][] loadAnnListBySymbol(String symbol) {</text:p><text:p text:style-name="P448"><text:tab/><text:tab/>String[][] result = null;</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/><text:tab/>try {</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>String sql = String.format(SQL_QUERY_SYMBOL_PERIOD_ID_BY_SYMBOL,</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>symbol);</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>Statement select = connection.createStatement();</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>ResultSet resultSet = select.executeQuery(sql);</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>resultSet.last();</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>int size = resultSet.getRow();</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>resultSet.beforeFirst();</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>if (size &gt; 0) {</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/>result = new String[size][3];</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/>int i = 0;</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/>while (resultSet.next() == true) {</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>result[i][0] = resultSet.getString(&quot;symbol&quot;);</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>result[i][1] = resultSet.getString(&quot;period&quot;);</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>result[i][2] = Integer.toString(resultSet.getInt(&quot;id&quot;));</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>i++;</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P448"><text:tab/><text:tab/>} catch (Exception e) {</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>System.err.println(Texts.ERROR_LOAD_ANN_LIST);</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>result = null;</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>// TODO Inform user that there is no valid ANN list.</text:p><text:p text:style-name="P448"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/><text:tab/>return (result);</text:p><text:p text:style-name="P448"><text:tab/>}</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/>/**</text:p><text:p text:style-name="P448"><text:tab/> * Provide list with available networks.</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @param period</text:p><text:p text:style-name="P448"><text:tab/> * <text:s text:c="11"/>Currency pair period.</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @author Momchil Anachkov</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @email mZer0000@gmail.com</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @date 18 Dec 2010</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @return 2D array of strings with ANN information (id, symbol, period).</text:p><text:p text:style-name="P448"><text:tab/> */</text:p><text:p text:style-name="P448"><text:tab/>public String[][] loadAnnListByPeriod(int period) {</text:p><text:p text:style-name="P448"><text:tab/><text:tab/>String[][] result = null;</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/><text:tab/>try {</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>String sql = String.format(SQL_QUERY_SYMBOL_PERIOD_ID_BY_PERIOD,</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>period);</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>Statement select = connection.createStatement();</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>ResultSet resultSet = select.executeQuery(sql);</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>resultSet.last();</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>int size = resultSet.getRow();</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>resultSet.beforeFirst();</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>if (size &gt; 0) {</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/>result = new String[size][3];</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/>int i = 0;</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/>while (resultSet.next() == true) {</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>result[i][0] = resultSet.getString(&quot;symbol&quot;);</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>result[i][1] = resultSet.getString(&quot;period&quot;);</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>result[i][2] = Integer.toString(resultSet.getInt(&quot;id&quot;));</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>i++;</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P448"><text:tab/><text:tab/>} catch (Exception ex) {</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>System.err.println(Texts.ERROR_LOAD_ANN_LIST);</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>result = null;</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>// TODO Inform user that there is no valid ANN list.</text:p><text:p text:style-name="P448"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/><text:tab/>return (result);</text:p><text:p text:style-name="P448"><text:tab/>}</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/>/**</text:p><text:p text:style-name="P448"><text:tab/> * Provide list with available networks.</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @param symbol</text:p><text:p text:style-name="P448"><text:tab/> * <text:s text:c="11"/>Currency pair symbol.</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @param period</text:p><text:p text:style-name="P448"><text:tab/> * <text:s text:c="11"/>Currency pair period.</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @author Momchil Anachkov</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @email mZer0000@gmail.com</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @date 18 Dec 2010</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @return 2D array of strings with ANN information (id, symbol, period).</text:p><text:p text:style-name="P448"><text:tab/> */</text:p><text:p text:style-name="P448"><text:tab/>public String[][] loadAnnList(String symbol, int period) {</text:p><text:p text:style-name="P448"><text:tab/><text:tab/>String[][] result = null;</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/><text:tab/>try {</text:p><text:p text:style-name="P448"><text:soft-page-break/><text:tab/><text:tab/><text:tab/>String sql = String.format(</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>SQL_QUERY_SYMBOL_PERIOD_ID_BY_SYMBOL_AND_PERIOD, symbol,</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>period);</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>Statement select = connection.createStatement();</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>ResultSet resultSet = select.executeQuery(sql);</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>resultSet.last();</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>int size = resultSet.getRow();</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>resultSet.beforeFirst();</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>if (size &gt; 0) {</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/>result = new String[size][3];</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/>int i = 0;</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/>while (resultSet.next() == true) {</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>result[i][0] = resultSet.getString(&quot;symbol&quot;);</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>result[i][1] = resultSet.getString(&quot;period&quot;);</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>result[i][2] = Integer.toString(resultSet.getInt(&quot;id&quot;));</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>i++;</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P448"><text:tab/><text:tab/>} catch (Exception e) {</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>System.err.println(Texts.ERROR_LOAD_ANN_LIST);</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>e.printStackTrace();</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>result = null;</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>// TODO Inform user that there is no valid ANN list.</text:p><text:p text:style-name="P448"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/><text:tab/>return (result);</text:p><text:p text:style-name="P448"><text:tab/>}</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/>/**</text:p><text:p text:style-name="P448"><text:tab/> * Provides a list with available currency pairs.</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @author Ralitza Koleva</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @email rallly@abv.bg</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @date 17 Oct 2011</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @return Array of strings with currency pairs.</text:p><text:p text:style-name="P448"><text:tab/> */</text:p><text:p text:style-name="P448"><text:tab/>public String[][] loadCurrencyPairs() {</text:p><text:p text:style-name="P448"><text:tab/><text:tab/>String[][] result = null;</text:p><text:p text:style-name="P448"><text:tab/><text:tab/>try {</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>Statement select = connection.createStatement();</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>ResultSet resultSet = select.executeQuery(SQL_QUERY_SYMBOL);</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>resultSet.last();</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>int size = resultSet.getRow();</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>resultSet.beforeFirst();</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>if (size &gt; 0) {</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/>result = new String[size][2];</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/>int i = 0;</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/>while (resultSet.next() == true) {</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>result[i][0] = resultSet.getString(&quot;symbol&quot;);</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>i++;</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P448"><text:tab/><text:tab/>} catch (Exception ex) {</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>result = null;</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>System.err.println(Texts.ERROR_LOAD_CURRENCY_PAIRS_LIST);</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>ex.printStackTrace();</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>// TODO Inform user that there is no valid currency pairs list.</text:p><text:p text:style-name="P448"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P448"><text:tab/><text:tab/>return (result);</text:p><text:p text:style-name="P448"><text:tab/>}</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/>/**</text:p><text:p text:style-name="P448"><text:tab/> * Provides a list with available periods.</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @author Ralitza Koleva</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @email rallly@abv.bg</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @date 17 Oct 2011</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @return 2D array of strings with periods.</text:p><text:p text:style-name="P448"><text:tab/> */</text:p><text:p text:style-name="P448"><text:tab/>public String[][] loadPeriods() {</text:p><text:p text:style-name="P448"><text:tab/><text:tab/>String[][] result = null;</text:p><text:p text:style-name="P448"><text:tab/><text:tab/>try {</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>Statement select = connection.createStatement();</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>ResultSet resultSet = select.executeQuery(SQL_QUERY_PERIOD);</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>resultSet.last();</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>int size = resultSet.getRow();</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>resultSet.beforeFirst();</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>if (size &gt; 0) {</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/>result = new String[size][2];</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/>int i = 0;</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/>while (resultSet.next() == true) {</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>result[i][0] = resultSet.getString(&quot;id&quot;);</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>result[i][1] = resultSet.getString(&quot;period&quot;);</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>i++;</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P448"><text:tab/><text:tab/>} catch (Exception ex) {</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>result = null;</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>System.err.println(Texts.ERROR_LOAD_PERIODS_LIST);</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>ex.printStackTrace();</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>// TODO Inform user that there is no valid periods list.</text:p><text:p text:style-name="P448"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P448"><text:tab/><text:tab/>return (result);</text:p><text:p text:style-name="P448"><text:tab/>}</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/>/**</text:p><text:p text:style-name="P448"><text:tab/> * Checking if selected ANN has neuron coordinates.</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @param id</text:p><text:p text:style-name="P448"><text:tab/> * <text:s text:c="11"/>Unique identifier for the ANN.</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @author Momchil Anachkov</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @email mZer0000@gmail.com</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @date 03 Jan 2010</text:p><text:p text:style-name="P448"><text:tab/> */</text:p><text:p text:style-name="P448"><text:tab/>void initIfNeeded(int id) {</text:p><text:p text:style-name="P448"><text:tab/><text:tab/>String sql = &quot;&quot;;</text:p><text:p text:style-name="P448"><text:tab/><text:tab/>Statement statement = null;</text:p><text:p text:style-name="P448"><text:tab/><text:tab/>ResultSet resultSet = null;</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/><text:tab/>try {</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>statement = connection.createStatement();</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>sql = String.format(SQL_QUERY_HAS_COORDINATES, id);</text:p><text:p text:style-name="P448"><text:soft-page-break/><text:tab/><text:tab/><text:tab/>resultSet = statement.executeQuery(sql);</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>resultSet.last();</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>if (resultSet.getRow() == 1) {</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/>return;</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>sql = String.format(SQL_QUERY_NUMBER_OF_NEURONS, id);</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>resultSet = statement.executeQuery(sql);</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>resultSet.first();</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>int numberOfNeurons = resultSet.getInt(&quot;number_of_neurons&quot;);</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>String values = &quot;&quot;;</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>for (int i = 0; i &lt; numberOfNeurons; i++) {</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/>values += DEFAULT_MIN_X_COORDINATE</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>+ (int) (Math.random() * (DEFAULT_MAX_X_COORDINATE</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>- DEFAULT_MIN_X_COORDINATE + 1));</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/>values += &quot; &quot;;</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/>values += DEFAULT_MIN_Y_COORDINATE</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>+ (int) (Math.random() * (DEFAULT_MAX_Y_COORDINATE</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>- DEFAULT_MIN_Y_COORDINATE + 1));</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/>values += &quot; &quot;;</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>values = values.trim();</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>sql = String.format(SQL_QUERY_INSERT_DEFAULT_COORDINATES, id,</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>values);</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>statement.executeUpdate(sql);</text:p><text:p text:style-name="P448"><text:tab/><text:tab/>} catch (Exception ex) {</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>// TODO Inform user that there is database problem.</text:p><text:p text:style-name="P448"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P448"><text:tab/>}</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/>/**</text:p><text:p text:style-name="P448"><text:tab/> * Provide selected ANN.</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @param id</text:p><text:p text:style-name="P448"><text:tab/> * <text:s text:c="11"/>Unique identifier for the ANN.</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @author Momchil Anachkov</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @email mZer0000@gmail.com</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @date 18 Dec 2010</text:p><text:p text:style-name="P448"><text:tab/> */</text:p><text:p text:style-name="P448"><text:tab/>public ArtificialNeuralNetwork loadAnn(int id) {</text:p><text:p text:style-name="P448"><text:tab/><text:tab/>String line = &quot;&quot;;</text:p><text:p text:style-name="P448"><text:tab/><text:tab/>String values[] = null;</text:p><text:p text:style-name="P448"><text:tab/><text:tab/>ArtificialNeuralNetwork result = null;</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/><text:tab/>initIfNeeded(id);</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/><text:tab/>try {</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>Statement select = connection.createStatement();</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>String sql = String.format(SQL_QUERY_ANN_BY_ID, id);</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>ResultSet resultSet = select.executeQuery(sql);</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>resultSet.last();</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>if (resultSet.getRow() != 1) {</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/>throw (new Exception(Texts.ERROR_NUMBER_DATABASE_RESULTS));</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>result = new ArtificialNeuralNetwork();</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>result.id = resultSet.getInt(&quot;id&quot;);</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>result.symbol = resultSet.getString(&quot;symbol&quot;);</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>result.period = resultSet.getInt(&quot;period_id&quot;);</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>result.numberOfNeurons = resultSet.getInt(&quot;number_of_neurons&quot;);</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>result.fitness = resultSet.getDouble(&quot;fitness&quot;);</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/> * Passing values from database to array of flags.</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>line = resultSet.getString(&quot;flags&quot;);</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>values = line.split(&quot;\\s+&quot;);</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>result.flags = new int[result.numberOfNeurons];</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>if (values.length != result.numberOfNeurons) {</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/>throw (new Exception(&quot;Wrong number of neuron flags.&quot;));</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>for (int i = 0; i &lt; result.flags.length; i++) {</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/>result.flags[i] = Integer.parseInt(values[i]);</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/> * Passing values from database to array of weights.</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>line = resultSet.getString(&quot;weights&quot;);</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>values = line.split(&quot;\\s+&quot;);</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>result.weights = new double[result.numberOfNeurons][result.numberOfNeurons];</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>if (values.length != result.numberOfNeurons</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>* result.numberOfNeurons) {</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/>throw (new Exception(&quot;Wrong number of weights.&quot;));</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>for (int j = 0; j &lt; result.numberOfNeurons; j++) {</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/>for (int i = 0; i &lt; result.numberOfNeurons; i++) {</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>result.weights[i][j] = Double.parseDouble(values[i + j</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>* result.numberOfNeurons]);</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/> * Passing values from database to array of activities.</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>line = resultSet.getString(&quot;activities&quot;);</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>values = line.split(&quot;\\s+&quot;);</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>result.activities = new double[result.numberOfNeurons][result.numberOfNeurons];</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>if (values.length != result.numberOfNeurons</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>* result.numberOfNeurons) {</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/>throw (new Exception(&quot;Wrong number of activities.&quot;));</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>for (int j = 0; j &lt; result.numberOfNeurons; j++) {</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/>for (int i = 0; i &lt; result.numberOfNeurons; i++) {</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>result.activities[i][j] = Double.parseDouble(values[i + j</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>* result.numberOfNeurons]);</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/> * Passing values from database to array of coordinates.</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>line = resultSet.getString(&quot;coordinates&quot;);</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>values = line.split(&quot;\\s+&quot;);</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>result.coordinates = new int[result.numberOfNeurons][2];</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>if (values.length != result.numberOfNeurons * 2) {</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/>throw (new Exception(&quot;Wrong number of coordinates.&quot;));</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>for (int i = 0; i &lt; result.numberOfNeurons; i++) {</text:p><text:p text:style-name="P448"><text:soft-page-break/><text:tab/><text:tab/><text:tab/><text:tab/>for (int k = 0; k &lt; 2; k++) {</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>result.coordinates[i][k] = Integer.parseInt(values[i * 2</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>+ k]);</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/><text:tab/>} catch (Exception ex) {</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>result = null;</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>System.err.println(Texts.ERROR_LOAD_ANN_PART_1 + id</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>+ Texts.ERROR_LOAD_ANN_PART_2);</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>ex.printStackTrace();</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>// TODO Inform user that there is no valid ANN list.</text:p><text:p text:style-name="P448"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/><text:tab/>return (result);</text:p><text:p text:style-name="P448"><text:tab/>}</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/>/**</text:p><text:p text:style-name="P448"><text:tab/> * Save ANN to remote database server.</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @param ann</text:p><text:p text:style-name="P448"><text:tab/> * <text:s text:c="11"/>ANN container.</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @author Momchil Anachkov</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @email mZer0000@gmail.com</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @date 18 Dec 2010</text:p><text:p text:style-name="P448"><text:tab/> */</text:p><text:p text:style-name="P448"><text:tab/>public void saveAnn(ArtificialNeuralNetwork ann) {</text:p><text:p text:style-name="P448"><text:tab/><text:tab/>String sql = &quot;&quot;;</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/><text:tab/>String flags = &quot;&quot;;</text:p><text:p text:style-name="P448"><text:tab/><text:tab/>for (int i = 0; i &lt; ann.flags.length; i++) {</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>flags = flags + Integer.toString(ann.flags[i]) + &quot; &quot;;</text:p><text:p text:style-name="P448"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P448"><text:tab/><text:tab/>flags = flags.trim();</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/><text:tab/>String activities = &quot;&quot;;</text:p><text:p text:style-name="P448"><text:tab/><text:tab/>for (int j = 0; j &lt; ann.numberOfNeurons; j++) {</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>for (int i = 0; i &lt; ann.numberOfNeurons; i++) {</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/>activities = activities + Double.toString(ann.activities[i][j])</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>+ &quot; &quot;;</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>activities = activities.trim();</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>activities += &quot;\n&quot;;</text:p><text:p text:style-name="P448"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P448"><text:tab/><text:tab/>activities = activities.trim();</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/><text:tab/>String weights = &quot;&quot;;</text:p><text:p text:style-name="P448"><text:tab/><text:tab/>for (int j = 0; j &lt; ann.numberOfNeurons; j++) {</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>for (int i = 0; i &lt; ann.numberOfNeurons; i++) {</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/>weights = weights + Double.toString(ann.weights[i][j]) + &quot; &quot;;</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>weights = weights.trim();</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>weights += &quot;\n&quot;;</text:p><text:p text:style-name="P448"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P448"><text:tab/><text:tab/>weights = weights.trim();</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/><text:tab/>String coordinates = &quot;&quot;;</text:p><text:p text:style-name="P448"><text:tab/><text:tab/>for (int i = 0; i &lt; ann.numberOfNeurons; i++) {</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>for (int k = 0; k &lt; 2; k++) {</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/>coordinates = coordinates</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>+ Integer.toString(ann.coordinates[i][k]) + &quot; &quot;;</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P448"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P448"><text:tab/><text:tab/>coordinates = coordinates.trim();</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/><text:tab/>try {</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>Statement update = connection.createStatement();</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>sql = String.format(SQL_QUERY_UPDATE_FLAGS_AND_ACTIVITIES, flags,</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>activities, ann.id);</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>update.executeUpdate(sql);</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>sql = String.format(SQL_QUERY_UPDATE_WEIGHTS, weights, ann.id);</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>update.executeUpdate(sql);</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>sql = String.format(SQL_QUERY_UPDATE_COORDINATES, coordinates,</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>ann.id);</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>update.executeUpdate(sql);</text:p><text:p text:style-name="P448"><text:tab/><text:tab/>} catch (Exception ex) {</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>System.err.println(Texts.ERROR_UPDATE_ANN);</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>// TODO Inform user that the update process failed.</text:p><text:p text:style-name="P448"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P448"><text:tab/>}</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/>/**</text:p><text:p text:style-name="P448"><text:tab/> * Saves a new ANN to the remote database server.</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @param annSymbol</text:p><text:p text:style-name="P448"><text:tab/> * <text:s text:c="11"/>A currency pair chosen for the new ANN.</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @param annPeriod</text:p><text:p text:style-name="P448"><text:tab/> * <text:s text:c="11"/>A time period chosen for the new ANN.</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @param annNumberNeurons</text:p><text:p text:style-name="P448"><text:tab/> * <text:s text:c="11"/>Number of neurons of the new ANN.</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @param annActivitiesWeights</text:p><text:p text:style-name="P448"><text:tab/> * <text:s text:c="11"/>Weights of the new ANN.</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @param annFitness</text:p><text:p text:style-name="P448"><text:tab/> * <text:s text:c="11"/>Fitness of the new ANN.</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @param annFlags</text:p><text:p text:style-name="P448"><text:tab/> * <text:s text:c="11"/>Flags (neuron types) of the new ANN&apos;s neurons.</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @author Ralitza Koleva</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @email rallly@abv.bg</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @date 20 Sep 2011</text:p><text:p text:style-name="P448"><text:tab/> */</text:p><text:p text:style-name="P448"><text:tab/>public int saveNewAnn(String annSymbol, int annPeriod,</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>int annNumberNeurons, String annActivitiesWeights, int annFitness,</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>String annFlags) {</text:p><text:p text:style-name="P448"><text:tab/><text:tab/>String sql = &quot;&quot;;</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P448"><text:tab/><text:tab/> * The ID of the currency pair of the new inserted ANN.</text:p><text:p text:style-name="P448"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P448"><text:tab/><text:tab/>int currencyPairId = 0;</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P448"><text:tab/><text:tab/> * The ID of the new inserted ANN kind.</text:p><text:p text:style-name="P448"><text:soft-page-break/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P448"><text:tab/><text:tab/>int annKindId = 0;</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P448"><text:tab/><text:tab/> * The ID of the new inserted ANN.</text:p><text:p text:style-name="P448"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P448"><text:tab/><text:tab/>int annId = 0;</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/><text:tab/>try {</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/> * Selects the currency pair ID by symbol and period.</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>Statement insert = connection.createStatement();</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>sql = String.format(</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>SQL_QUERY_CURRENCY_PAIR_BY_CURRENCY_PAIR_AND_PERIOD,</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>annSymbol, annPeriod);</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>insert.execute(sql);</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>ResultSet selectedCurrencyPairId = insert.getResultSet();</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>if (selectedCurrencyPairId.next()) {</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/> * Gets the automatically generated ID of the new ANN kind.</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/>currencyPairId = selectedCurrencyPairId.getInt(1);</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/> * Inserts information about the new ANN kind.</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>sql = String.format(SQL_QUERY_INSERT_ANN_KIND, currencyPairId,</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>annNumberNeurons, annFlags, annActivitiesWeights);</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>insert.executeUpdate(sql, Statement.RETURN_GENERATED_KEYS);</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>ResultSet generatedAnnKindId = insert.getGeneratedKeys();</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>if (generatedAnnKindId.next()) {</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/> * Gets the automatically generated ID of the new ANN kind.</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/>annKindId = generatedAnnKindId.getInt(1);</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/> * Inserts information about the new ANN.</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>sql = String.format(SQL_QUERY_INSERT_ANN, annKindId, annFitness,</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>annActivitiesWeights);</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>insert.executeUpdate(sql, Statement.RETURN_GENERATED_KEYS);</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>ResultSet generatedAnnId = insert.getGeneratedKeys();</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>if (generatedAnnId.next()) {</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/> * Gets the automatically generated ID of the new ANN.</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/><text:tab/>annId = generatedAnnId.getInt(1);</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P448"><text:tab/><text:tab/>} catch (Exception ex) {</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>System.err.println(Texts.ERROR_ADD_ANN);</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>ex.printStackTrace();</text:p><text:p text:style-name="P448"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P448"><text:tab/><text:tab/>return annId;</text:p><text:p text:style-name="P448"><text:tab/>}</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/>/**</text:p><text:p text:style-name="P448"><text:tab/> * Deletes an ANN from the remote database server.</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @param id</text:p><text:p text:style-name="P448"><text:tab/> * <text:s text:c="11"/>Unique identifier of the ANN.</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @author Ralitza Koleva</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @email rallly@abv.bg</text:p><text:p text:style-name="P448"><text:tab/> * </text:p><text:p text:style-name="P448"><text:tab/> * @date 27 Nov 2011</text:p><text:p text:style-name="P448"><text:tab/> */</text:p><text:p text:style-name="P448"><text:tab/>public void deleteAnn(int id) {</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P448"><text:tab/><text:tab/> * SQL string.</text:p><text:p text:style-name="P448"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P448"><text:tab/><text:tab/>String sql = &quot;&quot;;</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/><text:tab/>try {</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/> * Deletes information about the ANN kind.</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>Statement delete = connection.createStatement();</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>sql = String.format(SQL_QUERY_DELETE_ANN_KIND, id);</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>delete.executeUpdate(sql);</text:p><text:p text:style-name="P448"/><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/> * Deletes information about the ANN.</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>sql = String.format(SQL_QUERY_DELETE_ANN, id);</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>delete.executeUpdate(sql);</text:p><text:p text:style-name="P448"><text:tab/><text:tab/>} catch (Exception ex) {</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>System.err.println(Texts.ERROR_DELETE_ANN);</text:p><text:p text:style-name="P448"><text:tab/><text:tab/><text:tab/>ex.printStackTrace();</text:p><text:p text:style-name="P448"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P448"><text:tab/>}</text:p><text:p text:style-name="P448">}</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5740_1486593966"/><text:s text:c="4"/>DeleteAnnPane.java<text:bookmark-end text:name="__RefHeading___Toc5740_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P449">package eu.veldsoft.backend;</text:p><text:p text:style-name="P449"/><text:p text:style-name="P449">/*******************************************************************************</text:p><text:p text:style-name="P449"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P449"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P449"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P449"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P449"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P449"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P449"><text:s/>* Copyright (C) 2008-2011 by Todor Balabanov <text:s/>( tdb@tbsoft.eu ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P449"><text:s/>* <text:s text:c="27"/>Iliyan Zankinski ( iliyan_mf@abv.bg ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P449"><text:s/>* <text:s text:c="27"/>Galq Cirkalova <text:s text:c="2"/>( galq_cirkalova@abv.bg ) <text:s text:c="6"/>*</text:p><text:p text:style-name="P449"><text:s/>* <text:s text:c="27"/>Ivan Grozev <text:s text:c="5"/>( ivan.iliev.grozev@gmail.com ) *</text:p><text:p text:style-name="P449"><text:s/>* <text:s text:c="27"/>Momchil Anachkov ( mZer0000@gmail.com ) <text:s text:c="9"/>*</text:p><text:p text:style-name="P449"><text:soft-page-break/><text:s/>* <text:s text:c="27"/>Ralitza Koleva <text:s text:c="2"/>( rallly@abv.bg ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P449"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P449"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P449"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P449"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P449"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P449"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P449"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P449"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P449"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P449"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P449"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P449"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P449"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P449"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P449"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P449"/><text:p text:style-name="P449">import java.awt.Dimension;</text:p><text:p text:style-name="P449">import java.awt.GridLayout;</text:p><text:p text:style-name="P449">import java.awt.event.ActionEvent;</text:p><text:p text:style-name="P449">import java.awt.event.ActionListener;</text:p><text:p text:style-name="P449"/><text:p text:style-name="P449">import javax.swing.JButton;</text:p><text:p text:style-name="P449">import javax.swing.JLabel;</text:p><text:p text:style-name="P449">import javax.swing.JOptionPane;</text:p><text:p text:style-name="P449">import javax.swing.JPanel;</text:p><text:p text:style-name="P449">import javax.swing.JComboBox;</text:p><text:p text:style-name="P449"/><text:p text:style-name="P449">/**</text:p><text:p text:style-name="P449"><text:s/>* Panel with GUI controls for Neural Network Management.</text:p><text:p text:style-name="P449"><text:s/>* </text:p><text:p text:style-name="P449"><text:s/>* @author Ralitza Koleva</text:p><text:p text:style-name="P449"><text:s/>* </text:p><text:p text:style-name="P449"><text:s/>* @email rallly@abv.bg</text:p><text:p text:style-name="P449"><text:s/>* </text:p><text:p text:style-name="P449"><text:s/>* @date 27 Nov 2010</text:p><text:p text:style-name="P449"><text:s/>*/</text:p><text:p text:style-name="P449">class DeleteAnnPane extends JPanel {</text:p><text:p text:style-name="P449"/><text:p text:style-name="P449"><text:tab/>/**</text:p><text:p text:style-name="P449"><text:tab/> * Default serial version UID.</text:p><text:p text:style-name="P449"><text:tab/> */</text:p><text:p text:style-name="P449"><text:tab/>private static final long serialVersionUID = 1L;</text:p><text:p text:style-name="P449"/><text:p text:style-name="P449"><text:tab/>/**</text:p><text:p text:style-name="P449"><text:tab/> * Parent applet reference.</text:p><text:p text:style-name="P449"><text:tab/> */</text:p><text:p text:style-name="P449"><text:tab/>private VitoshaTradeApplet parent = null;</text:p><text:p text:style-name="P449"/><text:p text:style-name="P449"><text:tab/>/**</text:p><text:p text:style-name="P449"><text:tab/> * GUI control for obtaining and selecting network ID.</text:p><text:p text:style-name="P449"><text:tab/> */</text:p><text:p text:style-name="P449"><text:tab/>private JComboBox networkId = new JComboBox();</text:p><text:p text:style-name="P449"/><text:p text:style-name="P449"><text:tab/>/**</text:p><text:p text:style-name="P449"><text:tab/> * GUI control for deleting a selected network.</text:p><text:p text:style-name="P449"><text:tab/> */</text:p><text:p text:style-name="P449"><text:tab/>private JButton delete = new JButton();</text:p><text:p text:style-name="P449"/><text:p text:style-name="P449"><text:tab/>/**</text:p><text:p text:style-name="P449"><text:tab/> * GUI control for updating ANN server information.</text:p><text:p text:style-name="P449"><text:tab/> */</text:p><text:p text:style-name="P449"><text:tab/>private JButton refresh = new JButton();</text:p><text:p text:style-name="P449"/><text:p text:style-name="P449"><text:tab/>/**</text:p><text:p text:style-name="P449"><text:tab/> * Constructing delete ANN pane.</text:p><text:p text:style-name="P449"><text:tab/> * </text:p><text:p text:style-name="P449"><text:tab/> * @param parent</text:p><text:p text:style-name="P449"><text:tab/> * <text:s text:c="11"/>The parent class.</text:p><text:p text:style-name="P449"><text:tab/> * </text:p><text:p text:style-name="P449"><text:tab/> * @author Ralitza Koleva</text:p><text:p text:style-name="P449"><text:tab/> * </text:p><text:p text:style-name="P449"><text:tab/> * @email rallly@abv.bg</text:p><text:p text:style-name="P449"><text:tab/> * </text:p><text:p text:style-name="P449"><text:tab/> * @date 27 Nov 2011</text:p><text:p text:style-name="P449"><text:tab/> */</text:p><text:p text:style-name="P449"><text:tab/>public DeleteAnnPane(final VitoshaTradeApplet parent) {</text:p><text:p text:style-name="P449"><text:tab/><text:tab/>this.parent = parent;</text:p><text:p text:style-name="P449"><text:tab/><text:tab/>this.setPreferredSize(new Dimension(VitoshaTradeApplet.EAST_PANE_WIDTH,</text:p><text:p text:style-name="P449"><text:tab/><text:tab/><text:tab/><text:tab/>VitoshaTradeApplet.EAST_PANE_HEIGHT));</text:p><text:p text:style-name="P449"/><text:p text:style-name="P449"><text:tab/><text:tab/>setLayout(new GridLayout(25, 1));</text:p><text:p text:style-name="P449"/><text:p text:style-name="P449"><text:tab/><text:tab/>add(new JLabel(Texts.LABEL_ANN_ID));</text:p><text:p text:style-name="P449"><text:tab/><text:tab/>add(networkId);</text:p><text:p text:style-name="P449"><text:tab/><text:tab/>networkId.setEditable(false);</text:p><text:p text:style-name="P449"/><text:p text:style-name="P449"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P449"><text:tab/><text:tab/> * Acts as separator.</text:p><text:p text:style-name="P449"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P449"><text:tab/><text:tab/>add(new JLabel());</text:p><text:p text:style-name="P449"/><text:p text:style-name="P449"><text:tab/><text:tab/>add(delete);</text:p><text:p text:style-name="P449"><text:tab/><text:tab/>delete.setText(Texts.LABEL_BUTTON_DELETE);</text:p><text:p text:style-name="P449"><text:tab/><text:tab/>delete.addActionListener(new ActionListener() {</text:p><text:p text:style-name="P449"/><text:p text:style-name="P449"><text:tab/><text:tab/><text:tab/>/**</text:p><text:p text:style-name="P449"><text:tab/><text:tab/><text:tab/> * Deletes all ANN information.</text:p><text:p text:style-name="P449"><text:tab/><text:tab/><text:tab/> * </text:p><text:p text:style-name="P449"><text:tab/><text:tab/><text:tab/> * @author Ralitza Koleva</text:p><text:p text:style-name="P449"><text:tab/><text:tab/><text:tab/> * </text:p><text:p text:style-name="P449"><text:tab/><text:tab/><text:tab/> * @email rallly@abv.bg</text:p><text:p text:style-name="P449"><text:tab/><text:tab/><text:tab/> * </text:p><text:p text:style-name="P449"><text:tab/><text:tab/><text:tab/> * @date 27 Nov 2011</text:p><text:p text:style-name="P449"><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P449"><text:tab/><text:tab/><text:tab/>public void actionPerformed(ActionEvent event) {</text:p><text:p text:style-name="P449"><text:tab/><text:tab/><text:tab/><text:tab/>try {</text:p><text:p text:style-name="P449"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>int ann_id = Integer.parseInt((String) networkId</text:p><text:p text:style-name="P449"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>.getSelectedItem());</text:p><text:p text:style-name="P449"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>parent.dbHelp.deleteAnn(ann_id);</text:p><text:p text:style-name="P449"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>loadAllAnnIds();</text:p><text:p text:style-name="P449"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>parent.workArea.repaint();</text:p><text:p text:style-name="P449"><text:tab/><text:tab/><text:tab/><text:tab/>} catch (Exception ex) {</text:p><text:p text:style-name="P449"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>showInformationMessage();</text:p><text:p text:style-name="P449"><text:tab/><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P449"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P449"><text:tab/><text:tab/>});</text:p><text:p text:style-name="P449"/><text:p text:style-name="P449"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P449"><text:tab/><text:tab/> * Acts as separator.</text:p><text:p text:style-name="P449"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P449"><text:tab/><text:tab/>add(new JLabel());</text:p><text:p text:style-name="P449"/><text:p text:style-name="P449"><text:tab/><text:tab/>add(refresh);</text:p><text:p text:style-name="P449"><text:tab/><text:tab/>refresh.setText(Texts.LABEL_BUTTON_REFRESH);</text:p><text:p text:style-name="P449"><text:soft-page-break/><text:tab/><text:tab/>refresh.addActionListener(new ActionListener() {</text:p><text:p text:style-name="P449"/><text:p text:style-name="P449"><text:tab/><text:tab/><text:tab/>/**</text:p><text:p text:style-name="P449"><text:tab/><text:tab/><text:tab/> * Refreshes ANN IDs in the ANN ID JComboBox.</text:p><text:p text:style-name="P449"><text:tab/><text:tab/><text:tab/> * </text:p><text:p text:style-name="P449"><text:tab/><text:tab/><text:tab/> * @author Ralitza Koleva</text:p><text:p text:style-name="P449"><text:tab/><text:tab/><text:tab/> * </text:p><text:p text:style-name="P449"><text:tab/><text:tab/><text:tab/> * @email rallly@abv.bg</text:p><text:p text:style-name="P449"><text:tab/><text:tab/><text:tab/> * </text:p><text:p text:style-name="P449"><text:tab/><text:tab/><text:tab/> * @date 27 Nov 2011</text:p><text:p text:style-name="P449"><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P449"><text:tab/><text:tab/><text:tab/>public void actionPerformed(ActionEvent event) {</text:p><text:p text:style-name="P449"><text:tab/><text:tab/><text:tab/><text:tab/>loadAllAnnIds();</text:p><text:p text:style-name="P449"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P449"><text:tab/><text:tab/>});</text:p><text:p text:style-name="P449"><text:tab/>}</text:p><text:p text:style-name="P449"/><text:p text:style-name="P449"><text:tab/>/**</text:p><text:p text:style-name="P449"><text:tab/> * Loads all ANN IDs in the ANN ID JComboBox.</text:p><text:p text:style-name="P449"><text:tab/> * </text:p><text:p text:style-name="P449"><text:tab/> * @author Ralitza Koleva</text:p><text:p text:style-name="P449"><text:tab/> * </text:p><text:p text:style-name="P449"><text:tab/> * @email rallly@abv.bg</text:p><text:p text:style-name="P449"><text:tab/> * </text:p><text:p text:style-name="P449"><text:tab/> * @date 29 Oct 2011</text:p><text:p text:style-name="P449"><text:tab/> */</text:p><text:p text:style-name="P449"><text:tab/>public void loadAllAnnIds() {</text:p><text:p text:style-name="P449"><text:tab/><text:tab/>String listIds[][] = parent.dbHelp.loadAnnList();</text:p><text:p text:style-name="P449"><text:tab/><text:tab/>networkId.removeAllItems();</text:p><text:p text:style-name="P449"><text:tab/><text:tab/>networkId.addItem(&quot;---&quot;);</text:p><text:p text:style-name="P449"><text:tab/><text:tab/>for (int i = 0; i &lt; listIds.length; i++) {</text:p><text:p text:style-name="P449"><text:tab/><text:tab/><text:tab/>networkId.addItem(listIds[i][2]);</text:p><text:p text:style-name="P449"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P449"><text:tab/>}</text:p><text:p text:style-name="P449"/><text:p text:style-name="P449"><text:tab/>/**</text:p><text:p text:style-name="P449"><text:tab/> * Shows a message if no ANN ID is selected to delete.</text:p><text:p text:style-name="P449"><text:tab/> * </text:p><text:p text:style-name="P449"><text:tab/> * @author Ralitza Koleva</text:p><text:p text:style-name="P449"><text:tab/> * </text:p><text:p text:style-name="P449"><text:tab/> * @email rallly@abv.bg</text:p><text:p text:style-name="P449"><text:tab/> * </text:p><text:p text:style-name="P449"><text:tab/> * @date 05 Dec 2011</text:p><text:p text:style-name="P449"><text:tab/> */</text:p><text:p text:style-name="P449"><text:tab/>private void showInformationMessage() {</text:p><text:p text:style-name="P449"><text:tab/><text:tab/>InformationMessages error = new InformationMessages(</text:p><text:p text:style-name="P449"><text:tab/><text:tab/><text:tab/><text:tab/>Texts.INFORMATION_SELECT_ANN_ID,</text:p><text:p text:style-name="P449"><text:tab/><text:tab/><text:tab/><text:tab/>Texts.INFORMATION_SELECT_ANN_ID_TITLE,</text:p><text:p text:style-name="P449"><text:tab/><text:tab/><text:tab/><text:tab/>JOptionPane.INFORMATION_MESSAGE);</text:p><text:p text:style-name="P449"><text:tab/><text:tab/>error.showMessage();</text:p><text:p text:style-name="P449"><text:tab/>}</text:p><text:p text:style-name="P449">}</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5742_1486593966"/><text:s text:c="4"/>DrawingPane.java<text:bookmark-end text:name="__RefHeading___Toc5742_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P450">package eu.veldsoft.backend;</text:p><text:p text:style-name="P450"/><text:p text:style-name="P450">/*******************************************************************************</text:p><text:p text:style-name="P450"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P450"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P450"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P450"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P450"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P450"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P450"><text:s/>* Copyright (C) 2008-2011 by Todor Balabanov <text:s/>( tdb@tbsoft.eu ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P450"><text:s/>* <text:s text:c="27"/>Iliyan Zankinski ( iliyan_mf@abv.bg ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P450"><text:s/>* <text:s text:c="27"/>Galq Cirkalova <text:s text:c="2"/>( galq_cirkalova@abv.bg ) <text:s text:c="6"/>*</text:p><text:p text:style-name="P450"><text:s/>* <text:s text:c="27"/>Ivan Grozev <text:s text:c="5"/>( ivan.iliev.grozev@gmail.com ) *</text:p><text:p text:style-name="P450"><text:s/>* <text:s text:c="27"/>Momchil Anachkov ( mZer0000@gmail.com ) <text:s text:c="9"/>*</text:p><text:p text:style-name="P450"><text:s/>* <text:s text:c="27"/>Ralitza Koleva <text:s text:c="2"/>( rallly@abv.bg ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P450"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P450"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P450"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P450"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P450"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P450"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P450"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P450"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P450"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P450"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P450"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P450"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P450"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P450"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P450"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P450"/><text:p text:style-name="P450">import java.awt.Color;</text:p><text:p text:style-name="P450">import java.awt.Dimension;</text:p><text:p text:style-name="P450">import java.awt.Font;</text:p><text:p text:style-name="P450">import java.awt.Graphics;</text:p><text:p text:style-name="P450">import java.awt.event.MouseEvent;</text:p><text:p text:style-name="P450">import java.awt.event.MouseListener;</text:p><text:p text:style-name="P450">import java.awt.event.MouseMotionListener;</text:p><text:p text:style-name="P450">import java.io.FileInputStream;</text:p><text:p text:style-name="P450">import java.util.Properties;</text:p><text:p text:style-name="P450">import java.util.Random;</text:p><text:p text:style-name="P450"/><text:p text:style-name="P450">import javax.swing.JPanel;</text:p><text:p text:style-name="P450"/><text:p text:style-name="P450">/**</text:p><text:p text:style-name="P450"><text:s/>* Panel with ANN drawoing functionality.</text:p><text:p text:style-name="P450"><text:s/>* </text:p><text:p text:style-name="P450"><text:s/>* @author Momchil Anachkov</text:p><text:p text:style-name="P450"><text:s/>* </text:p><text:p text:style-name="P450"><text:s/>* @email mZer0000@gmail.com</text:p><text:p text:style-name="P450"><text:s/>* </text:p><text:p text:style-name="P450"><text:s/>* @date 10 Jan 2011</text:p><text:p text:style-name="P450"><text:s/>*/</text:p><text:p text:style-name="P450">class DrawingPane extends JPanel {</text:p><text:p text:style-name="P450"><text:tab/>/**</text:p><text:p text:style-name="P450"><text:tab/> * Default serial version UID.</text:p><text:p text:style-name="P450"><text:tab/> */</text:p><text:p text:style-name="P450"><text:tab/>private static final long serialVersionUID = 1L;</text:p><text:p text:style-name="P450"/><text:p text:style-name="P450"><text:tab/>/**</text:p><text:p text:style-name="P450"><text:tab/> * Selection alpha value.</text:p><text:p text:style-name="P450"><text:tab/> */</text:p><text:p text:style-name="P450"><text:tab/>private static int SELECTION_ALPHA = 127;</text:p><text:p text:style-name="P450"/><text:p text:style-name="P450"><text:soft-page-break/><text:tab/>/**</text:p><text:p text:style-name="P450"><text:tab/> * Regular neuron color.</text:p><text:p text:style-name="P450"><text:tab/> */</text:p><text:p text:style-name="P450"><text:tab/>private Color regularNeuronColor;</text:p><text:p text:style-name="P450"/><text:p text:style-name="P450"><text:tab/>/**</text:p><text:p text:style-name="P450"><text:tab/> * Bias neuron color.</text:p><text:p text:style-name="P450"><text:tab/> */</text:p><text:p text:style-name="P450"><text:tab/>private Color biasNeuronColor;</text:p><text:p text:style-name="P450"/><text:p text:style-name="P450"><text:tab/>/**</text:p><text:p text:style-name="P450"><text:tab/> * Input neuron color.</text:p><text:p text:style-name="P450"><text:tab/> */</text:p><text:p text:style-name="P450"><text:tab/>private Color inputNeuronColor;</text:p><text:p text:style-name="P450"/><text:p text:style-name="P450"><text:tab/>/**</text:p><text:p text:style-name="P450"><text:tab/> * Output neuron color.</text:p><text:p text:style-name="P450"><text:tab/> */</text:p><text:p text:style-name="P450"><text:tab/>private Color outputNeuronColor;</text:p><text:p text:style-name="P450"/><text:p text:style-name="P450"><text:tab/>/**</text:p><text:p text:style-name="P450"><text:tab/> * Input-Output neuron color.</text:p><text:p text:style-name="P450"><text:tab/> */</text:p><text:p text:style-name="P450"><text:tab/>private Color inputOutputNeuronColor;</text:p><text:p text:style-name="P450"/><text:p text:style-name="P450"><text:tab/>/**</text:p><text:p text:style-name="P450"><text:tab/> * Input-Bias neuron color.</text:p><text:p text:style-name="P450"><text:tab/> */</text:p><text:p text:style-name="P450"><text:tab/>private Color inputBiasNeuronColor;</text:p><text:p text:style-name="P450"/><text:p text:style-name="P450"><text:tab/>/**</text:p><text:p text:style-name="P450"><text:tab/> * Output-Bias neuron color.</text:p><text:p text:style-name="P450"><text:tab/> */</text:p><text:p text:style-name="P450"><text:tab/>private Color outputBiasNeuronColor;</text:p><text:p text:style-name="P450"/><text:p text:style-name="P450"><text:tab/>/**</text:p><text:p text:style-name="P450"><text:tab/> * Input-Output-Bias neuron color.</text:p><text:p text:style-name="P450"><text:tab/> */</text:p><text:p text:style-name="P450"><text:tab/>private Color inputOutputBiasNeuronColor;</text:p><text:p text:style-name="P450"/><text:p text:style-name="P450"><text:tab/>/**</text:p><text:p text:style-name="P450"><text:tab/> * Connections color.</text:p><text:p text:style-name="P450"><text:tab/> */</text:p><text:p text:style-name="P450"><text:tab/>private Color connectionColor = new Color(0, 0, 0);</text:p><text:p text:style-name="P450"/><text:p text:style-name="P450"><text:tab/>/**</text:p><text:p text:style-name="P450"><text:tab/> * Helps making the connections colors, different colors depending on</text:p><text:p text:style-name="P450"><text:tab/> * activities/weights/both.</text:p><text:p text:style-name="P450"><text:tab/> */</text:p><text:p text:style-name="P450"><text:tab/>double connectionColorTemp = 0;</text:p><text:p text:style-name="P450"/><text:p text:style-name="P450"><text:tab/>/**</text:p><text:p text:style-name="P450"><text:tab/> * No index selected constant.</text:p><text:p text:style-name="P450"><text:tab/> */</text:p><text:p text:style-name="P450"><text:tab/>private static final int INDEX_NOT_SELECTED = -1;</text:p><text:p text:style-name="P450"/><text:p text:style-name="P450"><text:tab/>/**</text:p><text:p text:style-name="P450"><text:tab/> * Neuron visual radius.</text:p><text:p text:style-name="P450"><text:tab/> */</text:p><text:p text:style-name="P450"><text:tab/>private int neuronRadius = 0;</text:p><text:p text:style-name="P450"/><text:p text:style-name="P450"><text:tab/>/**</text:p><text:p text:style-name="P450"><text:tab/> * Parent applet reference.</text:p><text:p text:style-name="P450"><text:tab/> */</text:p><text:p text:style-name="P450"><text:tab/>private VitoshaTradeApplet parent = null;</text:p><text:p text:style-name="P450"/><text:p text:style-name="P450"><text:tab/>/**</text:p><text:p text:style-name="P450"><text:tab/> * Keep selection of first neuron index during visualization.</text:p><text:p text:style-name="P450"><text:tab/> */</text:p><text:p text:style-name="P450"><text:tab/>private int firstNeuronIndex = INDEX_NOT_SELECTED;</text:p><text:p text:style-name="P450"/><text:p text:style-name="P450"><text:tab/>/**</text:p><text:p text:style-name="P450"><text:tab/> * Keep selection of second neuron index during visualization.</text:p><text:p text:style-name="P450"><text:tab/> */</text:p><text:p text:style-name="P450"><text:tab/>private int secondNeuronIndex = INDEX_NOT_SELECTED;</text:p><text:p text:style-name="P450"/><text:p text:style-name="P450"><text:tab/>/**</text:p><text:p text:style-name="P450"><text:tab/> * Drawing pane constructor.</text:p><text:p text:style-name="P450"><text:tab/> * </text:p><text:p text:style-name="P450"><text:tab/> * @param parent</text:p><text:p text:style-name="P450"><text:tab/> * <text:s text:c="11"/>The parent class.</text:p><text:p text:style-name="P450"><text:tab/> * </text:p><text:p text:style-name="P450"><text:tab/> * @author Momchil Anachkov</text:p><text:p text:style-name="P450"><text:tab/> * </text:p><text:p text:style-name="P450"><text:tab/> * @email mZer0000@gmail.com</text:p><text:p text:style-name="P450"><text:tab/> * </text:p><text:p text:style-name="P450"><text:tab/> * @date 10 Jan 2011</text:p><text:p text:style-name="P450"><text:tab/> */</text:p><text:p text:style-name="P450"><text:tab/>public DrawingPane(final VitoshaTradeApplet parent) {</text:p><text:p text:style-name="P450"><text:tab/><text:tab/>this.parent = parent;</text:p><text:p text:style-name="P450"><text:tab/><text:tab/>this.setPreferredSize(new Dimension(</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/>VitoshaTradeApplet.CENTRAL_PANE_WIDTH,</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/>VitoshaTradeApplet.CENTRAL_PANE_HEIGHT));</text:p><text:p text:style-name="P450"/><text:p text:style-name="P450"><text:tab/><text:tab/>// TODO Do it in size changed listener.</text:p><text:p text:style-name="P450"><text:tab/><text:tab/>neuronRadius = calculateNeuronRadius();</text:p><text:p text:style-name="P450"/><text:p text:style-name="P450"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P450"><text:tab/><text:tab/> * Mouse listener for click events to select components (neurons or</text:p><text:p text:style-name="P450"><text:tab/><text:tab/> * connections).</text:p><text:p text:style-name="P450"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P450"><text:tab/><text:tab/>this.addMouseListener(new MouseListener() {</text:p><text:p text:style-name="P450"/><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>public void mouseClicked(MouseEvent event) {</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P450"/><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>public void mouseEntered(MouseEvent event) {</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P450"/><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>public void mouseExited(MouseEvent event) {</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P450"/><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>public void mousePressed(MouseEvent event) {</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/> * Do nothing if there is no coordinates.</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/>if (parent.ann == null) {</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>return;</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P450"/><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/>int x = event.getX();</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/>int y = event.getY();</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/>boolean controlKeyDown = event.isControlDown();</text:p><text:p text:style-name="P450"/><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P450"><text:soft-page-break/><text:tab/><text:tab/><text:tab/><text:tab/> * Find selected neuron index.</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/>int xi;</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/>int yi;</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/>int squareDistance;</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/>int coordinates[][] = parent.ann.coordinates;</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/>int selectedNeuronIndex = INDEX_NOT_SELECTED;</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/>for (int i = 0; i &lt; coordinates.length; i++) {</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>xi = coordinates[i][0];</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>yi = coordinates[i][1];</text:p><text:p text:style-name="P450"/><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>squareDistance = (x - xi) * (x - xi) + (y - yi) * (y - yi);</text:p><text:p text:style-name="P450"/><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>if (neuronRadius * neuronRadius &gt;= squareDistance) {</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>selectedNeuronIndex = i;</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P450"/><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/> * Display connection properties if connection is selected.</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/>if (selectedNeuronIndex != INDEX_NOT_SELECTED</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&amp;&amp; firstNeuronIndex != INDEX_NOT_SELECTED</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&amp;&amp; secondNeuronIndex == INDEX_NOT_SELECTED</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&amp;&amp; controlKeyDown == true) {</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>secondNeuronIndex = selectedNeuronIndex;</text:p><text:p text:style-name="P450"/><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>repaint();</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>parent.showConnectionPane();</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>parent.connectionPane</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>.setValues(</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>firstNeuronIndex,</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>selectedNeuronIndex,</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>parent.ann.activities[firstNeuronIndex][secondNeuronIndex],</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>parent.ann.weights[firstNeuronIndex][secondNeuronIndex]);</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>return;</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P450"/><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/> * Start selection of connection.</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/>if (selectedNeuronIndex != INDEX_NOT_SELECTED</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&amp;&amp; firstNeuronIndex == INDEX_NOT_SELECTED</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&amp;&amp; secondNeuronIndex == INDEX_NOT_SELECTED</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&amp;&amp; controlKeyDown == true) {</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>firstNeuronIndex = selectedNeuronIndex;</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>secondNeuronIndex = INDEX_NOT_SELECTED;</text:p><text:p text:style-name="P450"/><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>return;</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P450"/><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/> * Select single neuron.</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/>if (selectedNeuronIndex != INDEX_NOT_SELECTED</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&amp;&amp; firstNeuronIndex == INDEX_NOT_SELECTED</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&amp;&amp; secondNeuronIndex == INDEX_NOT_SELECTED</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&amp;&amp; controlKeyDown == false) {</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>firstNeuronIndex = selectedNeuronIndex;</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>secondNeuronIndex = INDEX_NOT_SELECTED;</text:p><text:p text:style-name="P450"/><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>parent.showNeuronPane();</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>parent.neuronPane</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>.setValues(</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>firstNeuronIndex,</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>parent.ann.flags[firstNeuronIndex],</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>parent.ann.coordinates[firstNeuronIndex][0],</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>parent.ann.coordinates[firstNeuronIndex][1],</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>parent.ann.activities[firstNeuronIndex][firstNeuronIndex],</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>parent.ann.weights[firstNeuronIndex][firstNeuronIndex]);</text:p><text:p text:style-name="P450"/><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>return;</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P450"/><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/> * If nothing is selected show network pane.</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/>if (selectedNeuronIndex == INDEX_NOT_SELECTED) {</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>firstNeuronIndex = INDEX_NOT_SELECTED;</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>secondNeuronIndex = INDEX_NOT_SELECTED;</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>parent.showNetworkPane();</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>return;</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P450"/><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>public void mouseReleased(MouseEvent event) {</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/> * Selection of connections needs two mouse clicks.</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/>if (event.isControlDown() == true) {</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>return;</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P450"/><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/> * After mouse button release it is better neuron not to be</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/> * selected.</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/>firstNeuronIndex = INDEX_NOT_SELECTED;</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/>secondNeuronIndex = INDEX_NOT_SELECTED;</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P450"><text:tab/><text:tab/>});</text:p><text:p text:style-name="P450"/><text:p text:style-name="P450"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P450"><text:tab/><text:tab/> * Drag neuron source code (changing neuron position).</text:p><text:p text:style-name="P450"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P450"><text:tab/><text:tab/>addMouseMotionListener(new MouseMotionListener() {</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>public void mouseDragged(MouseEvent event) {</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/>if (firstNeuronIndex != INDEX_NOT_SELECTED</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&amp;&amp; secondNeuronIndex == INDEX_NOT_SELECTED) {</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>parent.ann.coordinates[firstNeuronIndex][0] = event.getX();</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>parent.ann.coordinates[firstNeuronIndex][1] = event.getY();</text:p><text:p text:style-name="P450"/><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>parent.neuronPane.axisX.setText(&quot;&quot;</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>+ parent.ann.coordinates[firstNeuronIndex][0]);</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>parent.neuronPane.axisY.setText(&quot;&quot;</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>+ parent.ann.coordinates[firstNeuronIndex][1]);</text:p><text:p text:style-name="P450"/><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>repaint();</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P450"/><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>public void mouseMoved(MouseEvent event) {</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P450"><text:tab/><text:tab/>});</text:p><text:p text:style-name="P450"><text:soft-page-break/><text:tab/>}</text:p><text:p text:style-name="P450"/><text:p text:style-name="P450"><text:tab/>/**</text:p><text:p text:style-name="P450"><text:tab/> * Panel paint.</text:p><text:p text:style-name="P450"><text:tab/> * </text:p><text:p text:style-name="P450"><text:tab/> * @param g</text:p><text:p text:style-name="P450"><text:tab/> * <text:s text:c="11"/>Graphic context.</text:p><text:p text:style-name="P450"><text:tab/> * </text:p><text:p text:style-name="P450"><text:tab/> * @author Momchil Anachkov</text:p><text:p text:style-name="P450"><text:tab/> * </text:p><text:p text:style-name="P450"><text:tab/> * @email mZer0000@gmail.com</text:p><text:p text:style-name="P450"><text:tab/> * </text:p><text:p text:style-name="P450"><text:tab/> * @date 10 Jan 2011</text:p><text:p text:style-name="P450"><text:tab/> */</text:p><text:p text:style-name="P450"><text:tab/>public void paint(Graphics g) {</text:p><text:p text:style-name="P450"><text:tab/><text:tab/>ArtificialNeuralNetwork ann = parent.ann;</text:p><text:p text:style-name="P450"/><text:p text:style-name="P450"><text:tab/><text:tab/>if (ann == null) {</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>return;</text:p><text:p text:style-name="P450"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P450"/><text:p text:style-name="P450"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P450"><text:tab/><text:tab/> * Calls a function to load the work area background color.</text:p><text:p text:style-name="P450"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P450"><text:tab/><text:tab/>selectBackgroundColor(g);</text:p><text:p text:style-name="P450"/><text:p text:style-name="P450"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P450"><text:tab/><text:tab/> * Clear background.</text:p><text:p text:style-name="P450"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P450"><text:tab/><text:tab/>g.fillRect(0, 0, getWidth(), getHeight());</text:p><text:p text:style-name="P450"/><text:p text:style-name="P450"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P450"><text:tab/><text:tab/> * Draw neurons connections between i and j neurons.</text:p><text:p text:style-name="P450"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P450"><text:tab/><text:tab/>g.setColor(connectionColor);</text:p><text:p text:style-name="P450"><text:tab/><text:tab/>for (int j = 0; j &lt; ann.numberOfNeurons; j++) {</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>for (int i = j + 1; i &lt; ann.numberOfNeurons; i++) {</text:p><text:p text:style-name="P450"/><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/> * Do not draw selected connection.</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/>if ((i == firstNeuronIndex &amp;&amp; j == secondNeuronIndex)</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>|| (j == firstNeuronIndex &amp;&amp; i == secondNeuronIndex)) {</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>continue;</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P450"/><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/> * Draw line between coordinates of two neurons.</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/>selectConnectionsColorByChosenMesh(i, j, g);</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P450"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P450"/><text:p text:style-name="P450"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P450"><text:tab/><text:tab/> * Selected connection should be with different color.</text:p><text:p text:style-name="P450"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P450"><text:tab/><text:tab/>g.setColor(new Color(connectionColor.getRed(), connectionColor</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/>.getGreen(), connectionColor.getBlue(), SELECTION_ALPHA));</text:p><text:p text:style-name="P450"><text:tab/><text:tab/>for (int j = 0; j &lt; ann.numberOfNeurons; j++) {</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>for (int i = 0; i &lt; ann.numberOfNeurons; i++) {</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/>if ((i == firstNeuronIndex &amp;&amp; j == secondNeuronIndex)</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>|| (j == firstNeuronIndex &amp;&amp; i == secondNeuronIndex)) {</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/> * Draw line between coordinates of two neurons of selected</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/> * connection.</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>g.drawLine(ann.coordinates[i][0], ann.coordinates[i][1],</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>ann.coordinates[j][0], ann.coordinates[j][1]);</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P450"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P450"/><text:p text:style-name="P450"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P450"><text:tab/><text:tab/> * Set neuron types colors.</text:p><text:p text:style-name="P450"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P450"><text:tab/><text:tab/>regularNeuronColor = readNeuronColor(Util.REGULAR_NEURON_COLOR_PROPERTY_KEY);</text:p><text:p text:style-name="P450"><text:tab/><text:tab/>inputNeuronColor = readNeuronColor(Util.INPUT_NEURON_COLOR_PROPERTY_KEY);</text:p><text:p text:style-name="P450"><text:tab/><text:tab/>outputNeuronColor = readNeuronColor(Util.OUTPUT_NEURON_COLOR_PROPERTY_KEY);</text:p><text:p text:style-name="P450"><text:tab/><text:tab/>biasNeuronColor = readNeuronColor(Util.BIAS_NEURON_COLOR_PROPERTY_KEY);</text:p><text:p text:style-name="P450"><text:tab/><text:tab/>inputOutputNeuronColor = readNeuronColor(Util.INPUT_OUTPUT_NEURON_COLOR_PROPERTY_KEY);</text:p><text:p text:style-name="P450"><text:tab/><text:tab/>inputBiasNeuronColor = readNeuronColor(Util.INPUT_BIAS_NEURON_COLOR_PROPERTY_KEY);</text:p><text:p text:style-name="P450"><text:tab/><text:tab/>outputBiasNeuronColor = readNeuronColor(Util.OUTPUT_BIAS_NEURON_COLOR_PROPERTY_KEY);</text:p><text:p text:style-name="P450"><text:tab/><text:tab/>inputOutputBiasNeuronColor = readNeuronColor(Util.INPUT_OUTPUT_BIAS_NEURON_COLOR_PROPERTY_KEY);</text:p><text:p text:style-name="P450"/><text:p text:style-name="P450"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P450"><text:tab/><text:tab/> * Draw neurons.</text:p><text:p text:style-name="P450"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P450"><text:tab/><text:tab/>Color neuronColor = null;</text:p><text:p text:style-name="P450"><text:tab/><text:tab/>for (int i = 0; i &lt; ann.numberOfNeurons; i++) {</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/> * Change color for different neurons type. It is possible neuron to</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/> * have more than one flag up (example neuron which is input and</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/> * output).</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>switch (ann.flags[i]) {</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>case (ArtificialNeuralNetwork.REGULAR_NEURON):</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/>neuronColor = regularNeuronColor;</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>case (ArtificialNeuralNetwork.BIAS_NEURON):</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/>neuronColor = biasNeuronColor;</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>case (ArtificialNeuralNetwork.INPUT_NEURON):</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/>neuronColor = inputNeuronColor;</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>case (ArtificialNeuralNetwork.BIAS_NEURON | ArtificialNeuralNetwork.INPUT_NEURON):</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/>neuronColor = inputBiasNeuronColor;</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>case (ArtificialNeuralNetwork.OUTPUT_NEURON):</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/>neuronColor = outputNeuronColor;</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>case (ArtificialNeuralNetwork.BIAS_NEURON | ArtificialNeuralNetwork.OUTPUT_NEURON):</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/>neuronColor = outputBiasNeuronColor;</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>case (ArtificialNeuralNetwork.INPUT_NEURON | ArtificialNeuralNetwork.OUTPUT_NEURON):</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/>neuronColor = inputOutputNeuronColor;</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>case (ArtificialNeuralNetwork.BIAS_NEURON</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>| ArtificialNeuralNetwork.INPUT_NEURON | ArtificialNeuralNetwork.OUTPUT_NEURON):</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/>neuronColor = inputOutputBiasNeuronColor;</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P450"/><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/> * Selected neuron should be with different color.</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P450"><text:soft-page-break/><text:tab/><text:tab/><text:tab/>if (i == firstNeuronIndex</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&amp;&amp; secondNeuronIndex == INDEX_NOT_SELECTED) {</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/>g.setColor(new Color(neuronColor.getRed(), neuronColor</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>.getGreen(), neuronColor.getBlue(), SELECTION_ALPHA));</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>} else {</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/>g.setColor(neuronColor);</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P450"/><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/> * Gets the neuron radius size.</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>neuronRadius = calculateNeuronRadius();</text:p><text:p text:style-name="P450"/><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/> * Draw circle on coordinates of neurons.</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>g.fillOval(ann.coordinates[i][0] - neuronRadius,</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>ann.coordinates[i][1] - neuronRadius, neuronRadius * 2,</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>neuronRadius * 2);</text:p><text:p text:style-name="P450"/><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/> * Shows the ID of each neuron on the screen.</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>showNeuronNumbers(g, i, neuronColor, ann.coordinates[i][0] - 3,</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>ann.coordinates[i][1] + 3);</text:p><text:p text:style-name="P450"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P450"><text:tab/>}</text:p><text:p text:style-name="P450"/><text:p text:style-name="P450"><text:tab/>/**</text:p><text:p text:style-name="P450"><text:tab/> * Calculates neurons radius.</text:p><text:p text:style-name="P450"><text:tab/> * </text:p><text:p text:style-name="P450"><text:tab/> * @author Ralitza Koleva</text:p><text:p text:style-name="P450"><text:tab/> * </text:p><text:p text:style-name="P450"><text:tab/> * @email rallly@abv.bg</text:p><text:p text:style-name="P450"><text:tab/> * </text:p><text:p text:style-name="P450"><text:tab/> * @date 06 Dec 2011</text:p><text:p text:style-name="P450"><text:tab/> */</text:p><text:p text:style-name="P450"><text:tab/>private int calculateNeuronRadius() {</text:p><text:p text:style-name="P450"/><text:p text:style-name="P450"><text:tab/><text:tab/>/**</text:p><text:p text:style-name="P450"><text:tab/><text:tab/> * Default neuron radius.</text:p><text:p text:style-name="P450"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P450"><text:tab/><text:tab/>int neuronRadius = Math.min(VitoshaTradeApplet.CENTRAL_PANE_WIDTH,</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/>VitoshaTradeApplet.CENTRAL_PANE_HEIGHT) / 100;</text:p><text:p text:style-name="P450"><text:tab/><text:tab/>/**</text:p><text:p text:style-name="P450"><text:tab/><text:tab/> * Default neuron radius size.</text:p><text:p text:style-name="P450"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P450"><text:tab/><text:tab/>String neuronRadiusSize = &quot;Small&quot;;</text:p><text:p text:style-name="P450"><text:tab/><text:tab/>try {</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>Properties p = new Properties();</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>FileInputStream in = new FileInputStream(Util.PROPERTIES_FILE_NAME);</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>p.load(in);</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>neuronRadiusSize = p.getProperty(&quot;NeuronsSize&quot;);</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>if (neuronRadiusSize.equals(&quot;Small&quot;)) {</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/>neuronRadius = Math.min(VitoshaTradeApplet.CENTRAL_PANE_WIDTH,</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>VitoshaTradeApplet.CENTRAL_PANE_HEIGHT) / 100;</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>} else if (neuronRadiusSize.equals(&quot;Medium&quot;)) {</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/>neuronRadius = Math.min(VitoshaTradeApplet.CENTRAL_PANE_WIDTH,</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>VitoshaTradeApplet.CENTRAL_PANE_HEIGHT) / 80;</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>} else if (neuronRadiusSize.equals(&quot;Large&quot;)) {</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/>neuronRadius = Math.min(VitoshaTradeApplet.CENTRAL_PANE_WIDTH,</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>VitoshaTradeApplet.CENTRAL_PANE_HEIGHT) / 70;</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P450"/><text:p text:style-name="P450"><text:tab/><text:tab/>} catch (Exception ex) {</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>neuronRadius = Math.min(VitoshaTradeApplet.CENTRAL_PANE_WIDTH,</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>VitoshaTradeApplet.CENTRAL_PANE_HEIGHT) / 100;</text:p><text:p text:style-name="P450"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P450"><text:tab/><text:tab/>return (neuronRadius);</text:p><text:p text:style-name="P450"><text:tab/>}</text:p><text:p text:style-name="P450"/><text:p text:style-name="P450"><text:tab/>/**</text:p><text:p text:style-name="P450"><text:tab/> * Reads the current color of the neuron from a file, depending on its type</text:p><text:p text:style-name="P450"><text:tab/> * (flag).</text:p><text:p text:style-name="P450"><text:tab/> * </text:p><text:p text:style-name="P450"><text:tab/> * @param colorProperty</text:p><text:p text:style-name="P450"><text:tab/> * <text:s text:c="11"/>The parameter name, containing the color.</text:p><text:p text:style-name="P450"><text:tab/> * </text:p><text:p text:style-name="P450"><text:tab/> * @author Ralitza Koleva</text:p><text:p text:style-name="P450"><text:tab/> * </text:p><text:p text:style-name="P450"><text:tab/> * @email rallly@abv.bg</text:p><text:p text:style-name="P450"><text:tab/> * </text:p><text:p text:style-name="P450"><text:tab/> * @date 26 Oct 2011</text:p><text:p text:style-name="P450"><text:tab/> * </text:p><text:p text:style-name="P450"><text:tab/> * @return The current color of the neuron.</text:p><text:p text:style-name="P450"><text:tab/> */</text:p><text:p text:style-name="P450"><text:tab/>public Color readNeuronColor(String colorProperty) {</text:p><text:p text:style-name="P450"><text:tab/><text:tab/>Color neuronColor = new Color(0, 0, 0);</text:p><text:p text:style-name="P450"><text:tab/><text:tab/>try {</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>Properties properties = new Properties();</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>FileInputStream in = new FileInputStream(Util.PROPERTIES_FILE_NAME);</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>properties.load(in);</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>int color = Integer.parseInt(properties.getProperty(colorProperty));</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>neuronColor = new Color(color);</text:p><text:p text:style-name="P450"><text:tab/><text:tab/>} catch (Exception ex) {</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>neuronColor = new Color(Util.PRNG.nextInt(256),</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>Util.PRNG.nextInt(256), Util.PRNG.nextInt(256));</text:p><text:p text:style-name="P450"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P450"><text:tab/><text:tab/>return (neuronColor);</text:p><text:p text:style-name="P450"><text:tab/>}</text:p><text:p text:style-name="P450"/><text:p text:style-name="P450"><text:tab/>/**</text:p><text:p text:style-name="P450"><text:tab/> * Draws the connection in a specific color depending on the chosen radio</text:p><text:p text:style-name="P450"><text:tab/> * button in menu Tools-&gt;Mesh.</text:p><text:p text:style-name="P450"><text:tab/> * </text:p><text:p text:style-name="P450"><text:tab/> * @param firstNeuronIndex</text:p><text:p text:style-name="P450"><text:tab/> * <text:s text:c="11"/>Index of the first neuron in the connection.</text:p><text:p text:style-name="P450"><text:tab/> * </text:p><text:p text:style-name="P450"><text:tab/> * @param secondNeuronIndex</text:p><text:p text:style-name="P450"><text:tab/> * <text:s text:c="11"/>Index of the second neuron in the connection.</text:p><text:p text:style-name="P450"><text:tab/> * </text:p><text:p text:style-name="P450"><text:tab/> * @param g</text:p><text:p text:style-name="P450"><text:tab/> * <text:s text:c="11"/>Graphic context.</text:p><text:p text:style-name="P450"><text:tab/> * </text:p><text:p text:style-name="P450"><text:tab/> * @author Ralitza Koleva</text:p><text:p text:style-name="P450"><text:tab/> * </text:p><text:p text:style-name="P450"><text:tab/> * @email rallly@abv.bg</text:p><text:p text:style-name="P450"><text:tab/> * </text:p><text:p text:style-name="P450"><text:tab/> * @date 31 Oct 2011</text:p><text:p text:style-name="P450"><text:tab/> */</text:p><text:p text:style-name="P450"><text:tab/>public void selectConnectionsColorByChosenMesh(int firstNeuronIndex,</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>int secondNeuronIndex, Graphics g) {</text:p><text:p text:style-name="P450"/><text:p text:style-name="P450"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P450"><text:tab/><text:tab/> * Takes minimum and maximum activity, weight and both activity and</text:p><text:p text:style-name="P450"><text:soft-page-break/><text:tab/><text:tab/> * weight.</text:p><text:p text:style-name="P450"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P450"><text:tab/><text:tab/>double minActivity = parent.ann.activities[0][0];</text:p><text:p text:style-name="P450"><text:tab/><text:tab/>double maxActivity = parent.ann.activities[0][0];</text:p><text:p text:style-name="P450"><text:tab/><text:tab/>double minWeight = parent.ann.weights[0][0];</text:p><text:p text:style-name="P450"><text:tab/><text:tab/>double maxWeight = parent.ann.weights[0][0];</text:p><text:p text:style-name="P450"><text:tab/><text:tab/>double minActivityWeight = parent.ann.activities[0][0]</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/>* parent.ann.weights[0][0];</text:p><text:p text:style-name="P450"><text:tab/><text:tab/>double maxActivityWeight = parent.ann.activities[0][0]</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/>* parent.ann.weights[0][0];</text:p><text:p text:style-name="P450"><text:tab/><text:tab/>for (int j = 0; j &lt; parent.ann.numberOfNeurons; j++) {</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>for (int i = 0; i &lt; parent.ann.numberOfNeurons; i++) {</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/>if (parent.ann.activities[i][j] &lt; minActivity)</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>minActivity = parent.ann.activities[i][j];</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/>if (parent.ann.activities[i][j] &gt; maxActivity)</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>maxActivity = parent.ann.activities[i][j];</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/>if (parent.ann.weights[i][j] &lt; minWeight)</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>minWeight = parent.ann.weights[i][j];</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/>if (parent.ann.weights[i][j] &gt; maxWeight)</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>maxWeight = parent.ann.weights[i][j];</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/>if (parent.ann.activities[i][j] * parent.ann.weights[i][j] &lt; minActivityWeight)</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>minActivityWeight = parent.ann.activities[i][j]</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>* parent.ann.weights[i][j];</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/>if (parent.ann.activities[i][j] * parent.ann.weights[i][j] &gt; maxActivityWeight)</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>maxActivityWeight = parent.ann.activities[i][j]</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>* parent.ann.weights[i][j];</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P450"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P450"/><text:p text:style-name="P450"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P450"><text:tab/><text:tab/> * If option &quot;Solid&quot; is chosen in &quot;Mesh&quot; menu - all connections are in</text:p><text:p text:style-name="P450"><text:tab/><text:tab/> * black color.</text:p><text:p text:style-name="P450"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P450"><text:tab/><text:tab/>if (parent.meshSolidItem.isSelected() == true) {</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>g.drawLine(parent.ann.coordinates[firstNeuronIndex][0],</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>parent.ann.coordinates[firstNeuronIndex][1],</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>parent.ann.coordinates[secondNeuronIndex][0],</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>parent.ann.coordinates[secondNeuronIndex][1]);</text:p><text:p text:style-name="P450"/><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/> * If option &quot;Activities&quot; is chosen in &quot;Mesh&quot; menu - connections</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/> * colors depend on their activities.</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P450"><text:tab/><text:tab/>} else if (parent.meshActivitiesItem.isSelected() == true) {</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>connectionColorTemp = parent.ann.activities[firstNeuronIndex][secondNeuronIndex]</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>- minActivity;</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>connectionColorTemp = 255 - connectionColorTemp</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>* (255 / (maxActivity - minActivity));</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>int color = (int) Math.round(connectionColorTemp);</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>g.setColor(new Color(color, color, color));</text:p><text:p text:style-name="P450"/><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>if (parent.ann.activities[firstNeuronIndex][secondNeuronIndex] != 0.0) {</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/>g.drawLine(parent.ann.coordinates[firstNeuronIndex][0],</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>parent.ann.coordinates[firstNeuronIndex][1],</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>parent.ann.coordinates[secondNeuronIndex][0],</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>parent.ann.coordinates[secondNeuronIndex][1]);</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P450"/><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/> * If option &quot;Weights&quot; is chosen in &quot;Mesh&quot; menu - connections colors</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/> * depend on their weights.</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P450"><text:tab/><text:tab/>} else if (parent.meshWeightsItem.isSelected() == true) {</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>connectionColorTemp = parent.ann.weights[firstNeuronIndex][secondNeuronIndex]</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>- minWeight;</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>connectionColorTemp = 255 - connectionColorTemp</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>* (255 / (maxWeight - minWeight));</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>int color = (int) Math.round(connectionColorTemp);</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>g.setColor(new Color(color, color, color));</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>g.drawLine(parent.ann.coordinates[firstNeuronIndex][0],</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>parent.ann.coordinates[firstNeuronIndex][1],</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>parent.ann.coordinates[secondNeuronIndex][0],</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>parent.ann.coordinates[secondNeuronIndex][1]);</text:p><text:p text:style-name="P450"/><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/> * If option &quot;Both&quot; is chosen in &quot;Mesh&quot; menu - connections colors</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/> * depend on their activities and weights.</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P450"><text:tab/><text:tab/>} else if (parent.meshBothItem.isSelected() == true) {</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>connectionColorTemp = parent.ann.activities[firstNeuronIndex][secondNeuronIndex]</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>* parent.ann.weights[firstNeuronIndex][secondNeuronIndex]</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>- minActivityWeight;</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>connectionColorTemp = 255 - connectionColorTemp</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>* (255 / (maxActivityWeight - minActivityWeight));</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>int color = (int) Math.round(connectionColorTemp);</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>g.setColor(new Color(color, color, color));</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>g.drawLine(parent.ann.coordinates[firstNeuronIndex][0],</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>parent.ann.coordinates[firstNeuronIndex][1],</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>parent.ann.coordinates[secondNeuronIndex][0],</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>parent.ann.coordinates[secondNeuronIndex][1]);</text:p><text:p text:style-name="P450"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P450"><text:tab/>}</text:p><text:p text:style-name="P450"/><text:p text:style-name="P450"><text:tab/>/**</text:p><text:p text:style-name="P450"><text:tab/> * Shows the IDs of the neurons on the screen.</text:p><text:p text:style-name="P450"><text:tab/> * </text:p><text:p text:style-name="P450"><text:tab/> * @param g</text:p><text:p text:style-name="P450"><text:tab/> * <text:s text:c="11"/>Graphic context.</text:p><text:p text:style-name="P450"><text:tab/> * </text:p><text:p text:style-name="P450"><text:tab/> * @param neuronId</text:p><text:p text:style-name="P450"><text:tab/> * <text:s text:c="11"/>Neuron ID shown on the screen.</text:p><text:p text:style-name="P450"><text:tab/> * </text:p><text:p text:style-name="P450"><text:tab/> * @param neuronColor</text:p><text:p text:style-name="P450"><text:tab/> * <text:s text:c="11"/>The color of the neuron.</text:p><text:p text:style-name="P450"><text:tab/> * </text:p><text:p text:style-name="P450"><text:tab/> * @param neuronIdXCoordinate</text:p><text:p text:style-name="P450"><text:tab/> * <text:s text:c="11"/>X-coordinate of the neuron ID.</text:p><text:p text:style-name="P450"><text:tab/> * </text:p><text:p text:style-name="P450"><text:tab/> * @param neuronIdYCoordinate</text:p><text:p text:style-name="P450"><text:tab/> * <text:s text:c="11"/>Y-coordinate of the neuron ID.</text:p><text:p text:style-name="P450"><text:tab/> * </text:p><text:p text:style-name="P450"><text:tab/> * @author Ralitza Koleva</text:p><text:p text:style-name="P450"><text:tab/> * </text:p><text:p text:style-name="P450"><text:tab/> * @email rallly@abv.bg</text:p><text:p text:style-name="P450"><text:tab/> * </text:p><text:p text:style-name="P450"><text:tab/> * @date 13 Nov 2011</text:p><text:p text:style-name="P450"><text:tab/> */</text:p><text:p text:style-name="P450"><text:tab/>private void showNeuronNumbers(Graphics g, int neuronId, Color neuronColor,</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>int neuronIdXCoordinate, int neuronIdYCoordinate) {</text:p><text:p text:style-name="P450"><text:tab/><text:tab/>if (parent.numberingItem.isSelected()) {</text:p><text:p text:style-name="P450"/><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/> * Converts the neuron color to its opposite, so that the neuron ID</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/> * stays visible inside the neuron.</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P450"><text:soft-page-break/><text:tab/><text:tab/><text:tab/>int convertedNeuronRedPrimaryColor = (neuronColor.getRed() ^ 0x80) &amp; 0xff;</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>int convertedNeuronGreenPrimaryColor = (neuronColor.getGreen() ^ 0x80) &amp; 0xff;</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>int convertedNeuronBluePrimaryColor = (neuronColor.getBlue() ^ 0x80) &amp; 0xff;</text:p><text:p text:style-name="P450"/><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/> * Reads the numbers size from a file. If the process fails, a</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/> * default size is taken.</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>int neuronIdFontSize = 9;</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>try {</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/>Properties properties = new Properties();</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/>FileInputStream in = new FileInputStream(</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>Util.PROPERTIES_FILE_NAME);</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/>properties.load(in);</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/>int currentNeuronsNumberSize = Integer.parseInt(properties</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>.getProperty(&quot;NeuronsNumbersSize&quot;));</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/>neuronIdFontSize = currentNeuronsNumberSize;</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>} catch (Exception ex) {</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P450"/><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/> * Creates a new font for the neuron IDs.</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>String neuronIdFontFamily = &quot;Verdana&quot;;</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>Font neuronIdFont = new Font(neuronIdFontFamily, Font.BOLD,</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>neuronIdFontSize);</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>Color neuronIdColor = new Color(convertedNeuronRedPrimaryColor,</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>convertedNeuronGreenPrimaryColor,</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>convertedNeuronBluePrimaryColor);</text:p><text:p text:style-name="P450"/><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/> * Sets font and color of the neuron ID and draws it inside the</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/> * neuron oval.</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>g.setColor(neuronIdColor);</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>g.setFont(neuronIdFont);</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>g.drawString(Integer.toString(neuronId), neuronIdXCoordinate,</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>neuronIdYCoordinate);</text:p><text:p text:style-name="P450"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P450"><text:tab/>}</text:p><text:p text:style-name="P450"/><text:p text:style-name="P450"><text:tab/>/**</text:p><text:p text:style-name="P450"><text:tab/> * Reads the work area background color.</text:p><text:p text:style-name="P450"><text:tab/> * </text:p><text:p text:style-name="P450"><text:tab/> * @param g</text:p><text:p text:style-name="P450"><text:tab/> * <text:s text:c="11"/>Graphic context.</text:p><text:p text:style-name="P450"><text:tab/> * </text:p><text:p text:style-name="P450"><text:tab/> * @author Ralitza Koleva</text:p><text:p text:style-name="P450"><text:tab/> * </text:p><text:p text:style-name="P450"><text:tab/> * @email rallly@abv.bg</text:p><text:p text:style-name="P450"><text:tab/> * </text:p><text:p text:style-name="P450"><text:tab/> * @date 23 Nov 2011</text:p><text:p text:style-name="P450"><text:tab/> */</text:p><text:p text:style-name="P450"><text:tab/>private void selectBackgroundColor(Graphics g) {</text:p><text:p text:style-name="P450"><text:tab/><text:tab/>try {</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>Properties properties = new Properties();</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>FileInputStream in = new FileInputStream(Util.PROPERTIES_FILE_NAME);</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>properties.load(in);</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>int color = Integer.parseInt(properties</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>.getProperty(Util.WORK_AREA_BACKGROUND_COLOR_PROPERTY_KEY));</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>g.setColor(new Color(color));</text:p><text:p text:style-name="P450"><text:tab/><text:tab/>} catch (Exception ex) {</text:p><text:p text:style-name="P450"><text:tab/><text:tab/><text:tab/>g.setColor(new Color(255, 255, 255));</text:p><text:p text:style-name="P450"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P450"><text:tab/>}</text:p><text:p text:style-name="P450">}</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5744_1486593966"/><text:s text:c="4"/>InformationMessages.java<text:bookmark-end text:name="__RefHeading___Toc5744_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P451">package eu.veldsoft.backend;</text:p><text:p text:style-name="P451"/><text:p text:style-name="P451">/*******************************************************************************</text:p><text:p text:style-name="P451"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P451"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P451"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P451"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P451"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P451"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P451"><text:s/>* Copyright (C) 2008-2011 by Todor Balabanov <text:s/>( tdb@tbsoft.eu ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P451"><text:s/>* <text:s text:c="27"/>Iliyan Zankinski ( iliyan_mf@abv.bg ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P451"><text:s/>* <text:s text:c="27"/>Galq Cirkalova <text:s text:c="2"/>( galq_cirkalova@abv.bg ) <text:s text:c="6"/>*</text:p><text:p text:style-name="P451"><text:s/>* <text:s text:c="27"/>Ivan Grozev <text:s text:c="5"/>( ivan.iliev.grozev@gmail.com ) *</text:p><text:p text:style-name="P451"><text:s/>* <text:s text:c="27"/>Momchil Anachkov ( mZer0000@gmail.com ) <text:s text:c="9"/>*</text:p><text:p text:style-name="P451"><text:s/>* <text:s text:c="27"/>Ralitza Koleva <text:s text:c="2"/>( rallly@abv.bg ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P451"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P451"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P451"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P451"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P451"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P451"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P451"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P451"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P451"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P451"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P451"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P451"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P451"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P451"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P451"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P451"/><text:p text:style-name="P451">import java.awt.Component;</text:p><text:p text:style-name="P451">import javax.swing.JOptionPane;</text:p><text:p text:style-name="P451"/><text:p text:style-name="P451">/**</text:p><text:p text:style-name="P451"><text:s/>* Shows a pop-up message on the screen.</text:p><text:p text:style-name="P451"><text:s/>* </text:p><text:p text:style-name="P451"><text:s/>* @author Ralitza Koleva</text:p><text:p text:style-name="P451"><text:s/>* </text:p><text:p text:style-name="P451"><text:s/>* @email rallly@abv.bg</text:p><text:p text:style-name="P451"><text:s/>* </text:p><text:p text:style-name="P451"><text:s/>* @date 05 Dec 2011</text:p><text:p text:style-name="P451"><text:s/>*/</text:p><text:p text:style-name="P451">class InformationMessages {</text:p><text:p text:style-name="P451"/><text:p text:style-name="P451"><text:tab/>/**</text:p><text:p text:style-name="P451"><text:tab/> * Frame for the connection error message.</text:p><text:p text:style-name="P451"><text:tab/> */</text:p><text:p text:style-name="P451"><text:tab/>protected static final Component frame = null;</text:p><text:p text:style-name="P451"/><text:p text:style-name="P451"><text:soft-page-break/><text:tab/>/**</text:p><text:p text:style-name="P451"><text:tab/> * Message text.</text:p><text:p text:style-name="P451"><text:tab/> */</text:p><text:p text:style-name="P451"><text:tab/>private String message;</text:p><text:p text:style-name="P451"/><text:p text:style-name="P451"><text:tab/>/**</text:p><text:p text:style-name="P451"><text:tab/> * Message title.</text:p><text:p text:style-name="P451"><text:tab/> */</text:p><text:p text:style-name="P451"><text:tab/>private String title;</text:p><text:p text:style-name="P451"/><text:p text:style-name="P451"><text:tab/>/**</text:p><text:p text:style-name="P451"><text:tab/> * Message type.</text:p><text:p text:style-name="P451"><text:tab/> */</text:p><text:p text:style-name="P451"><text:tab/>private int messageType;</text:p><text:p text:style-name="P451"/><text:p text:style-name="P451"><text:tab/>/**</text:p><text:p text:style-name="P451"><text:tab/> * Constructing pop-up message.</text:p><text:p text:style-name="P451"><text:tab/> * </text:p><text:p text:style-name="P451"><text:tab/> * @param message</text:p><text:p text:style-name="P451"><text:tab/> * <text:s text:c="11"/>Message text.</text:p><text:p text:style-name="P451"><text:tab/> * </text:p><text:p text:style-name="P451"><text:tab/> * @param header</text:p><text:p text:style-name="P451"><text:tab/> * <text:s text:c="11"/>Message header.</text:p><text:p text:style-name="P451"><text:tab/> * </text:p><text:p text:style-name="P451"><text:tab/> * @param messageType</text:p><text:p text:style-name="P451"><text:tab/> * <text:s text:c="11"/>Message type (error/warning/information, etc.).</text:p><text:p text:style-name="P451"><text:tab/> * </text:p><text:p text:style-name="P451"><text:tab/> * @author Ralitza Koleva</text:p><text:p text:style-name="P451"><text:tab/> * </text:p><text:p text:style-name="P451"><text:tab/> * @email rallly@abv.bg</text:p><text:p text:style-name="P451"><text:tab/> * </text:p><text:p text:style-name="P451"><text:tab/> * @date 05 Dec 2011</text:p><text:p text:style-name="P451"><text:tab/> */</text:p><text:p text:style-name="P451"><text:tab/>public InformationMessages(String message, String header, int messageType) {</text:p><text:p text:style-name="P451"><text:tab/><text:tab/>this.message = message;</text:p><text:p text:style-name="P451"><text:tab/><text:tab/>this.title = header;</text:p><text:p text:style-name="P451"><text:tab/><text:tab/>this.messageType = messageType;</text:p><text:p text:style-name="P451"><text:tab/>}</text:p><text:p text:style-name="P451"/><text:p text:style-name="P451"><text:tab/>/**</text:p><text:p text:style-name="P451"><text:tab/> * Shows a pop-up message on the screen.</text:p><text:p text:style-name="P451"><text:tab/> * </text:p><text:p text:style-name="P451"><text:tab/> * @author Ralitza Koleva</text:p><text:p text:style-name="P451"><text:tab/> * </text:p><text:p text:style-name="P451"><text:tab/> * @email rallly@abv.bg</text:p><text:p text:style-name="P451"><text:tab/> * </text:p><text:p text:style-name="P451"><text:tab/> * @date 05 Dec 2011</text:p><text:p text:style-name="P451"><text:tab/> */</text:p><text:p text:style-name="P451"><text:tab/>void showMessage() {</text:p><text:p text:style-name="P451"><text:tab/><text:tab/>JOptionPane.showMessageDialog(frame, message, title, messageType);</text:p><text:p text:style-name="P451"><text:tab/><text:tab/>return;</text:p><text:p text:style-name="P451"><text:tab/>}</text:p><text:p text:style-name="P451">}</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5746_1486593966"/><text:s text:c="4"/>LoginPane.java<text:bookmark-end text:name="__RefHeading___Toc5746_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P452">package eu.veldsoft.backend;</text:p><text:p text:style-name="P452"/><text:p text:style-name="P452">/*******************************************************************************</text:p><text:p text:style-name="P452"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P452"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P452"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P452"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P452"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P452"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P452"><text:s/>* Copyright (C) 2008-2011 by Todor Balabanov <text:s/>( tdb@tbsoft.eu ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P452"><text:s/>* <text:s text:c="27"/>Iliyan Zankinski ( iliyan_mf@abv.bg ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P452"><text:s/>* <text:s text:c="27"/>Galq Cirkalova <text:s text:c="2"/>( galq_cirkalova@abv.bg ) <text:s text:c="6"/>*</text:p><text:p text:style-name="P452"><text:s/>* <text:s text:c="27"/>Ivan Grozev <text:s text:c="5"/>( ivan.iliev.grozev@gmail.com ) *</text:p><text:p text:style-name="P452"><text:s/>* <text:s text:c="27"/>Momchil Anachkov ( mZer0000@gmail.com ) <text:s text:c="9"/>*</text:p><text:p text:style-name="P452"><text:s/>* <text:s text:c="27"/>Ralitza Koleva <text:s text:c="2"/>( rallly@abv.bg ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P452"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P452"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P452"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P452"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P452"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P452"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P452"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P452"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P452"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P452"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P452"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P452"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P452"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P452"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P452"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P452"/><text:p text:style-name="P452">import java.awt.Component;</text:p><text:p text:style-name="P452">import java.awt.Dimension;</text:p><text:p text:style-name="P452">import java.awt.GridLayout;</text:p><text:p text:style-name="P452">import java.awt.event.ActionEvent;</text:p><text:p text:style-name="P452">import java.awt.event.ActionListener;</text:p><text:p text:style-name="P452">import java.io.FileInputStream;</text:p><text:p text:style-name="P452">import java.io.FileOutputStream;</text:p><text:p text:style-name="P452">import java.util.Properties;</text:p><text:p text:style-name="P452"/><text:p text:style-name="P452">import javax.swing.JLabel;</text:p><text:p text:style-name="P452">import javax.swing.JOptionPane;</text:p><text:p text:style-name="P452">import javax.swing.JPanel;</text:p><text:p text:style-name="P452">import javax.swing.JButton;</text:p><text:p text:style-name="P452">import javax.swing.JTextField;</text:p><text:p text:style-name="P452">import javax.swing.JPasswordField;</text:p><text:p text:style-name="P452"/><text:p text:style-name="P452">/**</text:p><text:p text:style-name="P452"><text:s/>* Panel with GUI controls for longin.</text:p><text:p text:style-name="P452"><text:s/>* </text:p><text:p text:style-name="P452"><text:s/>* @author Momchil Anachkov</text:p><text:p text:style-name="P452"><text:s/>* </text:p><text:p text:style-name="P452"><text:s/>* @email mZer0000@gmail.com</text:p><text:p text:style-name="P452"><text:s/>* </text:p><text:p text:style-name="P452"><text:s/>* @date 16 Nov 2010</text:p><text:p text:style-name="P452"><text:s/>*/</text:p><text:p text:style-name="P452">class LoginPane extends JPanel {</text:p><text:p text:style-name="P452"><text:tab/>/**</text:p><text:p text:style-name="P452"><text:tab/> * Default serial version UID.</text:p><text:p text:style-name="P452"><text:tab/> */</text:p><text:p text:style-name="P452"><text:tab/>private static final long serialVersionUID = 1L;</text:p><text:p text:style-name="P452"/><text:p text:style-name="P452"><text:tab/>/**</text:p><text:p text:style-name="P452"><text:soft-page-break/><text:tab/> * Parent applet reference.</text:p><text:p text:style-name="P452"><text:tab/> */</text:p><text:p text:style-name="P452"><text:tab/>private VitoshaTradeApplet parent = null;</text:p><text:p text:style-name="P452"/><text:p text:style-name="P452"><text:tab/>/**</text:p><text:p text:style-name="P452"><text:tab/> * GUI control for obtaining username.</text:p><text:p text:style-name="P452"><text:tab/> */</text:p><text:p text:style-name="P452"><text:tab/>private JTextField username = new JTextField();</text:p><text:p text:style-name="P452"/><text:p text:style-name="P452"><text:tab/>/**</text:p><text:p text:style-name="P452"><text:tab/> * GUI control for obtaining password.</text:p><text:p text:style-name="P452"><text:tab/> */</text:p><text:p text:style-name="P452"><text:tab/>private JPasswordField password = new JPasswordField();</text:p><text:p text:style-name="P452"/><text:p text:style-name="P452"><text:tab/>/**</text:p><text:p text:style-name="P452"><text:tab/> * GUI control for obtaining password.</text:p><text:p text:style-name="P452"><text:tab/> */</text:p><text:p text:style-name="P452"><text:tab/>private JButton login = new JButton(Texts.LABEL_BUTTON_LOGIN);</text:p><text:p text:style-name="P452"/><text:p text:style-name="P452"><text:tab/>/**</text:p><text:p text:style-name="P452"><text:tab/> * GUI control for obtaining the database location.</text:p><text:p text:style-name="P452"><text:tab/> */</text:p><text:p text:style-name="P452"><text:tab/>private JTextField dbHost = new JTextField();</text:p><text:p text:style-name="P452"/><text:p text:style-name="P452"><text:tab/>/**</text:p><text:p text:style-name="P452"><text:tab/> * GUI control for obtaining the database port.</text:p><text:p text:style-name="P452"><text:tab/> */</text:p><text:p text:style-name="P452"><text:tab/>private JTextField dbPort = new JTextField();</text:p><text:p text:style-name="P452"/><text:p text:style-name="P452"><text:tab/>/**</text:p><text:p text:style-name="P452"><text:tab/> * GUI control for obtaining the database name.</text:p><text:p text:style-name="P452"><text:tab/> */</text:p><text:p text:style-name="P452"><text:tab/>private JTextField dbName = new JTextField();</text:p><text:p text:style-name="P452"/><text:p text:style-name="P452"><text:tab/>/**</text:p><text:p text:style-name="P452"><text:tab/> * Constructing login pane.</text:p><text:p text:style-name="P452"><text:tab/> * </text:p><text:p text:style-name="P452"><text:tab/> * @param parent</text:p><text:p text:style-name="P452"><text:tab/> * <text:s text:c="11"/>The parent class.</text:p><text:p text:style-name="P452"><text:tab/> * </text:p><text:p text:style-name="P452"><text:tab/> * @author Momchil Anachkov</text:p><text:p text:style-name="P452"><text:tab/> * </text:p><text:p text:style-name="P452"><text:tab/> * @email mZer0000@gmail.com</text:p><text:p text:style-name="P452"><text:tab/> * </text:p><text:p text:style-name="P452"><text:tab/> * @date 16 Nov 2010</text:p><text:p text:style-name="P452"><text:tab/> */</text:p><text:p text:style-name="P452"><text:tab/>public LoginPane(final VitoshaTradeApplet parent) {</text:p><text:p text:style-name="P452"><text:tab/><text:tab/>this.parent = parent;</text:p><text:p text:style-name="P452"><text:tab/><text:tab/>this.setPreferredSize(new Dimension(VitoshaTradeApplet.EAST_PANE_WIDTH,</text:p><text:p text:style-name="P452"><text:tab/><text:tab/><text:tab/><text:tab/>VitoshaTradeApplet.EAST_PANE_HEIGHT));</text:p><text:p text:style-name="P452"/><text:p text:style-name="P452"><text:tab/><text:tab/>setLayout(new GridLayout(25, 1));</text:p><text:p text:style-name="P452"/><text:p text:style-name="P452"><text:tab/><text:tab/>add(new JLabel(Texts.LABEL_DATABASE_HOST));</text:p><text:p text:style-name="P452"><text:tab/><text:tab/>add(dbHost);</text:p><text:p text:style-name="P452"/><text:p text:style-name="P452"><text:tab/><text:tab/>add(new JLabel(Texts.LABEL_DATABASE_PORT));</text:p><text:p text:style-name="P452"><text:tab/><text:tab/>add(dbPort);</text:p><text:p text:style-name="P452"/><text:p text:style-name="P452"><text:tab/><text:tab/>add(new JLabel(Texts.LABEL_DATABASE_NAME));</text:p><text:p text:style-name="P452"><text:tab/><text:tab/>add(dbName);</text:p><text:p text:style-name="P452"/><text:p text:style-name="P452"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P452"><text:tab/><text:tab/> * Load login properties.</text:p><text:p text:style-name="P452"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P452"><text:tab/><text:tab/>try {</text:p><text:p text:style-name="P452"><text:tab/><text:tab/><text:tab/>Properties p = new Properties();</text:p><text:p text:style-name="P452"><text:tab/><text:tab/><text:tab/>FileInputStream in = new FileInputStream(Util.PROPERTIES_FILE_NAME);</text:p><text:p text:style-name="P452"><text:tab/><text:tab/><text:tab/>p.load(in);</text:p><text:p text:style-name="P452"><text:tab/><text:tab/><text:tab/>in.close();</text:p><text:p text:style-name="P452"><text:tab/><text:tab/><text:tab/>dbHost.setText(p.getProperty(&quot;DatabaseHost&quot;));</text:p><text:p text:style-name="P452"><text:tab/><text:tab/><text:tab/>dbPort.setText(p.getProperty(&quot;DatabasePort&quot;));</text:p><text:p text:style-name="P452"><text:tab/><text:tab/><text:tab/>dbName.setText(p.getProperty(&quot;DatabaseName&quot;));</text:p><text:p text:style-name="P452"><text:tab/><text:tab/>} catch (Exception ex) {</text:p><text:p text:style-name="P452"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P452"/><text:p text:style-name="P452"><text:tab/><text:tab/>add(new JLabel(Texts.LABEL_USERNAME));</text:p><text:p text:style-name="P452"><text:tab/><text:tab/>add(username);</text:p><text:p text:style-name="P452"><text:tab/><text:tab/>add(new JLabel(Texts.LABEL_PASSWORD));</text:p><text:p text:style-name="P452"><text:tab/><text:tab/>add(password);</text:p><text:p text:style-name="P452"><text:tab/><text:tab/>add(login);</text:p><text:p text:style-name="P452"/><text:p text:style-name="P452"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P452"><text:tab/><text:tab/> * Listener for the login button.</text:p><text:p text:style-name="P452"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P452"><text:tab/><text:tab/>login.addActionListener(new ActionListener() {</text:p><text:p text:style-name="P452"><text:tab/><text:tab/><text:tab/>public void actionPerformed(ActionEvent e) {</text:p><text:p text:style-name="P452"><text:tab/><text:tab/><text:tab/><text:tab/>parent.dbHelp.setDatabaseName(dbName.getText());</text:p><text:p text:style-name="P452"><text:tab/><text:tab/><text:tab/><text:tab/>parent.dbHelp.setHost(dbHost.getText());</text:p><text:p text:style-name="P452"><text:tab/><text:tab/><text:tab/><text:tab/>try {</text:p><text:p text:style-name="P452"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>parent.dbHelp.setPort((new Integer(dbPort.getText()))</text:p><text:p text:style-name="P452"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>.intValue());</text:p><text:p text:style-name="P452"><text:tab/><text:tab/><text:tab/><text:tab/>} catch (Exception ex) {</text:p><text:p text:style-name="P452"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>System.err.println(Texts.ERROR_DATABASE_PORT);</text:p><text:p text:style-name="P452"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>// TODO Inform user that port should be number.</text:p><text:p text:style-name="P452"><text:tab/><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P452"><text:tab/><text:tab/><text:tab/><text:tab/>parent.dbHelp.setUsername(username.getText());</text:p><text:p text:style-name="P452"><text:tab/><text:tab/><text:tab/><text:tab/>parent.dbHelp.setPassword(password.getText());</text:p><text:p text:style-name="P452"><text:tab/><text:tab/><text:tab/><text:tab/>try {</text:p><text:p text:style-name="P452"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>parent.dbHelp.connect();</text:p><text:p text:style-name="P452"/><text:p text:style-name="P452"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P452"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/> * Show network pane.</text:p><text:p text:style-name="P452"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P452"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>parent.showNetworkPane();</text:p><text:p text:style-name="P452"><text:tab/><text:tab/><text:tab/><text:tab/>} catch (Exception ex) {</text:p><text:p text:style-name="P452"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>System.err.println(Texts.ERROR_DATABASE_CONNECT);</text:p><text:p text:style-name="P452"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>System.err.println(ex);</text:p><text:p text:style-name="P452"/><text:p text:style-name="P452"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P452"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/> * Shows connection error.</text:p><text:p text:style-name="P452"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P452"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>showConnectionError();</text:p><text:p text:style-name="P452"><text:tab/><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P452"/><text:p text:style-name="P452"><text:tab/><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P452"><text:tab/><text:tab/><text:tab/><text:tab/> * Save login properties.</text:p><text:p text:style-name="P452"><text:tab/><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P452"><text:tab/><text:tab/><text:tab/><text:tab/>try {</text:p><text:p text:style-name="P452"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>Properties p = new Properties();</text:p><text:p text:style-name="P452"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>FileInputStream allProperties = new FileInputStream(</text:p><text:p text:style-name="P452"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>Util.PROPERTIES_FILE_NAME);</text:p><text:p text:style-name="P452"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>p.load(allProperties);</text:p><text:p text:style-name="P452"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>p.setProperty(&quot;DatabaseHost&quot;, dbHost.getText());</text:p><text:p text:style-name="P452"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>p.setProperty(&quot;DatabasePort&quot;, dbPort.getText());</text:p><text:p text:style-name="P452"><text:soft-page-break/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>p.setProperty(&quot;DatabaseName&quot;, dbName.getText());</text:p><text:p text:style-name="P452"/><text:p text:style-name="P452"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>FileOutputStream out = new FileOutputStream(</text:p><text:p text:style-name="P452"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>Util.PROPERTIES_FILE_NAME);</text:p><text:p text:style-name="P452"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>p.store(out, &quot;&quot;);</text:p><text:p text:style-name="P452"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>allProperties.close();</text:p><text:p text:style-name="P452"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>out.close();</text:p><text:p text:style-name="P452"><text:tab/><text:tab/><text:tab/><text:tab/>} catch (Exception ex) {</text:p><text:p text:style-name="P452"><text:tab/><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P452"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P452"><text:tab/><text:tab/>});</text:p><text:p text:style-name="P452"/><text:p text:style-name="P452"><text:tab/><text:tab/>password.setEchoChar(&apos;*&apos;);</text:p><text:p text:style-name="P452"><text:tab/>}</text:p><text:p text:style-name="P452"/><text:p text:style-name="P452"><text:tab/>/**</text:p><text:p text:style-name="P452"><text:tab/> * Shows error message when login fails.</text:p><text:p text:style-name="P452"><text:tab/> * </text:p><text:p text:style-name="P452"><text:tab/> * @author Ralitza Koleva</text:p><text:p text:style-name="P452"><text:tab/> * </text:p><text:p text:style-name="P452"><text:tab/> * @email rallly@abv.bg</text:p><text:p text:style-name="P452"><text:tab/> * </text:p><text:p text:style-name="P452"><text:tab/> * @date 24 Nov 2011</text:p><text:p text:style-name="P452"><text:tab/> */</text:p><text:p text:style-name="P452"><text:tab/>private void showConnectionError() {</text:p><text:p text:style-name="P452"><text:tab/><text:tab/>InformationMessages error = new InformationMessages(</text:p><text:p text:style-name="P452"><text:tab/><text:tab/><text:tab/><text:tab/>Texts.ERROR_DATABASE_CONNECT,</text:p><text:p text:style-name="P452"><text:tab/><text:tab/><text:tab/><text:tab/>Texts.ERROR_DATABASE_CONNECT_TITLE, JOptionPane.ERROR_MESSAGE);</text:p><text:p text:style-name="P452"><text:tab/><text:tab/>error.showMessage();</text:p><text:p text:style-name="P452"><text:tab/><text:tab/>parent.showLoginPane();</text:p><text:p text:style-name="P452"><text:tab/>}</text:p><text:p text:style-name="P452">}</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5748_1486593966"/><text:s text:c="4"/>NetworkPane.java<text:bookmark-end text:name="__RefHeading___Toc5748_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P453">package eu.veldsoft.backend;</text:p><text:p text:style-name="P453"/><text:p text:style-name="P453">/*******************************************************************************</text:p><text:p text:style-name="P453"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P453"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P453"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P453"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P453"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P453"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P453"><text:s/>* Copyright (C) 2008-2011 by Todor Balabanov <text:s/>( tdb@tbsoft.eu ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P453"><text:s/>* <text:s text:c="27"/>Iliyan Zankinski ( iliyan_mf@abv.bg ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P453"><text:s/>* <text:s text:c="27"/>Galq Cirkalova <text:s text:c="2"/>( galq_cirkalova@abv.bg ) <text:s text:c="6"/>*</text:p><text:p text:style-name="P453"><text:s/>* <text:s text:c="27"/>Ivan Grozev <text:s text:c="5"/>( ivan.iliev.grozev@gmail.com ) *</text:p><text:p text:style-name="P453"><text:s/>* <text:s text:c="27"/>Momchil Anachkov ( mZer0000@gmail.com ) <text:s text:c="9"/>*</text:p><text:p text:style-name="P453"><text:s/>* <text:s text:c="27"/>Ralitza Koleva <text:s text:c="2"/>( rallly@abv.bg ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P453"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P453"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P453"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P453"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P453"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P453"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P453"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P453"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P453"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P453"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P453"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P453"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P453"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P453"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P453"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P453"/><text:p text:style-name="P453">import java.awt.Dimension;</text:p><text:p text:style-name="P453">import java.awt.GridLayout;</text:p><text:p text:style-name="P453">import java.awt.event.ActionEvent;</text:p><text:p text:style-name="P453">import java.awt.event.ActionListener;</text:p><text:p text:style-name="P453">import java.awt.event.ItemEvent;</text:p><text:p text:style-name="P453">import java.awt.event.ItemListener;</text:p><text:p text:style-name="P453"/><text:p text:style-name="P453">import javax.swing.JButton;</text:p><text:p text:style-name="P453">import javax.swing.JLabel;</text:p><text:p text:style-name="P453">import javax.swing.JOptionPane;</text:p><text:p text:style-name="P453">import javax.swing.JPanel;</text:p><text:p text:style-name="P453">import javax.swing.JComboBox;</text:p><text:p text:style-name="P453"/><text:p text:style-name="P453">/**</text:p><text:p text:style-name="P453"><text:s/>* Panel with GUI controls for Neural Network Management.</text:p><text:p text:style-name="P453"><text:s/>* </text:p><text:p text:style-name="P453"><text:s/>* @author Momchil Anachkov</text:p><text:p text:style-name="P453"><text:s/>* </text:p><text:p text:style-name="P453"><text:s/>* @email mZer0000@gmail.com</text:p><text:p text:style-name="P453"><text:s/>* </text:p><text:p text:style-name="P453"><text:s/>* @date 18 Nov 2010</text:p><text:p text:style-name="P453"><text:s/>*/</text:p><text:p text:style-name="P453">class NetworkPane extends JPanel {</text:p><text:p text:style-name="P453"/><text:p text:style-name="P453"><text:tab/>/**</text:p><text:p text:style-name="P453"><text:tab/> * Determines what filter should be applied when symbol and/or period are</text:p><text:p text:style-name="P453"><text:tab/> * changed.</text:p><text:p text:style-name="P453"><text:tab/> * </text:p><text:p text:style-name="P453"><text:tab/> * @author Ralitza Koleva</text:p><text:p text:style-name="P453"><text:tab/> * </text:p><text:p text:style-name="P453"><text:tab/> * @email rallly@abv.bg</text:p><text:p text:style-name="P453"><text:tab/> * </text:p><text:p text:style-name="P453"><text:tab/> * @date 30 Oct 2011</text:p><text:p text:style-name="P453"><text:tab/> */</text:p><text:p text:style-name="P453"><text:tab/>private class SetFiltersBySimbolAndPeriod implements ItemListener {</text:p><text:p text:style-name="P453"/><text:p text:style-name="P453"><text:tab/><text:tab/>/**</text:p><text:p text:style-name="P453"><text:tab/><text:tab/> * Calls functions to apply different filters depending on the chosen</text:p><text:p text:style-name="P453"><text:tab/><text:tab/> * values in the drop down menus for currency pair and period.</text:p><text:p text:style-name="P453"><text:tab/><text:tab/> * </text:p><text:p text:style-name="P453"><text:tab/><text:tab/> * @author Ralitza Koleva</text:p><text:p text:style-name="P453"><text:tab/><text:tab/> * </text:p><text:p text:style-name="P453"><text:tab/><text:tab/> * @email rallly@abv.bg</text:p><text:p text:style-name="P453"><text:tab/><text:tab/> * </text:p><text:p text:style-name="P453"><text:tab/><text:tab/> * @date 30 Oct 2011</text:p><text:p text:style-name="P453"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P453"><text:tab/><text:tab/>public void itemStateChanged(ItemEvent event) {</text:p><text:p text:style-name="P453"/><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/> * If neither symbol, nor period is chosen, all ANN IDs are shown in</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/> * the ANN ID JComboBox.</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/>if ((networkSymbol.getItemCount() == 0 || &quot;---&quot;</text:p><text:p text:style-name="P453"><text:soft-page-break/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>.equals(networkSymbol.getSelectedItem()) == true)</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&amp;&amp; (networkPeriod.getItemCount() == 0 || &quot;---&quot;</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>.equals(networkPeriod.getSelectedItem()) == true)) {</text:p><text:p text:style-name="P453"/><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/> * Loads all ANN IDs.</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/>setAllAnnIds();</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P453"/><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/> * If both symbol and period are chosen, only corresponding ANN IDs</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/> * are shown in the ANN ID JComboBox.</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/>else if ((networkSymbol.getItemCount() &gt; 0 &amp;&amp; &quot;---&quot;</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>.equals(networkSymbol.getSelectedItem()) == false)</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&amp;&amp; (networkPeriod.getItemCount() &gt; 0 &amp;&amp; &quot;---&quot;</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>.equals(networkPeriod.getSelectedItem()) == false)) {</text:p><text:p text:style-name="P453"/><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/> * Loads ANN IDs depending on the chosen symbol and period.</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/>try {</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>setFilteredAnnIdsBySymbolAndPeriod();</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/>} catch (Exception e) {</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>// TODO: handle exception</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P453"/><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/> * If only symbol is chosen, only corresponding ANN IDs are</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/> * shown in the ANN ID JComboBox.</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/>} else if ((networkSymbol.getItemCount() &gt; 0 &amp;&amp; &quot;---&quot;</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>.equals(networkSymbol.getSelectedItem()) == false)</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&amp;&amp; (networkPeriod.getItemCount() &gt; 0 &amp;&amp; &quot;---&quot;</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>.equals(networkPeriod.getSelectedItem()) == true)) {</text:p><text:p text:style-name="P453"/><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/> * Loads ANN IDs depending on the chosen symbol.</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/>try {</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>setFilteredAnnIdsBySymbol();</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/>} catch (Exception e) {</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>// TODO: handle exception</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P453"/><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/> * If only period is chosen, only corresponding ANN IDs are</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/> * shown in the ANN ID JComboBox.</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/>} else if ((networkSymbol.getItemCount() &gt; 0 &amp;&amp; &quot;---&quot;</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>.equals(networkSymbol.getSelectedItem()) == true)</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&amp;&amp; (networkPeriod.getItemCount() &gt; 0 &amp;&amp; &quot;---&quot;</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>.equals(networkPeriod.getSelectedItem()) == false)) {</text:p><text:p text:style-name="P453"/><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/> * Load ANN IDs depending on the chosen period.</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/>try {</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>setFilteredAnnIdsByPeriod();</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/>} catch (Exception e) {</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>// TODO: handle exception</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P453"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P453"/><text:p text:style-name="P453"><text:tab/><text:tab/>/**</text:p><text:p text:style-name="P453"><text:tab/><text:tab/> * Shows all ANN IDs in the ANN ID JComboBox.</text:p><text:p text:style-name="P453"><text:tab/><text:tab/> * </text:p><text:p text:style-name="P453"><text:tab/><text:tab/> * @author Ralitza Koleva</text:p><text:p text:style-name="P453"><text:tab/><text:tab/> * </text:p><text:p text:style-name="P453"><text:tab/><text:tab/> * @email rallly@abv.bg</text:p><text:p text:style-name="P453"><text:tab/><text:tab/> * </text:p><text:p text:style-name="P453"><text:tab/><text:tab/> * @date 29 Oct 2011</text:p><text:p text:style-name="P453"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P453"><text:tab/><text:tab/>public void setAllAnnIds() {</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/>String listIds[][] = parent.dbHelp.loadAnnList();</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/>networkId.removeAllItems();</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/>networkId.addItem(&quot;---&quot;);</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/>for (int i = 0; i &lt; listIds.length; i++) {</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/>networkId.addItem(listIds[i][2]);</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P453"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P453"/><text:p text:style-name="P453"><text:tab/><text:tab/>/**</text:p><text:p text:style-name="P453"><text:tab/><text:tab/> * Shows ANN IDs in the ANN ID JComboBox filtered by symbol and period.</text:p><text:p text:style-name="P453"><text:tab/><text:tab/> * </text:p><text:p text:style-name="P453"><text:tab/><text:tab/> * @author Ralitza Koleva</text:p><text:p text:style-name="P453"><text:tab/><text:tab/> * </text:p><text:p text:style-name="P453"><text:tab/><text:tab/> * @email rallly@abv.bg</text:p><text:p text:style-name="P453"><text:tab/><text:tab/> * </text:p><text:p text:style-name="P453"><text:tab/><text:tab/> * @date 29 Oct 2011</text:p><text:p text:style-name="P453"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P453"><text:tab/><text:tab/>public void setFilteredAnnIdsBySymbolAndPeriod() {</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/>String selectedSymbol = networkSymbol.getSelectedItem().toString();</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/>int selectedPeriod = ((SymbolPeriodKeyValue) networkPeriod</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>.getSelectedItem()).getKey();</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/>networkId.removeAllItems();</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/>networkId.addItem(&quot;---&quot;);</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/>String listFilteredId[][] = parent.dbHelp.loadAnnList(</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>selectedSymbol, selectedPeriod);</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/>try {</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/>for (int i = 0; i &lt; listFilteredId.length; i++) {</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>networkId.addItem(listFilteredId[i][2]);</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/>} catch (Exception e) {</text:p><text:p text:style-name="P453"/><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P453"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P453"/><text:p text:style-name="P453"><text:tab/><text:tab/>/**</text:p><text:p text:style-name="P453"><text:tab/><text:tab/> * Shows ANN IDs in the ANN ID JComboBox filtered by period.</text:p><text:p text:style-name="P453"><text:tab/><text:tab/> * </text:p><text:p text:style-name="P453"><text:tab/><text:tab/> * @author Ralitza Koleva</text:p><text:p text:style-name="P453"><text:tab/><text:tab/> * </text:p><text:p text:style-name="P453"><text:tab/><text:tab/> * @email rallly@abv.bg</text:p><text:p text:style-name="P453"><text:tab/><text:tab/> * </text:p><text:p text:style-name="P453"><text:tab/><text:tab/> * @date 29 Oct 2011</text:p><text:p text:style-name="P453"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P453"><text:tab/><text:tab/>public void setFilteredAnnIdsByPeriod() {</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/>int selectedPeriod = ((SymbolPeriodKeyValue) networkPeriod</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>.getSelectedItem()).getKey();</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/>networkId.removeAllItems();</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/>networkId.addItem(&quot;---&quot;);</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/>String listFilteredId[][] = parent.dbHelp</text:p><text:p text:style-name="P453"><text:soft-page-break/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>.loadAnnListByPeriod(selectedPeriod);</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/>try {</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/>for (int i = 0; i &lt; listFilteredId.length; i++) {</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>networkId.addItem(listFilteredId[i][2]);</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/>} catch (Exception e) {</text:p><text:p text:style-name="P453"/><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P453"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P453"/><text:p text:style-name="P453"><text:tab/><text:tab/>/**</text:p><text:p text:style-name="P453"><text:tab/><text:tab/> * Shows ANN IDs in the ANN ID JComboBox filtered by symbol.</text:p><text:p text:style-name="P453"><text:tab/><text:tab/> * </text:p><text:p text:style-name="P453"><text:tab/><text:tab/> * @author Ralitza Koleva</text:p><text:p text:style-name="P453"><text:tab/><text:tab/> * </text:p><text:p text:style-name="P453"><text:tab/><text:tab/> * @email rallly@abv.bg</text:p><text:p text:style-name="P453"><text:tab/><text:tab/> * </text:p><text:p text:style-name="P453"><text:tab/><text:tab/> * @date 29 Oct 2011</text:p><text:p text:style-name="P453"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P453"><text:tab/><text:tab/>public void setFilteredAnnIdsBySymbol() {</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/>String selectedSymbol = networkSymbol.getSelectedItem().toString();</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/>networkId.removeAllItems();</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/>networkId.addItem(&quot;---&quot;);</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/>String listFilteredId[][] = parent.dbHelp</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>.loadAnnListBySymbol(selectedSymbol);</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/>try {</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/>for (int i = 0; i &lt; listFilteredId.length; i++) {</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>networkId.addItem(listFilteredId[i][2]);</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/>} catch (Exception e) {</text:p><text:p text:style-name="P453"/><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P453"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P453"><text:tab/>};</text:p><text:p text:style-name="P453"/><text:p text:style-name="P453"><text:tab/>/**</text:p><text:p text:style-name="P453"><text:tab/> * Default serial version UID.</text:p><text:p text:style-name="P453"><text:tab/> */</text:p><text:p text:style-name="P453"><text:tab/>private static final long serialVersionUID = 1L;</text:p><text:p text:style-name="P453"/><text:p text:style-name="P453"><text:tab/>/**</text:p><text:p text:style-name="P453"><text:tab/> * Parent applet reference.</text:p><text:p text:style-name="P453"><text:tab/> */</text:p><text:p text:style-name="P453"><text:tab/>private VitoshaTradeApplet parent = null;</text:p><text:p text:style-name="P453"/><text:p text:style-name="P453"><text:tab/>/**</text:p><text:p text:style-name="P453"><text:tab/> * GUI control for obtaining and selecting network symbol.</text:p><text:p text:style-name="P453"><text:tab/> */</text:p><text:p text:style-name="P453"><text:tab/>private JComboBox networkSymbol = new JComboBox();</text:p><text:p text:style-name="P453"/><text:p text:style-name="P453"><text:tab/>/**</text:p><text:p text:style-name="P453"><text:tab/> * GUI control for obtaining and selecting network period.</text:p><text:p text:style-name="P453"><text:tab/> */</text:p><text:p text:style-name="P453"><text:tab/>private JComboBox networkPeriod = new JComboBox();</text:p><text:p text:style-name="P453"/><text:p text:style-name="P453"><text:tab/>/**</text:p><text:p text:style-name="P453"><text:tab/> * GUI control for obtaining and selecting network ID.</text:p><text:p text:style-name="P453"><text:tab/> */</text:p><text:p text:style-name="P453"><text:tab/>private JComboBox networkId = new JComboBox();</text:p><text:p text:style-name="P453"/><text:p text:style-name="P453"><text:tab/>/**</text:p><text:p text:style-name="P453"><text:tab/> * GUI control for loading a selected network.</text:p><text:p text:style-name="P453"><text:tab/> */</text:p><text:p text:style-name="P453"><text:tab/>private JButton load = new JButton();</text:p><text:p text:style-name="P453"/><text:p text:style-name="P453"><text:tab/>/**</text:p><text:p text:style-name="P453"><text:tab/> * GUI control for saving a selected network.</text:p><text:p text:style-name="P453"><text:tab/> */</text:p><text:p text:style-name="P453"><text:tab/>private JButton save = new JButton();</text:p><text:p text:style-name="P453"/><text:p text:style-name="P453"><text:tab/>/**</text:p><text:p text:style-name="P453"><text:tab/> * GUI control for rearrange neurons.</text:p><text:p text:style-name="P453"><text:tab/> */</text:p><text:p text:style-name="P453"><text:tab/>private JButton rearrange = new JButton();</text:p><text:p text:style-name="P453"/><text:p text:style-name="P453"><text:tab/>/**</text:p><text:p text:style-name="P453"><text:tab/> * GUI control for updating ANN server information.</text:p><text:p text:style-name="P453"><text:tab/> */</text:p><text:p text:style-name="P453"><text:tab/>private JButton refresh = new JButton();</text:p><text:p text:style-name="P453"/><text:p text:style-name="P453"><text:tab/>/**</text:p><text:p text:style-name="P453"><text:tab/> * Constructing network pane.</text:p><text:p text:style-name="P453"><text:tab/> * </text:p><text:p text:style-name="P453"><text:tab/> * @param parent</text:p><text:p text:style-name="P453"><text:tab/> * <text:s text:c="11"/>The parent class.</text:p><text:p text:style-name="P453"><text:tab/> * </text:p><text:p text:style-name="P453"><text:tab/> * @author Momchil Anachkov</text:p><text:p text:style-name="P453"><text:tab/> * </text:p><text:p text:style-name="P453"><text:tab/> * @email mZer0000@gmail.com</text:p><text:p text:style-name="P453"><text:tab/> * </text:p><text:p text:style-name="P453"><text:tab/> * @date 18 Nov 2010</text:p><text:p text:style-name="P453"><text:tab/> */</text:p><text:p text:style-name="P453"><text:tab/>public NetworkPane(final VitoshaTradeApplet parent) {</text:p><text:p text:style-name="P453"><text:tab/><text:tab/>this.parent = parent;</text:p><text:p text:style-name="P453"><text:tab/><text:tab/>this.setPreferredSize(new Dimension(VitoshaTradeApplet.EAST_PANE_WIDTH,</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/>VitoshaTradeApplet.EAST_PANE_HEIGHT));</text:p><text:p text:style-name="P453"/><text:p text:style-name="P453"><text:tab/><text:tab/>setLayout(new GridLayout(25, 1));</text:p><text:p text:style-name="P453"/><text:p text:style-name="P453"><text:tab/><text:tab/>add(new JLabel(Texts.LABEL_SYMBOL));</text:p><text:p text:style-name="P453"><text:tab/><text:tab/>add(networkSymbol);</text:p><text:p text:style-name="P453"><text:tab/><text:tab/>networkSymbol.setEditable(false);</text:p><text:p text:style-name="P453"><text:tab/><text:tab/>networkSymbol.addItemListener(new SetFiltersBySimbolAndPeriod());</text:p><text:p text:style-name="P453"/><text:p text:style-name="P453"><text:tab/><text:tab/>add(new JLabel(Texts.LABEL_PERIOD));</text:p><text:p text:style-name="P453"><text:tab/><text:tab/>add(networkPeriod);</text:p><text:p text:style-name="P453"><text:tab/><text:tab/>networkPeriod.setEditable(false);</text:p><text:p text:style-name="P453"><text:tab/><text:tab/>networkPeriod.addItemListener(new SetFiltersBySimbolAndPeriod());</text:p><text:p text:style-name="P453"/><text:p text:style-name="P453"><text:tab/><text:tab/>add(new JLabel(Texts.LABEL_ANN_ID));</text:p><text:p text:style-name="P453"><text:tab/><text:tab/>add(networkId);</text:p><text:p text:style-name="P453"><text:tab/><text:tab/>networkId.setEditable(false);</text:p><text:p text:style-name="P453"/><text:p text:style-name="P453"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P453"><text:tab/><text:tab/> * Acts as separator.</text:p><text:p text:style-name="P453"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P453"><text:tab/><text:tab/>add(new JLabel());</text:p><text:p text:style-name="P453"/><text:p text:style-name="P453"><text:tab/><text:tab/>add(load);</text:p><text:p text:style-name="P453"><text:tab/><text:tab/>load.setText(Texts.LABEL_BUTTON_LOAD);</text:p><text:p text:style-name="P453"><text:tab/><text:tab/>load.addActionListener(new ActionListener() {</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/>public void actionPerformed(ActionEvent arg0) {</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/>try {</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>int ann_id = Integer.parseInt((String) networkId</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>.getSelectedItem());</text:p><text:p text:style-name="P453"><text:soft-page-break/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>parent.ann = parent.dbHelp.loadAnn(ann_id);</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>parent.workArea.repaint();</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/>} catch (Exception ex) {</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>showInformationMessage();</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P453"><text:tab/><text:tab/>});</text:p><text:p text:style-name="P453"/><text:p text:style-name="P453"><text:tab/><text:tab/>add(save);</text:p><text:p text:style-name="P453"><text:tab/><text:tab/>save.setText(Texts.LABEL_BUTTON_SAVE);</text:p><text:p text:style-name="P453"><text:tab/><text:tab/>save.addActionListener(new ActionListener() {</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/>public void actionPerformed(ActionEvent arg0) {</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/>try {</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>parent.dbHelp.saveAnn(parent.ann);</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/>} catch (Exception ex) {</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>showInformationMessage();</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P453"><text:tab/><text:tab/>});</text:p><text:p text:style-name="P453"/><text:p text:style-name="P453"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P453"><text:tab/><text:tab/> * Acts as separator.</text:p><text:p text:style-name="P453"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P453"><text:tab/><text:tab/>add(new JLabel());</text:p><text:p text:style-name="P453"/><text:p text:style-name="P453"><text:tab/><text:tab/>add(rearrange);</text:p><text:p text:style-name="P453"><text:tab/><text:tab/>rearrange.setText(Texts.LABEL_BUTTON_REARRANGE);</text:p><text:p text:style-name="P453"><text:tab/><text:tab/>rearrange.addActionListener(new ActionListener() {</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/>public void actionPerformed(ActionEvent arg0) {</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/>if (parent == null) {</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>return;</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/>if (parent.ann == null) {</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>return;</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/>if (parent.ann.flags == null) {</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>return;</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P453"/><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/>int width = parent.workArea.getWidth();</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/>int height = parent.workArea.getHeight();</text:p><text:p text:style-name="P453"/><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/>int idy = height / (parent.ann.numberOfInputNeurons() + 2);</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/>int hdy = height / (parent.ann.numberOfHiddenNeurons() + 2);</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/>int ody = height / (parent.ann.numberOfOutputNeurons() + 2);</text:p><text:p text:style-name="P453"/><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/>for (int k = 0, i = idy, h = hdy, o = ody; k &lt; parent.ann.flags.length; k++) {</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>if (parent.ann.flags[k] == ArtificialNeuralNetwork.INPUT_NEURON) {</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>parent.ann.coordinates[k][0] = 20;</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>parent.ann.coordinates[k][1] = i;</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>i += idy;</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>if (parent.ann.flags[k] == ArtificialNeuralNetwork.REGULAR_NEURON) {</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>parent.ann.coordinates[k][0] = width / 2;</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>parent.ann.coordinates[k][1] = h;</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>h += hdy;</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>if (parent.ann.flags[k] == ArtificialNeuralNetwork.OUTPUT_NEURON) {</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>parent.ann.coordinates[k][0] = width - 20;</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>parent.ann.coordinates[k][1] = o;</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>o += ody;</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P453"><text:tab/><text:tab/>});</text:p><text:p text:style-name="P453"/><text:p text:style-name="P453"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P453"><text:tab/><text:tab/> * Acts as separator.</text:p><text:p text:style-name="P453"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P453"><text:tab/><text:tab/>add(new JLabel());</text:p><text:p text:style-name="P453"/><text:p text:style-name="P453"><text:tab/><text:tab/>add(refresh);</text:p><text:p text:style-name="P453"><text:tab/><text:tab/>refresh.setText(Texts.LABEL_BUTTON_REFRESH);</text:p><text:p text:style-name="P453"><text:tab/><text:tab/>refresh.doClick(10000);</text:p><text:p text:style-name="P453"><text:tab/><text:tab/>refresh.addActionListener(new ActionListener() {</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/>public void actionPerformed(ActionEvent arg0) {</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/>String listSymbol[][] = parent.dbHelp.loadCurrencyPairs();</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/>String listPeriod[][] = parent.dbHelp.loadPeriods();</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/>String listIds[][] = parent.dbHelp.loadAnnList();</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/>if (listSymbol == null || listPeriod == null || listIds == null) {</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>return;</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P453"/><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/>networkSymbol.removeAllItems();</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/>networkPeriod.removeAllItems();</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/>networkSymbol.addItem(&quot;---&quot;);</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/>networkPeriod.addItem(&quot;---&quot;);</text:p><text:p text:style-name="P453"/><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/> * Loads a drop down menu with symbols.</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/>for (int i = 0; i &lt; listSymbol.length; i++) {</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>networkSymbol.addItem(listSymbol[i][0]);</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P453"/><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/> * Loads a drop down menu with periods.</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/>for (int i = 0; i &lt; listPeriod.length; i++) {</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>networkPeriod.addItem(new SymbolPeriodKeyValue(</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>listPeriod[i][0], listPeriod[i][1]));</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P453"><text:tab/><text:tab/>});</text:p><text:p text:style-name="P453"><text:tab/>}</text:p><text:p text:style-name="P453"/><text:p text:style-name="P453"><text:tab/>/**</text:p><text:p text:style-name="P453"><text:tab/> * Shows a message if no ANN ID is selected to load/save.</text:p><text:p text:style-name="P453"><text:tab/> * </text:p><text:p text:style-name="P453"><text:tab/> * @author Ralitza Koleva</text:p><text:p text:style-name="P453"><text:tab/> * </text:p><text:p text:style-name="P453"><text:tab/> * @email rallly@abv.bg</text:p><text:p text:style-name="P453"><text:tab/> * </text:p><text:p text:style-name="P453"><text:tab/> * @date 05 Dec 2011</text:p><text:p text:style-name="P453"><text:tab/> */</text:p><text:p text:style-name="P453"><text:tab/>private void showInformationMessage() {</text:p><text:p text:style-name="P453"><text:tab/><text:tab/>InformationMessages error = new InformationMessages(</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/>Texts.INFORMATION_SELECT_ANN_ID,</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/>Texts.INFORMATION_SELECT_ANN_ID_TITLE,</text:p><text:p text:style-name="P453"><text:tab/><text:tab/><text:tab/><text:tab/>JOptionPane.INFORMATION_MESSAGE);</text:p><text:p text:style-name="P453"><text:tab/><text:tab/>error.showMessage();</text:p><text:p text:style-name="P453"><text:tab/>}</text:p><text:p text:style-name="P453">}</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5750_1486593966"/><text:soft-page-break/><text:s text:c="4"/>NeuronPane.java<text:bookmark-end text:name="__RefHeading___Toc5750_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P454">package eu.veldsoft.backend;</text:p><text:p text:style-name="P454"/><text:p text:style-name="P454">/*******************************************************************************</text:p><text:p text:style-name="P454"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P454"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P454"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P454"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P454"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P454"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P454"><text:s/>* Copyright (C) 2008-2011 by Todor Balabanov <text:s/>( tdb@tbsoft.eu ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P454"><text:s/>* <text:s text:c="27"/>Iliyan Zankinski ( iliyan_mf@abv.bg ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P454"><text:s/>* <text:s text:c="27"/>Galq Cirkalova <text:s text:c="2"/>( galq_cirkalova@abv.bg ) <text:s text:c="6"/>*</text:p><text:p text:style-name="P454"><text:s/>* <text:s text:c="27"/>Ivan Grozev <text:s text:c="5"/>( ivan.iliev.grozev@gmail.com ) *</text:p><text:p text:style-name="P454"><text:s/>* <text:s text:c="27"/>Momchil Anachkov ( mZer0000@gmail.com ) <text:s text:c="9"/>*</text:p><text:p text:style-name="P454"><text:s/>* <text:s text:c="27"/>Ralitza Koleva <text:s text:c="2"/>( rallly@abv.bg ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P454"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P454"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P454"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P454"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P454"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P454"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P454"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P454"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P454"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P454"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P454"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P454"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P454"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P454"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P454"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P454"/><text:p text:style-name="P454">import java.awt.Dimension;</text:p><text:p text:style-name="P454">import java.awt.GridLayout;</text:p><text:p text:style-name="P454">import java.awt.event.ActionEvent;</text:p><text:p text:style-name="P454">import java.awt.event.ActionListener;</text:p><text:p text:style-name="P454"/><text:p text:style-name="P454">import javax.swing.JLabel;</text:p><text:p text:style-name="P454">import javax.swing.JPanel;</text:p><text:p text:style-name="P454">import javax.swing.JCheckBox;</text:p><text:p text:style-name="P454">import javax.swing.JTextField;</text:p><text:p text:style-name="P454"/><text:p text:style-name="P454">/**</text:p><text:p text:style-name="P454"><text:s/>* Panel with GUI controls for Neuron Management.</text:p><text:p text:style-name="P454"><text:s/>* </text:p><text:p text:style-name="P454"><text:s/>* @author Momchil Anachkov</text:p><text:p text:style-name="P454"><text:s/>* </text:p><text:p text:style-name="P454"><text:s/>* @email mZer0000@gmail.com</text:p><text:p text:style-name="P454"><text:s/>* </text:p><text:p text:style-name="P454"><text:s/>* @date 18 Nov 2010</text:p><text:p text:style-name="P454"><text:s/>*/</text:p><text:p text:style-name="P454">class NeuronPane extends JPanel {</text:p><text:p text:style-name="P454"/><text:p text:style-name="P454"><text:tab/>/**</text:p><text:p text:style-name="P454"><text:tab/> * Default serial version UID.</text:p><text:p text:style-name="P454"><text:tab/> */</text:p><text:p text:style-name="P454"><text:tab/>private static final long serialVersionUID = 1L;</text:p><text:p text:style-name="P454"/><text:p text:style-name="P454"><text:tab/>/**</text:p><text:p text:style-name="P454"><text:tab/> * Parent applet reference.</text:p><text:p text:style-name="P454"><text:tab/> */</text:p><text:p text:style-name="P454"><text:tab/>private VitoshaTradeApplet parent = null;</text:p><text:p text:style-name="P454"/><text:p text:style-name="P454"><text:tab/>/**</text:p><text:p text:style-name="P454"><text:tab/> * GUI control for obtaining the ID of a specific neuron.</text:p><text:p text:style-name="P454"><text:tab/> */</text:p><text:p text:style-name="P454"><text:tab/>private JTextField neuronNumber = new JTextField();</text:p><text:p text:style-name="P454"/><text:p text:style-name="P454"><text:tab/>/**</text:p><text:p text:style-name="P454"><text:tab/> * GUI control for obtaining and setting the input flag for a specific</text:p><text:p text:style-name="P454"><text:tab/> * neuron.</text:p><text:p text:style-name="P454"><text:tab/> */</text:p><text:p text:style-name="P454"><text:tab/>private JCheckBox inputCheckbox;</text:p><text:p text:style-name="P454"/><text:p text:style-name="P454"><text:tab/>/**</text:p><text:p text:style-name="P454"><text:tab/> * GUI control for obtaining and setting the output flag for a specific</text:p><text:p text:style-name="P454"><text:tab/> * neuron.</text:p><text:p text:style-name="P454"><text:tab/> */</text:p><text:p text:style-name="P454"><text:tab/>private JCheckBox outputCheckbox;</text:p><text:p text:style-name="P454"/><text:p text:style-name="P454"><text:tab/>/**</text:p><text:p text:style-name="P454"><text:tab/> * GUI control for obtaining and setting the regular flag for a specific</text:p><text:p text:style-name="P454"><text:tab/> * neuron.</text:p><text:p text:style-name="P454"><text:tab/> */</text:p><text:p text:style-name="P454"><text:tab/>private JCheckBox regularCheckbox;</text:p><text:p text:style-name="P454"/><text:p text:style-name="P454"><text:tab/>/**</text:p><text:p text:style-name="P454"><text:tab/> * GUI control for obtaining and setting the BIAS flag for a specific</text:p><text:p text:style-name="P454"><text:tab/> * neuron.</text:p><text:p text:style-name="P454"><text:tab/> */</text:p><text:p text:style-name="P454"><text:tab/>private JCheckBox biasCheckbox;</text:p><text:p text:style-name="P454"/><text:p text:style-name="P454"><text:tab/>/**</text:p><text:p text:style-name="P454"><text:tab/> * GUI control for obtaining and setting X location of a specific neuron.</text:p><text:p text:style-name="P454"><text:tab/> */</text:p><text:p text:style-name="P454"><text:tab/>JTextField axisX = new JTextField();</text:p><text:p text:style-name="P454"/><text:p text:style-name="P454"><text:tab/>/**</text:p><text:p text:style-name="P454"><text:tab/> * GUI control for obtaining and setting the Y location of a specific</text:p><text:p text:style-name="P454"><text:tab/> * neuron.</text:p><text:p text:style-name="P454"><text:tab/> */</text:p><text:p text:style-name="P454"><text:tab/>JTextField axisY = new JTextField();</text:p><text:p text:style-name="P454"/><text:p text:style-name="P454"><text:tab/>/**</text:p><text:p text:style-name="P454"><text:tab/> * GUI control for obtaining neuron signal.</text:p><text:p text:style-name="P454"><text:tab/> */</text:p><text:p text:style-name="P454"><text:tab/>JTextField signal = new JTextField();</text:p><text:p text:style-name="P454"/><text:p text:style-name="P454"><text:tab/>/**</text:p><text:p text:style-name="P454"><text:tab/> * GUI control for obtaining neuron error.</text:p><text:p text:style-name="P454"><text:tab/> */</text:p><text:p text:style-name="P454"><text:tab/>JTextField error = new JTextField();</text:p><text:p text:style-name="P454"/><text:p text:style-name="P454"><text:tab/>/**</text:p><text:p text:style-name="P454"><text:tab/> * Constructing neuron pane.</text:p><text:p text:style-name="P454"><text:tab/> * </text:p><text:p text:style-name="P454"><text:tab/> * @param parent</text:p><text:p text:style-name="P454"><text:tab/> * <text:s text:c="11"/>The parent class.</text:p><text:p text:style-name="P454"><text:tab/> * </text:p><text:p text:style-name="P454"><text:tab/> * @author Momchil Anachkov</text:p><text:p text:style-name="P454"><text:soft-page-break/><text:tab/> * </text:p><text:p text:style-name="P454"><text:tab/> * @email mZer0000@gmail.com</text:p><text:p text:style-name="P454"><text:tab/> * </text:p><text:p text:style-name="P454"><text:tab/> * @date 18 Nov 2010</text:p><text:p text:style-name="P454"><text:tab/> */</text:p><text:p text:style-name="P454"><text:tab/>public NeuronPane(final VitoshaTradeApplet parent) {</text:p><text:p text:style-name="P454"><text:tab/><text:tab/>this.parent = parent;</text:p><text:p text:style-name="P454"><text:tab/><text:tab/>this.setPreferredSize(new Dimension(VitoshaTradeApplet.EAST_PANE_WIDTH,</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/>VitoshaTradeApplet.EAST_PANE_HEIGHT));</text:p><text:p text:style-name="P454"/><text:p text:style-name="P454"><text:tab/><text:tab/>setLayout(new GridLayout(25, 1));</text:p><text:p text:style-name="P454"/><text:p text:style-name="P454"><text:tab/><text:tab/>add(new JLabel(Texts.LABEL_NUMBER));</text:p><text:p text:style-name="P454"><text:tab/><text:tab/>add(neuronNumber);</text:p><text:p text:style-name="P454"><text:tab/><text:tab/>neuronNumber.setEditable(false);</text:p><text:p text:style-name="P454"/><text:p text:style-name="P454"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P454"><text:tab/><text:tab/> * GUI control for obtaining and setting the flags of a specific neuron.</text:p><text:p text:style-name="P454"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P454"><text:tab/><text:tab/>biasCheckbox = new JCheckBox(Texts.LABEL_BIAS_NEURON);</text:p><text:p text:style-name="P454"><text:tab/><text:tab/>inputCheckbox = new JCheckBox(Texts.LABEL_INPUT_NEURON);</text:p><text:p text:style-name="P454"><text:tab/><text:tab/>outputCheckbox = new JCheckBox(Texts.LABEL_OUTPUT_NEURON);</text:p><text:p text:style-name="P454"><text:tab/><text:tab/>regularCheckbox = new JCheckBox(Texts.LABEL_REGULAR_NEURON);</text:p><text:p text:style-name="P454"><text:tab/><text:tab/>add(inputCheckbox);</text:p><text:p text:style-name="P454"><text:tab/><text:tab/>add(outputCheckbox);</text:p><text:p text:style-name="P454"><text:tab/><text:tab/>add(regularCheckbox);</text:p><text:p text:style-name="P454"><text:tab/><text:tab/>add(biasCheckbox);</text:p><text:p text:style-name="P454"/><text:p text:style-name="P454"><text:tab/><text:tab/>// TODO add(new JLabel(Texts.LABEL_SIGNAL));</text:p><text:p text:style-name="P454"><text:tab/><text:tab/>// TODO add(signal);</text:p><text:p text:style-name="P454"/><text:p text:style-name="P454"><text:tab/><text:tab/>// TODO add(new JLabel(Texts.LABEL_ERROR));</text:p><text:p text:style-name="P454"><text:tab/><text:tab/>// TODO add(error);</text:p><text:p text:style-name="P454"/><text:p text:style-name="P454"><text:tab/><text:tab/>add(new JLabel(Texts.LABEL_X_COORDINATE));</text:p><text:p text:style-name="P454"><text:tab/><text:tab/>add(axisX);</text:p><text:p text:style-name="P454"/><text:p text:style-name="P454"><text:tab/><text:tab/>add(new JLabel(Texts.LABEL_Y_COORDINATE));</text:p><text:p text:style-name="P454"><text:tab/><text:tab/>add(axisY);</text:p><text:p text:style-name="P454"/><text:p text:style-name="P454"><text:tab/><text:tab/>inputCheckbox.addActionListener(new ActionListener() {</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/>public void actionPerformed(ActionEvent arg0) {</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/>if (inputCheckbox.isSelected() == true) {</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>parent.ann.flags[Integer.parseInt(neuronNumber.getText())] |= ArtificialNeuralNetwork.INPUT_NEURON;</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/>} else {</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>parent.ann.flags[Integer.parseInt(neuronNumber.getText())] &amp;= (~ArtificialNeuralNetwork.INPUT_NEURON);</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/>parent.workArea.repaint();</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P454"><text:tab/><text:tab/>});</text:p><text:p text:style-name="P454"/><text:p text:style-name="P454"><text:tab/><text:tab/>outputCheckbox.addActionListener(new ActionListener() {</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/>public void actionPerformed(ActionEvent arg0) {</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/>if (outputCheckbox.isSelected() == true) {</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>parent.ann.flags[Integer.parseInt(neuronNumber.getText())] |= ArtificialNeuralNetwork.OUTPUT_NEURON;</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/>} else {</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>parent.ann.flags[Integer.parseInt(neuronNumber.getText())] &amp;= (~ArtificialNeuralNetwork.OUTPUT_NEURON);</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/>parent.workArea.repaint();</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P454"><text:tab/><text:tab/>});</text:p><text:p text:style-name="P454"/><text:p text:style-name="P454"><text:tab/><text:tab/>regularCheckbox.addActionListener(new ActionListener() {</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/>public void actionPerformed(ActionEvent arg0) {</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/>if (regularCheckbox.isSelected() == true) {</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>parent.ann.flags[Integer.parseInt(neuronNumber.getText())] |= ArtificialNeuralNetwork.REGULAR_NEURON;</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/>} else {</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>parent.ann.flags[Integer.parseInt(neuronNumber.getText())] &amp;= (~ArtificialNeuralNetwork.REGULAR_NEURON);</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/>parent.workArea.repaint();</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P454"><text:tab/><text:tab/>});</text:p><text:p text:style-name="P454"/><text:p text:style-name="P454"><text:tab/><text:tab/>biasCheckbox.addActionListener(new ActionListener() {</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/>public void actionPerformed(ActionEvent arg0) {</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/>if (biasCheckbox.isSelected() == true) {</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>parent.ann.flags[Integer.parseInt(neuronNumber.getText())] |= ArtificialNeuralNetwork.BIAS_NEURON;</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/>} else {</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>parent.ann.flags[Integer.parseInt(neuronNumber.getText())] &amp;= (~ArtificialNeuralNetwork.BIAS_NEURON);</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/>parent.workArea.repaint();</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P454"><text:tab/><text:tab/>});</text:p><text:p text:style-name="P454"/><text:p text:style-name="P454"><text:tab/><text:tab/>signal.addActionListener(new ActionListener() {</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/>public void actionPerformed(ActionEvent �) {</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/>parent.ann.signals[Integer.parseInt(neuronNumber.getText())] = Double</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>.parseDouble(signal.getText());</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/>parent.workArea.repaint();</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P454"><text:tab/><text:tab/>});</text:p><text:p text:style-name="P454"/><text:p text:style-name="P454"><text:tab/><text:tab/>error.addActionListener(new ActionListener() {</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/>public void actionPerformed(ActionEvent �) {</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/>parent.ann.errors[Integer.parseInt(neuronNumber.getText())] = Double</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>.parseDouble(error.getText());</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/>parent.workArea.repaint();</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P454"><text:tab/><text:tab/>});</text:p><text:p text:style-name="P454"/><text:p text:style-name="P454"><text:tab/><text:tab/>axisX.addActionListener(new ActionListener() {</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/>public void actionPerformed(ActionEvent �) {</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/>parent.ann.coordinates[Integer.parseInt(neuronNumber.getText())][0] = Integer</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>.parseInt(axisX.getText());</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/>parent.workArea.repaint();</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P454"><text:tab/><text:tab/>});</text:p><text:p text:style-name="P454"/><text:p text:style-name="P454"><text:tab/><text:tab/>axisY.addActionListener(new ActionListener() {</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/>public void actionPerformed(ActionEvent �) {</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/>parent.ann.coordinates[Integer.parseInt(neuronNumber.getText())][1] = Integer</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>.parseInt(axisY.getText());</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/>parent.workArea.repaint();</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P454"><text:tab/><text:tab/>});</text:p><text:p text:style-name="P454"><text:tab/>}</text:p><text:p text:style-name="P454"/><text:p text:style-name="P454"><text:tab/>/**</text:p><text:p text:style-name="P454"><text:tab/> * Loading neuron properties.</text:p><text:p text:style-name="P454"><text:tab/> * </text:p><text:p text:style-name="P454"><text:tab/> * @param neuronIndex</text:p><text:p text:style-name="P454"><text:tab/> * <text:s text:c="11"/>Number of selected neuron.</text:p><text:p text:style-name="P454"><text:tab/> * </text:p><text:p text:style-name="P454"><text:tab/> * @param flags</text:p><text:p text:style-name="P454"><text:tab/> * <text:s text:c="11"/>Flags of selected neuron.</text:p><text:p text:style-name="P454"><text:soft-page-break/><text:tab/> * </text:p><text:p text:style-name="P454"><text:tab/> * @param coordinateX</text:p><text:p text:style-name="P454"><text:tab/> * <text:s text:c="11"/>X coordinate of selected neuron.</text:p><text:p text:style-name="P454"><text:tab/> * </text:p><text:p text:style-name="P454"><text:tab/> * @param coordinateY</text:p><text:p text:style-name="P454"><text:tab/> * <text:s text:c="11"/>Y coordinate of selected neuron.</text:p><text:p text:style-name="P454"><text:tab/> * </text:p><text:p text:style-name="P454"><text:tab/> * @param neuronConnectionActivity</text:p><text:p text:style-name="P454"><text:tab/> * <text:s text:c="11"/>Activity of neuron connection with itself.</text:p><text:p text:style-name="P454"><text:tab/> * </text:p><text:p text:style-name="P454"><text:tab/> * @param neuronConnectionWeight</text:p><text:p text:style-name="P454"><text:tab/> * <text:s text:c="11"/>Weight of neuron connection with itself.</text:p><text:p text:style-name="P454"><text:tab/> * </text:p><text:p text:style-name="P454"><text:tab/> * @author Momchil Anachkov</text:p><text:p text:style-name="P454"><text:tab/> * </text:p><text:p text:style-name="P454"><text:tab/> * @email mZer0000@gmail.com</text:p><text:p text:style-name="P454"><text:tab/> * </text:p><text:p text:style-name="P454"><text:tab/> * @date 01 Feb 2010</text:p><text:p text:style-name="P454"><text:tab/> */</text:p><text:p text:style-name="P454"><text:tab/>void setValues(int neuronIndex, int flags, int coordinateX,</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/>int coordinateY, double neuronSignal, double neuronError) {</text:p><text:p text:style-name="P454"><text:tab/><text:tab/>neuronNumber.setText(Integer.toString(neuronIndex));</text:p><text:p text:style-name="P454"/><text:p text:style-name="P454"><text:tab/><text:tab/>switch (flags) {</text:p><text:p text:style-name="P454"><text:tab/><text:tab/>case (ArtificialNeuralNetwork.REGULAR_NEURON):</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/>inputCheckbox.setSelected(false);</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/>outputCheckbox.setSelected(false);</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/>regularCheckbox.setSelected(true);</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/>biasCheckbox.setSelected(false);</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P454"><text:tab/><text:tab/>case (ArtificialNeuralNetwork.BIAS_NEURON):</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/>inputCheckbox.setSelected(false);</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/>outputCheckbox.setSelected(false);</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/>regularCheckbox.setSelected(false);</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/>biasCheckbox.setSelected(true);</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P454"><text:tab/><text:tab/>case (ArtificialNeuralNetwork.INPUT_NEURON):</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/>inputCheckbox.setSelected(true);</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/>outputCheckbox.setSelected(false);</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/>regularCheckbox.setSelected(false);</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/>biasCheckbox.setSelected(false);</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P454"><text:tab/><text:tab/>case (ArtificialNeuralNetwork.BIAS_NEURON | ArtificialNeuralNetwork.INPUT_NEURON):</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/>inputCheckbox.setSelected(true);</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/>outputCheckbox.setSelected(false);</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/>regularCheckbox.setSelected(false);</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/>biasCheckbox.setSelected(true);</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P454"><text:tab/><text:tab/>case (ArtificialNeuralNetwork.OUTPUT_NEURON):</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/>inputCheckbox.setSelected(false);</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/>outputCheckbox.setSelected(true);</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/>regularCheckbox.setSelected(false);</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/>biasCheckbox.setSelected(false);</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P454"><text:tab/><text:tab/>case (ArtificialNeuralNetwork.BIAS_NEURON | ArtificialNeuralNetwork.OUTPUT_NEURON):</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/>inputCheckbox.setSelected(false);</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/>outputCheckbox.setSelected(true);</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/>regularCheckbox.setSelected(false);</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/>biasCheckbox.setSelected(true);</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P454"><text:tab/><text:tab/>case (ArtificialNeuralNetwork.INPUT_NEURON | ArtificialNeuralNetwork.OUTPUT_NEURON):</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/>inputCheckbox.setSelected(true);</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/>outputCheckbox.setSelected(true);</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/>regularCheckbox.setSelected(false);</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/>biasCheckbox.setSelected(false);</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P454"><text:tab/><text:tab/>case (ArtificialNeuralNetwork.BIAS_NEURON</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/>| ArtificialNeuralNetwork.INPUT_NEURON | ArtificialNeuralNetwork.OUTPUT_NEURON):</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/>inputCheckbox.setSelected(true);</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/>outputCheckbox.setSelected(true);</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/>regularCheckbox.setSelected(false);</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/>biasCheckbox.setSelected(true);</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P454"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P454"/><text:p text:style-name="P454"><text:tab/><text:tab/>axisX.setText(Integer.toString(coordinateX));</text:p><text:p text:style-name="P454"><text:tab/><text:tab/>axisY.setText(Integer.toString(coordinateY));</text:p><text:p text:style-name="P454"><text:tab/><text:tab/>error.setText(Double.toString(neuronError));</text:p><text:p text:style-name="P454"><text:tab/><text:tab/>signal.setText(Double.toString(neuronSignal));</text:p><text:p text:style-name="P454"><text:tab/>}</text:p><text:p text:style-name="P454">}</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5752_1486593966"/><text:s text:c="4"/>NewAnnPane.java<text:bookmark-end text:name="__RefHeading___Toc5752_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P454">package eu.veldsoft.backend;</text:p><text:p text:style-name="P454"/><text:p text:style-name="P454">/*******************************************************************************</text:p><text:p text:style-name="P454"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P454"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P454"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P454"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P454"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P454"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P454"><text:s/>* Copyright (C) 2008-2011 by Todor Balabanov <text:s/>( tdb@tbsoft.eu ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P454"><text:s/>* <text:s text:c="27"/>Iliyan Zankinski ( iliyan_mf@abv.bg ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P454"><text:s/>* <text:s text:c="27"/>Galq Cirkalova <text:s text:c="2"/>( galq_cirkalova@abv.bg ) <text:s text:c="6"/>*</text:p><text:p text:style-name="P454"><text:s/>* <text:s text:c="27"/>Ivan Grozev <text:s text:c="5"/>( ivan.iliev.grozev@gmail.com ) *</text:p><text:p text:style-name="P454"><text:s/>* <text:s text:c="27"/>Momchil Anachkov ( mZer0000@gmail.com ) <text:s text:c="9"/>*</text:p><text:p text:style-name="P454"><text:s/>* <text:s text:c="27"/>Ralitza Koleva <text:s text:c="2"/>( rallly@abv.bg ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P454"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P454"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P454"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P454"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P454"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P454"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P454"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P454"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P454"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P454"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P454"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P454"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P454"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P454"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P454"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P454"/><text:p text:style-name="P454">import java.awt.Dimension;</text:p><text:p text:style-name="P454">import java.awt.GridLayout;</text:p><text:p text:style-name="P454">import java.awt.event.ActionEvent;</text:p><text:p text:style-name="P454">import java.awt.event.ActionListener;</text:p><text:p text:style-name="P454"><text:soft-page-break/>import java.awt.event.KeyAdapter;</text:p><text:p text:style-name="P454">import java.awt.event.KeyEvent;</text:p><text:p text:style-name="P454"/><text:p text:style-name="P454">import javax.swing.JButton;</text:p><text:p text:style-name="P454">import javax.swing.JComboBox;</text:p><text:p text:style-name="P454">import javax.swing.JLabel;</text:p><text:p text:style-name="P454">import javax.swing.JOptionPane;</text:p><text:p text:style-name="P454">import javax.swing.JPanel;</text:p><text:p text:style-name="P454">import javax.swing.JTextField;</text:p><text:p text:style-name="P454"/><text:p text:style-name="P454">/**</text:p><text:p text:style-name="P454"><text:s/>* Panel with GUI controls for a new ANN management.</text:p><text:p text:style-name="P454"><text:s/>* </text:p><text:p text:style-name="P454"><text:s/>* @author Ralitza Koleva</text:p><text:p text:style-name="P454"><text:s/>* </text:p><text:p text:style-name="P454"><text:s/>* @email rallly@abv.bg</text:p><text:p text:style-name="P454"><text:s/>* </text:p><text:p text:style-name="P454"><text:s/>* @date 18 Sep 2011</text:p><text:p text:style-name="P454"><text:s/>*/</text:p><text:p text:style-name="P454">class NewAnnPane extends JPanel {</text:p><text:p text:style-name="P454"/><text:p text:style-name="P454"><text:tab/>/**</text:p><text:p text:style-name="P454"><text:tab/> * Default serial version UID.</text:p><text:p text:style-name="P454"><text:tab/> */</text:p><text:p text:style-name="P454"><text:tab/>private static final long serialVersionUID = 1L;</text:p><text:p text:style-name="P454"/><text:p text:style-name="P454"><text:tab/>/**</text:p><text:p text:style-name="P454"><text:tab/> * Parent applet reference.</text:p><text:p text:style-name="P454"><text:tab/> */</text:p><text:p text:style-name="P454"><text:tab/>private VitoshaTradeApplet parent = null;</text:p><text:p text:style-name="P454"/><text:p text:style-name="P454"><text:tab/>/**</text:p><text:p text:style-name="P454"><text:tab/> * GUI control for obtaining the ANN kind (shows symbols).</text:p><text:p text:style-name="P454"><text:tab/> */</text:p><text:p text:style-name="P454"><text:tab/>private JComboBox networkSymbol = new JComboBox();</text:p><text:p text:style-name="P454"/><text:p text:style-name="P454"><text:tab/>/**</text:p><text:p text:style-name="P454"><text:tab/> * GUI control for obtaining the ANN kind (shows period).</text:p><text:p text:style-name="P454"><text:tab/> */</text:p><text:p text:style-name="P454"><text:tab/>private JComboBox networkPeriod = new JComboBox();</text:p><text:p text:style-name="P454"/><text:p text:style-name="P454"><text:tab/>/**</text:p><text:p text:style-name="P454"><text:tab/> * GUI control for number of neurons.</text:p><text:p text:style-name="P454"><text:tab/> */</text:p><text:p text:style-name="P454"><text:tab/>private JTextField networkNumberNeurons = new JTextField();</text:p><text:p text:style-name="P454"/><text:p text:style-name="P454"><text:tab/>/**</text:p><text:p text:style-name="P454"><text:tab/> * GUI control for updating ANN server information.</text:p><text:p text:style-name="P454"><text:tab/> */</text:p><text:p text:style-name="P454"><text:tab/>private JButton refresh = new JButton();</text:p><text:p text:style-name="P454"/><text:p text:style-name="P454"><text:tab/>/**</text:p><text:p text:style-name="P454"><text:tab/> * GUI control for saving a new network.</text:p><text:p text:style-name="P454"><text:tab/> */</text:p><text:p text:style-name="P454"><text:tab/>private JButton save = new JButton();</text:p><text:p text:style-name="P454"/><text:p text:style-name="P454"><text:tab/>/**</text:p><text:p text:style-name="P454"><text:tab/> * Constructing new ANN pane.</text:p><text:p text:style-name="P454"><text:tab/> * </text:p><text:p text:style-name="P454"><text:tab/> * @param parent</text:p><text:p text:style-name="P454"><text:tab/> * <text:s text:c="11"/>The parent class.</text:p><text:p text:style-name="P454"><text:tab/> * </text:p><text:p text:style-name="P454"><text:tab/> * @author Ralitza Koleva</text:p><text:p text:style-name="P454"><text:tab/> * </text:p><text:p text:style-name="P454"><text:tab/> * @email rallly@abv.bg</text:p><text:p text:style-name="P454"><text:tab/> * </text:p><text:p text:style-name="P454"><text:tab/> * @date 18 Sep 2011</text:p><text:p text:style-name="P454"><text:tab/> */</text:p><text:p text:style-name="P454"><text:tab/>public NewAnnPane(final VitoshaTradeApplet parent) {</text:p><text:p text:style-name="P454"><text:tab/><text:tab/>this.parent = parent;</text:p><text:p text:style-name="P454"><text:tab/><text:tab/>this.setPreferredSize(new Dimension(VitoshaTradeApplet.EAST_PANE_WIDTH,</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/>VitoshaTradeApplet.EAST_PANE_HEIGHT));</text:p><text:p text:style-name="P454"/><text:p text:style-name="P454"><text:tab/><text:tab/>setLayout(new GridLayout(25, 1));</text:p><text:p text:style-name="P454"/><text:p text:style-name="P454"><text:tab/><text:tab/>add(new JLabel(Texts.LABEL_SYMBOL));</text:p><text:p text:style-name="P454"><text:tab/><text:tab/>add(networkSymbol);</text:p><text:p text:style-name="P454"><text:tab/><text:tab/>networkSymbol.setEditable(false);</text:p><text:p text:style-name="P454"/><text:p text:style-name="P454"><text:tab/><text:tab/>add(new JLabel(Texts.LABEL_PERIOD));</text:p><text:p text:style-name="P454"><text:tab/><text:tab/>add(networkPeriod);</text:p><text:p text:style-name="P454"><text:tab/><text:tab/>networkPeriod.setEditable(false);</text:p><text:p text:style-name="P454"/><text:p text:style-name="P454"><text:tab/><text:tab/>add(new JLabel(Texts.LABEL_NUMBER_NEURONS));</text:p><text:p text:style-name="P454"><text:tab/><text:tab/>add(networkNumberNeurons);</text:p><text:p text:style-name="P454"/><text:p text:style-name="P454"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P454"><text:tab/><text:tab/> * Deletes all tokens different from numbers. Only numbers are allowed</text:p><text:p text:style-name="P454"><text:tab/><text:tab/> * in the field for inputting the number of neurons in the ANN.</text:p><text:p text:style-name="P454"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P454"><text:tab/><text:tab/>networkNumberNeurons.addKeyListener(new KeyAdapter() {</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/>/**</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/> * Deletes all tokens different from numbers typed by the user.</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/> * </text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/> * @author Ralitza Koleva</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/> * </text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/> * @email rallly@abv.bg</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/> * </text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/> * @date 17 Oct 2011</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/>public void keyTyped(KeyEvent event) {</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/>char c = event.getKeyChar();</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/>if ((c &lt; &apos;0&apos;) || (c &gt; &apos;9&apos;) || (c == KeyEvent.VK_BACK_SPACE)</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>|| (c == KeyEvent.VK_DELETE)) {</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>getToolkit().beep();</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>event.consume();</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P454"><text:tab/><text:tab/>});</text:p><text:p text:style-name="P454"/><text:p text:style-name="P454"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P454"><text:tab/><text:tab/> * Acts as separator.</text:p><text:p text:style-name="P454"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P454"><text:tab/><text:tab/>add(new JLabel());</text:p><text:p text:style-name="P454"/><text:p text:style-name="P454"><text:tab/><text:tab/>add(save);</text:p><text:p text:style-name="P454"><text:tab/><text:tab/>save.setText(Texts.LABEL_BUTTON_SAVE);</text:p><text:p text:style-name="P454"><text:tab/><text:tab/>save.addActionListener(new ActionListener() {</text:p><text:p text:style-name="P454"/><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/>/**</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/> * Prepares a new ANN for saving and calls a function to save it.</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/> * </text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/> * @author Ralitza Koleva</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/> * </text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/> * @email rallly@abv.bg</text:p><text:p text:style-name="P454"><text:soft-page-break/><text:tab/><text:tab/><text:tab/> * </text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/> * @date 18 Sep 2011</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/>public void actionPerformed(ActionEvent event) {</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/>try {</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/> * Gets the selected currency pair (symbol) ID of the new</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/> * ANN.</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>String selectedSymbol = networkSymbol.getSelectedItem()</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>.toString();</text:p><text:p text:style-name="P454"/><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/> * Gets the selected period ID of the new ANN.</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>int selectedPeriod = ((SymbolPeriodKeyValue) networkPeriod</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>.getSelectedItem()).getKey();</text:p><text:p text:style-name="P454"/><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/> * Gets the input number of neurons of the new ANN.</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>String networkNumberNeuronsStr = networkNumberNeurons</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>.getText();</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>int networkNumberNeurons = Integer</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>.parseInt(networkNumberNeuronsStr);</text:p><text:p text:style-name="P454"/><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/> * Prepares the default weights, fitness and flags of the</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/> * new ANN.</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>String networkWeights = &quot;&quot;;</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>int networkFitness = 0;</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>String networkFlags = &quot;&quot;;</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>for (int i = 0; i &lt; networkNumberNeurons; i++) {</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>networkFlags = networkFlags + &quot;0&quot; + &quot; &quot;;</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>for (int j = 0; j &lt; networkNumberNeurons; j++) {</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>networkWeights = networkWeights + &quot;1.0&quot; + &quot; &quot;;</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P454"/><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/> * Calls a function for saving the new ANN.</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>int newAnn = parent.dbHelp.saveNewAnn(selectedSymbol,</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>selectedPeriod, networkNumberNeurons,</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>networkWeights, networkFitness, networkFlags);</text:p><text:p text:style-name="P454"/><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/> * Loads the new ANN in the work area.</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>parent.ann = parent.dbHelp.loadAnn(newAnn);</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>parent.workArea.repaint();</text:p><text:p text:style-name="P454"/><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/> * Shows the screen for loading an ANN.</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>parent.showNetworkPane();</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/>} catch (Exception ex) {</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>showInformationMessage();</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P454"><text:tab/><text:tab/>});</text:p><text:p text:style-name="P454"/><text:p text:style-name="P454"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P454"><text:tab/><text:tab/> * Acts as separator.</text:p><text:p text:style-name="P454"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P454"><text:tab/><text:tab/>add(new JLabel());</text:p><text:p text:style-name="P454"/><text:p text:style-name="P454"><text:tab/><text:tab/>add(refresh);</text:p><text:p text:style-name="P454"><text:tab/><text:tab/>refresh.setText(Texts.LABEL_BUTTON_REFRESH);</text:p><text:p text:style-name="P454"><text:tab/><text:tab/>refresh.addActionListener(new ActionListener() {</text:p><text:p text:style-name="P454"/><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/>/**</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/> * Updates ANN server information in the symbol and period</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/> * JComboBoxes.</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/> * </text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/> * @author Ralitza Koleva</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/> * </text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/> * @email rallly@abv.bg</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/> * </text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/> * @date 18 Sep 2011</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/>public void actionPerformed(ActionEvent event) {</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/>String listCurrencyPairs[][] = parent.dbHelp</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>.loadCurrencyPairs();</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/>if (listCurrencyPairs == null) {</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>return;</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P454"/><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/> * Updates symbols JComboBox items.</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/>networkSymbol.removeAllItems();</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/>for (int i = 0; i &lt; listCurrencyPairs.length; i++) {</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>networkSymbol.addItem(listCurrencyPairs[i][0]);</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P454"/><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/>String listPeriods[][] = parent.dbHelp.loadPeriods();</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/>if (listPeriods == null) {</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>return;</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P454"/><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/> * Updates periods JComboBox items.</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/>networkPeriod.removeAllItems();</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/>for (int i = 0; i &lt; listPeriods.length; i++) {</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>networkPeriod.addItem(new SymbolPeriodKeyValue(</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>listPeriods[i][0], listPeriods[i][1]));</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P454"><text:tab/><text:tab/>});</text:p><text:p text:style-name="P454"><text:tab/>}</text:p><text:p text:style-name="P454"/><text:p text:style-name="P454"><text:tab/>/**</text:p><text:p text:style-name="P454"><text:tab/> * Shows a message if no symbol/period is selected to save the new ANN.</text:p><text:p text:style-name="P454"><text:tab/> * </text:p><text:p text:style-name="P454"><text:tab/> * @author Ralitza Koleva</text:p><text:p text:style-name="P454"><text:tab/> * </text:p><text:p text:style-name="P454"><text:tab/> * @email rallly@abv.bg</text:p><text:p text:style-name="P454"><text:tab/> * </text:p><text:p text:style-name="P454"><text:tab/> * @date 05 Dec 2011</text:p><text:p text:style-name="P454"><text:tab/> */</text:p><text:p text:style-name="P454"><text:tab/>private void showInformationMessage() {</text:p><text:p text:style-name="P454"><text:tab/><text:tab/>InformationMessages error = new InformationMessages(</text:p><text:p text:style-name="P454"><text:soft-page-break/><text:tab/><text:tab/><text:tab/><text:tab/>Texts.INFORMATION_SELECT_SYMBOL_AND_PERIOD,</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/>Texts.INFORMATION_SELECT_SYMBOL_AND_PERIOD_TITLE,</text:p><text:p text:style-name="P454"><text:tab/><text:tab/><text:tab/><text:tab/>JOptionPane.INFORMATION_MESSAGE);</text:p><text:p text:style-name="P454"><text:tab/><text:tab/>error.showMessage();</text:p><text:p text:style-name="P454"><text:tab/>}</text:p><text:p text:style-name="P454">}</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5754_1486593966"/><text:s text:c="4"/>SettingsPane.java<text:bookmark-end text:name="__RefHeading___Toc5754_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P455">package eu.veldsoft.backend;</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455">/*******************************************************************************</text:p><text:p text:style-name="P455"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P455"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P455"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P455"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P455"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P455"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P455"><text:s/>* Copyright (C) 2008-2011 by Todor Balabanov <text:s/>( tdb@tbsoft.eu ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P455"><text:s/>* <text:s text:c="27"/>Iliyan Zankinski ( iliyan_mf@abv.bg ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P455"><text:s/>* <text:s text:c="27"/>Galq Cirkalova <text:s text:c="2"/>( galq_cirkalova@abv.bg ) <text:s text:c="6"/>*</text:p><text:p text:style-name="P455"><text:s/>* <text:s text:c="27"/>Ivan Grozev <text:s text:c="5"/>( ivan.iliev.grozev@gmail.com ) *</text:p><text:p text:style-name="P455"><text:s/>* <text:s text:c="27"/>Momchil Anachkov ( mZer0000@gmail.com ) <text:s text:c="9"/>*</text:p><text:p text:style-name="P455"><text:s/>* <text:s text:c="27"/>Ralitza Koleva <text:s text:c="2"/>( rallly@abv.bg ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P455"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P455"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P455"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P455"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P455"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P455"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P455"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P455"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P455"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P455"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P455"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P455"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P455"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P455"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P455"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455">import java.awt.Color;</text:p><text:p text:style-name="P455">import java.awt.Dimension;</text:p><text:p text:style-name="P455">import java.awt.GridBagConstraints;</text:p><text:p text:style-name="P455">import java.awt.GridBagLayout;</text:p><text:p text:style-name="P455">import java.awt.Insets;</text:p><text:p text:style-name="P455">import java.awt.event.ActionEvent;</text:p><text:p text:style-name="P455">import java.awt.event.ActionListener;</text:p><text:p text:style-name="P455">import java.io.FileInputStream;</text:p><text:p text:style-name="P455">import java.io.FileOutputStream;</text:p><text:p text:style-name="P455">import java.util.Properties;</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455">import javax.swing.JButton;</text:p><text:p text:style-name="P455">import javax.swing.JColorChooser;</text:p><text:p text:style-name="P455">import javax.swing.JComboBox;</text:p><text:p text:style-name="P455">import javax.swing.JComponent;</text:p><text:p text:style-name="P455">import javax.swing.JLabel;</text:p><text:p text:style-name="P455">import javax.swing.JPanel;</text:p><text:p text:style-name="P455">import javax.swing.JTextField;</text:p><text:p text:style-name="P455">import javax.swing.SwingConstants;</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455">/**</text:p><text:p text:style-name="P455"><text:s/>* Panel with GUI controls for Neural Network Color Settings.</text:p><text:p text:style-name="P455"><text:s/>* </text:p><text:p text:style-name="P455"><text:s/>* @author Ralitza Koleva</text:p><text:p text:style-name="P455"><text:s/>* </text:p><text:p text:style-name="P455"><text:s/>* @email rallly@abv.bg</text:p><text:p text:style-name="P455"><text:s/>* </text:p><text:p text:style-name="P455"><text:s/>* @date 21 Oct 2011</text:p><text:p text:style-name="P455"><text:s/>*/</text:p><text:p text:style-name="P455">class SettingsPane extends JPanel {</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/>/**</text:p><text:p text:style-name="P455"><text:tab/> * Class ActionListener for buttons choosing a neuron type color.</text:p><text:p text:style-name="P455"><text:tab/> * </text:p><text:p text:style-name="P455"><text:tab/> * @author Ralitza Koleva</text:p><text:p text:style-name="P455"><text:tab/> * </text:p><text:p text:style-name="P455"><text:tab/> * @email rallly@abv.bg</text:p><text:p text:style-name="P455"><text:tab/> * </text:p><text:p text:style-name="P455"><text:tab/> * @date 21 Oct 2011</text:p><text:p text:style-name="P455"><text:tab/> */</text:p><text:p text:style-name="P455"><text:tab/>private class ChooseNeuronColorListener implements ActionListener {</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/><text:tab/>/**</text:p><text:p text:style-name="P455"><text:tab/><text:tab/> * A field which shows the neuron type color.</text:p><text:p text:style-name="P455"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>JTextField neuronTypeColorField;</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/><text:tab/>/**</text:p><text:p text:style-name="P455"><text:tab/><text:tab/> * Constructor of the listener for choosing a neuron type color.</text:p><text:p text:style-name="P455"><text:tab/><text:tab/> * </text:p><text:p text:style-name="P455"><text:tab/><text:tab/> * @param neuronTypeColorField</text:p><text:p text:style-name="P455"><text:tab/><text:tab/> * <text:s text:c="11"/>Shows the chosen neuron type color.</text:p><text:p text:style-name="P455"><text:tab/><text:tab/> * </text:p><text:p text:style-name="P455"><text:tab/><text:tab/> * @author Ralitza Koleva</text:p><text:p text:style-name="P455"><text:tab/><text:tab/> * </text:p><text:p text:style-name="P455"><text:tab/><text:tab/> * @email rallly@abv.bg</text:p><text:p text:style-name="P455"><text:tab/><text:tab/> * </text:p><text:p text:style-name="P455"><text:tab/><text:tab/> * @date 21 Oct 2011</text:p><text:p text:style-name="P455"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>public ChooseNeuronColorListener(JTextField neuronTypeColorField) {</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/>this.neuronTypeColorField = neuronTypeColorField;</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/><text:tab/>/**</text:p><text:p text:style-name="P455"><text:tab/><text:tab/> * Shows a color chooser to change a neuron type color and fills the</text:p><text:p text:style-name="P455"><text:tab/><text:tab/> * relevant field in the chosen color.</text:p><text:p text:style-name="P455"><text:tab/><text:tab/> * </text:p><text:p text:style-name="P455"><text:tab/><text:tab/> * @author Ralitza Koleva</text:p><text:p text:style-name="P455"><text:tab/><text:tab/> * </text:p><text:p text:style-name="P455"><text:tab/><text:tab/> * @email rallly@abv.bg</text:p><text:p text:style-name="P455"><text:tab/><text:tab/> * </text:p><text:p text:style-name="P455"><text:tab/><text:tab/> * @date 21 Oct 2011</text:p><text:p text:style-name="P455"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>public void actionPerformed(ActionEvent event) {</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/>Color initialBackground = neuronTypeColorField.getBackground();</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/>Color background = JColorChooser.showDialog(null,</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>Texts.LABEL_BUTTON_CHOOSE_COLOR, initialBackground);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/>if (background != null) {</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/><text:tab/>neuronTypeColorField.setBackground(background);</text:p><text:p text:style-name="P455"><text:soft-page-break/><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P455"><text:tab/>};</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/>/**</text:p><text:p text:style-name="P455"><text:tab/> * Default serial version UID.</text:p><text:p text:style-name="P455"><text:tab/> */</text:p><text:p text:style-name="P455"><text:tab/>private static final long serialVersionUID = 1L;</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/>/**</text:p><text:p text:style-name="P455"><text:tab/> * Parent applet reference.</text:p><text:p text:style-name="P455"><text:tab/> */</text:p><text:p text:style-name="P455"><text:tab/>private VitoshaTradeApplet parent = null;</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/>/**</text:p><text:p text:style-name="P455"><text:tab/> * Label for Regular Neuron.</text:p><text:p text:style-name="P455"><text:tab/> */</text:p><text:p text:style-name="P455"><text:tab/>private JLabel labelColorRegular = new JLabel(</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/>Texts.LABEL_REGULAR_NEURON_COLOR, SwingConstants.RIGHT);</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/>/**</text:p><text:p text:style-name="P455"><text:tab/> * Button to open a color picker for choosing color for Regular Neuron.</text:p><text:p text:style-name="P455"><text:tab/> */</text:p><text:p text:style-name="P455"><text:tab/>private JButton chooseColorRegular = new JButton(</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/>Texts.LABEL_BUTTON_CHOOSE_COLOR);</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/>/**</text:p><text:p text:style-name="P455"><text:tab/> * Field to show the chosen color for Regular Neuron.</text:p><text:p text:style-name="P455"><text:tab/> */</text:p><text:p text:style-name="P455"><text:tab/>private JTextField showColorRegular = new JTextField(10);</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/>/**</text:p><text:p text:style-name="P455"><text:tab/> * Label for Input Neuron.</text:p><text:p text:style-name="P455"><text:tab/> */</text:p><text:p text:style-name="P455"><text:tab/>private JLabel labelColorInput = new JLabel(Texts.LABEL_INPUT_NEURON_COLOR,</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/>SwingConstants.RIGHT);</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/>/**</text:p><text:p text:style-name="P455"><text:tab/> * Button to open a color picker for choosing color for Input Neuron.</text:p><text:p text:style-name="P455"><text:tab/> */</text:p><text:p text:style-name="P455"><text:tab/>private JButton chooseColorInput = new JButton(</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/>Texts.LABEL_BUTTON_CHOOSE_COLOR);</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/>/**</text:p><text:p text:style-name="P455"><text:tab/> * Field to show the chosen color for Input Neuron.</text:p><text:p text:style-name="P455"><text:tab/> */</text:p><text:p text:style-name="P455"><text:tab/>private JTextField showColorInput = new JTextField(10);</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/>/**</text:p><text:p text:style-name="P455"><text:tab/> * Label for Output Neuron.</text:p><text:p text:style-name="P455"><text:tab/> */</text:p><text:p text:style-name="P455"><text:tab/>private JLabel labelColorOutput = new JLabel(</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/>Texts.LABEL_OUTPUT_NEURON_COLOR, SwingConstants.RIGHT);</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/>/**</text:p><text:p text:style-name="P455"><text:tab/> * Button to open a color picker for choosing color for Output Neuron.</text:p><text:p text:style-name="P455"><text:tab/> */</text:p><text:p text:style-name="P455"><text:tab/>private JButton chooseColorOutput = new JButton(</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/>Texts.LABEL_BUTTON_CHOOSE_COLOR);</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/>/**</text:p><text:p text:style-name="P455"><text:tab/> * Field to show the chosen color for Output Neuron.</text:p><text:p text:style-name="P455"><text:tab/> */</text:p><text:p text:style-name="P455"><text:tab/>private JTextField showColorOutput = new JTextField(10);</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/>/**</text:p><text:p text:style-name="P455"><text:tab/> * Label for Bias Neuron.</text:p><text:p text:style-name="P455"><text:tab/> */</text:p><text:p text:style-name="P455"><text:tab/>private JLabel labelColorBias = new JLabel(Texts.LABEL_BIAS_NEURON_COLOR,</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/>SwingConstants.RIGHT);</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/>/**</text:p><text:p text:style-name="P455"><text:tab/> * Button to open a color picker for choosing color for Bias Neuron.</text:p><text:p text:style-name="P455"><text:tab/> */</text:p><text:p text:style-name="P455"><text:tab/>private JButton chooseColorBias = new JButton(</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/>Texts.LABEL_BUTTON_CHOOSE_COLOR);</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/>/**</text:p><text:p text:style-name="P455"><text:tab/> * Field to show the chosen color for Bias Neuron.</text:p><text:p text:style-name="P455"><text:tab/> */</text:p><text:p text:style-name="P455"><text:tab/>private JTextField showColorBias = new JTextField(10);</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/>/**</text:p><text:p text:style-name="P455"><text:tab/> * Label for Input-Output Neuron.</text:p><text:p text:style-name="P455"><text:tab/> */</text:p><text:p text:style-name="P455"><text:tab/>private JLabel labelColorInputOutput = new JLabel(</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/>Texts.LABEL_INPUT_OUTPUT_NEURON_COLOR, JLabel.RIGHT);</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/>/**</text:p><text:p text:style-name="P455"><text:tab/> * Button to open a color picker for choosing color for Input-Output Neuron.</text:p><text:p text:style-name="P455"><text:tab/> */</text:p><text:p text:style-name="P455"><text:tab/>private JButton chooseColorInputOutput = new JButton(</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/>Texts.LABEL_BUTTON_CHOOSE_COLOR);</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/>/**</text:p><text:p text:style-name="P455"><text:tab/> * Field to show the chosen color for Input-Output Neuron.</text:p><text:p text:style-name="P455"><text:tab/> */</text:p><text:p text:style-name="P455"><text:tab/>private JTextField showColorInputOutput = new JTextField(10);</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/>/**</text:p><text:p text:style-name="P455"><text:tab/> * Label for Input-Bias Neuron.</text:p><text:p text:style-name="P455"><text:tab/> */</text:p><text:p text:style-name="P455"><text:tab/>private JLabel labelColorInputBias = new JLabel(</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/>Texts.LABEL_INPUT_BIAS_NEURON_COLOR, JLabel.RIGHT);</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/>/**</text:p><text:p text:style-name="P455"><text:tab/> * Button to open a color picker for choosing color for Input-Bias Neuron.</text:p><text:p text:style-name="P455"><text:tab/> */</text:p><text:p text:style-name="P455"><text:tab/>private JButton chooseColorInputBias = new JButton(</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/>Texts.LABEL_BUTTON_CHOOSE_COLOR);</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/>/**</text:p><text:p text:style-name="P455"><text:tab/> * Field to show the chosen color for Input-Bias Neuron.</text:p><text:p text:style-name="P455"><text:tab/> */</text:p><text:p text:style-name="P455"><text:tab/>private JTextField showColorInputBias = new JTextField(10);</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/>/**</text:p><text:p text:style-name="P455"><text:tab/> * Label for Output-Bias Neuron.</text:p><text:p text:style-name="P455"><text:tab/> */</text:p><text:p text:style-name="P455"><text:tab/>private JLabel labelColorOutputBias = new JLabel(</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/>Texts.LABEL_OUTPUT_BIAS_NEURON_COLOR, JLabel.RIGHT);</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/>/**</text:p><text:p text:style-name="P455"><text:tab/> * Button to open a color picker for choosing color for Output-Bias Neuron.</text:p><text:p text:style-name="P455"><text:tab/> */</text:p><text:p text:style-name="P455"><text:soft-page-break/><text:tab/>private JButton chooseColorOutputBias = new JButton(</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/>Texts.LABEL_BUTTON_CHOOSE_COLOR);</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/>/**</text:p><text:p text:style-name="P455"><text:tab/> * Field to show the chosen color for Output-Bias Neuron.</text:p><text:p text:style-name="P455"><text:tab/> */</text:p><text:p text:style-name="P455"><text:tab/>private JTextField showColorOutputBias = new JTextField(10);</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/>/**</text:p><text:p text:style-name="P455"><text:tab/> * Label for Input-Output-Bias Neuron.</text:p><text:p text:style-name="P455"><text:tab/> */</text:p><text:p text:style-name="P455"><text:tab/>private JLabel labelColorInputOutputBias = new JLabel(</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/>Texts.LABEL_INPUT_OUTPUT_BIAS_NEURON_COLOR, JLabel.RIGHT);</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/>/**</text:p><text:p text:style-name="P455"><text:tab/> * Button to open a color picker for choosing color for Input-Output-Bias</text:p><text:p text:style-name="P455"><text:tab/> * Neuron.</text:p><text:p text:style-name="P455"><text:tab/> */</text:p><text:p text:style-name="P455"><text:tab/>private JButton chooseColorInputOutputBias = new JButton(</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/>Texts.LABEL_BUTTON_CHOOSE_COLOR);</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/>/**</text:p><text:p text:style-name="P455"><text:tab/> * Field to show the chosen color for Input-Output-Bias Neuron.</text:p><text:p text:style-name="P455"><text:tab/> */</text:p><text:p text:style-name="P455"><text:tab/>private JTextField showColorInputOutputBias = new JTextField(10);</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/>/**</text:p><text:p text:style-name="P455"><text:tab/> * Drop down menu for choosing the size of neurons.</text:p><text:p text:style-name="P455"><text:tab/> */</text:p><text:p text:style-name="P455"><text:tab/>private JComboBox chooseNeuronsSize = new JComboBox();</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/>/**</text:p><text:p text:style-name="P455"><text:tab/> * Label for size of neurons.</text:p><text:p text:style-name="P455"><text:tab/> */</text:p><text:p text:style-name="P455"><text:tab/>private JLabel labelNeuronsSize = new JLabel(Texts.LABEL_NEURONS_SIZE,</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/>JLabel.RIGHT);</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/>/**</text:p><text:p text:style-name="P455"><text:tab/> * Label for size of neurons&apos; numbers.</text:p><text:p text:style-name="P455"><text:tab/> */</text:p><text:p text:style-name="P455"><text:tab/>private JLabel labelNeuronsNumbersSize = new JLabel(</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/>Texts.LABEL_NEURONS_NUMBERS_SIZE, JLabel.RIGHT);</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/>/**</text:p><text:p text:style-name="P455"><text:tab/> * Drop down menu for choosing the size of neurons&apos; numbers.</text:p><text:p text:style-name="P455"><text:tab/> */</text:p><text:p text:style-name="P455"><text:tab/>private JComboBox chooseNeuronsNumbersSize = new JComboBox();</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/>/**</text:p><text:p text:style-name="P455"><text:tab/> * Label for work area background color.</text:p><text:p text:style-name="P455"><text:tab/> */</text:p><text:p text:style-name="P455"><text:tab/>private JLabel labelWorkAreaBackgroundColor = new JLabel(</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/>Texts.LABEL_WORK_AREA_BACKGROUND_COLOR, JLabel.RIGHT);</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/>/**</text:p><text:p text:style-name="P455"><text:tab/> * Button to open a color picker for choosing color for Input-Bias Neuron.</text:p><text:p text:style-name="P455"><text:tab/> */</text:p><text:p text:style-name="P455"><text:tab/>private JButton chooseWorkAreaBackgroundColor = new JButton(</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/>Texts.LABEL_BUTTON_CHOOSE_COLOR);</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/>/**</text:p><text:p text:style-name="P455"><text:tab/> * Field to show the chosen color for Input-Bias Neuron.</text:p><text:p text:style-name="P455"><text:tab/> */</text:p><text:p text:style-name="P455"><text:tab/>private JTextField showWorkAreaBackgroundColor = new JTextField(10);</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/>/**</text:p><text:p text:style-name="P455"><text:tab/> * Button to save the new neuron colors.</text:p><text:p text:style-name="P455"><text:tab/> */</text:p><text:p text:style-name="P455"><text:tab/>private JButton save = new JButton(Texts.LABEL_BUTTON_SAVE_CAPS);</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/>/**</text:p><text:p text:style-name="P455"><text:tab/> * Button to close the setting pane and return to the network pane (load).</text:p><text:p text:style-name="P455"><text:tab/> */</text:p><text:p text:style-name="P455"><text:tab/>private JButton close = new JButton(Texts.LABEL_BUTTON_CLOSE_CAPS);</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/>/**</text:p><text:p text:style-name="P455"><text:tab/> * Labels width.</text:p><text:p text:style-name="P455"><text:tab/> */</text:p><text:p text:style-name="P455"><text:tab/>private static final int LABELS_WIDTH = 200;</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/>/**</text:p><text:p text:style-name="P455"><text:tab/> * Labels height.</text:p><text:p text:style-name="P455"><text:tab/> */</text:p><text:p text:style-name="P455"><text:tab/>private static final int LABELS_HEIGHT = 20;</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/>/**</text:p><text:p text:style-name="P455"><text:tab/> * Labels dimensions.</text:p><text:p text:style-name="P455"><text:tab/> */</text:p><text:p text:style-name="P455"><text:tab/>private static final Dimension LABELS_DIMENTIONS = new Dimension(</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/>LABELS_WIDTH, LABELS_HEIGHT);</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/>/**</text:p><text:p text:style-name="P455"><text:tab/> * Buttons width.</text:p><text:p text:style-name="P455"><text:tab/> */</text:p><text:p text:style-name="P455"><text:tab/>private static final int BUTTONS_WIDTH = 120;</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/>/**</text:p><text:p text:style-name="P455"><text:tab/> * Buttons height.</text:p><text:p text:style-name="P455"><text:tab/> */</text:p><text:p text:style-name="P455"><text:tab/>private static final int BUTTONS_HEIGHT = 25;</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/>/**</text:p><text:p text:style-name="P455"><text:tab/> * Minimum neurons&apos; numbers size.</text:p><text:p text:style-name="P455"><text:tab/> */</text:p><text:p text:style-name="P455"><text:tab/>private static final int MIN_NEURONS_NUMBERS_SIZE = 8;</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/>/**</text:p><text:p text:style-name="P455"><text:tab/> * Maximum neurons&apos; numbers size.</text:p><text:p text:style-name="P455"><text:tab/> */</text:p><text:p text:style-name="P455"><text:tab/>private static final int MAX_NEURONS_NUMBERS_SIZE = 14;</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/>/**</text:p><text:p text:style-name="P455"><text:tab/> * Name of the property key which has as a value the color of regular</text:p><text:p text:style-name="P455"><text:tab/> * neurons.</text:p><text:p text:style-name="P455"><text:tab/> */</text:p><text:p text:style-name="P455"><text:tab/>private static final String REGULAR_NEURON_COLOR_PROPERTY_KEY = &quot;RegularNeuronColor&quot;;</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/>/**</text:p><text:p text:style-name="P455"><text:tab/> * Name of the property key which has as a value the color of input neurons.</text:p><text:p text:style-name="P455"><text:tab/> */</text:p><text:p text:style-name="P455"><text:tab/>private static final String INPUT_NEURON_COLOR_PROPERTY_KEY = &quot;InputNeuronColor&quot;;</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/>/**</text:p><text:p text:style-name="P455"><text:tab/> * Name of the property key which has as a value the color of output</text:p><text:p text:style-name="P455"><text:tab/> * neurons.</text:p><text:p text:style-name="P455"><text:soft-page-break/><text:tab/> */</text:p><text:p text:style-name="P455"><text:tab/>private static final String OUTPUT_NEURON_COLOR_PROPERTY_KEY = &quot;OutputNeuronColor&quot;;</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/>/**</text:p><text:p text:style-name="P455"><text:tab/> * Name of the property key which has as a value the color of output</text:p><text:p text:style-name="P455"><text:tab/> * neurons.</text:p><text:p text:style-name="P455"><text:tab/> */</text:p><text:p text:style-name="P455"><text:tab/>private static final String BIAS_NEURON_COLOR_PROPERTY_KEY = &quot;BiasNeuronColor&quot;;</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/>/**</text:p><text:p text:style-name="P455"><text:tab/> * Name of the property key which has as a value the color of input-output</text:p><text:p text:style-name="P455"><text:tab/> * neurons.</text:p><text:p text:style-name="P455"><text:tab/> */</text:p><text:p text:style-name="P455"><text:tab/>private static final String INPUT_OUTPUT_NEURON_COLOR_PROPERTY_KEY = &quot;InputOutputNeuronColor&quot;;</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/>/**</text:p><text:p text:style-name="P455"><text:tab/> * Name of the property key which has as a value the color of input-bias</text:p><text:p text:style-name="P455"><text:tab/> * neurons.</text:p><text:p text:style-name="P455"><text:tab/> */</text:p><text:p text:style-name="P455"><text:tab/>private static final String INPUT_BIAS_NEURON_COLOR_PROPERTY_KEY = &quot;InputBiasNeuronColor&quot;;</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/>/**</text:p><text:p text:style-name="P455"><text:tab/> * Name of the property key which has as a value the color of output-bias</text:p><text:p text:style-name="P455"><text:tab/> * neurons.</text:p><text:p text:style-name="P455"><text:tab/> */</text:p><text:p text:style-name="P455"><text:tab/>private static final String OUTPUT_BIAS_NEURON_COLOR_PROPERTY_KEY = &quot;OutputBiasNeuronColor&quot;;</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/>/**</text:p><text:p text:style-name="P455"><text:tab/> * Name of the property key which has as a value the color of</text:p><text:p text:style-name="P455"><text:tab/> * input-output-bias neurons.</text:p><text:p text:style-name="P455"><text:tab/> */</text:p><text:p text:style-name="P455"><text:tab/>private static final String INPUT_OUTPUT_BIAS_NEURON_COLOR_PROPERTY_KEY = &quot;InputOutputBiasNeuronColor&quot;;</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/>/**</text:p><text:p text:style-name="P455"><text:tab/> * Name of the property key which has as a value the color of work area.</text:p><text:p text:style-name="P455"><text:tab/> */</text:p><text:p text:style-name="P455"><text:tab/>private static final String WORK_AREA_BACKGROUND_COLOR_PROPERTY_KEY = &quot;WorkAreaBackgroundColor&quot;;</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/>/**</text:p><text:p text:style-name="P455"><text:tab/> * Buttons dimensions.</text:p><text:p text:style-name="P455"><text:tab/> */</text:p><text:p text:style-name="P455"><text:tab/>private static final Dimension BUTTONS_DIMENTIONS = new Dimension(</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/>BUTTONS_WIDTH, BUTTONS_HEIGHT);</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/>/**</text:p><text:p text:style-name="P455"><text:tab/> * Constraints determining the elements&apos; arrangement in the panel.</text:p><text:p text:style-name="P455"><text:tab/> */</text:p><text:p text:style-name="P455"><text:tab/>private GridBagConstraints constraints = new GridBagConstraints();</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/>/**</text:p><text:p text:style-name="P455"><text:tab/> * Panel to arrange all elements inside.</text:p><text:p text:style-name="P455"><text:tab/> */</text:p><text:p text:style-name="P455"><text:tab/>private JPanel panel = new JPanel(new GridBagLayout());</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/>/**</text:p><text:p text:style-name="P455"><text:tab/> * Constructing settings pane.</text:p><text:p text:style-name="P455"><text:tab/> * </text:p><text:p text:style-name="P455"><text:tab/> * @param parent</text:p><text:p text:style-name="P455"><text:tab/> * <text:s text:c="11"/>The parent class.</text:p><text:p text:style-name="P455"><text:tab/> * </text:p><text:p text:style-name="P455"><text:tab/> * @author Ralitza Koleva</text:p><text:p text:style-name="P455"><text:tab/> * </text:p><text:p text:style-name="P455"><text:tab/> * @email rallly@abv.bg</text:p><text:p text:style-name="P455"><text:tab/> * </text:p><text:p text:style-name="P455"><text:tab/> * @date 21 Oct 2011</text:p><text:p text:style-name="P455"><text:tab/> */</text:p><text:p text:style-name="P455"><text:tab/>public SettingsPane(final VitoshaTradeApplet parent) {</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>this.parent = parent;</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/><text:tab/>add(panel);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>this.setPreferredSize(new Dimension(VitoshaTradeApplet.WIDTH,</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/><text:tab/>VitoshaTradeApplet.HEIGHT));</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P455"><text:tab/><text:tab/> * Inserts available neurons sizes.</text:p><text:p text:style-name="P455"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>chooseNeuronsSize.addItem(Texts.LABEL_NEURONS_SIZE_SMALL);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>chooseNeuronsSize.addItem(Texts.LABEL_NEURONS_SIZE_MEDIUM);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>chooseNeuronsSize.addItem(Texts.LABEL_NEURONS_SIZE_LARGE);</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P455"><text:tab/><text:tab/> * Inserts available neurons&apos; numbers sizes.</text:p><text:p text:style-name="P455"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>for (int i = MIN_NEURONS_NUMBERS_SIZE; i &lt;= MAX_NEURONS_NUMBERS_SIZE; i++) {</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/>chooseNeuronsNumbersSize.addItem(i);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P455"><text:tab/><text:tab/> * Sets the size of the buttons.</text:p><text:p text:style-name="P455"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>chooseColorRegular.setPreferredSize(BUTTONS_DIMENTIONS);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>chooseColorInput.setPreferredSize(BUTTONS_DIMENTIONS);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>chooseColorOutput.setPreferredSize(BUTTONS_DIMENTIONS);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>chooseColorBias.setPreferredSize(BUTTONS_DIMENTIONS);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>chooseColorInputOutput.setPreferredSize(BUTTONS_DIMENTIONS);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>chooseColorInputBias.setPreferredSize(BUTTONS_DIMENTIONS);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>chooseColorOutputBias.setPreferredSize(BUTTONS_DIMENTIONS);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>chooseColorInputOutputBias.setPreferredSize(BUTTONS_DIMENTIONS);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>chooseWorkAreaBackgroundColor.setPreferredSize(BUTTONS_DIMENTIONS);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>save.setPreferredSize(BUTTONS_DIMENTIONS);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>close.setPreferredSize(BUTTONS_DIMENTIONS);</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P455"><text:tab/><text:tab/> * Sets the size of the combobox of neurons sizes and neurons&apos; numbers</text:p><text:p text:style-name="P455"><text:tab/><text:tab/> * sizes.</text:p><text:p text:style-name="P455"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>chooseNeuronsNumbersSize.setPreferredSize(BUTTONS_DIMENTIONS);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>chooseNeuronsSize.setPreferredSize(BUTTONS_DIMENTIONS);</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P455"><text:tab/><text:tab/> * Sets the size of the labels.</text:p><text:p text:style-name="P455"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>labelColorRegular.setPreferredSize(LABELS_DIMENTIONS);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>labelColorInput.setPreferredSize(LABELS_DIMENTIONS);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>labelColorOutput.setPreferredSize(LABELS_DIMENTIONS);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>labelColorBias.setPreferredSize(LABELS_DIMENTIONS);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>labelColorInputOutput.setPreferredSize(LABELS_DIMENTIONS);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>labelColorInputBias.setPreferredSize(LABELS_DIMENTIONS);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>labelColorOutputBias.setPreferredSize(LABELS_DIMENTIONS);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>labelColorInputOutputBias.setPreferredSize(LABELS_DIMENTIONS);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>labelNeuronsSize.setPreferredSize(LABELS_DIMENTIONS);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>labelNeuronsNumbersSize.setPreferredSize(LABELS_DIMENTIONS);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>labelWorkAreaBackgroundColor.setPreferredSize(LABELS_DIMENTIONS);</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P455"><text:soft-page-break/><text:tab/><text:tab/> * Places the elements on the screen, make them editable or not.</text:p><text:p text:style-name="P455"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>arrangeElements(labelColorRegular, 0, 10, true);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>arrangeElements(showColorRegular, 10, 10, false);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>arrangeElements(chooseColorRegular, 20, 10, true);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>arrangeElements(labelColorInput, 0, 20, true);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>arrangeElements(showColorInput, 10, 20, false);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>arrangeElements(chooseColorInput, 20, 20, true);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>arrangeElements(labelColorOutput, 0, 30, true);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>arrangeElements(showColorOutput, 10, 30, false);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>arrangeElements(chooseColorOutput, 20, 30, true);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>arrangeElements(labelColorBias, 0, 40, true);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>arrangeElements(showColorBias, 10, 40, false);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>arrangeElements(chooseColorBias, 20, 40, true);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>arrangeElements(labelColorInputOutput, 0, 50, true);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>arrangeElements(showColorInputOutput, 10, 50, false);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>arrangeElements(chooseColorInputOutput, 20, 50, true);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>arrangeElements(labelColorInputBias, 0, 60, true);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>arrangeElements(showColorInputBias, 10, 60, false);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>arrangeElements(chooseColorInputBias, 20, 60, true);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>arrangeElements(labelColorOutputBias, 0, 70, true);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>arrangeElements(showColorOutputBias, 10, 70, false);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>arrangeElements(chooseColorOutputBias, 20, 70, true);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>arrangeElements(labelColorInputOutputBias, 0, 80, true);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>arrangeElements(showColorInputOutputBias, 10, 80, false);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>arrangeElements(chooseColorInputOutputBias, 20, 80, true);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>arrangeElements(labelNeuronsSize, 0, 90, true);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>arrangeElements(chooseNeuronsSize, 20, 90, true);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>arrangeElements(labelNeuronsNumbersSize, 0, 100, true);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>arrangeElements(chooseNeuronsNumbersSize, 20, 100, true);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>arrangeElements(labelWorkAreaBackgroundColor, 0, 110, true);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>arrangeElements(showWorkAreaBackgroundColor, 10, 110, false);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>arrangeElements(chooseWorkAreaBackgroundColor, 20, 110, true);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>arrangeElements(save, 20, 120, true);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>arrangeElements(close, 20, 130, true);</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P455"><text:tab/><text:tab/> * Gets the color for each type of neuron.</text:p><text:p text:style-name="P455"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>readNeuronsTypesAndWorkAreaBackgroundColor(showColorRegular,</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/><text:tab/>REGULAR_NEURON_COLOR_PROPERTY_KEY);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>readNeuronsTypesAndWorkAreaBackgroundColor(showColorInput,</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/><text:tab/>INPUT_NEURON_COLOR_PROPERTY_KEY);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>readNeuronsTypesAndWorkAreaBackgroundColor(showColorOutput,</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/><text:tab/>OUTPUT_NEURON_COLOR_PROPERTY_KEY);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>readNeuronsTypesAndWorkAreaBackgroundColor(showColorBias,</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/><text:tab/>BIAS_NEURON_COLOR_PROPERTY_KEY);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>readNeuronsTypesAndWorkAreaBackgroundColor(showColorInputOutput,</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/><text:tab/>INPUT_OUTPUT_NEURON_COLOR_PROPERTY_KEY);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>readNeuronsTypesAndWorkAreaBackgroundColor(showColorInputBias,</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/><text:tab/>INPUT_BIAS_NEURON_COLOR_PROPERTY_KEY);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>readNeuronsTypesAndWorkAreaBackgroundColor(showColorOutputBias,</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/><text:tab/>OUTPUT_BIAS_NEURON_COLOR_PROPERTY_KEY);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>readNeuronsTypesAndWorkAreaBackgroundColor(showColorInputOutputBias,</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/><text:tab/>INPUT_OUTPUT_BIAS_NEURON_COLOR_PROPERTY_KEY);</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P455"><text:tab/><text:tab/> * Gets the work area background color.</text:p><text:p text:style-name="P455"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>readNeuronsTypesAndWorkAreaBackgroundColor(showWorkAreaBackgroundColor,</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/><text:tab/>WORK_AREA_BACKGROUND_COLOR_PROPERTY_KEY);</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P455"><text:tab/><text:tab/> * Gets the current size of neurons and selects it in the available</text:p><text:p text:style-name="P455"><text:tab/><text:tab/> * sizes combobox.</text:p><text:p text:style-name="P455"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>readNeuronsSize();</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P455"><text:tab/><text:tab/> * Gets the current size of neuron&apos;s numbers and selects it in the</text:p><text:p text:style-name="P455"><text:tab/><text:tab/> * available sizes combobox.</text:p><text:p text:style-name="P455"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>readNeuronsNumbersSize();</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P455"><text:tab/><text:tab/> * Adds Action Listener to each button.</text:p><text:p text:style-name="P455"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>chooseColorRegular.addActionListener(new ChooseNeuronColorListener(</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/><text:tab/>showColorRegular));</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>chooseColorInput.addActionListener(new ChooseNeuronColorListener(</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/><text:tab/>showColorInput));</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>chooseColorOutput.addActionListener(new ChooseNeuronColorListener(</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/><text:tab/>showColorOutput));</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>chooseColorBias.addActionListener(new ChooseNeuronColorListener(</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/><text:tab/>showColorBias));</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>chooseColorInputOutput.addActionListener(new ChooseNeuronColorListener(</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/><text:tab/>showColorInputOutput));</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>chooseColorInputBias.addActionListener(new ChooseNeuronColorListener(</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/><text:tab/>showColorInputBias));</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>chooseColorOutputBias.addActionListener(new ChooseNeuronColorListener(</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/><text:tab/>showColorOutputBias));</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>chooseColorInputOutputBias</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/><text:tab/>.addActionListener(new ChooseNeuronColorListener(</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>showColorInputOutputBias));</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>chooseWorkAreaBackgroundColor</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/><text:tab/>.addActionListener(new ChooseNeuronColorListener(</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>showWorkAreaBackgroundColor));</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/><text:tab/>save.addActionListener(new ActionListener() {</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/>/**</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/> * Saves the newly chosen colors to a file.</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/> * </text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/> * @author Ralitza Koleva</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/> * </text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/> * @email rallly@abv.bg</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/> * </text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/> * @date 21 Oct 2011</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/>public void actionPerformed(ActionEvent event) {</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/><text:tab/>try {</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>Properties properties = new Properties();</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/> * Loads all properties from the property file.</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>FileInputStream allProperties = new FileInputStream(</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>Util.PROPERTIES_FILE_NAME);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>properties.load(allProperties);</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/> * Calls a function to write the newly chosen colors to a</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/> * file.</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>writeNeuronsTypesAndWorkAreaBackgroundColor(</text:p><text:p text:style-name="P455"><text:soft-page-break/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>showColorRegular,</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>REGULAR_NEURON_COLOR_PROPERTY_KEY, properties);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>writeNeuronsTypesAndWorkAreaBackgroundColor(showColorInput,</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>INPUT_NEURON_COLOR_PROPERTY_KEY, properties);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>writeNeuronsTypesAndWorkAreaBackgroundColor(</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>showColorOutput, OUTPUT_NEURON_COLOR_PROPERTY_KEY,</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>properties);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>writeNeuronsTypesAndWorkAreaBackgroundColor(showColorBias,</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>BIAS_NEURON_COLOR_PROPERTY_KEY, properties);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>writeNeuronsTypesAndWorkAreaBackgroundColor(</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>showColorInputOutput,</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>INPUT_OUTPUT_NEURON_COLOR_PROPERTY_KEY, properties);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>writeNeuronsTypesAndWorkAreaBackgroundColor(</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>showColorInputBias,</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>INPUT_BIAS_NEURON_COLOR_PROPERTY_KEY, properties);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>writeNeuronsTypesAndWorkAreaBackgroundColor(</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>showColorOutputBias,</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>OUTPUT_BIAS_NEURON_COLOR_PROPERTY_KEY, properties);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>writeNeuronsTypesAndWorkAreaBackgroundColor(</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>showColorInputOutputBias,</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>INPUT_OUTPUT_BIAS_NEURON_COLOR_PROPERTY_KEY,</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>properties);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>writeNeuronsTypesAndWorkAreaBackgroundColor(</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>showWorkAreaBackgroundColor,</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>WORK_AREA_BACKGROUND_COLOR_PROPERTY_KEY, properties);</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/> * Calls a function to save the newly chosen neurons size to</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/> * a file.</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>writeNeuronsSize(properties);</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/> * Calls a function to save the newly chosen neurons&apos;</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/> * numbers size to a file.</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>writeNeuronsNumbersSize(properties);</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>FileOutputStream out = new FileOutputStream(</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>Util.PROPERTIES_FILE_NAME);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>properties.store(out, &quot;&quot;);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>allProperties.close();</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>out.close();</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/><text:tab/>} catch (Exception ex) {</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>ex.printStackTrace();</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/><text:tab/>} finally {</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>parent.showNetworkPane();</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>});</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/><text:tab/>close.addActionListener(new ActionListener() {</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/>/**</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/> * Closes the settings pane and goes to the screen for loading ANN.</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/> * </text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/> * @author Ralitza Koleva</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/> * </text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/> * @email rallly@abv.bg</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/> * </text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/> * @date 10 Nov 2011</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/>public void actionPerformed(ActionEvent event) {</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/><text:tab/>parent.showNetworkPane();</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>});</text:p><text:p text:style-name="P455"><text:tab/>}</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/>/**</text:p><text:p text:style-name="P455"><text:tab/> * Reads the current neuron types colors and work area background color from</text:p><text:p text:style-name="P455"><text:tab/> * a file and shows the colors in their corresponding fields.</text:p><text:p text:style-name="P455"><text:tab/> * </text:p><text:p text:style-name="P455"><text:tab/> * @param showNeuronColorField</text:p><text:p text:style-name="P455"><text:tab/> * <text:s text:c="11"/>The text field to be colored in the current color.</text:p><text:p text:style-name="P455"><text:tab/> * </text:p><text:p text:style-name="P455"><text:tab/> * @param colorProperty</text:p><text:p text:style-name="P455"><text:tab/> * <text:s text:c="11"/>The parameter name, containing the color.</text:p><text:p text:style-name="P455"><text:tab/> * </text:p><text:p text:style-name="P455"><text:tab/> * @author Ralitza Koleva</text:p><text:p text:style-name="P455"><text:tab/> * </text:p><text:p text:style-name="P455"><text:tab/> * @email rallly@abv.bg</text:p><text:p text:style-name="P455"><text:tab/> * </text:p><text:p text:style-name="P455"><text:tab/> * @date 21 Oct 2011</text:p><text:p text:style-name="P455"><text:tab/> */</text:p><text:p text:style-name="P455"><text:tab/>public void readNeuronsTypesAndWorkAreaBackgroundColor(</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/>JTextField showNeuronColorField, String colorProperty) {</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>try {</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/>Properties properties = new Properties();</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/>FileInputStream in = new FileInputStream(Util.PROPERTIES_FILE_NAME);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/>properties.load(in);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/>int color = Integer.parseInt(properties.getProperty(colorProperty));</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/>Color neuronColor = new Color(color);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/>showNeuronColorField.setBackground(neuronColor);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>} catch (Exception ex) {</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/>ex.printStackTrace();</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P455"><text:tab/>}</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/>/**</text:p><text:p text:style-name="P455"><text:tab/> * Writes the new neuron types colors and the new work area background color</text:p><text:p text:style-name="P455"><text:tab/> * to a file.</text:p><text:p text:style-name="P455"><text:tab/> * </text:p><text:p text:style-name="P455"><text:tab/> * </text:p><text:p text:style-name="P455"><text:tab/> * @param showNeuronColorField</text:p><text:p text:style-name="P455"><text:tab/> * <text:s text:c="11"/>The text field to be colored in the current color.</text:p><text:p text:style-name="P455"><text:tab/> * </text:p><text:p text:style-name="P455"><text:tab/> * @param colorProperty</text:p><text:p text:style-name="P455"><text:tab/> * <text:s text:c="11"/>The parameter name, containing the color.</text:p><text:p text:style-name="P455"><text:tab/> * </text:p><text:p text:style-name="P455"><text:tab/> * @param properties</text:p><text:p text:style-name="P455"><text:tab/> * <text:s text:c="11"/>Properties to store the neuron types colors.</text:p><text:p text:style-name="P455"><text:tab/> * </text:p><text:p text:style-name="P455"><text:tab/> * @author Ralitza Koleva</text:p><text:p text:style-name="P455"><text:tab/> * </text:p><text:p text:style-name="P455"><text:tab/> * @email rallly@abv.bg</text:p><text:p text:style-name="P455"><text:tab/> * </text:p><text:p text:style-name="P455"><text:tab/> * @date 21 Oct 2011</text:p><text:p text:style-name="P455"><text:tab/> */</text:p><text:p text:style-name="P455"><text:tab/>public void writeNeuronsTypesAndWorkAreaBackgroundColor(</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/>JTextField showNeuronColorField, String colorProperty,</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/>Properties properties) {</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/><text:tab/>String color = Integer.toString(showNeuronColorField.getBackground()</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/><text:tab/>.getRGB());</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>properties.setProperty(colorProperty, color);</text:p><text:p text:style-name="P455"><text:soft-page-break/><text:tab/>}</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/>/**</text:p><text:p text:style-name="P455"><text:tab/> * Reads the current neurons size from a file and selects it in the</text:p><text:p text:style-name="P455"><text:tab/> * available sizes combobox.</text:p><text:p text:style-name="P455"><text:tab/> * </text:p><text:p text:style-name="P455"><text:tab/> * @author Ralitza Koleva</text:p><text:p text:style-name="P455"><text:tab/> * </text:p><text:p text:style-name="P455"><text:tab/> * @email rallly@abv.bg</text:p><text:p text:style-name="P455"><text:tab/> * </text:p><text:p text:style-name="P455"><text:tab/> * @date 06 Dec 2011</text:p><text:p text:style-name="P455"><text:tab/> */</text:p><text:p text:style-name="P455"><text:tab/>public void readNeuronsSize() {</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>try {</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/>Properties properties = new Properties();</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/>FileInputStream in = new FileInputStream(Util.PROPERTIES_FILE_NAME);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/>properties.load(in);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/>String currentNeuronsSize = properties.getProperty(&quot;NeuronsSize&quot;);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/>chooseNeuronsSize.setSelectedItem(currentNeuronsSize);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>} catch (Exception ex) {</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/>ex.printStackTrace();</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P455"><text:tab/>}</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/>/**</text:p><text:p text:style-name="P455"><text:tab/> * Reads the current neurons&apos; numbers size from a file and selects it in the</text:p><text:p text:style-name="P455"><text:tab/> * available sizes combobox.</text:p><text:p text:style-name="P455"><text:tab/> * </text:p><text:p text:style-name="P455"><text:tab/> * @author Ralitza Koleva</text:p><text:p text:style-name="P455"><text:tab/> * </text:p><text:p text:style-name="P455"><text:tab/> * @email rallly@abv.bg</text:p><text:p text:style-name="P455"><text:tab/> * </text:p><text:p text:style-name="P455"><text:tab/> * @date 23 Nov 2011</text:p><text:p text:style-name="P455"><text:tab/> */</text:p><text:p text:style-name="P455"><text:tab/>public void readNeuronsNumbersSize() {</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>try {</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/>Properties properties = new Properties();</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/>FileInputStream in = new FileInputStream(Util.PROPERTIES_FILE_NAME);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/>properties.load(in);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/>int currentNeuronsNumberSize = Integer.parseInt(properties</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>.getProperty(&quot;NeuronsNumbersSize&quot;));</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/>chooseNeuronsNumbersSize.setSelectedItem(currentNeuronsNumberSize);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>} catch (Exception ex) {</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/>ex.printStackTrace();</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P455"><text:tab/>}</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/>/**</text:p><text:p text:style-name="P455"><text:tab/> * Writes the new size of neurons to a file.</text:p><text:p text:style-name="P455"><text:tab/> * </text:p><text:p text:style-name="P455"><text:tab/> * @param properties</text:p><text:p text:style-name="P455"><text:tab/> * <text:s text:c="11"/>Properties to store the size of neurons.</text:p><text:p text:style-name="P455"><text:tab/> * </text:p><text:p text:style-name="P455"><text:tab/> * @author Ralitza Koleva</text:p><text:p text:style-name="P455"><text:tab/> * </text:p><text:p text:style-name="P455"><text:tab/> * @email rallly@abv.bg</text:p><text:p text:style-name="P455"><text:tab/> * </text:p><text:p text:style-name="P455"><text:tab/> * @date 06 Dec 2011</text:p><text:p text:style-name="P455"><text:tab/> */</text:p><text:p text:style-name="P455"><text:tab/>public void writeNeuronsSize(Properties properties) {</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>String neuronsSelectedSize = chooseNeuronsSize.getSelectedItem()</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/><text:tab/>.toString();</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>properties.setProperty(&quot;NeuronsSize&quot;, neuronsSelectedSize);</text:p><text:p text:style-name="P455"><text:tab/>}</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/>/**</text:p><text:p text:style-name="P455"><text:tab/> * Writes the new size of neurons&apos; numbers to a file.</text:p><text:p text:style-name="P455"><text:tab/> * </text:p><text:p text:style-name="P455"><text:tab/> * @param properties</text:p><text:p text:style-name="P455"><text:tab/> * <text:s text:c="11"/>Properties to store the size of neurons&apos; numbers.</text:p><text:p text:style-name="P455"><text:tab/> * </text:p><text:p text:style-name="P455"><text:tab/> * @author Ralitza Koleva</text:p><text:p text:style-name="P455"><text:tab/> * </text:p><text:p text:style-name="P455"><text:tab/> * @email rallly@abv.bg</text:p><text:p text:style-name="P455"><text:tab/> * </text:p><text:p text:style-name="P455"><text:tab/> * @date 23 Nov 2011</text:p><text:p text:style-name="P455"><text:tab/> */</text:p><text:p text:style-name="P455"><text:tab/>public void writeNeuronsNumbersSize(Properties properties) {</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>String neuronsNumbersSelectedSize = chooseNeuronsNumbersSize</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/><text:tab/>.getSelectedItem().toString();</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>properties</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/><text:tab/>.setProperty(&quot;NeuronsNumbersSize&quot;, neuronsNumbersSelectedSize);</text:p><text:p text:style-name="P455"><text:tab/>}</text:p><text:p text:style-name="P455"/><text:p text:style-name="P455"><text:tab/>/**</text:p><text:p text:style-name="P455"><text:tab/> * Helps arranging the elements on the screen.</text:p><text:p text:style-name="P455"><text:tab/> * </text:p><text:p text:style-name="P455"><text:tab/> * @param component</text:p><text:p text:style-name="P455"><text:tab/> * <text:s text:c="11"/>The component to be placed inside the panel.</text:p><text:p text:style-name="P455"><text:tab/> * </text:p><text:p text:style-name="P455"><text:tab/> * @param gridX</text:p><text:p text:style-name="P455"><text:tab/> * <text:s text:c="11"/>X-coordinate of the component.</text:p><text:p text:style-name="P455"><text:tab/> * </text:p><text:p text:style-name="P455"><text:tab/> * @param gridY</text:p><text:p text:style-name="P455"><text:tab/> * <text:s text:c="11"/>Y-coordinate of the component.</text:p><text:p text:style-name="P455"><text:tab/> * </text:p><text:p text:style-name="P455"><text:tab/> * @param editable</text:p><text:p text:style-name="P455"><text:tab/> * <text:s text:c="11"/>Determines whether the component is enabled.</text:p><text:p text:style-name="P455"><text:tab/> * </text:p><text:p text:style-name="P455"><text:tab/> * @author Ralitza Koleva</text:p><text:p text:style-name="P455"><text:tab/> * </text:p><text:p text:style-name="P455"><text:tab/> * @email rallly@abv.bg</text:p><text:p text:style-name="P455"><text:tab/> * </text:p><text:p text:style-name="P455"><text:tab/> * @date 25 Oct 2011</text:p><text:p text:style-name="P455"><text:tab/> */</text:p><text:p text:style-name="P455"><text:tab/>public void arrangeElements(JComponent component, int gridX, int gridY,</text:p><text:p text:style-name="P455"><text:tab/><text:tab/><text:tab/>boolean enabled) {</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>constraints.gridx = gridX;</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>constraints.gridy = gridY;</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>constraints.insets = new Insets(10, 10, 8, 10);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>panel.add(component, constraints);</text:p><text:p text:style-name="P455"><text:tab/><text:tab/>component.setEnabled(enabled);</text:p><text:p text:style-name="P455"><text:tab/>}</text:p><text:p text:style-name="P455">}</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5756_1486593966"/><text:s text:c="4"/>SymbolPeriodKeyValue.java<text:bookmark-end text:name="__RefHeading___Toc5756_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P456">package eu.veldsoft.backend;</text:p><text:p text:style-name="P456"/><text:p text:style-name="P456"><text:soft-page-break/>/*******************************************************************************</text:p><text:p text:style-name="P456"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P456"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P456"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P456"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P456"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P456"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P456"><text:s/>* Copyright (C) 2008-2011 by Todor Balabanov <text:s/>( tdb@tbsoft.eu ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P456"><text:s/>* <text:s text:c="27"/>Iliyan Zankinski ( iliyan_mf@abv.bg ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P456"><text:s/>* <text:s text:c="27"/>Galq Cirkalova <text:s text:c="2"/>( galq_cirkalova@abv.bg ) <text:s text:c="6"/>*</text:p><text:p text:style-name="P456"><text:s/>* <text:s text:c="27"/>Ivan Grozev <text:s text:c="5"/>( ivan.iliev.grozev@gmail.com ) *</text:p><text:p text:style-name="P456"><text:s/>* <text:s text:c="27"/>Momchil Anachkov ( mZer0000@gmail.com ) <text:s text:c="9"/>*</text:p><text:p text:style-name="P456"><text:s/>* <text:s text:c="27"/>Ralitza Koleva <text:s text:c="2"/>( rallly@abv.bg )<text:tab/> <text:s text:c="6"/>*</text:p><text:p text:style-name="P456"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P456"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P456"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P456"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P456"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P456"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P456"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P456"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P456"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P456"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P456"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P456"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P456"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P456"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P456"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P456"/><text:p text:style-name="P456">/**</text:p><text:p text:style-name="P456"><text:s/>* Gives a JComboBox two values - a visible value in the drop down menu and a</text:p><text:p text:style-name="P456"><text:s/>* hidden one.</text:p><text:p text:style-name="P456"><text:s/>* </text:p><text:p text:style-name="P456"><text:s/>* @author Ralitza Koleva</text:p><text:p text:style-name="P456"><text:s/>* </text:p><text:p text:style-name="P456"><text:s/>* @email rallly@abv.bg</text:p><text:p text:style-name="P456"><text:s/>* </text:p><text:p text:style-name="P456"><text:s/>* @date 29 Oct 2011</text:p><text:p text:style-name="P456"><text:s/>*/</text:p><text:p text:style-name="P456">class SymbolPeriodKeyValue {</text:p><text:p text:style-name="P456"/><text:p text:style-name="P456"><text:tab/>/**</text:p><text:p text:style-name="P456"><text:tab/> * Hidden value of the JComboBox item.</text:p><text:p text:style-name="P456"><text:tab/> */</text:p><text:p text:style-name="P456"><text:tab/>private String key;</text:p><text:p text:style-name="P456"/><text:p text:style-name="P456"><text:tab/>/**</text:p><text:p text:style-name="P456"><text:tab/> * Visible value of the JComboBox item.</text:p><text:p text:style-name="P456"><text:tab/> */</text:p><text:p text:style-name="P456"><text:tab/>private String value;</text:p><text:p text:style-name="P456"/><text:p text:style-name="P456"><text:tab/>/**</text:p><text:p text:style-name="P456"><text:tab/> * SymbolPeriodKeyValue constructor.</text:p><text:p text:style-name="P456"><text:tab/> * </text:p><text:p text:style-name="P456"><text:tab/> * @param key</text:p><text:p text:style-name="P456"><text:tab/> * <text:s text:c="11"/>Hidden value of the JComboBox item.</text:p><text:p text:style-name="P456"><text:tab/> * </text:p><text:p text:style-name="P456"><text:tab/> * @param value</text:p><text:p text:style-name="P456"><text:tab/> * <text:s text:c="11"/>Visible value of the JComboBox item.</text:p><text:p text:style-name="P456"><text:tab/> * </text:p><text:p text:style-name="P456"><text:tab/> * @author Ralitza Koleva</text:p><text:p text:style-name="P456"><text:tab/> * </text:p><text:p text:style-name="P456"><text:tab/> * @email rallly@abv.bg</text:p><text:p text:style-name="P456"><text:tab/> * </text:p><text:p text:style-name="P456"><text:tab/> * @date 29 Oct 2011</text:p><text:p text:style-name="P456"><text:tab/> */</text:p><text:p text:style-name="P456"><text:tab/>public SymbolPeriodKeyValue(String key, String value) {</text:p><text:p text:style-name="P456"><text:tab/><text:tab/>this.key = key;</text:p><text:p text:style-name="P456"><text:tab/><text:tab/>this.value = value;</text:p><text:p text:style-name="P456"><text:tab/>}</text:p><text:p text:style-name="P456"/><text:p text:style-name="P456"><text:tab/>/**</text:p><text:p text:style-name="P456"><text:tab/> * Gets the visible value of the JComboBox item.</text:p><text:p text:style-name="P456"><text:tab/> * </text:p><text:p text:style-name="P456"><text:tab/> * @author Ralitza Koleva</text:p><text:p text:style-name="P456"><text:tab/> * </text:p><text:p text:style-name="P456"><text:tab/> * @email rallly@abv.bg</text:p><text:p text:style-name="P456"><text:tab/> * </text:p><text:p text:style-name="P456"><text:tab/> * @date 29 Oct 2011</text:p><text:p text:style-name="P456"><text:tab/> * </text:p><text:p text:style-name="P456"><text:tab/> * @return The visible value of the JComboBox item.</text:p><text:p text:style-name="P456"><text:tab/> */</text:p><text:p text:style-name="P456"><text:tab/>public String getValue() {</text:p><text:p text:style-name="P456"><text:tab/><text:tab/>return (value);</text:p><text:p text:style-name="P456"><text:tab/>}</text:p><text:p text:style-name="P456"/><text:p text:style-name="P456"><text:tab/>/**</text:p><text:p text:style-name="P456"><text:tab/> * Gets the hidden value of the JComboBox item.</text:p><text:p text:style-name="P456"><text:tab/> * </text:p><text:p text:style-name="P456"><text:tab/> * @author Ralitza Koleva</text:p><text:p text:style-name="P456"><text:tab/> * </text:p><text:p text:style-name="P456"><text:tab/> * @email rallly@abv.bg</text:p><text:p text:style-name="P456"><text:tab/> * </text:p><text:p text:style-name="P456"><text:tab/> * @date 29 Oct 2011</text:p><text:p text:style-name="P456"><text:tab/> * </text:p><text:p text:style-name="P456"><text:tab/> * @return The hidden value of the JComboBox item.</text:p><text:p text:style-name="P456"><text:tab/> */</text:p><text:p text:style-name="P456"><text:tab/>public int getKey() {</text:p><text:p text:style-name="P456"><text:tab/><text:tab/>return (Integer.parseInt(key));</text:p><text:p text:style-name="P456"><text:tab/>}</text:p><text:p text:style-name="P456"/><text:p text:style-name="P456"><text:tab/>/**</text:p><text:p text:style-name="P456"><text:tab/> * Converts the visible value of the JComboBox item to a string.</text:p><text:p text:style-name="P456"><text:tab/> * </text:p><text:p text:style-name="P456"><text:tab/> * @author Ralitza Koleva</text:p><text:p text:style-name="P456"><text:tab/> * </text:p><text:p text:style-name="P456"><text:tab/> * @email rallly@abv.bg</text:p><text:p text:style-name="P456"><text:tab/> * </text:p><text:p text:style-name="P456"><text:tab/> * @date 29 Oct 2011</text:p><text:p text:style-name="P456"><text:tab/> * </text:p><text:p text:style-name="P456"><text:tab/> * @return The visible value of the JComboBox item as a string.</text:p><text:p text:style-name="P456"><text:tab/> */</text:p><text:p text:style-name="P456"><text:tab/>public String toString() {</text:p><text:p text:style-name="P456"><text:tab/><text:tab/>return (value);</text:p><text:p text:style-name="P456"><text:tab/>}</text:p><text:p text:style-name="P456">}</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5758_1486593966"/><text:s text:c="4"/>Texts.java<text:bookmark-end text:name="__RefHeading___Toc5758_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P457"><text:soft-page-break/>package eu.veldsoft.backend;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457">/*******************************************************************************</text:p><text:p text:style-name="P457"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P457"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P457"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P457"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P457"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P457"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P457"><text:s/>* Copyright (C) 2008-2011 by Todor Balabanov <text:s/>( tdb@tbsoft.eu ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P457"><text:s/>* <text:s text:c="27"/>Iliyan Zankinski ( iliyan_mf@abv.bg ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P457"><text:s/>* <text:s text:c="27"/>Galq Cirkalova <text:s text:c="2"/>( galq_cirkalova@abv.bg ) <text:s text:c="6"/>*</text:p><text:p text:style-name="P457"><text:s/>* <text:s text:c="27"/>Ivan Grozev <text:s text:c="5"/>( ivan.iliev.grozev@gmail.com ) *</text:p><text:p text:style-name="P457"><text:s/>* <text:s text:c="27"/>Momchil Anachkov ( mZer0000@gmail.com ) <text:s text:c="9"/>*</text:p><text:p text:style-name="P457"><text:s/>* <text:s text:c="27"/>Ralitza Koleva <text:s text:c="2"/>( rallly@abv.bg ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P457"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P457"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P457"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P457"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P457"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P457"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P457"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P457"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P457"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P457"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P457"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P457"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P457"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P457"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P457"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457">/**</text:p><text:p text:style-name="P457"><text:s/>* Contains all texts used in the applet.</text:p><text:p text:style-name="P457"><text:s/>* </text:p><text:p text:style-name="P457"><text:s/>* @author Ralitza Koleva</text:p><text:p text:style-name="P457"><text:s/>* </text:p><text:p text:style-name="P457"><text:s/>* @email rallly@abv.bg</text:p><text:p text:style-name="P457"><text:s/>* </text:p><text:p text:style-name="P457"><text:s/>* @date 05 Dec 2011</text:p><text:p text:style-name="P457"><text:s/>*/</text:p><text:p text:style-name="P457">class Texts {</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Menu text.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public static final String MENU_COMMANDS = &quot;Commands&quot;;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Menu item text.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public static final String MENU_ITEM_LOGIN = &quot;Login&quot;;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Menu item text.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public static final String MENU_ITEM_LOGOUT = &quot;Logout&quot;;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Menu text.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public static final String MENU_NETWORK = &quot;Network&quot;;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Menu item text.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public static final String MENU_ITEM_NEW = &quot;New&quot;;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Menu item text.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public static final String MENU_ITEM_LOAD = &quot;Load&quot;;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Menu item text.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public static final String MENU_ITEM_DELETE = &quot;Delete&quot;;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Menu text.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public static final String MENU_TOOLS = &quot;Tools&quot;;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Menu item text.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public static final String MENU_ITEM_SETTINGS = &quot;Settings&quot;;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Menu text.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public static final String MENU_MESH = &quot;Mesh&quot;;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Menu item text.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public static final String MENU_ITEM_ACTIVITIES = &quot;Activities&quot;;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Menu item text.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public static final String MENU_ITEM_WEIGHTS = &quot;Weights&quot;;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Menu item text.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public static final String MENU_ITEM_BOTH = &quot;Both&quot;;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Menu item text.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public static final String MENU_ITEM_SOLID = &quot;Solid&quot;;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Menu item text.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public static final String MENU_ITEM_NUMBERING = &quot;Numbering&quot;;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Text label.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public static final String LABEL_DATABASE_HOST = &quot;Database Host:&quot;;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Text label.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:soft-page-break/><text:tab/>public static final String LABEL_DATABASE_PORT = &quot;Database Port:&quot;;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Text label.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public static final String LABEL_DATABASE_NAME = &quot;Database Name:&quot;;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Text label.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public static final String LABEL_USERNAME = &quot;Username:&quot;;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Text label.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public static final String LABEL_PASSWORD = &quot;Password:&quot;;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Text label.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public static final String LABEL_ANN_ID = &quot;ID:&quot;;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Text label.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public static final String LABEL_SYMBOL = &quot;Symbol:&quot;;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Text label.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public static final String LABEL_PERIOD = &quot;Period:&quot;;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Text label.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public static final String LABEL_NUMBER_NEURONS = &quot;Number of neurons:&quot;;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Text label.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public static final String LABEL_SOURCE = &quot;Source:&quot;;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Text label.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public static final String LABEL_DESTINATION = &quot;Destination:&quot;;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Text label.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public static final String LABEL_SIGNAL = &quot;Signal:&quot;;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Text label.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public static final String LABEL_ERROR = &quot;Error:&quot;;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Text label.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public static final String LABEL_WEIGHT = &quot;Weight:&quot;;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Text label.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public static final String LABEL_ACTIVITY = &quot;Activity:&quot;;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Text label.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public static final String LABEL_NUMBER = &quot;No:&quot;;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Text label.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public static final String LABEL_BIAS_NEURON = &quot;Bias&quot;;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Text label.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public static final String LABEL_INPUT_NEURON = &quot;Input&quot;;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Text label.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public static final String LABEL_OUTPUT_NEURON = &quot;Output&quot;;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Text label.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public static final String LABEL_REGULAR_NEURON = &quot;Regular&quot;;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Text label.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public static final String LABEL_REGULAR_NEURON_COLOR = &quot;REGULAR NEURON color&quot;;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Text label.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public static final String LABEL_INPUT_NEURON_COLOR = &quot;INPUT NEURON color&quot;;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Text label.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public static final String LABEL_OUTPUT_NEURON_COLOR = &quot;OUTPUT NEURON color&quot;;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Text label.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public static final String LABEL_BIAS_NEURON_COLOR = &quot;BIAS NEURON color&quot;;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Text label.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public static final String LABEL_INPUT_OUTPUT_NEURON_COLOR = &quot;INPUT-OUTPUT NEURON color&quot;;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Text label.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public static final String LABEL_INPUT_BIAS_NEURON_COLOR = &quot;INPUT-BIAS NEURON color&quot;;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Text label.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:soft-page-break/><text:tab/>public static final String LABEL_OUTPUT_BIAS_NEURON_COLOR = &quot;OUTPUT-BIAS NEURON color&quot;;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Text label.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public static final String LABEL_INPUT_OUTPUT_BIAS_NEURON_COLOR = &quot;INPUT-OUTPUT-BIAS NEURON color&quot;;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Text label.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public static final String LABEL_NEURONS_SIZE = &quot;Size of neurons&quot;;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Text label.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public static final String LABEL_NEURONS_SIZE_SMALL = &quot;Small&quot;;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Text label.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public static final String LABEL_NEURONS_SIZE_MEDIUM = &quot;Medium&quot;;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Text label.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public static final String LABEL_NEURONS_SIZE_LARGE = &quot;Large&quot;;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Text label.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public static final String LABEL_NEURONS_NUMBERS_SIZE = &quot;Size of neurons&apos; numbers&quot;;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Text label.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public static final String LABEL_WORK_AREA_BACKGROUND_COLOR = &quot;Work area background color&quot;;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Text label.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public static final String LABEL_X_COORDINATE = &quot;X:&quot;;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Text label.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public static final String LABEL_Y_COORDINATE = &quot;Y:&quot;;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Text label.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public static final String LABEL_BUTTON_LOGIN = &quot;Login&quot;;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Text label.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public static final String LABEL_BUTTON_REARRANGE = &quot;Rearrange&quot;;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Text label.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public static final String LABEL_BUTTON_REFRESH = &quot;Refresh&quot;;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Text label.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public static final String LABEL_BUTTON_LOAD = &quot;Load&quot;;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Text label.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public static final String LABEL_BUTTON_SAVE = &quot;Save&quot;;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Text label.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public static final String LABEL_BUTTON_SAVE_CAPS = &quot;SAVE&quot;;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Text label.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public static final String LABEL_BUTTON_CLOSE_CAPS = &quot;CLOSE&quot;;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Text label.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public static final String LABEL_BUTTON_DELETE = &quot;Delete&quot;;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Text label.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public static final String LABEL_BUTTON_CHOOSE_COLOR = &quot;Choose a color&quot;;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Information message.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public static final String INFORMATION_SELECT_ANN_ID = &quot;Select ID.&quot;;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Information message.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public static final String INFORMATION_SELECT_ANN_ID_TITLE = &quot;Missing information&quot;;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Information message.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public static final String INFORMATION_SELECT_SYMBOL_AND_PERIOD = &quot;Select symbol, period and number of neurons.&quot;;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Information message.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public static final String INFORMATION_SELECT_SYMBOL_AND_PERIOD_TITLE = &quot;Missing information&quot;;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Error message.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public static final String ERROR_DATABASE_PORT = &quot;Invalid database port value.&quot;;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Error message.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public static final String ERROR_DATABASE_CONNECT = &quot;Invalid credentials. Connection failed.&quot;;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Error message.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:soft-page-break/><text:tab/>public static final String ERROR_DATABASE_CONNECT_TITLE = &quot;Connection error&quot;;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Error message.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public static final String ERROR_LOAD_ANN_LIST = &quot;Load ANN list fail.&quot;;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Error message.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public static final String ERROR_LOAD_CURRENCY_PAIRS_LIST = &quot;Load currency pairs list fail.&quot;;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Error message.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public static final String ERROR_LOAD_PERIODS_LIST = &quot;Load periods list fail.&quot;;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Error message.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public static final String ERROR_NUMBER_DATABASE_RESULTS = &quot;Wrong number of database results.&quot;;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Error message.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public static final String ERROR_LOAD_ANN_PART_1 = &quot;Load ANN with id &quot;;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Error message.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public static final String ERROR_LOAD_ANN_PART_2 = &quot; fail.&quot;;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Error message.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public static final String ERROR_UPDATE_ANN = &quot;ANN update failed.&quot;;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Error message.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public static final String ERROR_ADD_ANN = &quot;Adding a new ANN failed.&quot;;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Error message.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public static final String ERROR_DELETE_ANN = &quot;Delete ANN failed.&quot;;</text:p><text:p text:style-name="P457">}</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5760_1486593966"/><text:s text:c="4"/>Util.java<text:bookmark-end text:name="__RefHeading___Toc5760_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P457">package eu.veldsoft.backend;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457">/*******************************************************************************</text:p><text:p text:style-name="P457"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P457"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P457"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P457"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P457"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P457"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P457"><text:s/>* Copyright (C) 2008-2011 by Todor Balabanov <text:s/>( tdb@tbsoft.eu ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P457"><text:s/>* <text:s text:c="27"/>Iliyan Zankinski ( iliyan_mf@abv.bg ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P457"><text:s/>* <text:s text:c="27"/>Galq Cirkalova <text:s text:c="2"/>( galq_cirkalova@abv.bg ) <text:s text:c="6"/>*</text:p><text:p text:style-name="P457"><text:s/>* <text:s text:c="27"/>Ivan Grozev <text:s text:c="5"/>( ivan.iliev.grozev@gmail.com ) *</text:p><text:p text:style-name="P457"><text:s/>* <text:s text:c="27"/>Momchil Anachkov ( mZer0000@gmail.com ) <text:s text:c="9"/>*</text:p><text:p text:style-name="P457"><text:s/>* <text:s text:c="27"/>Ralitza Koleva <text:s text:c="2"/>( rallly@abv.bg ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P457"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P457"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P457"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P457"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P457"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P457"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P457"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P457"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P457"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P457"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P457"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P457"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P457"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P457"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P457"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457">import java.io.FileInputStream;</text:p><text:p text:style-name="P457">import java.io.FileOutputStream;</text:p><text:p text:style-name="P457">import java.io.IOException;</text:p><text:p text:style-name="P457">import java.util.Properties;</text:p><text:p text:style-name="P457">import java.util.Random;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457">/**</text:p><text:p text:style-name="P457"><text:s/>* Utility class.</text:p><text:p text:style-name="P457"><text:s/>* </text:p><text:p text:style-name="P457"><text:s/>* @author Todor Balabanov</text:p><text:p text:style-name="P457"><text:s/>* </text:p><text:p text:style-name="P457"><text:s/>* @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P457"><text:s/>* </text:p><text:p text:style-name="P457"><text:s/>* @date 19 Aug 2015</text:p><text:p text:style-name="P457"><text:s/>*/</text:p><text:p text:style-name="P457">class Util {</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Pseudo-random number generator.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>static final Random PRNG;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Visual preferences.</text:p><text:p text:style-name="P457"><text:tab/> * </text:p><text:p text:style-name="P457"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P457"><text:tab/> * </text:p><text:p text:style-name="P457"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P457"><text:tab/> * </text:p><text:p text:style-name="P457"><text:tab/> * @date 19 Aug 2015</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>static class Preferences {</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>static String neuronSize;</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>static int neuronRadius;</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>static int backgroundColor;</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>static int neuronIdFontSize;</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>static String dbHost;</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>static String dbPort;</text:p><text:p text:style-name="P457"><text:soft-page-break/><text:tab/><text:tab/>static String dbName;</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>static int chooseNeuronsNumbersSize;</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>static int regularNeuronColor;</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>static int inputNeuronColor;</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>static int outputNeuronColor;</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>static int biasNeuronColor;</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>static int inputOutputNeuronColor;</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>static int inputBiasNeuronColor;</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>static int outputBiasNeuronColor;</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>static int inputOutputBiasNeuronColor;</text:p><text:p text:style-name="P457"><text:tab/>}</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Initialize all static members.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>static {</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>PRNG = new Random();</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/><text:tab/>FileInputStream in = null;</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>Properties properties = new Properties();</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/><text:tab/>try {</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/>in = new FileInputStream(Util.PROPERTIES_FILE_NAME);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/>properties.load(in);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>} catch (Exception ex) {</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/>Preferences.neuronSize = &quot;Small&quot;;</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/>Preferences.neuronRadius = Math.min(</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>VitoshaTradeApplet.CENTRAL_PANE_WIDTH,</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>VitoshaTradeApplet.CENTRAL_PANE_HEIGHT) / 100;</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/>Preferences.backgroundColor = 0xFFFFFF;</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/>Preferences.neuronIdFontSize = 9;</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/>Preferences.dbHost = &quot;localhost&quot;;</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/>Preferences.dbPort = &quot;3306&quot;;</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/>Preferences.dbName = &quot;veldsoft_vitoshatrade&quot;;</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/>Preferences.chooseNeuronsNumbersSize = 9;</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/>Preferences.regularNeuronColor = Util.PRNG.nextInt(0xFFFFFF + 1);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/>Preferences.inputNeuronColor = Util.PRNG.nextInt(0xFFFFFF + 1);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/>Preferences.outputNeuronColor = Util.PRNG.nextInt(0xFFFFFF + 1);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/>Preferences.biasNeuronColor = Util.PRNG.nextInt(0xFFFFFF + 1);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/>Preferences.inputOutputNeuronColor = Util.PRNG</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>.nextInt(0xFFFFFF + 1);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/>Preferences.inputBiasNeuronColor = Util.PRNG.nextInt(0xFFFFFF + 1);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/>Preferences.outputBiasNeuronColor = Util.PRNG.nextInt(0xFFFFFF + 1);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/>Preferences.inputOutputBiasNeuronColor = Util.PRNG</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>.nextInt(0xFFFFFF + 1);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/><text:tab/>if (in != null) {</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/>Preferences.neuronSize = properties.getProperty(&quot;NeuronsSize&quot;);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/>if (Preferences.neuronSize.equals(&quot;Small&quot;)) {</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/><text:tab/>Preferences.neuronRadius = Math.min(</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>VitoshaTradeApplet.CENTRAL_PANE_WIDTH,</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>VitoshaTradeApplet.CENTRAL_PANE_HEIGHT) / 100;</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/>} else if (Preferences.neuronSize.equals(&quot;Medium&quot;)) {</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/><text:tab/>Preferences.neuronRadius = Math.min(</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>VitoshaTradeApplet.CENTRAL_PANE_WIDTH,</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>VitoshaTradeApplet.CENTRAL_PANE_HEIGHT) / 80;</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/>} else if (Preferences.neuronSize.equals(&quot;Large&quot;)) {</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/><text:tab/>Preferences.neuronRadius = Math.min(</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>VitoshaTradeApplet.CENTRAL_PANE_WIDTH,</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>VitoshaTradeApplet.CENTRAL_PANE_HEIGHT) / 70;</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/>Preferences.backgroundColor = Integer.parseInt(properties</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>.getProperty(Util.WORK_AREA_BACKGROUND_COLOR_PROPERTY_KEY));</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/>Preferences.neuronIdFontSize = Integer.parseInt(properties</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>.getProperty(&quot;NeuronsNumbersSize&quot;));</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/>Preferences.dbHost = properties.getProperty(&quot;DatabaseHost&quot;);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/>Preferences.dbPort = properties.getProperty(&quot;DatabasePort&quot;);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/>Preferences.dbName = properties.getProperty(&quot;DatabaseName&quot;);</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/>Preferences.chooseNeuronsNumbersSize = Integer.parseInt(properties</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>.getProperty(&quot;NeuronsNumbersSize&quot;));</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/>Preferences.regularNeuronColor = Integer.parseInt(properties</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>.getProperty(Util.REGULAR_NEURON_COLOR_PROPERTY_KEY));</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/>Preferences.inputNeuronColor = Integer.parseInt(properties</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>.getProperty(Util.INPUT_NEURON_COLOR_PROPERTY_KEY));</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/>Preferences.outputNeuronColor = Integer.parseInt(properties</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>.getProperty(Util.OUTPUT_NEURON_COLOR_PROPERTY_KEY));</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/>Preferences.biasNeuronColor = Integer.parseInt(properties</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>.getProperty(Util.BIAS_NEURON_COLOR_PROPERTY_KEY));</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/>Preferences.inputOutputNeuronColor = Integer.parseInt(properties</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>.getProperty(Util.INPUT_OUTPUT_NEURON_COLOR_PROPERTY_KEY));</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/>Preferences.inputBiasNeuronColor = Integer.parseInt(properties</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>.getProperty(Util.INPUT_BIAS_NEURON_COLOR_PROPERTY_KEY));</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/>Preferences.outputBiasNeuronColor = Integer.parseInt(properties</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>.getProperty(Util.OUTPUT_BIAS_NEURON_COLOR_PROPERTY_KEY));</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/>Preferences.inputOutputBiasNeuronColor = Integer</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>.parseInt(properties</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>.getProperty(Util.INPUT_OUTPUT_BIAS_NEURON_COLOR_PROPERTY_KEY));</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/><text:tab/>try {</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/>if (in != null) {</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/><text:tab/>in.close();</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>} catch (Exception ex) {</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/><text:tab/>properties.setProperty(&quot;NeuronsSize&quot;, Preferences.neuronSize);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>properties.setProperty(Util.WORK_AREA_BACKGROUND_COLOR_PROPERTY_KEY, &quot;&quot;</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/><text:tab/>+ Preferences.backgroundColor);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>properties.setProperty(&quot;NeuronsNumbersSize&quot;, &quot;&quot;</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/><text:tab/>+ Preferences.neuronIdFontSize);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>properties.setProperty(&quot;DatabaseHost&quot;, Preferences.dbHost);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>properties.setProperty(&quot;DatabasePort&quot;, Preferences.dbPort);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>properties.setProperty(&quot;DatabaseName&quot;, Preferences.dbName);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>properties.setProperty(&quot;NeuronsNumbersSize&quot;, &quot;&quot;</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/><text:tab/>+ Preferences.chooseNeuronsNumbersSize);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>properties.setProperty(Util.REGULAR_NEURON_COLOR_PROPERTY_KEY, &quot;&quot;</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/><text:tab/>+ Preferences.regularNeuronColor);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>properties.setProperty(Util.INPUT_NEURON_COLOR_PROPERTY_KEY, &quot;&quot;</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/><text:tab/>+ Preferences.inputNeuronColor);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>properties.setProperty(Util.OUTPUT_NEURON_COLOR_PROPERTY_KEY, &quot;&quot;</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/><text:tab/>+ Preferences.outputNeuronColor);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>properties.setProperty(Util.BIAS_NEURON_COLOR_PROPERTY_KEY, &quot;&quot;</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/><text:tab/>+ Preferences.biasNeuronColor);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>properties.setProperty(Util.INPUT_OUTPUT_NEURON_COLOR_PROPERTY_KEY, &quot;&quot;</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/><text:tab/>+ Preferences.inputOutputNeuronColor);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>properties.setProperty(Util.INPUT_BIAS_NEURON_COLOR_PROPERTY_KEY, &quot;&quot;</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/><text:tab/>+ Preferences.inputBiasNeuronColor);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>properties.setProperty(Util.OUTPUT_BIAS_NEURON_COLOR_PROPERTY_KEY, &quot;&quot;</text:p><text:p text:style-name="P457"><text:soft-page-break/><text:tab/><text:tab/><text:tab/><text:tab/>+ Preferences.outputBiasNeuronColor);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>properties.setProperty(</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/><text:tab/>Util.INPUT_OUTPUT_BIAS_NEURON_COLOR_PROPERTY_KEY, &quot;&quot;</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>+ Preferences.inputOutputBiasNeuronColor);</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/><text:tab/>try {</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/>FileOutputStream out = new FileOutputStream(</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>Util.PROPERTIES_FILE_NAME);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/>properties.store(out, &quot;&quot;);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/>out.close();</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>} catch (Exception ex) {</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/>ex.printStackTrace();</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P457"><text:tab/>}</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Properties file name constant.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>static final String PROPERTIES_FILE_NAME = &quot;setup.ini&quot;;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Name of the property key which has as a value the color of regular</text:p><text:p text:style-name="P457"><text:tab/> * neurons.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>static final String REGULAR_NEURON_COLOR_PROPERTY_KEY = &quot;RegularNeuronColor&quot;;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Name of the property key which has as a value the color of input neurons.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>static final String INPUT_NEURON_COLOR_PROPERTY_KEY = &quot;InputNeuronColor&quot;;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Name of the property key which has as a value the color of output</text:p><text:p text:style-name="P457"><text:tab/> * neurons.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>static final String OUTPUT_NEURON_COLOR_PROPERTY_KEY = &quot;OutputNeuronColor&quot;;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Name of the property key which has as a value the color of output</text:p><text:p text:style-name="P457"><text:tab/> * neurons.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>static final String BIAS_NEURON_COLOR_PROPERTY_KEY = &quot;BiasNeuronColor&quot;;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Name of the property key which has as a value the color of input-output</text:p><text:p text:style-name="P457"><text:tab/> * neurons.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>static final String INPUT_OUTPUT_NEURON_COLOR_PROPERTY_KEY = &quot;InputOutputNeuronColor&quot;;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Name of the property key which has as a value the color of input-bias</text:p><text:p text:style-name="P457"><text:tab/> * neurons.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>static final String INPUT_BIAS_NEURON_COLOR_PROPERTY_KEY = &quot;InputBiasNeuronColor&quot;;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Name of the property key which has as a value the color of output-bias</text:p><text:p text:style-name="P457"><text:tab/> * neurons.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>static final String OUTPUT_BIAS_NEURON_COLOR_PROPERTY_KEY = &quot;OutputBiasNeuronColor&quot;;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Name of the property key which has as a value the color of</text:p><text:p text:style-name="P457"><text:tab/> * input-output-bias neurons.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>static final String INPUT_OUTPUT_BIAS_NEURON_COLOR_PROPERTY_KEY = &quot;InputOutputBiasNeuronColor&quot;;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Name of the property key which has as a value the color of work area.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>static final String WORK_AREA_BACKGROUND_COLOR_PROPERTY_KEY = &quot;WorkAreaBackgroundColor&quot;;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457">}</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5762_1486593966"/><text:s text:c="4"/>VitoshaTradeApplet.java<text:bookmark-end text:name="__RefHeading___Toc5762_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P457">package eu.veldsoft.backend;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457">/*******************************************************************************</text:p><text:p text:style-name="P457"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P457"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P457"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P457"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P457"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P457"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P457"><text:s/>* Copyright (C) 2008-2011 by Todor Balabanov <text:s/>( tdb@tbsoft.eu ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P457"><text:s/>* <text:s text:c="27"/>Iliyan Zankinski ( iliyan_mf@abv.bg ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P457"><text:s/>* <text:s text:c="27"/>Galq Cirkalova <text:s text:c="2"/>( galq_cirkalova@abv.bg ) <text:s text:c="6"/>*</text:p><text:p text:style-name="P457"><text:s/>* <text:s text:c="27"/>Ivan Grozev <text:s text:c="5"/>( ivan.iliev.grozev@gmail.com ) *</text:p><text:p text:style-name="P457"><text:s/>* <text:s text:c="27"/>Momchil Anachkov ( mZer0000@gmail.com ) <text:s text:c="9"/>*</text:p><text:p text:style-name="P457"><text:s/>* <text:s text:c="27"/>Ralitza Koleva <text:s text:c="2"/>( rallly@abv.bg ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P457"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P457"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P457"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P457"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P457"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P457"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P457"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P457"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P457"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P457"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P457"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P457"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P457"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P457"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P457"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457">import java.awt.BorderLayout;</text:p><text:p text:style-name="P457">import java.awt.event.ActionEvent;</text:p><text:p text:style-name="P457">import java.awt.event.ActionListener;</text:p><text:p text:style-name="P457">import javax.swing.ButtonGroup;</text:p><text:p text:style-name="P457">import javax.swing.JCheckBoxMenuItem;</text:p><text:p text:style-name="P457">import javax.swing.JMenu;</text:p><text:p text:style-name="P457">import javax.swing.JApplet;</text:p><text:p text:style-name="P457">import javax.swing.JMenuBar;</text:p><text:p text:style-name="P457">import javax.swing.JMenuItem;</text:p><text:p text:style-name="P457">import javax.swing.JRadioButtonMenuItem;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457">/**</text:p><text:p text:style-name="P457"><text:soft-page-break/><text:s/>* VitoshaTrade backend applet class.</text:p><text:p text:style-name="P457"><text:s/>* </text:p><text:p text:style-name="P457"><text:s/>* @author Momchil Anachkov, Ralitza Koleva</text:p><text:p text:style-name="P457"><text:s/>* </text:p><text:p text:style-name="P457"><text:s/>* @email mZer0000@gmail.com</text:p><text:p text:style-name="P457"><text:s/>* </text:p><text:p text:style-name="P457"><text:s/>* @date 11 Nov 2010</text:p><text:p text:style-name="P457"><text:s/>*/</text:p><text:p text:style-name="P457">public class VitoshaTradeApplet extends JApplet {</text:p><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Constant integer referring to applet width.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>// TODO Get parameters from HTML file.</text:p><text:p text:style-name="P457"><text:tab/>public static int WIDTH = 800;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Constant integer referring to applet height.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>// TODO Get parameters from HTML file.</text:p><text:p text:style-name="P457"><text:tab/>public static int HEIGHT = 600;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Constant integer referring to central pane height.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public static int CENTRAL_PANE_HEIGHT = 600;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Constant integer referring to central pane width.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public static int CENTRAL_PANE_WIDTH = 670;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Constant integer referring to east pane height.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public static int EAST_PANE_WIDTH = 130;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Constant integer referring to east pane width.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public static int EAST_PANE_HEIGHT = 600;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Default serial version UID.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>private static final long serialVersionUID = 1L;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Database helping class.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>DatabaseHelper dbHelp = new DatabaseHelper();</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Applet menu bar.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>private JMenuBar menuBar = new JMenuBar();</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Applet menu bar item.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>private JMenu commandsMenu = new JMenu(Texts.MENU_COMMANDS);</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Applet menu bar item.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>private JMenuItem loginItem = new JMenuItem(Texts.MENU_ITEM_LOGIN);</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Applet menu bar item.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>private JMenuItem logoutItem = new JMenuItem(Texts.MENU_ITEM_LOGOUT);</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Applet menu bar item.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>private JMenu networkMenu = new JMenu(Texts.MENU_NETWORK);</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Applet menu bar item.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>private JMenuItem newNetworkItem = new JMenuItem(Texts.MENU_ITEM_NEW);</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Applet menu bar item.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>private JMenuItem loadNetworkItem = new JMenuItem(Texts.MENU_ITEM_LOAD);</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Applet menu bar item.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>private JMenuItem deleteNetworkItem = new JMenuItem(Texts.MENU_ITEM_DELETE);</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Applet menu bar item.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>private JMenu toolsMenu = new JMenu(Texts.MENU_TOOLS);</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Applet menu bar item.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>private JMenuItem settingsItem = new JMenuItem(Texts.MENU_ITEM_SETTINGS);</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Applet menu item.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>private JMenu meshMenu = new JMenu(Texts.MENU_MESH);</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Applet menu bar item.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public JRadioButtonMenuItem meshActivitiesItem = new JRadioButtonMenuItem(</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/>Texts.MENU_ITEM_ACTIVITIES);</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Applet menu bar item.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public JRadioButtonMenuItem meshWeightsItem = new JRadioButtonMenuItem(</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/>Texts.MENU_ITEM_WEIGHTS);</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Applet menu bar item.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public JRadioButtonMenuItem meshBothItem = new JRadioButtonMenuItem(</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/>Texts.MENU_ITEM_BOTH);</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:soft-page-break/><text:tab/> * Applet menu bar item.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public JRadioButtonMenuItem meshSolidItem = new JRadioButtonMenuItem(</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/>Texts.MENU_ITEM_SOLID);</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Applet menu bar item.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>private ButtonGroup meshItemsGroup = new ButtonGroup();</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Applet menu bar item.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public JCheckBoxMenuItem numberingItem = new JCheckBoxMenuItem(</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/>Texts.MENU_ITEM_NUMBERING);</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Working area controls. It is default access to able to repaint from other</text:p><text:p text:style-name="P457"><text:tab/> * classes.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>DrawingPane workArea = new DrawingPane(this);</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Login pane controls.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>private LoginPane loginPane = new LoginPane(this);</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Neuron pane controls.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public NeuronPane neuronPane = new NeuronPane(this);</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * New ANN pane controls.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public NewAnnPane newAnnPane = new NewAnnPane(this);</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Delete ANN pane controls.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public DeleteAnnPane deleteAnnPane = new DeleteAnnPane(this);</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Settings pane controls.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public SettingsPane settingsPane = new SettingsPane(this);</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Connection pane controls. Default access is used for GUI controls</text:p><text:p text:style-name="P457"><text:tab/> * modification from other classes.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>ConnectionPane connectionPane = new ConnectionPane(this);</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Network pane controls.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>private NetworkPane networkPane = new NetworkPane(this);</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * ANN container.</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>ArtificialNeuralNetwork ann = null;</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Applet initialization.</text:p><text:p text:style-name="P457"><text:tab/> * </text:p><text:p text:style-name="P457"><text:tab/> * @author Momchil Anachkov</text:p><text:p text:style-name="P457"><text:tab/> * </text:p><text:p text:style-name="P457"><text:tab/> * @email mZer0000@gmail.com</text:p><text:p text:style-name="P457"><text:tab/> * </text:p><text:p text:style-name="P457"><text:tab/> * @date 16 Nov 2010</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public void init() {</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>setSize(WIDTH, HEIGHT);</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/><text:tab/>setLayout(new BorderLayout());</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/><text:tab/>setJMenuBar(menuBar);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>menuBar.add(commandsMenu);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>commandsMenu.add(loginItem);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>commandsMenu.add(logoutItem);</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/><text:tab/>add(workArea, BorderLayout.WEST);</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/><text:tab/>setJMenuBar(menuBar);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>menuBar.add(commandsMenu);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>commandsMenu.add(loginItem);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>loginItem.addActionListener(new ActionListener() {</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/>public void actionPerformed(ActionEvent arg0) {</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/><text:tab/>showLoginPane();</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/><text:tab/>loginItem.setEnabled(false);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/><text:tab/>logoutItem.setEnabled(true);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>});</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>logoutItem.setEnabled(false);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>commandsMenu.add(logoutItem);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>logoutItem.addActionListener(new ActionListener() {</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/>public void actionPerformed(ActionEvent arg0) {</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/><text:tab/>try {</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>dbHelp.disconnect();</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/><text:tab/>} catch (Exception ex) {</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/><text:tab/>showLoginPane();</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/><text:tab/>loginItem.setEnabled(true);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/><text:tab/>logoutItem.setEnabled(false);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/><text:tab/>hideMenuBarAfterLogout();</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>});</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/><text:tab/>newNetworkItem.addActionListener(new ActionListener() {</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/> * Shows a pane for creating a new ANN.</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/> * </text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/> * @author Ralitza Koleva</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/> * </text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/> * @email rallly@abv.bg</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/> * </text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/> * @date 18 Sep 2011</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/>public void actionPerformed(ActionEvent event) {</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/><text:tab/>showNewAnnPane();</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>});</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:soft-page-break/><text:tab/><text:tab/>loadNetworkItem.addActionListener(new ActionListener() {</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/> * Shows a pane for loading an existing ANN.</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/> * </text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/> * @author Ralitza Koleva</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/> * </text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/> * @email rallly@abv.bg</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/> * </text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/> * @date 18 Sep 2011</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/>public void actionPerformed(ActionEvent event) {</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/><text:tab/>showNetworkPane();</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>});</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/><text:tab/>deleteNetworkItem.addActionListener(new ActionListener() {</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/> * Shows a pane for deleting an existing ANN.</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/> * </text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/> * @author Ralitza Koleva</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/> * </text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/> * @email rallly@abv.bg</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/> * </text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/> * @date 27 Nov 2011</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/>public void actionPerformed(ActionEvent event) {</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/><text:tab/>showDeleteAnnPane();</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>});</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/><text:tab/>settingsItem.addActionListener(new ActionListener() {</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/> * Shows a settings pane for changing ANN kinds colors.</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/> * </text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/> * @author Ralitza Koleva</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/> * </text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/> * @email rallly@abv.bg</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/> * </text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/> * @date 21 Oct 2011</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/>public void actionPerformed(ActionEvent event) {</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/><text:tab/>showSettingsPane();</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>});</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P457"><text:tab/><text:tab/> * When selected, this radio button menu item determines that ANN</text:p><text:p text:style-name="P457"><text:tab/><text:tab/> * connections should be colored depending on ANN activities.</text:p><text:p text:style-name="P457"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>meshActivitiesItem.addActionListener(new ActionListener() {</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/> * Repaints work area.</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/> * </text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/> * @author Ralitza Koleva</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/> * </text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/> * @email rallly@abv.bg</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/> * </text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/> * @date 31 Oct 2011</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/>public void actionPerformed(ActionEvent event) {</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/><text:tab/>workArea.repaint();</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>});</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P457"><text:tab/><text:tab/> * When selected, this radio button menu item determines that ANN</text:p><text:p text:style-name="P457"><text:tab/><text:tab/> * connections should be colored depending on ANN weights.</text:p><text:p text:style-name="P457"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>meshWeightsItem.addActionListener(new ActionListener() {</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/> * Repaints work area.</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/> * </text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/> * @author Ralitza Koleva</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/> * </text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/> * @email rallly@abv.bg</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/> * </text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/> * @date 31 Oct 2011</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/>public void actionPerformed(ActionEvent event) {</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/><text:tab/>workArea.repaint();</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>});</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P457"><text:tab/><text:tab/> * When selected, this radio button menu item determines that ANN</text:p><text:p text:style-name="P457"><text:tab/><text:tab/> * connections should be colored depending on both ANN activities and</text:p><text:p text:style-name="P457"><text:tab/><text:tab/> * weights.</text:p><text:p text:style-name="P457"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>meshBothItem.addActionListener(new ActionListener() {</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/> * Repaints work area.</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/> * </text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/> * @author Ralitza Koleva</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/> * </text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/> * @email rallly@abv.bg</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/> * </text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/> * @date 31 Oct 2011</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/>public void actionPerformed(ActionEvent event) {</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/><text:tab/>workArea.repaint();</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>});</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P457"><text:tab/><text:tab/> * When selected, this radio button menu item determines that ANN</text:p><text:p text:style-name="P457"><text:tab/><text:tab/> * connections should be colored in a solid color, regardless of ANN</text:p><text:p text:style-name="P457"><text:tab/><text:tab/> * activities and weights.</text:p><text:p text:style-name="P457"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>meshSolidItem.addActionListener(new ActionListener() {</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/> * Repaints work area.</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/> * </text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/> * @author Ralitza Koleva</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/> * </text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/> * @email rallly@abv.bg</text:p><text:p text:style-name="P457"><text:soft-page-break/><text:tab/><text:tab/><text:tab/> * </text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/> * @date 31 Oct 2011</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/>public void actionPerformed(ActionEvent event) {</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/><text:tab/>workArea.repaint();</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>});</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P457"><text:tab/><text:tab/> * When selected, this checkbox menu item determines that ANN neurons</text:p><text:p text:style-name="P457"><text:tab/><text:tab/> * should be numbered.</text:p><text:p text:style-name="P457"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>numberingItem.addActionListener(new ActionListener() {</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/> * Repaints work area.</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/> * </text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/> * @author Ralitza Koleva</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/> * </text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/> * @email rallly@abv.bg</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/> * </text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/> * @date 31 Oct 2011</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/>public void actionPerformed(ActionEvent event) {</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/><text:tab/>workArea.repaint();</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>});</text:p><text:p text:style-name="P457"><text:tab/>}</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Visualizing network pane.</text:p><text:p text:style-name="P457"><text:tab/> * </text:p><text:p text:style-name="P457"><text:tab/> * @author Momchil Anachkov</text:p><text:p text:style-name="P457"><text:tab/> * </text:p><text:p text:style-name="P457"><text:tab/> * @email mZer0000@gmail.com</text:p><text:p text:style-name="P457"><text:tab/> * </text:p><text:p text:style-name="P457"><text:tab/> * @date 27 Dec 2010</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public void showNetworkPane() {</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>remove(loginPane);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>remove(neuronPane);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>remove(connectionPane);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>remove(newAnnPane);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>remove(deleteAnnPane);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>remove(settingsPane);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>add(networkPane, BorderLayout.EAST);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>networkPane.revalidate();</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>workArea.setVisible(true);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>repaint();</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>showMenuBarAfterLogin();</text:p><text:p text:style-name="P457"><text:tab/>}</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Visualizing login pane.</text:p><text:p text:style-name="P457"><text:tab/> * </text:p><text:p text:style-name="P457"><text:tab/> * @author Momchil Anachkov</text:p><text:p text:style-name="P457"><text:tab/> * </text:p><text:p text:style-name="P457"><text:tab/> * @email mZer0000@gmail.com</text:p><text:p text:style-name="P457"><text:tab/> * </text:p><text:p text:style-name="P457"><text:tab/> * @date 27 Dec 2010</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public void showLoginPane() {</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>remove(networkPane);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>remove(neuronPane);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>remove(connectionPane);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>remove(newAnnPane);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>remove(deleteAnnPane);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>remove(settingsPane);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>add(loginPane, BorderLayout.EAST);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>loginPane.revalidate();</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>workArea.setVisible(true);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>repaint();</text:p><text:p text:style-name="P457"><text:tab/>}</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Visualizing neuron pane.</text:p><text:p text:style-name="P457"><text:tab/> * </text:p><text:p text:style-name="P457"><text:tab/> * @author Momchil Anachkov</text:p><text:p text:style-name="P457"><text:tab/> * </text:p><text:p text:style-name="P457"><text:tab/> * @email mZer0000@gmail.com</text:p><text:p text:style-name="P457"><text:tab/> * </text:p><text:p text:style-name="P457"><text:tab/> * @date 27 Dec 2010</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public void showNeuronPane() {</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>remove(networkPane);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>remove(loginPane);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>remove(connectionPane);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>remove(newAnnPane);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>remove(deleteAnnPane);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>remove(settingsPane);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>add(neuronPane, BorderLayout.EAST);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>neuronPane.revalidate();</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>workArea.setVisible(true);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>repaint();</text:p><text:p text:style-name="P457"><text:tab/>}</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Visualizing connection pane.</text:p><text:p text:style-name="P457"><text:tab/> * </text:p><text:p text:style-name="P457"><text:tab/> * @author Momchil Anachkov</text:p><text:p text:style-name="P457"><text:tab/> * </text:p><text:p text:style-name="P457"><text:tab/> * @email mZer0000@gmail.com</text:p><text:p text:style-name="P457"><text:tab/> * </text:p><text:p text:style-name="P457"><text:tab/> * @date 27 Dec 2010</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public void showConnectionPane() {</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>remove(networkPane);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>remove(loginPane);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>remove(neuronPane);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>remove(newAnnPane);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>remove(deleteAnnPane);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>remove(settingsPane);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>add(connectionPane, BorderLayout.EAST);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>connectionPane.revalidate();</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>workArea.setVisible(true);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>repaint();</text:p><text:p text:style-name="P457"><text:tab/>}</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Visualizing new ANN pane.</text:p><text:p text:style-name="P457"><text:tab/> * </text:p><text:p text:style-name="P457"><text:tab/> * @author Ralitza Koleva</text:p><text:p text:style-name="P457"><text:tab/> * </text:p><text:p text:style-name="P457"><text:tab/> * @email rallly@abv.bg</text:p><text:p text:style-name="P457"><text:tab/> * </text:p><text:p text:style-name="P457"><text:soft-page-break/><text:tab/> * @date 18 Sep 2011</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public void showNewAnnPane() {</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>remove(networkPane);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>remove(loginPane);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>remove(neuronPane);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>remove(connectionPane);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>remove(deleteAnnPane);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>remove(settingsPane);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>add(newAnnPane, BorderLayout.EAST);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>newAnnPane.revalidate();</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>workArea.setVisible(false);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>repaint();</text:p><text:p text:style-name="P457"><text:tab/>}</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Visualizing delete ANN pane.</text:p><text:p text:style-name="P457"><text:tab/> * </text:p><text:p text:style-name="P457"><text:tab/> * @author Ralitza Koleva</text:p><text:p text:style-name="P457"><text:tab/> * </text:p><text:p text:style-name="P457"><text:tab/> * @email rallly@abv.bg</text:p><text:p text:style-name="P457"><text:tab/> * </text:p><text:p text:style-name="P457"><text:tab/> * @date 27 Nov 2011</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public void showDeleteAnnPane() {</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>remove(networkPane);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>remove(loginPane);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>remove(neuronPane);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>remove(connectionPane);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>remove(newAnnPane);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>remove(settingsPane);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>add(deleteAnnPane, BorderLayout.EAST);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>deleteAnnPane.revalidate();</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>workArea.setVisible(false);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>repaint();</text:p><text:p text:style-name="P457"><text:tab/>}</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Visualizing settings pane.</text:p><text:p text:style-name="P457"><text:tab/> * </text:p><text:p text:style-name="P457"><text:tab/> * @author Ralitza Koleva</text:p><text:p text:style-name="P457"><text:tab/> * </text:p><text:p text:style-name="P457"><text:tab/> * @email rallly@abv.bg</text:p><text:p text:style-name="P457"><text:tab/> * </text:p><text:p text:style-name="P457"><text:tab/> * @date 21 Oct 2011</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public void showSettingsPane() {</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>remove(networkPane);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>remove(loginPane);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>remove(neuronPane);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>remove(connectionPane);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>remove(newAnnPane);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>remove(deleteAnnPane);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>add(settingsPane, BorderLayout.EAST);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>settingsPane.revalidate();</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>repaint();</text:p><text:p text:style-name="P457"><text:tab/>}</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Shows the menu bar when a user logs in.</text:p><text:p text:style-name="P457"><text:tab/> * </text:p><text:p text:style-name="P457"><text:tab/> * @author Ralitza Koleva</text:p><text:p text:style-name="P457"><text:tab/> * </text:p><text:p text:style-name="P457"><text:tab/> * @email rallly@abv.bg</text:p><text:p text:style-name="P457"><text:tab/> * </text:p><text:p text:style-name="P457"><text:tab/> * @date 03 Sep 2011</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public void showMenuBarAfterLogin() {</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>menuBar.add(networkMenu);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>networkMenu.add(newNetworkItem);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>networkMenu.add(loadNetworkItem);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>networkMenu.add(deleteNetworkItem);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>menuBar.add(toolsMenu);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>toolsMenu.add(settingsItem);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>toolsMenu.add(meshMenu);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>toolsMenu.add(numberingItem);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>meshItemsGroup.add(meshActivitiesItem);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>meshItemsGroup.add(meshWeightsItem);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>meshItemsGroup.add(meshBothItem);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>meshItemsGroup.add(meshSolidItem);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>meshMenu.add(meshActivitiesItem);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>meshMenu.add(meshWeightsItem);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>meshMenu.add(meshBothItem);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>meshMenu.add(meshSolidItem);</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P457"><text:tab/><text:tab/> * At the beginning in menu &quot;Tools-&gt;Mesh&quot; the option &quot;Solid&quot; is</text:p><text:p text:style-name="P457"><text:tab/><text:tab/> * selected.</text:p><text:p text:style-name="P457"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>if (meshActivitiesItem.isSelected() == false</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/><text:tab/>&amp;&amp; meshWeightsItem.isSelected() == false</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/><text:tab/>&amp;&amp; meshBothItem.isSelected() == false</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/><text:tab/>&amp;&amp; meshSolidItem.isSelected() == false) {</text:p><text:p text:style-name="P457"><text:tab/><text:tab/><text:tab/>meshSolidItem.setSelected(true);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>add(workArea);</text:p><text:p text:style-name="P457"><text:tab/>}</text:p><text:p text:style-name="P457"/><text:p text:style-name="P457"><text:tab/>/**</text:p><text:p text:style-name="P457"><text:tab/> * Removes the menu bar when a user logs out.</text:p><text:p text:style-name="P457"><text:tab/> * </text:p><text:p text:style-name="P457"><text:tab/> * @author Ralitza Koleva</text:p><text:p text:style-name="P457"><text:tab/> * </text:p><text:p text:style-name="P457"><text:tab/> * @email rallly@abv.bg</text:p><text:p text:style-name="P457"><text:tab/> * </text:p><text:p text:style-name="P457"><text:tab/> * @date 03 Sep 2011</text:p><text:p text:style-name="P457"><text:tab/> */</text:p><text:p text:style-name="P457"><text:tab/>public void hideMenuBarAfterLogout() {</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>menuBar.remove(networkMenu);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>menuBar.remove(toolsMenu);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>remove(workArea);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>remove(loginPane);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>remove(networkPane);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>remove(neuronPane);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>remove(connectionPane);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>remove(newAnnPane);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>remove(deleteAnnPane);</text:p><text:p text:style-name="P457"><text:tab/><text:tab/>remove(settingsPane);</text:p><text:p text:style-name="P457"><text:tab/>}</text:p><text:p text:style-name="P457">}</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5764_1486593966"/><text:soft-page-break/><text:s text:c="4"/>ANN.cpp<text:bookmark-end text:name="__RefHeading___Toc5764_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P458">/*******************************************************************************</text:p><text:p text:style-name="P458"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P458"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P458"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P458"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P458"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P458"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P458"><text:s/>* Copyright (C) 2008-2011 by Todor Balabanov <text:s/>( todor.balabanov@gmail.com ) <text:s text:c="2"/>*</text:p><text:p text:style-name="P458"><text:s/>* <text:s text:c="22"/>Iliyan Zankinski <text:s text:c="2"/>( iliyan_mf@abv.bg ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P458"><text:s/>* <text:s text:c="22"/>Momchil Anachkov <text:s text:c="2"/>( mZer0000@gmail.com ) <text:s text:c="12"/>*</text:p><text:p text:style-name="P458"><text:s/>* <text:s text:c="22"/>Daniel Chutrov <text:s text:c="4"/>( d.chutrov@gmail.com ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P458"><text:s/>* <text:s text:c="22"/>Nikola Simeonov <text:s text:c="3"/>( n.simeonow@gmail.com ) <text:s text:c="10"/>*</text:p><text:p text:style-name="P458"><text:s/>* <text:s text:c="22"/>Galq Cirkalova <text:s text:c="4"/>( galq_cirkalova@abv.bg ) <text:s text:c="9"/>*</text:p><text:p text:style-name="P458"><text:s/>* <text:s text:c="22"/>Ivan Grozev <text:s text:c="7"/>( ivan.iliev.grozev@gmail.com ) <text:s text:c="3"/>*</text:p><text:p text:style-name="P458"><text:s/>* <text:s text:c="22"/>Elisaveta Hristova ( elisaveta.s.hristova@gmail.com ) *</text:p><text:p text:style-name="P458"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P458"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P458"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P458"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P458"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P458"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P458"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P458"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P458"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P458"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P458"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P458"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P458"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P458"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P458"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458">#include &lt;cmath&gt;</text:p><text:p text:style-name="P458">#include &lt;climits&gt;</text:p><text:p text:style-name="P458">#include &lt;cstdlib&gt;</text:p><text:p text:style-name="P458">#include &lt;iomanip&gt;</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458">using namespace std;</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458">#include &quot;ANN.h&quot;</text:p><text:p text:style-name="P458">#include &quot;ANNInput.h&quot;</text:p><text:p text:style-name="P458">#include &quot;ANNOutput.h&quot;</text:p><text:p text:style-name="P458">#include &quot;Counter.h&quot;</text:p><text:p text:style-name="P458">#include &quot;WeightsMatrix.h&quot;</text:p><text:p text:style-name="P458">#include &quot;TrainingSet.h&quot;</text:p><text:p text:style-name="P458">#include &quot;ActivitiesMatrix.h&quot;</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458">extern void sleep();</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458">/*</text:p><text:p text:style-name="P458"><text:s/>* Control running of the thread.</text:p><text:p text:style-name="P458"><text:s/>*/</text:p><text:p text:style-name="P458">extern bool isRunning;</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458">const double ANN::LEARNING_RATE = 0.35;</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458">void ANN::create(int neuronsAmount) {</text:p><text:p text:style-name="P458"><text:tab/>NeuronsList neurons(neuronsAmount);</text:p><text:p text:style-name="P458"><text:tab/>this-&gt;neurons = neurons;</text:p><text:p text:style-name="P458"><text:tab/>neuronsAmount = this-&gt;neurons.dimension();</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458"><text:tab/>ActivitiesMatrix activities(neuronsAmount);</text:p><text:p text:style-name="P458"><text:tab/>this-&gt;activities = activities;</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458"><text:tab/>/*</text:p><text:p text:style-name="P458"><text:tab/> * Make all neurons regular.</text:p><text:p text:style-name="P458"><text:tab/> */</text:p><text:p text:style-name="P458"><text:tab/>neurons.clearTypes();</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458"><text:tab/>/*</text:p><text:p text:style-name="P458"><text:tab/> * Initialize neurons for first update.</text:p><text:p text:style-name="P458"><text:tab/> */</text:p><text:p text:style-name="P458"><text:tab/>neurons.reset();</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458"><text:tab/>/*</text:p><text:p text:style-name="P458"><text:tab/> * In the beginning there is no prediction.</text:p><text:p text:style-name="P458"><text:tab/> */</text:p><text:p text:style-name="P458"><text:tab/>prediction = 0;</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458"><text:tab/>/*</text:p><text:p text:style-name="P458"><text:tab/> * Estimate work done.</text:p><text:p text:style-name="P458"><text:tab/> */</text:p><text:p text:style-name="P458"><text:tab/>if (counters != NULL) {</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>counters-&gt;setValue(&quot;Number of neurons&quot;, neuronsAmount);</text:p><text:p text:style-name="P458"><text:tab/>}</text:p><text:p text:style-name="P458">}</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458">ANN::ANN() {</text:p><text:p text:style-name="P458"><text:tab/>this-&gt;counters = NULL;</text:p><text:p text:style-name="P458"><text:tab/>this-&gt;ts = NULL;</text:p><text:p text:style-name="P458"><text:tab/>this-&gt;learn = 0;</text:p><text:p text:style-name="P458"><text:tab/>this-&gt;bars = 0;</text:p><text:p text:style-name="P458"><text:tab/>this-&gt;period = NO;</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458"><text:tab/>/*</text:p><text:p text:style-name="P458"><text:tab/> * Allocate memory.</text:p><text:p text:style-name="P458"><text:tab/> */</text:p><text:p text:style-name="P458"><text:tab/>create(0);</text:p><text:p text:style-name="P458">}</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458">ANN::ANN(const ANN &amp;ann) {</text:p><text:p text:style-name="P458"><text:tab/>this-&gt;counters = ann.counters;</text:p><text:p text:style-name="P458"><text:tab/>this-&gt;ts = ann.ts;</text:p><text:p text:style-name="P458"><text:tab/>this-&gt;learn = ann.learn;</text:p><text:p text:style-name="P458"><text:tab/>this-&gt;bars = ann.bars;</text:p><text:p text:style-name="P458"><text:tab/>this-&gt;period = ann.period;</text:p><text:p text:style-name="P458"><text:tab/>this-&gt;neurons = ann.neurons;</text:p><text:p text:style-name="P458"><text:tab/>this-&gt;activities = ann.activities;</text:p><text:p text:style-name="P458"><text:tab/>this-&gt;weights = ann.weights;</text:p><text:p text:style-name="P458"><text:tab/>this-&gt;prediction = ann.prediction;</text:p><text:p text:style-name="P458">}</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458">ANN::ANN(Counter *counters, int neuronsAmount, int learn, int bars, TimePeriod period) {</text:p><text:p text:style-name="P458"><text:tab/>/*</text:p><text:p text:style-name="P458"><text:tab/> * Check counters pointer for point valid object.</text:p><text:p text:style-name="P458"><text:tab/> */</text:p><text:p text:style-name="P458"><text:tab/>if (counters == NULL) {</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>throw( &quot;ANN00144&quot; );</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>return;</text:p><text:p text:style-name="P458"><text:tab/>}</text:p><text:p text:style-name="P458"><text:soft-page-break/></text:p><text:p text:style-name="P458"><text:tab/>/*</text:p><text:p text:style-name="P458"><text:tab/> * In prediction mode there is no training set link.</text:p><text:p text:style-name="P458"><text:tab/> */</text:p><text:p text:style-name="P458"><text:tab/>this-&gt;counters = counters;</text:p><text:p text:style-name="P458"><text:tab/>this-&gt;ts = NULL;</text:p><text:p text:style-name="P458"><text:tab/>this-&gt;learn = learn;</text:p><text:p text:style-name="P458"><text:tab/>this-&gt;bars = bars;</text:p><text:p text:style-name="P458"><text:tab/>this-&gt;period = period;</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458"><text:tab/>/*</text:p><text:p text:style-name="P458"><text:tab/> * Allocate memory.</text:p><text:p text:style-name="P458"><text:tab/> */</text:p><text:p text:style-name="P458"><text:tab/>create(neuronsAmount);</text:p><text:p text:style-name="P458">}</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458">ANN::ANN(Counter *counters, TrainingSet *ts, int neuronsAmount, int learn, int bars, TimePeriod period) {</text:p><text:p text:style-name="P458"><text:tab/>/*</text:p><text:p text:style-name="P458"><text:tab/> * Check counters pointer for point valid object.</text:p><text:p text:style-name="P458"><text:tab/> */</text:p><text:p text:style-name="P458"><text:tab/>if (counters == NULL) {</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>throw( &quot;ANN00146&quot; );</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>return;</text:p><text:p text:style-name="P458"><text:tab/>}</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458"><text:tab/>/*</text:p><text:p text:style-name="P458"><text:tab/> * Check training set pointer for point valid object.</text:p><text:p text:style-name="P458"><text:tab/> */</text:p><text:p text:style-name="P458"><text:tab/>if (ts == NULL) {</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>throw( &quot;ANN00147&quot; );</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>return;</text:p><text:p text:style-name="P458"><text:tab/>}</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458"><text:tab/>this-&gt;counters = counters;</text:p><text:p text:style-name="P458"><text:tab/>this-&gt;ts = ts;</text:p><text:p text:style-name="P458"><text:tab/>this-&gt;learn = learn;</text:p><text:p text:style-name="P458"><text:tab/>this-&gt;bars = bars;</text:p><text:p text:style-name="P458"><text:tab/>this-&gt;period = period;</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458"><text:tab/>/*</text:p><text:p text:style-name="P458"><text:tab/> * Allocate memory.</text:p><text:p text:style-name="P458"><text:tab/> */</text:p><text:p text:style-name="P458"><text:tab/>create(neuronsAmount);</text:p><text:p text:style-name="P458">}</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458">NeuronsList&amp; ANN::getNeurons() {</text:p><text:p text:style-name="P458"><text:tab/>return( neurons );</text:p><text:p text:style-name="P458">}</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458">void ANN::setNeurons(NeuronsList &amp;neurons) {</text:p><text:p text:style-name="P458"><text:tab/>this-&gt;neurons = neurons;</text:p><text:p text:style-name="P458">}</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458">WeightsMatrix&amp; ANN::getWeights() {</text:p><text:p text:style-name="P458"><text:tab/>return( weights );</text:p><text:p text:style-name="P458">}</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458">void ANN::setWeights(WeightsMatrix &amp;weights) {</text:p><text:p text:style-name="P458"><text:tab/>this-&gt;weights = weights;</text:p><text:p text:style-name="P458">}</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458">ActivitiesMatrix&amp; ANN::getActivities() {</text:p><text:p text:style-name="P458"><text:tab/>return( activities );</text:p><text:p text:style-name="P458">}</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458">void ANN::setActivities(ActivitiesMatrix &amp;activities) {</text:p><text:p text:style-name="P458"><text:tab/>this-&gt;activities = activities;</text:p><text:p text:style-name="P458">}</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458">double ANN::getActivity(int x, int y) {</text:p><text:p text:style-name="P458"><text:tab/>if (x &lt; 0 || y&lt;0 || x &gt;= activities.dimension() || y &gt;= activities.dimension()) {</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>throw( &quot;ANN00015&quot; );</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>return( 0.0 );</text:p><text:p text:style-name="P458"><text:tab/>}</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458"><text:tab/>return( activities(x,y) );</text:p><text:p text:style-name="P458">}</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458">void ANN::setActivity(int x, int y, double value) {</text:p><text:p text:style-name="P458"><text:tab/>if (x &lt; 0 || y&lt;0 || x &gt;= activities.dimension() || y &gt;= activities.dimension()) {</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>throw( &quot;ANN00016&quot; );</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>return;</text:p><text:p text:style-name="P458"><text:tab/>}</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458"><text:tab/>activities(x,y) = value;</text:p><text:p text:style-name="P458"><text:tab/>activities.normalize();</text:p><text:p text:style-name="P458">}</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458">void ANN::setAllInactive() {</text:p><text:p text:style-name="P458"><text:tab/>//TODO Move this method in activities class.</text:p><text:p text:style-name="P458"><text:tab/>for (int j=0; j&lt;activities.dimension(); j++) {</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>for (int i=0; i&lt;activities.dimension(); i++) {</text:p><text:p text:style-name="P458"><text:tab/><text:tab/><text:tab/>activities(i,j) = ActivitiesMatrix::MIN_ACTIVITY;</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P458"><text:tab/>}</text:p><text:p text:style-name="P458">}</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458">void ANN::setAllActive() {</text:p><text:p text:style-name="P458"><text:tab/>//TODO Move this method in activities class.</text:p><text:p text:style-name="P458"><text:tab/>for (int j=0; j&lt;activities.dimension(); j++) {</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>for (int i=0; i&lt;activities.dimension(); i++) {</text:p><text:p text:style-name="P458"><text:tab/><text:tab/><text:tab/>activities(i,j) = ActivitiesMatrix::MAX_ACTIVITY;</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P458"><text:tab/>}</text:p><text:p text:style-name="P458">}</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458">void ANN::setTrainingSetPointer(TrainingSet *ts) {</text:p><text:p text:style-name="P458"><text:tab/>this-&gt;ts = ts;</text:p><text:p text:style-name="P458">}</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458">double ANN::getPrediction() const {</text:p><text:p text:style-name="P458"><text:tab/>return( prediction );</text:p><text:p text:style-name="P458">}</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458">void ANN::setupInput(int size) {</text:p><text:p text:style-name="P458"><text:tab/>for(int i=0; i&lt;size&amp;&amp;i&lt;neurons.dimension(); i++) {</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>neurons[i].setInput( true );</text:p><text:p text:style-name="P458"><text:tab/>}</text:p><text:p text:style-name="P458">}</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458">void ANN::setupOutput(int size) {</text:p><text:p text:style-name="P458"><text:tab/>for(int i=neurons.dimension()-size; i&lt;neurons.dimension(); i++) {</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>neurons[i].setOutput( true );</text:p><text:p text:style-name="P458"><text:tab/>}</text:p><text:p text:style-name="P458">}</text:p><text:p text:style-name="P458"><text:soft-page-break/></text:p><text:p text:style-name="P458">void ANN::setupThreeLayers() {</text:p><text:p text:style-name="P458"><text:tab/>/*</text:p><text:p text:style-name="P458"><text:tab/> * Clear all connections.</text:p><text:p text:style-name="P458"><text:tab/> */</text:p><text:p text:style-name="P458"><text:tab/>setAllInactive();</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458"><text:tab/>/*</text:p><text:p text:style-name="P458"><text:tab/> * Set bias between input and hidden layers.</text:p><text:p text:style-name="P458"><text:tab/> */</text:p><text:p text:style-name="P458"><text:tab/>int b1 = 0;</text:p><text:p text:style-name="P458"><text:tab/>for(b1=0; b1&lt;neurons.dimension(); b1++) {</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>if(neurons[b1].isRegular() == true) {</text:p><text:p text:style-name="P458"><text:tab/><text:tab/><text:tab/>neurons[b1].setBias( true );</text:p><text:p text:style-name="P458"><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P458"><text:tab/>}</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458"><text:tab/>/*</text:p><text:p text:style-name="P458"><text:tab/> * Set bias between hidden and output layers.</text:p><text:p text:style-name="P458"><text:tab/> */</text:p><text:p text:style-name="P458"><text:tab/>int b2 = 0;</text:p><text:p text:style-name="P458"><text:tab/>for(b2=neurons.dimension()-1; b2&gt;0; b2--) {</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>if(neurons[b2].isRegular() == true) {</text:p><text:p text:style-name="P458"><text:tab/><text:tab/><text:tab/>neurons[b2].setBias( true );</text:p><text:p text:style-name="P458"><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P458"><text:tab/>}</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458"><text:tab/>/*</text:p><text:p text:style-name="P458"><text:tab/> * Connect bias neuron.</text:p><text:p text:style-name="P458"><text:tab/> */</text:p><text:p text:style-name="P458"><text:tab/>for (int j=0; j&lt;neurons.dimension(); j++) {</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>if (neurons[j].isRegular() == false) {</text:p><text:p text:style-name="P458"><text:tab/><text:tab/><text:tab/>continue;</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>activities(j,b1) = activities.MAX_ACTIVITY;</text:p><text:p text:style-name="P458"><text:tab/>}</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458"><text:tab/>/*</text:p><text:p text:style-name="P458"><text:tab/> * Connect bias neuron.</text:p><text:p text:style-name="P458"><text:tab/> */</text:p><text:p text:style-name="P458"><text:tab/>for (int j=0; j&lt;neurons.dimension(); j++) {</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>if (neurons[j].isOutput() == false) {</text:p><text:p text:style-name="P458"><text:tab/><text:tab/><text:tab/>continue;</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>activities(j,b2) = activities.MAX_ACTIVITY;</text:p><text:p text:style-name="P458"><text:tab/>}</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458"><text:tab/>/*</text:p><text:p text:style-name="P458"><text:tab/> * Set connections between input and hidden layers.</text:p><text:p text:style-name="P458"><text:tab/> */</text:p><text:p text:style-name="P458"><text:tab/>for (int i=0; i&lt;neurons.dimension(); i++) {</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>if (neurons[i].isInput() == false) {</text:p><text:p text:style-name="P458"><text:tab/><text:tab/><text:tab/>continue;</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458"><text:tab/><text:tab/>for (int j=0; j&lt;neurons.dimension(); j++) {</text:p><text:p text:style-name="P458"><text:tab/><text:tab/><text:tab/>if (neurons[j].isRegular() == false) {</text:p><text:p text:style-name="P458"><text:tab/><text:tab/><text:tab/><text:tab/>continue;</text:p><text:p text:style-name="P458"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P458"><text:tab/><text:tab/><text:tab/>activities(j,i) = activities.MAX_ACTIVITY;</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P458"><text:tab/>}</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458"><text:tab/>/*</text:p><text:p text:style-name="P458"><text:tab/> * Set connections between hidden and output layers.</text:p><text:p text:style-name="P458"><text:tab/> */</text:p><text:p text:style-name="P458"><text:tab/>for (int i=0; i&lt;neurons.dimension(); i++) {</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>if (neurons[i].isRegular() == false) {</text:p><text:p text:style-name="P458"><text:tab/><text:tab/><text:tab/>continue;</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458"><text:tab/><text:tab/>for (int j=0; j&lt;neurons.dimension(); j++) {</text:p><text:p text:style-name="P458"><text:tab/><text:tab/><text:tab/>if (neurons[j].isOutput() == false) {</text:p><text:p text:style-name="P458"><text:tab/><text:tab/><text:tab/><text:tab/>continue;</text:p><text:p text:style-name="P458"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P458"><text:tab/><text:tab/><text:tab/>activities(j,i) = activities.MAX_ACTIVITY;</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P458"><text:tab/>}</text:p><text:p text:style-name="P458">}</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458">void ANN::loadInput(ANNIO &amp;input) {</text:p><text:p text:style-name="P458"><text:tab/>if (input.dimension() != neurons.getInputNeuronsAmount()) {</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>throw( &quot;ANN00022&quot; );</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>return;</text:p><text:p text:style-name="P458"><text:tab/>}</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458"><text:tab/>for (int i=0, k=0; i&lt;neurons.dimension(); i++) {</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>if (neurons[i].isInput() == false) {</text:p><text:p text:style-name="P458"><text:tab/><text:tab/><text:tab/>continue;</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458"><text:tab/><text:tab/>neurons[i].setValue( input[k] );</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>k++;</text:p><text:p text:style-name="P458"><text:tab/>}</text:p><text:p text:style-name="P458">}</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458">void ANN::update() {</text:p><text:p text:style-name="P458"><text:tab/>/*</text:p><text:p text:style-name="P458"><text:tab/> * Return if weights are not loaded.</text:p><text:p text:style-name="P458"><text:tab/> */</text:p><text:p text:style-name="P458"><text:tab/>if (weights.dimension() == 0) {</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>return;</text:p><text:p text:style-name="P458"><text:tab/>}</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458"><text:tab/>NeuronsList next(neurons);</text:p><text:p text:style-name="P458"><text:tab/>for (int i=0; i&lt;neurons.dimension(); i++) {</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>if (neurons[i].isInput()==true || neurons[i].isBias()==true) {</text:p><text:p text:style-name="P458"><text:tab/><text:tab/><text:tab/>continue;</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P458"><text:tab/><text:tab/> * Activation function of neuron i.</text:p><text:p text:style-name="P458"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>double value = 0.0;</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>for (int j=0; j&lt;neurons.dimension(); j++) {</text:p><text:p text:style-name="P458"><text:tab/><text:tab/><text:tab/>value += neurons[j].getValue() * weights(i,j) * activities(i,j);</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P458"><text:tab/><text:tab/> * Normalize activation level of neuron i with sigmoid function.</text:p><text:p text:style-name="P458"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>value = 1.0 / (1.0 + exp(-value));</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458"><text:soft-page-break/><text:tab/><text:tab/>next[i].setValue( value );</text:p><text:p text:style-name="P458"><text:tab/>}</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458"><text:tab/>/*</text:p><text:p text:style-name="P458"><text:tab/> * Swap buffer to be ready for next network forward update.</text:p><text:p text:style-name="P458"><text:tab/> */</text:p><text:p text:style-name="P458"><text:tab/>neurons = next;</text:p><text:p text:style-name="P458">}</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458">void ANN::storeOutput(ANNIO &amp;output) {</text:p><text:p text:style-name="P458"><text:tab/>if (output.dimension() != neurons.getOutputNeuronsAmount()) {</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>throw( &quot;ANN00023&quot; );</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>return;</text:p><text:p text:style-name="P458"><text:tab/>}</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458"><text:tab/>for (int i=0, k=0; i&lt;neurons.dimension(); i++) {</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>if (neurons[i].isOutput() == false) {</text:p><text:p text:style-name="P458"><text:tab/><text:tab/><text:tab/>continue;</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458"><text:tab/><text:tab/>output[k] = neurons[i].getValue();</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>k++;</text:p><text:p text:style-name="P458"><text:tab/>}</text:p><text:p text:style-name="P458">}</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458">double ANN::error(ANNIO &amp;expected, ANNIO &amp;predicted) {</text:p><text:p text:style-name="P458"><text:tab/>if (expected.dimension() != predicted.dimension()) {</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>throw( &quot;ANN00170&quot; );</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>return( 0.0 );</text:p><text:p text:style-name="P458"><text:tab/>}</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458"><text:tab/>if (predicted.dimension() &lt; 0 || predicted.dimension() &gt; neurons.dimension()) {</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>throw( &quot;ANN00024&quot; );</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>return( 0.0 );</text:p><text:p text:style-name="P458"><text:tab/>}</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458"><text:tab/>storeOutput(predicted);</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458"><text:tab/>/*</text:p><text:p text:style-name="P458"><text:tab/> * Difference sum.</text:p><text:p text:style-name="P458"><text:tab/> * http://www.speech.sri.com/people/anand/771/html/node37.html</text:p><text:p text:style-name="P458"><text:tab/> */</text:p><text:p text:style-name="P458"><text:tab/>double result = 0.0;</text:p><text:p text:style-name="P458"><text:tab/>static double subtraction = 0.0;</text:p><text:p text:style-name="P458"><text:tab/>for (int i=0; i&lt;predicted.dimension(); i++) {</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>subtraction = expected[i] - predicted[i];</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>result += subtraction * subtraction;</text:p><text:p text:style-name="P458"><text:tab/>}</text:p><text:p text:style-name="P458"><text:tab/>result /= (double)2.0;</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458"><text:tab/>return( result );</text:p><text:p text:style-name="P458">}</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458">double ANN::totalError() {</text:p><text:p text:style-name="P458"><text:tab/>double result = 0.0;</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458"><text:tab/>/*</text:p><text:p text:style-name="P458"><text:tab/> * Estimate work done.</text:p><text:p text:style-name="P458"><text:tab/> */</text:p><text:p text:style-name="P458"><text:tab/>if (counters != NULL) {</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>counters-&gt;increment( &quot;Total error calculations&quot; );</text:p><text:p text:style-name="P458"><text:tab/>}</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458"><text:tab/>/*</text:p><text:p text:style-name="P458"><text:tab/> * Total artificial neural network error can not be calculated without</text:p><text:p text:style-name="P458"><text:tab/> * training set.</text:p><text:p text:style-name="P458"><text:tab/> */</text:p><text:p text:style-name="P458"><text:tab/>if (ts == NULL) {</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>return( (double)RAND_MAX );</text:p><text:p text:style-name="P458"><text:tab/>}</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458"><text:tab/>/*</text:p><text:p text:style-name="P458"><text:tab/> * Reset network for new training.</text:p><text:p text:style-name="P458"><text:tab/> */</text:p><text:p text:style-name="P458"><text:tab/>neurons.reset();</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458"><text:tab/>/*</text:p><text:p text:style-name="P458"><text:tab/> * Loop over training set examples.</text:p><text:p text:style-name="P458"><text:tab/> */</text:p><text:p text:style-name="P458"><text:tab/>for (int i=0,size=ts-&gt;getSize(); i&lt;size&amp;&amp;isRunning==true; i++) {</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P458"><text:tab/><text:tab/> * For each time load ANN input.</text:p><text:p text:style-name="P458"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>loadInput(ts-&gt;getSplittedInputted(i));</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P458"><text:tab/><text:tab/> * Update ANN internal state.</text:p><text:p text:style-name="P458"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>update();</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P458"><text:tab/><text:tab/> * Calculate error.</text:p><text:p text:style-name="P458"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>result += error(ts-&gt;getSplittedExpected(i), ts-&gt;getSplittedPredicted(i));</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P458"><text:tab/><text:tab/> * Sleep for better performance.</text:p><text:p text:style-name="P458"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>sleep();</text:p><text:p text:style-name="P458"><text:tab/>}</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458"><text:tab/>/*</text:p><text:p text:style-name="P458"><text:tab/> * Average error for comparisons with different amount of training examples.</text:p><text:p text:style-name="P458"><text:tab/> */</text:p><text:p text:style-name="P458"><text:tab/>result /= ts-&gt;getSize();</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458"><text:tab/>return( result );</text:p><text:p text:style-name="P458">}</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458">void ANN::feedforward() {</text:p><text:p text:style-name="P458"><text:tab/>/*</text:p><text:p text:style-name="P458"><text:tab/> * Return if weights are not loaded.</text:p><text:p text:style-name="P458"><text:tab/> */</text:p><text:p text:style-name="P458"><text:tab/>if (weights.dimension() == 0) {</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>return;</text:p><text:p text:style-name="P458"><text:tab/>}</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458"><text:tab/>NeuronsList next(neurons);</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458"><text:tab/>/*</text:p><text:p text:style-name="P458"><text:tab/> * Feed hidden layer with values.</text:p><text:p text:style-name="P458"><text:tab/> */</text:p><text:p text:style-name="P458"><text:tab/>for (int i=0; i&lt;neurons.dimension(); i++) {</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P458"><text:tab/><text:tab/> * Select neurons into the hidden layer.</text:p><text:p text:style-name="P458"><text:soft-page-break/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>if (neurons[i].isInput()==true || neurons[i].isOutput()==true || neurons[i].isBias()==true) {</text:p><text:p text:style-name="P458"><text:tab/><text:tab/><text:tab/>continue;</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P458"><text:tab/><text:tab/> * Activation function of neuron i.</text:p><text:p text:style-name="P458"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>double value = 0.0;</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>for (int j=0; j&lt;neurons.dimension(); j++) {</text:p><text:p text:style-name="P458"><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P458"><text:tab/><text:tab/><text:tab/> * Select neurons into the input layer.</text:p><text:p text:style-name="P458"><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P458"><text:tab/><text:tab/><text:tab/>if (neurons[j].isInput() == false) {</text:p><text:p text:style-name="P458"><text:tab/><text:tab/><text:tab/><text:tab/>continue;</text:p><text:p text:style-name="P458"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458"><text:tab/><text:tab/><text:tab/>value += neurons[j].getValue() * weights(i,j) * activities(i,j);</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P458"><text:tab/><text:tab/> * Normalize activation level of neuron i with sidmoid function.</text:p><text:p text:style-name="P458"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>value = 1.0 / (1.0 + exp(-value));</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458"><text:tab/><text:tab/>next[i].setValue( value );</text:p><text:p text:style-name="P458"><text:tab/>}</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458"><text:tab/>/*</text:p><text:p text:style-name="P458"><text:tab/> * Feed output layer with values.</text:p><text:p text:style-name="P458"><text:tab/> */</text:p><text:p text:style-name="P458"><text:tab/>for (int i=0; i&lt;neurons.dimension(); i++) {</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P458"><text:tab/><text:tab/> * Select neurons into the output layer.</text:p><text:p text:style-name="P458"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>if (neurons[i].isOutput() == false) {</text:p><text:p text:style-name="P458"><text:tab/><text:tab/><text:tab/>continue;</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P458"><text:tab/><text:tab/> * Activation function of neuron i.</text:p><text:p text:style-name="P458"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>double value = 0.0;</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>for (int j=0; j&lt;neurons.dimension(); j++) {</text:p><text:p text:style-name="P458"><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P458"><text:tab/><text:tab/><text:tab/> * Select neurons into the hidden layer.</text:p><text:p text:style-name="P458"><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P458"><text:tab/><text:tab/><text:tab/>if (neurons[j].isInput()==true || neurons[j].isOutput()==true) {</text:p><text:p text:style-name="P458"><text:tab/><text:tab/><text:tab/><text:tab/>continue;</text:p><text:p text:style-name="P458"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458"><text:tab/><text:tab/><text:tab/>value += neurons[j].getValue() * weights(i,j) * activities(i,j);</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P458"><text:tab/><text:tab/> * Normalize activation level of neuron i with sidmoid function.</text:p><text:p text:style-name="P458"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>value = 1.0 / (1.0 + exp(-value));</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458"><text:tab/><text:tab/>next[i].setValue( value );</text:p><text:p text:style-name="P458"><text:tab/>}</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458"><text:tab/>/*</text:p><text:p text:style-name="P458"><text:tab/> * Swap buffer to be ready for next network forward update.</text:p><text:p text:style-name="P458"><text:tab/> */</text:p><text:p text:style-name="P458"><text:tab/>neurons = next;</text:p><text:p text:style-name="P458">}</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458">void ANN::backpropagation(ANNIO &amp;expected) {</text:p><text:p text:style-name="P458"><text:tab/>WeightsMatrix weights = this-&gt;weights;</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458"><text:tab/>/*</text:p><text:p text:style-name="P458"><text:tab/> * Calculate error into output layer.</text:p><text:p text:style-name="P458"><text:tab/> */</text:p><text:p text:style-name="P458"><text:tab/>for (int i=0,k=0; i&lt;neurons.dimension()&amp;&amp;k&lt;expected.dimension(); i++) {</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P458"><text:tab/><text:tab/> * Select neurons into the output layer.</text:p><text:p text:style-name="P458"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>if (neurons[i].isOutput() == false) {</text:p><text:p text:style-name="P458"><text:tab/><text:tab/><text:tab/>continue;</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458"><text:tab/><text:tab/>double error = (neurons[i].getValue() - expected[k]) * neurons[i].getValue() * (1.0 - neurons[i].getValue());</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>neurons[i].setError( error );</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P458"><text:tab/><text:tab/> * Increment expected values counter.</text:p><text:p text:style-name="P458"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>k++;</text:p><text:p text:style-name="P458"><text:tab/>}</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458"><text:tab/>/*</text:p><text:p text:style-name="P458"><text:tab/> * Calculate error into hidden layer.</text:p><text:p text:style-name="P458"><text:tab/> */</text:p><text:p text:style-name="P458"><text:tab/>for (int i=0; i&lt;neurons.dimension(); i++) {</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P458"><text:tab/><text:tab/> * Select neurons into the hidden layer.</text:p><text:p text:style-name="P458"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>if (neurons[i].isInput()==true || neurons[i].isOutput()==true) {</text:p><text:p text:style-name="P458"><text:tab/><text:tab/><text:tab/>continue;</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458"><text:tab/><text:tab/>double error = 0.0;</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458"/><text:p text:style-name="P458"><text:tab/><text:tab/>for (int j=0; j&lt;neurons.dimension(); j++) {</text:p><text:p text:style-name="P458"><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P458"><text:tab/><text:tab/><text:tab/> * Select neurons into the output layer.</text:p><text:p text:style-name="P458"><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P458"><text:tab/><text:tab/><text:tab/>if (neurons[j].isOutput() == false) {</text:p><text:p text:style-name="P458"><text:tab/><text:tab/><text:tab/><text:tab/>continue;</text:p><text:p text:style-name="P458"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458"><text:tab/><text:tab/><text:tab/>error += neurons[j].getError() * weights(i,j);</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458"><text:tab/><text:tab/>error *= neurons[i].getValue() * (1.0 - neurons[i].getValue());</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>neurons[i].setError( error );</text:p><text:p text:style-name="P458"><text:tab/>}</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458"><text:tab/>/*</text:p><text:p text:style-name="P458"><text:tab/> * Correct weights between output and hidden layer.</text:p><text:p text:style-name="P458"><text:tab/> */</text:p><text:p text:style-name="P458"><text:tab/>for (int i=0; i&lt;neurons.dimension(); i++) {</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P458"><text:soft-page-break/><text:tab/><text:tab/> * Select neurons into the output layer.</text:p><text:p text:style-name="P458"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>if (neurons[i].isOutput() == false) {</text:p><text:p text:style-name="P458"><text:tab/><text:tab/><text:tab/>continue;</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458"><text:tab/><text:tab/>for (int j=0; j&lt;neurons.dimension(); j++) {</text:p><text:p text:style-name="P458"><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P458"><text:tab/><text:tab/><text:tab/> * Select neurons into the hidden layer.</text:p><text:p text:style-name="P458"><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P458"><text:tab/><text:tab/><text:tab/>if (neurons[j].isInput()==true || neurons[j].isOutput()==true) {</text:p><text:p text:style-name="P458"><text:tab/><text:tab/><text:tab/><text:tab/>continue;</text:p><text:p text:style-name="P458"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458"><text:tab/><text:tab/><text:tab/>weights(i,j) += LEARNING_RATE * neurons[i].getError() * neurons[j].getValue();</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P458"><text:tab/>}</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458"><text:tab/>/*</text:p><text:p text:style-name="P458"><text:tab/> * Correct weights between hidden and output layer.</text:p><text:p text:style-name="P458"><text:tab/> */</text:p><text:p text:style-name="P458"><text:tab/>for (int i=0; i&lt;neurons.dimension(); i++) {</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P458"><text:tab/><text:tab/> * Select neurons into the hidden layer.</text:p><text:p text:style-name="P458"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>if (neurons[i].isInput()==true || neurons[i].isOutput()==true || neurons[i].isBias()==true) {</text:p><text:p text:style-name="P458"><text:tab/><text:tab/><text:tab/>continue;</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458"><text:tab/><text:tab/>for (int j=0; j&lt;neurons.dimension(); j++) {</text:p><text:p text:style-name="P458"><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P458"><text:tab/><text:tab/><text:tab/> * Select neurons into the input layer.</text:p><text:p text:style-name="P458"><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P458"><text:tab/><text:tab/><text:tab/>if (neurons[j].isInput() == false) {</text:p><text:p text:style-name="P458"><text:tab/><text:tab/><text:tab/><text:tab/>continue;</text:p><text:p text:style-name="P458"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458"><text:tab/><text:tab/><text:tab/>weights(i,j) += LEARNING_RATE * neurons[i].getError() * neurons[j].getValue();</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P458"><text:tab/>}</text:p><text:p text:style-name="P458">}</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458">void ANN::gradient() {</text:p><text:p text:style-name="P458"><text:tab/>int index = 0;</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458"><text:tab/>/*</text:p><text:p text:style-name="P458"><text:tab/> * Gradient optimization can not be applied without training set.</text:p><text:p text:style-name="P458"><text:tab/> */</text:p><text:p text:style-name="P458"><text:tab/>if (ts == NULL) {</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>return;</text:p><text:p text:style-name="P458"><text:tab/>}</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458"><text:tab/>for (int i=0,size=ts-&gt;getSize(); i&lt;size&amp;&amp;isRunning==true; i++) {</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P458"><text:tab/><text:tab/> * Select random training example.</text:p><text:p text:style-name="P458"><text:tab/><text:tab/> * All recurrent connections are switched off and there is no need to</text:p><text:p text:style-name="P458"><text:tab/><text:tab/> * have time order of examples feeding.</text:p><text:p text:style-name="P458"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>index = rand() % size;</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P458"><text:tab/><text:tab/> * For each time load ANN input.</text:p><text:p text:style-name="P458"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>loadInput(ts-&gt;getSplittedInputted(index));</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P458"><text:tab/><text:tab/> * Feed forward ANN.</text:p><text:p text:style-name="P458"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>feedforward();</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P458"><text:tab/><text:tab/> * Back propacate ANN error.</text:p><text:p text:style-name="P458"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>backpropagation(ts-&gt;getSplittedExpected(index));</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P458"><text:tab/><text:tab/> * Sleep for better performance.</text:p><text:p text:style-name="P458"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>sleep();</text:p><text:p text:style-name="P458"><text:tab/>}</text:p><text:p text:style-name="P458">}</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458">void ANN::predict() {</text:p><text:p text:style-name="P458"><text:tab/>/*</text:p><text:p text:style-name="P458"><text:tab/> * Total artificial neural network error can not be calculated without</text:p><text:p text:style-name="P458"><text:tab/> * training set.</text:p><text:p text:style-name="P458"><text:tab/> */</text:p><text:p text:style-name="P458"><text:tab/>if (ts == NULL) {</text:p><text:p text:style-name="P458"><text:tab/><text:tab/>return;</text:p><text:p text:style-name="P458"><text:tab/>}</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458"><text:s text:c="4"/>loadInput(ts-&gt;getSplittedInputted(0));</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458"><text:tab/>update();</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458"><text:tab/>ANNOutput outputValues( neurons.getOutputNeuronsAmount() );</text:p><text:p text:style-name="P458"><text:tab/>storeOutput(outputValues);</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458"><text:tab/>//TODO Should have array of predicted future values.</text:p><text:p text:style-name="P458"><text:tab/>prediction = outputValues[0];</text:p><text:p text:style-name="P458">}</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458">ANN::~ANN() {</text:p><text:p text:style-name="P458"><text:tab/>ts = NULL;</text:p><text:p text:style-name="P458"><text:tab/>counters = NULL;</text:p><text:p text:style-name="P458">}</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458">ANN&amp; ANN::operator=(const ANN &amp;ann) {</text:p><text:p text:style-name="P458"><text:tab/>this-&gt;counters = ann.counters;</text:p><text:p text:style-name="P458"><text:tab/>this-&gt;ts = ann.ts;</text:p><text:p text:style-name="P458"><text:tab/>this-&gt;learn = ann.learn;</text:p><text:p text:style-name="P458"><text:tab/>this-&gt;bars = ann.bars;</text:p><text:p text:style-name="P458"><text:tab/>this-&gt;period = ann.period;</text:p><text:p text:style-name="P458"><text:tab/>this-&gt;neurons = ann.neurons;</text:p><text:p text:style-name="P458"><text:tab/>this-&gt;activities = ann.activities;</text:p><text:p text:style-name="P458"><text:tab/>this-&gt;weights = ann.weights;</text:p><text:p text:style-name="P458"><text:tab/>this-&gt;prediction = ann.prediction;</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458"><text:tab/>return( *this );</text:p><text:p text:style-name="P458">}</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458">ostream&amp; operator&lt;&lt;(ostream &amp;out, ANN &amp;ann) {</text:p><text:p text:style-name="P458"><text:tab/>out &lt;&lt; fixed;</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458"><text:tab/>out &lt;&lt; ann.neurons;</text:p><text:p text:style-name="P458"><text:soft-page-break/><text:tab/>out &lt;&lt; endl;</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458"><text:tab/>out &lt;&lt; ann.activities;</text:p><text:p text:style-name="P458"><text:tab/>out &lt;&lt; endl;</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458"><text:tab/>out &lt;&lt; ann.weights;</text:p><text:p text:style-name="P458"/><text:p text:style-name="P458"><text:tab/>return( out );</text:p><text:p text:style-name="P458">}</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5766_1486593966"/><text:s text:c="4"/>ANN.h<text:bookmark-end text:name="__RefHeading___Toc5766_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P459">/*******************************************************************************</text:p><text:p text:style-name="P459"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P459"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P459"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P459"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P459"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P459"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P459"><text:s/>* Copyright (C) 2008-2011 by Todor Balabanov <text:s/>( todor.balabanov@gmail.com ) <text:s text:c="2"/>*</text:p><text:p text:style-name="P459"><text:s/>* <text:s text:c="22"/>Iliyan Zankinski <text:s text:c="2"/>( iliyan_mf@abv.bg ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P459"><text:s/>* <text:s text:c="22"/>Momchil Anachkov <text:s text:c="2"/>( mZer0000@gmail.com ) <text:s text:c="12"/>*</text:p><text:p text:style-name="P459"><text:s/>* <text:s text:c="22"/>Daniel Chutrov <text:s text:c="4"/>( d.chutrov@gmail.com ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P459"><text:s/>* <text:s text:c="22"/>Nikola Simeonov <text:s text:c="3"/>( n.simeonow@gmail.com ) <text:s text:c="10"/>*</text:p><text:p text:style-name="P459"><text:s/>* <text:s text:c="22"/>Galq Cirkalova <text:s text:c="4"/>( galq_cirkalova@abv.bg ) <text:s text:c="9"/>*</text:p><text:p text:style-name="P459"><text:s/>* <text:s text:c="22"/>Ivan Grozev <text:s text:c="7"/>( ivan.iliev.grozev@gmail.com ) <text:s text:c="3"/>*</text:p><text:p text:style-name="P459"><text:s/>* <text:s text:c="22"/>Elisaveta Hristova ( elisaveta.s.hristova@gmail.com ) *</text:p><text:p text:style-name="P459"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P459"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P459"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P459"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P459"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P459"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P459"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P459"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P459"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P459"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P459"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P459"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P459"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P459"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P459"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P459"/><text:p text:style-name="P459">#ifndef ANN_H</text:p><text:p text:style-name="P459">#define ANN_H</text:p><text:p text:style-name="P459"/><text:p text:style-name="P459">#include &lt;iostream&gt;</text:p><text:p text:style-name="P459"/><text:p text:style-name="P459">class Counter;</text:p><text:p text:style-name="P459">class TrainingSet;</text:p><text:p text:style-name="P459"/><text:p text:style-name="P459">#include &quot;NeuronsList.h&quot;</text:p><text:p text:style-name="P459">#include &quot;WeightsMatrix.h&quot;</text:p><text:p text:style-name="P459">#include &quot;TimePeriod.h&quot;</text:p><text:p text:style-name="P459">#include &quot;ActivitiesMatrix.h&quot;</text:p><text:p text:style-name="P459">#include &quot;ANNIO.h&quot;</text:p><text:p text:style-name="P459"/><text:p text:style-name="P459">/**</text:p><text:p text:style-name="P459"><text:s/>* Full-connected Artificial Neural Network.</text:p><text:p text:style-name="P459"><text:s/>*</text:p><text:p text:style-name="P459"><text:s/>* @author Todor Balabanov</text:p><text:p text:style-name="P459"><text:s/>*</text:p><text:p text:style-name="P459"><text:s/>* @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P459"><text:s/>*</text:p><text:p text:style-name="P459"><text:s/>* @date 19 Feb 2009</text:p><text:p text:style-name="P459"><text:s/>*/</text:p><text:p text:style-name="P459">class ANN {</text:p><text:p text:style-name="P459"/><text:p text:style-name="P459">public:</text:p><text:p text:style-name="P459"/><text:p text:style-name="P459"><text:tab/>/**</text:p><text:p text:style-name="P459"><text:tab/> * Learning rate of backpropagation.</text:p><text:p text:style-name="P459"><text:tab/> */</text:p><text:p text:style-name="P459"><text:tab/>static const double LEARNING_RATE;</text:p><text:p text:style-name="P459"/><text:p text:style-name="P459">private:</text:p><text:p text:style-name="P459"/><text:p text:style-name="P459"><text:tab/>/**</text:p><text:p text:style-name="P459"><text:tab/> * Just a pinter to real array.</text:p><text:p text:style-name="P459"><text:tab/> */</text:p><text:p text:style-name="P459"><text:tab/>NeuronsList neurons;</text:p><text:p text:style-name="P459"/><text:p text:style-name="P459"><text:tab/>/**</text:p><text:p text:style-name="P459"><text:tab/> * Topology maxtrix.</text:p><text:p text:style-name="P459"><text:tab/> */</text:p><text:p text:style-name="P459"><text:tab/>ActivitiesMatrix activities;</text:p><text:p text:style-name="P459"/><text:p text:style-name="P459"><text:tab/>/**</text:p><text:p text:style-name="P459"><text:tab/> * Weights 2D matrix.</text:p><text:p text:style-name="P459"><text:tab/> */</text:p><text:p text:style-name="P459"><text:tab/>WeightsMatrix weights;</text:p><text:p text:style-name="P459"/><text:p text:style-name="P459"><text:tab/>/**</text:p><text:p text:style-name="P459"><text:tab/> * Link to counters object.</text:p><text:p text:style-name="P459"><text:tab/> */</text:p><text:p text:style-name="P459"><text:tab/>Counter *counters;</text:p><text:p text:style-name="P459"/><text:p text:style-name="P459"><text:tab/>/**</text:p><text:p text:style-name="P459"><text:tab/> * Link to real training set object.</text:p><text:p text:style-name="P459"><text:tab/> */</text:p><text:p text:style-name="P459"><text:tab/>TrainingSet *ts;</text:p><text:p text:style-name="P459"/><text:p text:style-name="P459"><text:tab/>/**</text:p><text:p text:style-name="P459"><text:tab/> * Input history bars interval.</text:p><text:p text:style-name="P459"><text:tab/> */</text:p><text:p text:style-name="P459"><text:tab/>int learn;</text:p><text:p text:style-name="P459"/><text:p text:style-name="P459"><text:tab/>/**</text:p><text:p text:style-name="P459"><text:tab/> * Prediction bars interval.</text:p><text:p text:style-name="P459"><text:tab/> */</text:p><text:p text:style-name="P459"><text:tab/>int bars;</text:p><text:p text:style-name="P459"/><text:p text:style-name="P459"><text:tab/>/**</text:p><text:p text:style-name="P459"><text:tab/> * Chart period value.</text:p><text:p text:style-name="P459"><text:tab/> */</text:p><text:p text:style-name="P459"><text:tab/>TimePeriod period;</text:p><text:p text:style-name="P459"/><text:p text:style-name="P459"><text:tab/>/**</text:p><text:p text:style-name="P459"><text:tab/> * Prediction of the best chromosome.</text:p><text:p text:style-name="P459"><text:soft-page-break/><text:tab/> */</text:p><text:p text:style-name="P459"><text:tab/>double prediction;</text:p><text:p text:style-name="P459"/><text:p text:style-name="P459">private:</text:p><text:p text:style-name="P459"/><text:p text:style-name="P459"><text:tab/>/**</text:p><text:p text:style-name="P459"><text:tab/> * Help function used by constructors to create internal object structure.</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @param neuronsAmount Number of neurons to be used.</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @date 23 Apr 2009</text:p><text:p text:style-name="P459"><text:tab/> */</text:p><text:p text:style-name="P459"><text:tab/>void create(int neuronsAmount);</text:p><text:p text:style-name="P459"/><text:p text:style-name="P459">public:</text:p><text:p text:style-name="P459"/><text:p text:style-name="P459"><text:tab/>/**</text:p><text:p text:style-name="P459"><text:tab/> * Class constructor. Memory allocation and internal variables initialization.</text:p><text:p text:style-name="P459"><text:tab/> * Constructor is used to create artificial neural network for using.</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @date 20 Oct 2011</text:p><text:p text:style-name="P459"><text:tab/> */</text:p><text:p text:style-name="P459"><text:tab/>ANN();</text:p><text:p text:style-name="P459"/><text:p text:style-name="P459"><text:tab/>/**</text:p><text:p text:style-name="P459"><text:tab/> * Class constructor. Memory allocation and internal variables initialization.</text:p><text:p text:style-name="P459"><text:tab/> * Constructor is used to create artificial neural network for using.</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @param ann Instance to be copied.</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @date 22 Oct 2011</text:p><text:p text:style-name="P459"><text:tab/> */</text:p><text:p text:style-name="P459"><text:tab/>ANN(const ANN &amp;ann);</text:p><text:p text:style-name="P459"/><text:p text:style-name="P459"><text:tab/>/**</text:p><text:p text:style-name="P459"><text:tab/> * Class constructor. Memory allocation and internal variables initialization.</text:p><text:p text:style-name="P459"><text:tab/> * Constructor is used to create artificial neural network for using.</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @param counters Link to real counters object.</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @param neuronsAmount How many neurons network has including bias neuron.</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @param learn Input training history bars interval.</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @param bars Prediction bars interval.</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @param period Prediction period.</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @date 26 Feb 2009</text:p><text:p text:style-name="P459"><text:tab/> */</text:p><text:p text:style-name="P459"><text:tab/>ANN(Counter *counters, int neuronsAmount, int learn, int bars, TimePeriod period);</text:p><text:p text:style-name="P459"/><text:p text:style-name="P459"><text:tab/>/**</text:p><text:p text:style-name="P459"><text:tab/> * Class constructor. Memory allocation and internal variables initialization.</text:p><text:p text:style-name="P459"><text:tab/> * Constructor is used to create artificial neural network for training.</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @param counters Link to real counters object.</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @param ts Link to real training set.</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @param neuronsAmount How many neurons network has including bias neuron.</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @param learn Input training history bars interval.</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @param bars Prediction bars interval.</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @param period Prediction period.</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @date 22 Apr 2009</text:p><text:p text:style-name="P459"><text:tab/> */</text:p><text:p text:style-name="P459"><text:tab/>ANN(Counter *counters, TrainingSet *ts, int neuronsAmount, int learn, int bars, TimePeriod period);</text:p><text:p text:style-name="P459"/><text:p text:style-name="P459"><text:tab/>/**</text:p><text:p text:style-name="P459"><text:tab/> * Neurons list getter.</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @return Neurons list reference.</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @date 19 Aug 2009</text:p><text:p text:style-name="P459"><text:tab/> */</text:p><text:p text:style-name="P459"><text:tab/>NeuronsList&amp; getNeurons();</text:p><text:p text:style-name="P459"/><text:p text:style-name="P459"><text:tab/>/**</text:p><text:p text:style-name="P459"><text:tab/> * Neurons list setter.</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @param neurons Neurons list.</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @author Iliyan Zankinski</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @email iliyan_mf@abv.bg</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @date 31 Jul 2009</text:p><text:p text:style-name="P459"><text:tab/> */</text:p><text:p text:style-name="P459"><text:tab/>void setNeurons(NeuronsList &amp;neurons);</text:p><text:p text:style-name="P459"/><text:p text:style-name="P459"><text:tab/>/**</text:p><text:p text:style-name="P459"><text:tab/> * Weights matrix getter.</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @return Weights matrix reference.</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:soft-page-break/><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @date 19 Aug 2009</text:p><text:p text:style-name="P459"><text:tab/> */</text:p><text:p text:style-name="P459"><text:tab/>WeightsMatrix&amp; getWeights();</text:p><text:p text:style-name="P459"/><text:p text:style-name="P459"><text:tab/>/**</text:p><text:p text:style-name="P459"><text:tab/> * Weights matrix setter.</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @param weights Weights matrix.</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @date 26 Feb 2009</text:p><text:p text:style-name="P459"><text:tab/> */</text:p><text:p text:style-name="P459"><text:tab/>void setWeights(WeightsMatrix &amp;weights);</text:p><text:p text:style-name="P459"/><text:p text:style-name="P459"><text:tab/>/**</text:p><text:p text:style-name="P459"><text:tab/> * Activities matrix getter.</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @return Activities matrix reference.</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @date 19 Aug 2009</text:p><text:p text:style-name="P459"><text:tab/> */</text:p><text:p text:style-name="P459"><text:tab/>ActivitiesMatrix&amp; getActivities();</text:p><text:p text:style-name="P459"/><text:p text:style-name="P459"><text:tab/>/**</text:p><text:p text:style-name="P459"><text:tab/> * Activities matrix setter.</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @param activities Activities matrix.</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @date 26 Feb 2009</text:p><text:p text:style-name="P459"><text:tab/> */</text:p><text:p text:style-name="P459"><text:tab/>void setActivities(ActivitiesMatrix &amp;activities);</text:p><text:p text:style-name="P459"/><text:p text:style-name="P459"><text:tab/>/**</text:p><text:p text:style-name="P459"><text:tab/> * Activity value getter.</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @param int x Column index.</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @param int y Row index.</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @return Activity value.</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @date 14 Mar 2009</text:p><text:p text:style-name="P459"><text:tab/> */</text:p><text:p text:style-name="P459"><text:tab/>double getActivity(int x, int y);</text:p><text:p text:style-name="P459"/><text:p text:style-name="P459"><text:tab/>/**</text:p><text:p text:style-name="P459"><text:tab/> * Activity value setter.</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @param int x Column index.</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @param int y Row index.</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @param value Activity value.</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @date 14 Mar 2009</text:p><text:p text:style-name="P459"><text:tab/> */</text:p><text:p text:style-name="P459"><text:tab/>void setActivity(int x, int y, double value);</text:p><text:p text:style-name="P459"/><text:p text:style-name="P459"><text:tab/>/**</text:p><text:p text:style-name="P459"><text:tab/> * Set all weights activities to minimum.</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @date 16 Jul 2015</text:p><text:p text:style-name="P459"><text:tab/> */</text:p><text:p text:style-name="P459"><text:tab/>void setAllInactive();</text:p><text:p text:style-name="P459"/><text:p text:style-name="P459"><text:tab/>/**</text:p><text:p text:style-name="P459"><text:tab/> * Set all weights activities to maximum.</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @date 14 Mar 2009</text:p><text:p text:style-name="P459"><text:tab/> */</text:p><text:p text:style-name="P459"><text:tab/>void setAllActive();</text:p><text:p text:style-name="P459"/><text:p text:style-name="P459"><text:tab/>/**</text:p><text:p text:style-name="P459"><text:tab/> * Training set pointer setter.</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @param ts Training set pointer.</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @author Iliyan Zankinski</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @email iliyan_mf@abv.bg</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @date 31 Jul 2009</text:p><text:p text:style-name="P459"><text:tab/> */</text:p><text:p text:style-name="P459"><text:tab/>void setTrainingSetPointer(TrainingSet *ts);</text:p><text:p text:style-name="P459"/><text:p text:style-name="P459"><text:tab/>/**</text:p><text:p text:style-name="P459"><text:tab/> * Prediction value getter.</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @return Prediction value.</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @date 29 Apr 2009</text:p><text:p text:style-name="P459"><text:tab/> */</text:p><text:p text:style-name="P459"><text:soft-page-break/><text:tab/>double getPrediction() const;</text:p><text:p text:style-name="P459"/><text:p text:style-name="P459"><text:tab/>/**</text:p><text:p text:style-name="P459"><text:tab/> * Setup first neurons in internal array to be input.</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @param size Number of neurons to be used.</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @date 27 Oct 2011</text:p><text:p text:style-name="P459"><text:tab/> */</text:p><text:p text:style-name="P459"><text:tab/>void setupInput(int size);</text:p><text:p text:style-name="P459"/><text:p text:style-name="P459"><text:tab/>/**</text:p><text:p text:style-name="P459"><text:tab/> * Setup last neurons in internal array to be output.</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @param size Number of neurons to be used.</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @date 27 Oct 2011</text:p><text:p text:style-name="P459"><text:tab/> */</text:p><text:p text:style-name="P459"><text:tab/>void setupOutput(int size);</text:p><text:p text:style-name="P459"/><text:p text:style-name="P459"><text:tab/>/**</text:p><text:p text:style-name="P459"><text:tab/> * Setup three layers topology.</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @date 16 Jul 2015</text:p><text:p text:style-name="P459"><text:tab/> */</text:p><text:p text:style-name="P459"><text:tab/>void setupThreeLayers();</text:p><text:p text:style-name="P459"/><text:p text:style-name="P459"><text:tab/>/**</text:p><text:p text:style-name="P459"><text:tab/> * Load input vector inside the network.</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @param input Input vector.</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @date 26 Feb 2009</text:p><text:p text:style-name="P459"><text:tab/> */</text:p><text:p text:style-name="P459"><text:tab/>void loadInput(ANNIO &amp;input);</text:p><text:p text:style-name="P459"/><text:p text:style-name="P459"><text:tab/>/**</text:p><text:p text:style-name="P459"><text:tab/> * Forward pass of network state change. All neurons get new values.</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @date 26 Feb 2009</text:p><text:p text:style-name="P459"><text:tab/> */</text:p><text:p text:style-name="P459"><text:tab/>void update();</text:p><text:p text:style-name="P459"/><text:p text:style-name="P459"><text:tab/>/**</text:p><text:p text:style-name="P459"><text:tab/> * Store output of the network into output array.</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @param output Output vector.</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @date 26 Feb 2009</text:p><text:p text:style-name="P459"><text:tab/> */</text:p><text:p text:style-name="P459"><text:tab/>void storeOutput(ANNIO &amp;output);</text:p><text:p text:style-name="P459"/><text:p text:style-name="P459"><text:tab/>/**</text:p><text:p text:style-name="P459"><text:tab/> * Calculate network output error.</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @param expected Array with expected output values.</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @param predicted Array with predicted output values.</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @return Euclidian distance between expected array and output array.</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @author Rumyana Petkova</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @email r_u_m_i_e_p@abv.bg</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @date 15 Mar 2009</text:p><text:p text:style-name="P459"><text:tab/> */</text:p><text:p text:style-name="P459"><text:tab/>double error(ANNIO &amp;expected, ANNIO &amp;predicted);</text:p><text:p text:style-name="P459"/><text:p text:style-name="P459"><text:tab/>/**</text:p><text:p text:style-name="P459"><text:tab/> * Calculate average net error for all training examples.</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @return Average net error for all trainign examples.</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @author Iliyan Zankinski</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @email iliyan_mf@abv.bg</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @date 01 Jun 2009</text:p><text:p text:style-name="P459"><text:tab/> */</text:p><text:p text:style-name="P459"><text:tab/>double totalError();</text:p><text:p text:style-name="P459"/><text:p text:style-name="P459"><text:tab/>/**</text:p><text:p text:style-name="P459"><text:tab/> * Feed forward ANN.</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @date 07 Sep 2009</text:p><text:p text:style-name="P459"><text:tab/> */</text:p><text:p text:style-name="P459"><text:tab/>void feedforward();</text:p><text:p text:style-name="P459"/><text:p text:style-name="P459"><text:tab/>/**</text:p><text:p text:style-name="P459"><text:tab/> * Back propagate ANN.</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @param expected Array with expected output values.</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P459"><text:soft-page-break/><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @date 07 Sep 2009</text:p><text:p text:style-name="P459"><text:tab/> */</text:p><text:p text:style-name="P459"><text:tab/>void backpropagation(ANNIO &amp;expected);</text:p><text:p text:style-name="P459"/><text:p text:style-name="P459"><text:tab/>/**</text:p><text:p text:style-name="P459"><text:tab/> * Gradient training of ANN.</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @date 07 Sep 2009</text:p><text:p text:style-name="P459"><text:tab/> */</text:p><text:p text:style-name="P459"><text:tab/>void gradient();</text:p><text:p text:style-name="P459"/><text:p text:style-name="P459"><text:tab/>/**</text:p><text:p text:style-name="P459"><text:tab/> * Predict future value.</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @author Iliyan Zankinski</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @email iliyan_mf@abv.bg</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @date 28 Jul 2009</text:p><text:p text:style-name="P459"><text:tab/> */</text:p><text:p text:style-name="P459"><text:tab/>void predict();</text:p><text:p text:style-name="P459"/><text:p text:style-name="P459"><text:tab/>/**</text:p><text:p text:style-name="P459"><text:tab/> * Class destructor. Memory release and variables deinitialization.</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @date 26 Feb 2009</text:p><text:p text:style-name="P459"><text:tab/> */</text:p><text:p text:style-name="P459"><text:tab/>virtual ~ANN();</text:p><text:p text:style-name="P459"/><text:p text:style-name="P459"><text:tab/>/**</text:p><text:p text:style-name="P459"><text:tab/> * Assignment operator overloading.</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @param ann Right side ANN operand.</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @return ANN instance reference.</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P459"><text:tab/> *</text:p><text:p text:style-name="P459"><text:tab/> * @date 22 Oct 2011</text:p><text:p text:style-name="P459"><text:tab/> */</text:p><text:p text:style-name="P459"><text:tab/>virtual ANN&amp; operator=(const ANN &amp;ann);</text:p><text:p text:style-name="P459"/><text:p text:style-name="P459"><text:tab/>friend std::ostream&amp; operator&lt;&lt;(std::ostream &amp;out, ANN &amp;ann);</text:p><text:p text:style-name="P459">};</text:p><text:p text:style-name="P459"/><text:p text:style-name="P459">/**</text:p><text:p text:style-name="P459"><text:s/>* Output operator redefinition.</text:p><text:p text:style-name="P459"><text:s/>*</text:p><text:p text:style-name="P459"><text:s/>* @param out Output stream.</text:p><text:p text:style-name="P459"><text:s/>*</text:p><text:p text:style-name="P459"><text:s/>* @param ann ANN instance.</text:p><text:p text:style-name="P459"><text:s/>*</text:p><text:p text:style-name="P459"><text:s/>* @return Output stream.</text:p><text:p text:style-name="P459"><text:s/>*</text:p><text:p text:style-name="P459"><text:s/>* @author Iliyan Zankinski</text:p><text:p text:style-name="P459"><text:s/>*</text:p><text:p text:style-name="P459"><text:s/>* @email iliyan_mf@abv.bg</text:p><text:p text:style-name="P459"><text:s/>*</text:p><text:p text:style-name="P459"><text:s/>* @date 23 Aug 2009</text:p><text:p text:style-name="P459"><text:s/>*/</text:p><text:p text:style-name="P459">std::ostream&amp; operator&lt;&lt;(std::ostream &amp;out, ANN &amp;ann);</text:p><text:p text:style-name="P459"/><text:p text:style-name="P459">#endif</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5768_1486593966"/><text:s text:c="4"/>ANNIO.cpp<text:bookmark-end text:name="__RefHeading___Toc5768_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P459">/*******************************************************************************</text:p><text:p text:style-name="P459"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P459"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P459"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P459"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P459"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P459"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P459"><text:s/>* Copyright (C) 2008-2011 by Todor Balabanov <text:s/>( todor.balabanov@gmail.com ) <text:s text:c="2"/>*</text:p><text:p text:style-name="P459"><text:s/>* <text:s text:c="22"/>Iliyan Zankinski <text:s text:c="2"/>( iliyan_mf@abv.bg ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P459"><text:s/>* <text:s text:c="22"/>Momchil Anachkov <text:s text:c="2"/>( mZer0000@gmail.com ) <text:s text:c="12"/>*</text:p><text:p text:style-name="P459"><text:s/>* <text:s text:c="22"/>Daniel Chutrov <text:s text:c="4"/>( d.chutrov@gmail.com ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P459"><text:s/>* <text:s text:c="22"/>Nikola Simeonov <text:s text:c="3"/>( n.simeonow@gmail.com ) <text:s text:c="10"/>*</text:p><text:p text:style-name="P459"><text:s/>* <text:s text:c="22"/>Galq Cirkalova <text:s text:c="4"/>( galq_cirkalova@abv.bg ) <text:s text:c="9"/>*</text:p><text:p text:style-name="P459"><text:s/>* <text:s text:c="22"/>Ivan Grozev <text:s text:c="7"/>( ivan.iliev.grozev@gmail.com ) <text:s text:c="3"/>*</text:p><text:p text:style-name="P459"><text:s/>* <text:s text:c="22"/>Elisaveta Hristova ( elisaveta.s.hristova@gmail.com ) *</text:p><text:p text:style-name="P459"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P459"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P459"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P459"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P459"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P459"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P459"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P459"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P459"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P459"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P459"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P459"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P459"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P459"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P459"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P459"/><text:p text:style-name="P459">#include &quot;ANNIO.h&quot;</text:p><text:p text:style-name="P459"/><text:p text:style-name="P459">ANNIO::ANNIO() {</text:p><text:p text:style-name="P459"><text:tab/>values.clear();</text:p><text:p text:style-name="P459">}</text:p><text:p text:style-name="P459"/><text:p text:style-name="P459">ANNIO::ANNIO(int size) {</text:p><text:p text:style-name="P459"><text:tab/>values.clear();</text:p><text:p text:style-name="P459"><text:tab/>for(int i=0; i&lt;size; i++) {</text:p><text:p text:style-name="P459"><text:tab/><text:tab/>values.push_back( 0.0 );</text:p><text:p text:style-name="P459"><text:tab/>}</text:p><text:p text:style-name="P459"><text:soft-page-break/>}</text:p><text:p text:style-name="P459"/><text:p text:style-name="P459">ANNIO::ANNIO(const ANNIO &amp;io) {</text:p><text:p text:style-name="P459"><text:tab/>values = io.values;</text:p><text:p text:style-name="P459">}</text:p><text:p text:style-name="P459"/><text:p text:style-name="P459">int ANNIO::dimension() const {</text:p><text:p text:style-name="P459"><text:tab/>return( values.size() );</text:p><text:p text:style-name="P459">}</text:p><text:p text:style-name="P459"/><text:p text:style-name="P459">ANNIO::~ANNIO() {</text:p><text:p text:style-name="P459"><text:tab/>values.clear();</text:p><text:p text:style-name="P459">}</text:p><text:p text:style-name="P459"/><text:p text:style-name="P459">double ANNIO::operator[](int index) const {</text:p><text:p text:style-name="P459"><text:tab/>if (index&lt;0 || index&gt;=values.size()) {</text:p><text:p text:style-name="P459"><text:tab/><text:tab/>throw( &quot;ANNIO00202&quot; );</text:p><text:p text:style-name="P459"><text:tab/><text:tab/>return( 0.0 );</text:p><text:p text:style-name="P459"><text:tab/>}</text:p><text:p text:style-name="P459"/><text:p text:style-name="P459"><text:tab/>return( values[index] );</text:p><text:p text:style-name="P459">}</text:p><text:p text:style-name="P459"/><text:p text:style-name="P459">double&amp; ANNIO::operator[](int index) {</text:p><text:p text:style-name="P459"><text:tab/>if (index&lt;0 || index&gt;=values.size()) {</text:p><text:p text:style-name="P459"><text:tab/><text:tab/>throw( &quot;ANNIO00203&quot; );</text:p><text:p text:style-name="P459"><text:tab/>}</text:p><text:p text:style-name="P459"/><text:p text:style-name="P459"><text:tab/>return( values[index] );</text:p><text:p text:style-name="P459">}</text:p><text:p text:style-name="P459"/><text:p text:style-name="P459">ANNIO&amp; ANNIO::operator=(const ANNIO &amp;io) {</text:p><text:p text:style-name="P459"><text:tab/>values = io.values;</text:p><text:p text:style-name="P459"/><text:p text:style-name="P459"><text:tab/>return( *this );</text:p><text:p text:style-name="P459">}</text:p><text:p text:style-name="P459"/><text:p text:style-name="P459">std::ostream&amp; operator&lt;&lt;(std::ostream &amp;out, ANNIO &amp;io) {</text:p><text:p text:style-name="P459"><text:tab/>out &lt;&lt; io.values.size();</text:p><text:p text:style-name="P459"><text:tab/>out &lt;&lt; std::endl;</text:p><text:p text:style-name="P459"/><text:p text:style-name="P459"><text:tab/>for (std::vector&lt;double&gt;::const_iterator i=io.values.begin(); i!=io.values.end(); i++) {</text:p><text:p text:style-name="P459"><text:tab/><text:tab/>out &lt;&lt; *i;</text:p><text:p text:style-name="P459"><text:tab/><text:tab/>if ((i+1) != io.values.end()) {</text:p><text:p text:style-name="P459"><text:tab/><text:tab/><text:tab/>out &lt;&lt; &quot; &quot;;</text:p><text:p text:style-name="P459"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P459"><text:tab/>}</text:p><text:p text:style-name="P459"/><text:p text:style-name="P459"><text:tab/>return( out );</text:p><text:p text:style-name="P459">}</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5770_1486593966"/><text:s text:c="4"/>ANNIO.h<text:bookmark-end text:name="__RefHeading___Toc5770_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P460">/*******************************************************************************</text:p><text:p text:style-name="P460"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P460"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P460"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P460"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P460"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P460"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P460"><text:s/>* Copyright (C) 2008-2011 by Todor Balabanov <text:s/>( todor.balabanov@gmail.com ) <text:s text:c="2"/>*</text:p><text:p text:style-name="P460"><text:s/>* <text:s text:c="22"/>Iliyan Zankinski <text:s text:c="2"/>( iliyan_mf@abv.bg ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P460"><text:s/>* <text:s text:c="22"/>Momchil Anachkov <text:s text:c="2"/>( mZer0000@gmail.com ) <text:s text:c="12"/>*</text:p><text:p text:style-name="P460"><text:s/>* <text:s text:c="22"/>Daniel Chutrov <text:s text:c="4"/>( d.chutrov@gmail.com ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P460"><text:s/>* <text:s text:c="22"/>Nikola Simeonov <text:s text:c="3"/>( n.simeonow@gmail.com ) <text:s text:c="10"/>*</text:p><text:p text:style-name="P460"><text:s/>* <text:s text:c="22"/>Galq Cirkalova <text:s text:c="4"/>( galq_cirkalova@abv.bg ) <text:s text:c="9"/>*</text:p><text:p text:style-name="P460"><text:s/>* <text:s text:c="22"/>Ivan Grozev <text:s text:c="7"/>( ivan.iliev.grozev@gmail.com ) <text:s text:c="3"/>*</text:p><text:p text:style-name="P460"><text:s/>* <text:s text:c="22"/>Elisaveta Hristova ( elisaveta.s.hristova@gmail.com ) *</text:p><text:p text:style-name="P460"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P460"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P460"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P460"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P460"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P460"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P460"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P460"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P460"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P460"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P460"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P460"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P460"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P460"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P460"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P460"/><text:p text:style-name="P460">#ifndef ANN_IO_H</text:p><text:p text:style-name="P460">#define ANN_IO_H</text:p><text:p text:style-name="P460"/><text:p text:style-name="P460">#include &lt;vector&gt;</text:p><text:p text:style-name="P460">#include &lt;iostream&gt;</text:p><text:p text:style-name="P460"/><text:p text:style-name="P460">/**</text:p><text:p text:style-name="P460"><text:s/>* ANN input/ouput base class.</text:p><text:p text:style-name="P460"><text:s/>*</text:p><text:p text:style-name="P460"><text:s/>* @author Todor Balabanov</text:p><text:p text:style-name="P460"><text:s/>*</text:p><text:p text:style-name="P460"><text:s/>* @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P460"><text:s/>*</text:p><text:p text:style-name="P460"><text:s/>* @date 11 Aug 2011</text:p><text:p text:style-name="P460"><text:s/>*/</text:p><text:p text:style-name="P460">class ANNIO {</text:p><text:p text:style-name="P460"/><text:p text:style-name="P460">private:</text:p><text:p text:style-name="P460"/><text:p text:style-name="P460"><text:tab/>/**</text:p><text:p text:style-name="P460"><text:tab/> * Input/output values.</text:p><text:p text:style-name="P460"><text:tab/> */</text:p><text:p text:style-name="P460"><text:tab/>std::vector&lt;double&gt; values;</text:p><text:p text:style-name="P460"/><text:p text:style-name="P460">public:</text:p><text:p text:style-name="P460"/><text:p text:style-name="P460"><text:tab/>/**</text:p><text:p text:style-name="P460"><text:tab/> * Constructor without parameters.</text:p><text:p text:style-name="P460"><text:tab/> *</text:p><text:p text:style-name="P460"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P460"><text:tab/> *</text:p><text:p text:style-name="P460"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P460"><text:tab/> *</text:p><text:p text:style-name="P460"><text:tab/> * @date 11 Aug 2011</text:p><text:p text:style-name="P460"><text:tab/> */</text:p><text:p text:style-name="P460"><text:soft-page-break/><text:tab/>ANNIO();</text:p><text:p text:style-name="P460"/><text:p text:style-name="P460"><text:tab/>/**</text:p><text:p text:style-name="P460"><text:tab/> * Class constructor. Memory allocation and internal variables initializaton.</text:p><text:p text:style-name="P460"><text:tab/> *</text:p><text:p text:style-name="P460"><text:tab/> * @param size Size of the input.</text:p><text:p text:style-name="P460"><text:tab/> *</text:p><text:p text:style-name="P460"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P460"><text:tab/> *</text:p><text:p text:style-name="P460"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P460"><text:tab/> *</text:p><text:p text:style-name="P460"><text:tab/> * @date 11 Aug 2011</text:p><text:p text:style-name="P460"><text:tab/> */</text:p><text:p text:style-name="P460"><text:tab/>ANNIO(int size);</text:p><text:p text:style-name="P460"/><text:p text:style-name="P460"><text:tab/>/**</text:p><text:p text:style-name="P460"><text:tab/> * Copy constructor.</text:p><text:p text:style-name="P460"><text:tab/> *</text:p><text:p text:style-name="P460"><text:tab/> * @param io Instance to be copied.</text:p><text:p text:style-name="P460"><text:tab/> *</text:p><text:p text:style-name="P460"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P460"><text:tab/> *</text:p><text:p text:style-name="P460"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P460"><text:tab/> *</text:p><text:p text:style-name="P460"><text:tab/> * @date 11 Aug 2011</text:p><text:p text:style-name="P460"><text:tab/> */</text:p><text:p text:style-name="P460"><text:tab/>ANNIO(const ANNIO &amp;io);</text:p><text:p text:style-name="P460"/><text:p text:style-name="P460"/><text:p text:style-name="P460"><text:tab/>/**</text:p><text:p text:style-name="P460"><text:tab/> * Size of ANN input.</text:p><text:p text:style-name="P460"><text:tab/> *</text:p><text:p text:style-name="P460"><text:tab/> * @return Size of ANN input/ouput.</text:p><text:p text:style-name="P460"><text:tab/> *</text:p><text:p text:style-name="P460"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P460"><text:tab/> *</text:p><text:p text:style-name="P460"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P460"><text:tab/> *</text:p><text:p text:style-name="P460"><text:tab/> * @date 11 Aug 2011</text:p><text:p text:style-name="P460"><text:tab/> */</text:p><text:p text:style-name="P460"><text:tab/>int dimension() const;</text:p><text:p text:style-name="P460"/><text:p text:style-name="P460"/><text:p text:style-name="P460"><text:tab/>/**</text:p><text:p text:style-name="P460"><text:tab/> * Class destructor. Memory release and variables deinitialization.</text:p><text:p text:style-name="P460"><text:tab/> *</text:p><text:p text:style-name="P460"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P460"><text:tab/> *</text:p><text:p text:style-name="P460"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P460"><text:tab/> *</text:p><text:p text:style-name="P460"><text:tab/> * @date 11 Aug 2011</text:p><text:p text:style-name="P460"><text:tab/> */</text:p><text:p text:style-name="P460"><text:tab/>virtual ~ANNIO();</text:p><text:p text:style-name="P460"/><text:p text:style-name="P460"><text:tab/>/**</text:p><text:p text:style-name="P460"><text:tab/> * List elements access operator overloading.</text:p><text:p text:style-name="P460"><text:tab/> *</text:p><text:p text:style-name="P460"><text:tab/> * @param index Index of element.</text:p><text:p text:style-name="P460"><text:tab/> *</text:p><text:p text:style-name="P460"><text:tab/> * @return Constant element value.</text:p><text:p text:style-name="P460"><text:tab/> *</text:p><text:p text:style-name="P460"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P460"><text:tab/> *</text:p><text:p text:style-name="P460"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P460"><text:tab/> *</text:p><text:p text:style-name="P460"><text:tab/> * @date 11 Aug 2011</text:p><text:p text:style-name="P460"><text:tab/> */</text:p><text:p text:style-name="P460"><text:tab/>double operator[](int index) const;</text:p><text:p text:style-name="P460"/><text:p text:style-name="P460"><text:tab/>/**</text:p><text:p text:style-name="P460"><text:tab/> * List elements access operator overloading.</text:p><text:p text:style-name="P460"><text:tab/> *</text:p><text:p text:style-name="P460"><text:tab/> * @param index Index of element.</text:p><text:p text:style-name="P460"><text:tab/> *</text:p><text:p text:style-name="P460"><text:tab/> * @return Element reference value.</text:p><text:p text:style-name="P460"><text:tab/> *</text:p><text:p text:style-name="P460"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P460"><text:tab/> *</text:p><text:p text:style-name="P460"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P460"><text:tab/> *</text:p><text:p text:style-name="P460"><text:tab/> * @date 11 Aug 2011</text:p><text:p text:style-name="P460"><text:tab/> */</text:p><text:p text:style-name="P460"><text:tab/>double&amp; operator[](int index);</text:p><text:p text:style-name="P460"/><text:p text:style-name="P460"><text:tab/>/**</text:p><text:p text:style-name="P460"><text:tab/> * Assignment operator overloading.</text:p><text:p text:style-name="P460"><text:tab/> *</text:p><text:p text:style-name="P460"><text:tab/> * @param io Right side operand.</text:p><text:p text:style-name="P460"><text:tab/> *</text:p><text:p text:style-name="P460"><text:tab/> * @return Neurons list instance reference.</text:p><text:p text:style-name="P460"><text:tab/> *</text:p><text:p text:style-name="P460"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P460"><text:tab/> *</text:p><text:p text:style-name="P460"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P460"><text:tab/> *</text:p><text:p text:style-name="P460"><text:tab/> * @date 11 Aug 2011</text:p><text:p text:style-name="P460"><text:tab/> */</text:p><text:p text:style-name="P460"><text:tab/>virtual ANNIO&amp; operator=(const ANNIO &amp;io);</text:p><text:p text:style-name="P460"/><text:p text:style-name="P460"><text:tab/>friend std::ostream&amp; operator&lt;&lt;(std::ostream &amp;out, ANNIO &amp;io);</text:p><text:p text:style-name="P460">};</text:p><text:p text:style-name="P460"/><text:p text:style-name="P460">/**</text:p><text:p text:style-name="P460"><text:s/>* Output operator redefinition.</text:p><text:p text:style-name="P460"><text:s/>*</text:p><text:p text:style-name="P460"><text:s/>* @param out Output stream.</text:p><text:p text:style-name="P460"><text:s/>*</text:p><text:p text:style-name="P460"><text:s/>* @param io ANN input/ouput instance.</text:p><text:p text:style-name="P460"><text:s/>*</text:p><text:p text:style-name="P460"><text:s/>* @return Output stream.</text:p><text:p text:style-name="P460"><text:s/>*</text:p><text:p text:style-name="P460"><text:s/>* @author Todor Balabanov</text:p><text:p text:style-name="P460"><text:s/>*</text:p><text:p text:style-name="P460"><text:s/>* @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P460"><text:s/>*</text:p><text:p text:style-name="P460"><text:s/>* @date 11 Aug 2011</text:p><text:p text:style-name="P460"><text:s/>*/</text:p><text:p text:style-name="P460">std::ostream&amp; operator&lt;&lt;(std::ostream &amp;out, ANNIO &amp;io);</text:p><text:p text:style-name="P460"/><text:p text:style-name="P460">#endif</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5772_1486593966"/><text:soft-page-break/><text:s text:c="4"/>ANNInput.cpp<text:bookmark-end text:name="__RefHeading___Toc5772_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P461">/*******************************************************************************</text:p><text:p text:style-name="P461"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P461"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P461"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P461"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P461"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P461"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P461"><text:s/>* Copyright (C) 2008-2011 by Todor Balabanov <text:s/>( todor.balabanov@gmail.com ) <text:s text:c="2"/>*</text:p><text:p text:style-name="P461"><text:s/>* <text:s text:c="22"/>Iliyan Zankinski <text:s text:c="2"/>( iliyan_mf@abv.bg ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P461"><text:s/>* <text:s text:c="22"/>Momchil Anachkov <text:s text:c="2"/>( mZer0000@gmail.com ) <text:s text:c="12"/>*</text:p><text:p text:style-name="P461"><text:s/>* <text:s text:c="22"/>Daniel Chutrov <text:s text:c="4"/>( d.chutrov@gmail.com ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P461"><text:s/>* <text:s text:c="22"/>Nikola Simeonov <text:s text:c="3"/>( n.simeonow@gmail.com ) <text:s text:c="10"/>*</text:p><text:p text:style-name="P461"><text:s/>* <text:s text:c="22"/>Galq Cirkalova <text:s text:c="4"/>( galq_cirkalova@abv.bg ) <text:s text:c="9"/>*</text:p><text:p text:style-name="P461"><text:s/>* <text:s text:c="22"/>Ivan Grozev <text:s text:c="7"/>( ivan.iliev.grozev@gmail.com ) <text:s text:c="3"/>*</text:p><text:p text:style-name="P461"><text:s/>* <text:s text:c="22"/>Elisaveta Hristova ( elisaveta.s.hristova@gmail.com ) *</text:p><text:p text:style-name="P461"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P461"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P461"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P461"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P461"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P461"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P461"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P461"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P461"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P461"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P461"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P461"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P461"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P461"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P461"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P461"/><text:p text:style-name="P461">#include &quot;ANNInput.h&quot;</text:p><text:p text:style-name="P461"/><text:p text:style-name="P461">ANNInput::ANNInput() : ANNIO() {</text:p><text:p text:style-name="P461">}</text:p><text:p text:style-name="P461"/><text:p text:style-name="P461">ANNInput::ANNInput(int size) : ANNIO(size) {</text:p><text:p text:style-name="P461">}</text:p><text:p text:style-name="P461"/><text:p text:style-name="P461">ANNInput::ANNInput(const ANNInput &amp;input) : ANNIO(input) {</text:p><text:p text:style-name="P461">}</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5774_1486593966"/><text:s text:c="4"/>ANNInput.h<text:bookmark-end text:name="__RefHeading___Toc5774_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P462">/*******************************************************************************</text:p><text:p text:style-name="P462"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P462"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P462"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P462"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P462"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P462"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P462"><text:s/>* Copyright (C) 2008-2011 by Todor Balabanov <text:s/>( todor.balabanov@gmail.com ) <text:s text:c="2"/>*</text:p><text:p text:style-name="P462"><text:s/>* <text:s text:c="22"/>Iliyan Zankinski <text:s text:c="2"/>( iliyan_mf@abv.bg ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P462"><text:s/>* <text:s text:c="22"/>Momchil Anachkov <text:s text:c="2"/>( mZer0000@gmail.com ) <text:s text:c="12"/>*</text:p><text:p text:style-name="P462"><text:s/>* <text:s text:c="22"/>Daniel Chutrov <text:s text:c="4"/>( d.chutrov@gmail.com ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P462"><text:s/>* <text:s text:c="22"/>Nikola Simeonov <text:s text:c="3"/>( n.simeonow@gmail.com ) <text:s text:c="10"/>*</text:p><text:p text:style-name="P462"><text:s/>* <text:s text:c="22"/>Galq Cirkalova <text:s text:c="4"/>( galq_cirkalova@abv.bg ) <text:s text:c="9"/>*</text:p><text:p text:style-name="P462"><text:s/>* <text:s text:c="22"/>Ivan Grozev <text:s text:c="7"/>( ivan.iliev.grozev@gmail.com ) <text:s text:c="3"/>*</text:p><text:p text:style-name="P462"><text:s/>* <text:s text:c="22"/>Elisaveta Hristova ( elisaveta.s.hristova@gmail.com ) *</text:p><text:p text:style-name="P462"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P462"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P462"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P462"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P462"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P462"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P462"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P462"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P462"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P462"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P462"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P462"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P462"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P462"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P462"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P462"/><text:p text:style-name="P462">#ifndef ANN_INPUT_H</text:p><text:p text:style-name="P462">#define ANN_INPUT_H</text:p><text:p text:style-name="P462"/><text:p text:style-name="P462">#include &quot;ANNIO.h&quot;</text:p><text:p text:style-name="P462"/><text:p text:style-name="P462">/**</text:p><text:p text:style-name="P462"><text:s/>* ANN input class.</text:p><text:p text:style-name="P462"><text:s/>*</text:p><text:p text:style-name="P462"><text:s/>* @author Todor Balabanov</text:p><text:p text:style-name="P462"><text:s/>*</text:p><text:p text:style-name="P462"><text:s/>* @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P462"><text:s/>*</text:p><text:p text:style-name="P462"><text:s/>* @date 11 Aug 2011</text:p><text:p text:style-name="P462"><text:s/>*/</text:p><text:p text:style-name="P462">class ANNInput : public ANNIO {</text:p><text:p text:style-name="P462"/><text:p text:style-name="P462">public:</text:p><text:p text:style-name="P462"/><text:p text:style-name="P462"/><text:p text:style-name="P462"><text:tab/>/**</text:p><text:p text:style-name="P462"><text:tab/> * Constructor without parameters.</text:p><text:p text:style-name="P462"><text:tab/> *</text:p><text:p text:style-name="P462"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P462"><text:tab/> *</text:p><text:p text:style-name="P462"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P462"><text:tab/> *</text:p><text:p text:style-name="P462"><text:tab/> * @date 11 Aug 2011</text:p><text:p text:style-name="P462"><text:tab/> */</text:p><text:p text:style-name="P462"><text:tab/>ANNInput();</text:p><text:p text:style-name="P462"/><text:p text:style-name="P462"><text:tab/>/**</text:p><text:p text:style-name="P462"><text:tab/> * Class constructor. Memory allocation and internal variables initializaton.</text:p><text:p text:style-name="P462"><text:tab/> *</text:p><text:p text:style-name="P462"><text:tab/> * @param size Size of the output</text:p><text:p text:style-name="P462"><text:tab/> *</text:p><text:p text:style-name="P462"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P462"><text:tab/> *</text:p><text:p text:style-name="P462"><text:soft-page-break/><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P462"><text:tab/> *</text:p><text:p text:style-name="P462"><text:tab/> * @date 11 Aug 2011</text:p><text:p text:style-name="P462"><text:tab/> */</text:p><text:p text:style-name="P462"><text:tab/>ANNInput(int size);</text:p><text:p text:style-name="P462"/><text:p text:style-name="P462"><text:tab/>/**</text:p><text:p text:style-name="P462"><text:tab/> * Copy constructor.</text:p><text:p text:style-name="P462"><text:tab/> *</text:p><text:p text:style-name="P462"><text:tab/> * @param input Instance to be copied.</text:p><text:p text:style-name="P462"><text:tab/> *</text:p><text:p text:style-name="P462"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P462"><text:tab/> *</text:p><text:p text:style-name="P462"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P462"><text:tab/> *</text:p><text:p text:style-name="P462"><text:tab/> * @date 11 Aug 2011</text:p><text:p text:style-name="P462"><text:tab/> */</text:p><text:p text:style-name="P462"><text:tab/>ANNInput(const ANNInput &amp;input);</text:p><text:p text:style-name="P462"/><text:p text:style-name="P462">};</text:p><text:p text:style-name="P462"/><text:p text:style-name="P462">#endif</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5776_1486593966"/><text:s text:c="4"/>ANNOutput.cpp<text:bookmark-end text:name="__RefHeading___Toc5776_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P463">/*******************************************************************************</text:p><text:p text:style-name="P463"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P463"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P463"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P463"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P463"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P463"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P463"><text:s/>* Copyright (C) 2008-2011 by Todor Balabanov <text:s/>( todor.balabanov@gmail.com ) <text:s text:c="2"/>*</text:p><text:p text:style-name="P463"><text:s/>* <text:s text:c="22"/>Iliyan Zankinski <text:s text:c="2"/>( iliyan_mf@abv.bg ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P463"><text:s/>* <text:s text:c="22"/>Momchil Anachkov <text:s text:c="2"/>( mZer0000@gmail.com ) <text:s text:c="12"/>*</text:p><text:p text:style-name="P463"><text:s/>* <text:s text:c="22"/>Daniel Chutrov <text:s text:c="4"/>( d.chutrov@gmail.com ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P463"><text:s/>* <text:s text:c="22"/>Nikola Simeonov <text:s text:c="3"/>( n.simeonow@gmail.com ) <text:s text:c="10"/>*</text:p><text:p text:style-name="P463"><text:s/>* <text:s text:c="22"/>Galq Cirkalova <text:s text:c="4"/>( galq_cirkalova@abv.bg ) <text:s text:c="9"/>*</text:p><text:p text:style-name="P463"><text:s/>* <text:s text:c="22"/>Ivan Grozev <text:s text:c="7"/>( ivan.iliev.grozev@gmail.com ) <text:s text:c="3"/>*</text:p><text:p text:style-name="P463"><text:s/>* <text:s text:c="22"/>Elisaveta Hristova ( elisaveta.s.hristova@gmail.com ) *</text:p><text:p text:style-name="P463"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P463"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P463"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P463"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P463"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P463"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P463"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P463"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P463"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P463"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P463"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P463"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P463"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P463"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P463"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P463"/><text:p text:style-name="P463">#include &quot;ANNOutput.h&quot;</text:p><text:p text:style-name="P463"/><text:p text:style-name="P463">ANNOutput::ANNOutput() : ANNIO() {</text:p><text:p text:style-name="P463">}</text:p><text:p text:style-name="P463"/><text:p text:style-name="P463">ANNOutput::ANNOutput(int size) : ANNIO(size) {</text:p><text:p text:style-name="P463">}</text:p><text:p text:style-name="P463"/><text:p text:style-name="P463">ANNOutput::ANNOutput(const ANNOutput &amp;output) : ANNIO(output) {</text:p><text:p text:style-name="P463">}</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5778_1486593966"/><text:s text:c="4"/>ANNOutput.h<text:bookmark-end text:name="__RefHeading___Toc5778_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P464">/*******************************************************************************</text:p><text:p text:style-name="P464"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P464"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P464"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P464"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P464"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P464"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P464"><text:s/>* Copyright (C) 2008-2011 by Todor Balabanov <text:s/>( todor.balabanov@gmail.com ) <text:s text:c="2"/>*</text:p><text:p text:style-name="P464"><text:s/>* <text:s text:c="22"/>Iliyan Zankinski <text:s text:c="2"/>( iliyan_mf@abv.bg ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P464"><text:s/>* <text:s text:c="22"/>Momchil Anachkov <text:s text:c="2"/>( mZer0000@gmail.com ) <text:s text:c="12"/>*</text:p><text:p text:style-name="P464"><text:s/>* <text:s text:c="22"/>Daniel Chutrov <text:s text:c="4"/>( d.chutrov@gmail.com ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P464"><text:s/>* <text:s text:c="22"/>Nikola Simeonov <text:s text:c="3"/>( n.simeonow@gmail.com ) <text:s text:c="10"/>*</text:p><text:p text:style-name="P464"><text:s/>* <text:s text:c="22"/>Galq Cirkalova <text:s text:c="4"/>( galq_cirkalova@abv.bg ) <text:s text:c="9"/>*</text:p><text:p text:style-name="P464"><text:s/>* <text:s text:c="22"/>Ivan Grozev <text:s text:c="7"/>( ivan.iliev.grozev@gmail.com ) <text:s text:c="3"/>*</text:p><text:p text:style-name="P464"><text:s/>* <text:s text:c="22"/>Elisaveta Hristova ( elisaveta.s.hristova@gmail.com ) *</text:p><text:p text:style-name="P464"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P464"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P464"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P464"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P464"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P464"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P464"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P464"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P464"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P464"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P464"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P464"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P464"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P464"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P464"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P464"/><text:p text:style-name="P464">#ifndef ANN_OUTPUT_H</text:p><text:p text:style-name="P464">#define ANN_OUTPUT_H</text:p><text:p text:style-name="P464"/><text:p text:style-name="P464">#include &quot;ANNIO.h&quot;</text:p><text:p text:style-name="P464"/><text:p text:style-name="P464">/**</text:p><text:p text:style-name="P464"><text:s/>* ANN output class.</text:p><text:p text:style-name="P464"><text:s/>*</text:p><text:p text:style-name="P464"><text:s/>* @author Todor Balabanov</text:p><text:p text:style-name="P464"><text:s/>*</text:p><text:p text:style-name="P464"><text:s/>* @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P464"><text:s/>*</text:p><text:p text:style-name="P464"><text:soft-page-break/><text:s/>* @date 11 Aug 2011</text:p><text:p text:style-name="P464"><text:s/>*/</text:p><text:p text:style-name="P464">class ANNOutput : public ANNIO {</text:p><text:p text:style-name="P464"/><text:p text:style-name="P464">public:</text:p><text:p text:style-name="P464"/><text:p text:style-name="P464"><text:tab/>/**</text:p><text:p text:style-name="P464"><text:tab/> * Constructor without parameters.</text:p><text:p text:style-name="P464"><text:tab/> *</text:p><text:p text:style-name="P464"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P464"><text:tab/> *</text:p><text:p text:style-name="P464"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P464"><text:tab/> *</text:p><text:p text:style-name="P464"><text:tab/> * @date 11 Aug 2011</text:p><text:p text:style-name="P464"><text:tab/> */</text:p><text:p text:style-name="P464"><text:tab/>ANNOutput();</text:p><text:p text:style-name="P464"/><text:p text:style-name="P464"><text:tab/>/**</text:p><text:p text:style-name="P464"><text:tab/> * Class constructor. Memory allocation and internal variables initializaton.</text:p><text:p text:style-name="P464"><text:tab/> *</text:p><text:p text:style-name="P464"><text:tab/> * @param size Size of the input.</text:p><text:p text:style-name="P464"><text:tab/> *</text:p><text:p text:style-name="P464"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P464"><text:tab/> *</text:p><text:p text:style-name="P464"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P464"><text:tab/> *</text:p><text:p text:style-name="P464"><text:tab/> * @date 11 Aug 2011</text:p><text:p text:style-name="P464"><text:tab/> */</text:p><text:p text:style-name="P464"><text:tab/>ANNOutput(int size);</text:p><text:p text:style-name="P464"/><text:p text:style-name="P464"><text:tab/>/**</text:p><text:p text:style-name="P464"><text:tab/> * Copy constructor.</text:p><text:p text:style-name="P464"><text:tab/> *</text:p><text:p text:style-name="P464"><text:tab/> * @param output Instance to be copied.</text:p><text:p text:style-name="P464"><text:tab/> *</text:p><text:p text:style-name="P464"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P464"><text:tab/> *</text:p><text:p text:style-name="P464"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P464"><text:tab/> *</text:p><text:p text:style-name="P464"><text:tab/> * @date 11 Aug 2011</text:p><text:p text:style-name="P464"><text:tab/> */</text:p><text:p text:style-name="P464"><text:tab/>ANNOutput(const ANNOutput &amp;output);</text:p><text:p text:style-name="P464">};</text:p><text:p text:style-name="P464"/><text:p text:style-name="P464">#endif</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5780_1486593966"/><text:s text:c="4"/>ActivitiesMatrix.cpp<text:bookmark-end text:name="__RefHeading___Toc5780_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P464">/*******************************************************************************</text:p><text:p text:style-name="P464"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P464"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P464"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P464"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P464"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P464"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P464"><text:s/>* Copyright (C) 2008-2011 by Todor Balabanov <text:s/>( todor.balabanov@gmail.com ) <text:s text:c="2"/>*</text:p><text:p text:style-name="P464"><text:s/>* <text:s text:c="22"/>Iliyan Zankinski <text:s text:c="2"/>( iliyan_mf@abv.bg ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P464"><text:s/>* <text:s text:c="22"/>Momchil Anachkov <text:s text:c="2"/>( mZer0000@gmail.com ) <text:s text:c="12"/>*</text:p><text:p text:style-name="P464"><text:s/>* <text:s text:c="22"/>Daniel Chutrov <text:s text:c="4"/>( d.chutrov@gmail.com ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P464"><text:s/>* <text:s text:c="22"/>Nikola Simeonov <text:s text:c="3"/>( n.simeonow@gmail.com ) <text:s text:c="10"/>*</text:p><text:p text:style-name="P464"><text:s/>* <text:s text:c="22"/>Galq Cirkalova <text:s text:c="4"/>( galq_cirkalova@abv.bg ) <text:s text:c="9"/>*</text:p><text:p text:style-name="P464"><text:s/>* <text:s text:c="22"/>Ivan Grozev <text:s text:c="7"/>( ivan.iliev.grozev@gmail.com ) <text:s text:c="3"/>*</text:p><text:p text:style-name="P464"><text:s/>* <text:s text:c="22"/>Elisaveta Hristova ( elisaveta.s.hristova@gmail.com ) *</text:p><text:p text:style-name="P464"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P464"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P464"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P464"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P464"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P464"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P464"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P464"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P464"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P464"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P464"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P464"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P464"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P464"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P464"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P464"/><text:p text:style-name="P464">#include &quot;ActivitiesMatrix.h&quot;</text:p><text:p text:style-name="P464"/><text:p text:style-name="P464">const double ActivitiesMatrix::MIN_ACTIVITY = 0.0;</text:p><text:p text:style-name="P464"/><text:p text:style-name="P464">const double ActivitiesMatrix::MAX_ACTIVITY = 1.0;</text:p><text:p text:style-name="P464"/><text:p text:style-name="P464">void ActivitiesMatrix::setAllToMax() {</text:p><text:p text:style-name="P464"><text:tab/>for (std::vector&lt; std::vector&lt;double&gt; &gt;::iterator i=values.begin(); i!=values.end(); i++) {</text:p><text:p text:style-name="P464"><text:tab/><text:tab/>for (std::vector&lt;double&gt;::iterator ij=(*i).begin(); ij!=(*i).end(); ij++) {</text:p><text:p text:style-name="P464"><text:tab/><text:tab/><text:tab/>*ij = MAX_ACTIVITY;</text:p><text:p text:style-name="P464"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P464"><text:tab/>}</text:p><text:p text:style-name="P464">}</text:p><text:p text:style-name="P464"/><text:p text:style-name="P464">ActivitiesMatrix::ActivitiesMatrix() : GraphMatrix() {</text:p><text:p text:style-name="P464"><text:tab/>setAllToMax();</text:p><text:p text:style-name="P464">}</text:p><text:p text:style-name="P464"/><text:p text:style-name="P464">ActivitiesMatrix::ActivitiesMatrix(int size) : GraphMatrix(size) {</text:p><text:p text:style-name="P464"><text:tab/>setAllToMax();</text:p><text:p text:style-name="P464">}</text:p><text:p text:style-name="P464"/><text:p text:style-name="P464">ActivitiesMatrix::ActivitiesMatrix(const ActivitiesMatrix &amp;activities) : GraphMatrix(activities) {</text:p><text:p text:style-name="P464"><text:tab/>setAllToMax();</text:p><text:p text:style-name="P464">}</text:p><text:p text:style-name="P464"/><text:p text:style-name="P464">void ActivitiesMatrix::normalize() {</text:p><text:p text:style-name="P464"><text:tab/>for (std::vector&lt; std::vector&lt;double&gt; &gt;::iterator i=values.begin(); i!=values.end(); i++) {</text:p><text:p text:style-name="P464"><text:tab/><text:tab/>for (std::vector&lt;double&gt;::iterator ij=(*i).begin(); ij!=(*i).end(); ij++) {</text:p><text:p text:style-name="P464"><text:tab/><text:tab/><text:tab/>if (*ij &lt; MIN_ACTIVITY) {</text:p><text:p text:style-name="P464"><text:tab/><text:tab/><text:tab/><text:tab/>*ij = MIN_ACTIVITY;</text:p><text:p text:style-name="P464"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P464"><text:tab/><text:tab/><text:tab/>if (*ij &gt; MAX_ACTIVITY) {</text:p><text:p text:style-name="P464"><text:tab/><text:tab/><text:tab/><text:tab/>*ij = MAX_ACTIVITY;</text:p><text:p text:style-name="P464"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P464"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P464"><text:tab/>}</text:p><text:p text:style-name="P464">}</text:p><text:p text:style-name="P464"/><text:p text:style-name="P464">ActivitiesMatrix&amp; ActivitiesMatrix::operator=(const ActivitiesMatrix &amp;activities) {</text:p><text:p text:style-name="P464"><text:soft-page-break/><text:tab/>//TODO Check how parent functions are called?</text:p><text:p text:style-name="P464"><text:tab/>GraphMatrix::operator=(activities);</text:p><text:p text:style-name="P464"><text:tab/>normalize();</text:p><text:p text:style-name="P464"/><text:p text:style-name="P464"><text:tab/>return( *this );</text:p><text:p text:style-name="P464">}</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5782_1486593966"/><text:s text:c="4"/>ActivitiesMatrix.h<text:bookmark-end text:name="__RefHeading___Toc5782_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P465">/*******************************************************************************</text:p><text:p text:style-name="P465"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P465"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P465"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P465"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P465"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P465"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P465"><text:s/>* Copyright (C) 2008-2011 by Todor Balabanov <text:s/>( todor.balabanov@gmail.com ) <text:s text:c="2"/>*</text:p><text:p text:style-name="P465"><text:s/>* <text:s text:c="22"/>Iliyan Zankinski <text:s text:c="2"/>( iliyan_mf@abv.bg ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P465"><text:s/>* <text:s text:c="22"/>Momchil Anachkov <text:s text:c="2"/>( mZer0000@gmail.com ) <text:s text:c="12"/>*</text:p><text:p text:style-name="P465"><text:s/>* <text:s text:c="22"/>Daniel Chutrov <text:s text:c="4"/>( d.chutrov@gmail.com ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P465"><text:s/>* <text:s text:c="22"/>Nikola Simeonov <text:s text:c="3"/>( n.simeonow@gmail.com ) <text:s text:c="10"/>*</text:p><text:p text:style-name="P465"><text:s/>* <text:s text:c="22"/>Galq Cirkalova <text:s text:c="4"/>( galq_cirkalova@abv.bg ) <text:s text:c="9"/>*</text:p><text:p text:style-name="P465"><text:s/>* <text:s text:c="22"/>Ivan Grozev <text:s text:c="7"/>( ivan.iliev.grozev@gmail.com ) <text:s text:c="3"/>*</text:p><text:p text:style-name="P465"><text:s/>* <text:s text:c="22"/>Elisaveta Hristova ( elisaveta.s.hristova@gmail.com ) *</text:p><text:p text:style-name="P465"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P465"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P465"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P465"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P465"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P465"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P465"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P465"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P465"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P465"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P465"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P465"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P465"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P465"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P465"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P465"/><text:p text:style-name="P465">#ifndef ACTIVITIES_MATRIX_H</text:p><text:p text:style-name="P465">#define ACTIVITIES_MATRIX_H</text:p><text:p text:style-name="P465"/><text:p text:style-name="P465">#include &quot;GraphMatrix.h&quot;</text:p><text:p text:style-name="P465"/><text:p text:style-name="P465">/**</text:p><text:p text:style-name="P465"><text:s/>* ANN typology graph adjacency matrix class.</text:p><text:p text:style-name="P465"><text:s/>*</text:p><text:p text:style-name="P465"><text:s/>* @author Todor Balabanov</text:p><text:p text:style-name="P465"><text:s/>*</text:p><text:p text:style-name="P465"><text:s/>* @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P465"><text:s/>*</text:p><text:p text:style-name="P465"><text:s/>* @date 03 Aug 2011</text:p><text:p text:style-name="P465"><text:s/>*/</text:p><text:p text:style-name="P465">class ActivitiesMatrix : public GraphMatrix {</text:p><text:p text:style-name="P465"/><text:p text:style-name="P465">public:</text:p><text:p text:style-name="P465"/><text:p text:style-name="P465"><text:tab/>/**</text:p><text:p text:style-name="P465"><text:tab/> * Minimum possible weight activity.</text:p><text:p text:style-name="P465"><text:tab/> */</text:p><text:p text:style-name="P465"><text:tab/>static const double MIN_ACTIVITY;</text:p><text:p text:style-name="P465"/><text:p text:style-name="P465"><text:tab/>/**</text:p><text:p text:style-name="P465"><text:tab/> * Maximum possible weight activity.</text:p><text:p text:style-name="P465"><text:tab/> */</text:p><text:p text:style-name="P465"><text:tab/>static const double MAX_ACTIVITY;</text:p><text:p text:style-name="P465"/><text:p text:style-name="P465">private:</text:p><text:p text:style-name="P465"/><text:p text:style-name="P465"><text:tab/>/**</text:p><text:p text:style-name="P465"><text:tab/> * Set all activities to the maximum valid value.</text:p><text:p text:style-name="P465"><text:tab/> *</text:p><text:p text:style-name="P465"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P465"><text:tab/> *</text:p><text:p text:style-name="P465"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P465"><text:tab/> *</text:p><text:p text:style-name="P465"><text:tab/> * @date 17 Jul 2015</text:p><text:p text:style-name="P465"><text:tab/> */</text:p><text:p text:style-name="P465"><text:tab/>void setAllToMax();</text:p><text:p text:style-name="P465"/><text:p text:style-name="P465">public:</text:p><text:p text:style-name="P465"/><text:p text:style-name="P465"><text:tab/>/**</text:p><text:p text:style-name="P465"><text:tab/> * Constructor without parameters.</text:p><text:p text:style-name="P465"><text:tab/> *</text:p><text:p text:style-name="P465"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P465"><text:tab/> *</text:p><text:p text:style-name="P465"><text:tab/> * @email todor.balabanov@gmail.comm</text:p><text:p text:style-name="P465"><text:tab/> *</text:p><text:p text:style-name="P465"><text:tab/> * @date 03 Aug 2011</text:p><text:p text:style-name="P465"><text:tab/> */</text:p><text:p text:style-name="P465"><text:tab/>ActivitiesMatrix();</text:p><text:p text:style-name="P465"/><text:p text:style-name="P465"><text:tab/>/**</text:p><text:p text:style-name="P465"><text:tab/> * Class constructor. Memory allocation and internal variables initializaton.</text:p><text:p text:style-name="P465"><text:tab/> *</text:p><text:p text:style-name="P465"><text:tab/> * @param size Size of the matrix.</text:p><text:p text:style-name="P465"><text:tab/> *</text:p><text:p text:style-name="P465"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P465"><text:tab/> *</text:p><text:p text:style-name="P465"><text:tab/> * @email todor.balabanov@gmail.comm</text:p><text:p text:style-name="P465"><text:tab/> *</text:p><text:p text:style-name="P465"><text:tab/> * @date 03 Aug 2011</text:p><text:p text:style-name="P465"><text:tab/> */</text:p><text:p text:style-name="P465"><text:tab/>ActivitiesMatrix(int size);</text:p><text:p text:style-name="P465"/><text:p text:style-name="P465"><text:tab/>/**</text:p><text:p text:style-name="P465"><text:tab/> * Copy constructor.</text:p><text:p text:style-name="P465"><text:tab/> *</text:p><text:p text:style-name="P465"><text:tab/> * @param graph Instance to be copied.</text:p><text:p text:style-name="P465"><text:tab/> *</text:p><text:p text:style-name="P465"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P465"><text:tab/> *</text:p><text:p text:style-name="P465"><text:tab/> * @email todor.balabanov@gmail.comm</text:p><text:p text:style-name="P465"><text:tab/> *</text:p><text:p text:style-name="P465"><text:tab/> * @date 03 Aug 2011</text:p><text:p text:style-name="P465"><text:tab/> */</text:p><text:p text:style-name="P465"><text:tab/>ActivitiesMatrix(const ActivitiesMatrix &amp;activities);</text:p><text:p text:style-name="P465"><text:soft-page-break/></text:p><text:p text:style-name="P465"><text:tab/>/**</text:p><text:p text:style-name="P465"><text:tab/> * Activities normalizatoin.</text:p><text:p text:style-name="P465"><text:tab/> *</text:p><text:p text:style-name="P465"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P465"><text:tab/> *</text:p><text:p text:style-name="P465"><text:tab/> * @email todor.balabanov@gmail.comm</text:p><text:p text:style-name="P465"><text:tab/> *</text:p><text:p text:style-name="P465"><text:tab/> * @date 03 Aug 2011</text:p><text:p text:style-name="P465"><text:tab/> */</text:p><text:p text:style-name="P465"><text:tab/>void normalize();</text:p><text:p text:style-name="P465"/><text:p text:style-name="P465"><text:tab/>/**</text:p><text:p text:style-name="P465"><text:tab/> * Assignment operator overloading.</text:p><text:p text:style-name="P465"><text:tab/> *</text:p><text:p text:style-name="P465"><text:tab/> * @param col Column.</text:p><text:p text:style-name="P465"><text:tab/> *</text:p><text:p text:style-name="P465"><text:tab/> * @param Row Row.</text:p><text:p text:style-name="P465"><text:tab/> *</text:p><text:p text:style-name="P465"><text:tab/> * @return Constant element value.</text:p><text:p text:style-name="P465"><text:tab/> *</text:p><text:p text:style-name="P465"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P465"><text:tab/> *</text:p><text:p text:style-name="P465"><text:tab/> * @email todor.balabanov@gmail.comm</text:p><text:p text:style-name="P465"><text:tab/> *</text:p><text:p text:style-name="P465"><text:tab/> * @date 03 Aug 2011</text:p><text:p text:style-name="P465"><text:tab/> */</text:p><text:p text:style-name="P465"><text:tab/>virtual ActivitiesMatrix&amp; operator=(const ActivitiesMatrix &amp;activities);</text:p><text:p text:style-name="P465">};</text:p><text:p text:style-name="P465"/><text:p text:style-name="P465">#endif</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5784_1486593966"/><text:s text:c="4"/>Chromosome.cpp<text:bookmark-end text:name="__RefHeading___Toc5784_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P466">/*******************************************************************************</text:p><text:p text:style-name="P466"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P466"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P466"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P466"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P466"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P466"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P466"><text:s/>* Copyright (C) 2008-2011 by Todor Balabanov <text:s/>( todor.balabanov@gmail.com ) <text:s text:c="2"/>*</text:p><text:p text:style-name="P466"><text:s/>* <text:s text:c="22"/>Iliyan Zankinski <text:s text:c="2"/>( iliyan_mf@abv.bg ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P466"><text:s/>* <text:s text:c="22"/>Momchil Anachkov <text:s text:c="2"/>( mZer0000@gmail.com ) <text:s text:c="12"/>*</text:p><text:p text:style-name="P466"><text:s/>* <text:s text:c="22"/>Daniel Chutrov <text:s text:c="4"/>( d.chutrov@gmail.com ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P466"><text:s/>* <text:s text:c="22"/>Nikola Simeonov <text:s text:c="3"/>( n.simeonow@gmail.com ) <text:s text:c="10"/>*</text:p><text:p text:style-name="P466"><text:s/>* <text:s text:c="22"/>Galq Cirkalova <text:s text:c="4"/>( galq_cirkalova@abv.bg ) <text:s text:c="9"/>*</text:p><text:p text:style-name="P466"><text:s/>* <text:s text:c="22"/>Ivan Grozev <text:s text:c="7"/>( ivan.iliev.grozev@gmail.com ) <text:s text:c="3"/>*</text:p><text:p text:style-name="P466"><text:s/>* <text:s text:c="22"/>Elisaveta Hristova ( elisaveta.s.hristova@gmail.com ) *</text:p><text:p text:style-name="P466"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P466"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P466"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P466"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P466"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P466"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P466"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P466"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P466"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P466"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P466"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P466"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P466"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P466"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P466"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P466"/><text:p text:style-name="P466">#include &quot;Chromosome.h&quot;</text:p><text:p text:style-name="P466"/><text:p text:style-name="P466">const double Chromosome::LESS_OPTIMAL_FITNESS_VALUE = RAND_MAX;</text:p><text:p text:style-name="P466"/><text:p text:style-name="P466">const double Chromosome::MIN_INIT_RANDOM = -1.0;</text:p><text:p text:style-name="P466"/><text:p text:style-name="P466">const double Chromosome::MAX_INIT_RANDOM = +1.0;</text:p><text:p text:style-name="P466"/><text:p text:style-name="P466">Chromosome::Chromosome() {</text:p><text:p text:style-name="P466"><text:tab/>fitness = LESS_OPTIMAL_FITNESS_VALUE;</text:p><text:p text:style-name="P466">}</text:p><text:p text:style-name="P466"/><text:p text:style-name="P466">Chromosome::Chromosome(WeightsMatrix &amp;weights, double value) {</text:p><text:p text:style-name="P466"><text:tab/>this-&gt;weights = weights;</text:p><text:p text:style-name="P466"><text:tab/>this-&gt;fitness = value;</text:p><text:p text:style-name="P466">}</text:p><text:p text:style-name="P466"/><text:p text:style-name="P466">Chromosome::Chromosome(const Chromosome &amp;chromosome) {</text:p><text:p text:style-name="P466"><text:tab/>weights = chromosome.weights;</text:p><text:p text:style-name="P466"><text:tab/>fitness = chromosome.fitness;</text:p><text:p text:style-name="P466">}</text:p><text:p text:style-name="P466"/><text:p text:style-name="P466">WeightsMatrix&amp; Chromosome::getWeights() {</text:p><text:p text:style-name="P466"><text:tab/>return( weights );</text:p><text:p text:style-name="P466">}</text:p><text:p text:style-name="P466"/><text:p text:style-name="P466">void Chromosome::setWeights(WeightsMatrix &amp;weights) {</text:p><text:p text:style-name="P466"><text:tab/>this-&gt;weights = weights;</text:p><text:p text:style-name="P466">}</text:p><text:p text:style-name="P466"/><text:p text:style-name="P466">double Chromosome::getFitness() const {</text:p><text:p text:style-name="P466"><text:tab/>return( fitness );</text:p><text:p text:style-name="P466">}</text:p><text:p text:style-name="P466"/><text:p text:style-name="P466">void Chromosome::setFitness(double value) {</text:p><text:p text:style-name="P466"><text:tab/>this-&gt;fitness = value;</text:p><text:p text:style-name="P466">}</text:p><text:p text:style-name="P466"/><text:p text:style-name="P466">void Chromosome::random() {</text:p><text:p text:style-name="P466"><text:tab/>/*</text:p><text:p text:style-name="P466"><text:tab/> * Initialize chromosome with random values.</text:p><text:p text:style-name="P466"><text:tab/> */</text:p><text:p text:style-name="P466"><text:tab/>for (int j=0; j&lt;weights.dimension(); j++) {</text:p><text:p text:style-name="P466"><text:tab/><text:tab/>for (int i=0; i&lt;weights.dimension(); i++) {</text:p><text:p text:style-name="P466"><text:tab/><text:tab/><text:tab/>weights(i,j) = MIN_INIT_RANDOM + (MAX_INIT_RANDOM-MIN_INIT_RANDOM) * ((double)rand() / (double)RAND_MAX);</text:p><text:p text:style-name="P466"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P466"><text:tab/>}</text:p><text:p text:style-name="P466"/><text:p text:style-name="P466"><text:tab/>fitness = rand();</text:p><text:p text:style-name="P466">}</text:p><text:p text:style-name="P466"/><text:p text:style-name="P466">Chromosome::~Chromosome() {</text:p><text:p text:style-name="P466">}</text:p><text:p text:style-name="P466"/><text:p text:style-name="P466"><text:soft-page-break/>Chromosome&amp; Chromosome::operator=(const Chromosome &amp;chromosome) {</text:p><text:p text:style-name="P466"><text:tab/>weights = chromosome.weights;</text:p><text:p text:style-name="P466"><text:tab/>fitness = chromosome.fitness;</text:p><text:p text:style-name="P466"/><text:p text:style-name="P466"><text:tab/>return( *this );</text:p><text:p text:style-name="P466">}</text:p><text:p text:style-name="P466"/><text:p text:style-name="P466">std::ostream&amp; operator&lt;&lt;(std::ostream &amp;out, Chromosome &amp;chromosome) {</text:p><text:p text:style-name="P466"><text:tab/>out &lt;&lt; chromosome.weights;</text:p><text:p text:style-name="P466"><text:tab/>out &lt;&lt; std::endl;</text:p><text:p text:style-name="P466"/><text:p text:style-name="P466"><text:tab/>out &lt;&lt; chromosome.fitness;</text:p><text:p text:style-name="P466"><text:tab/>out &lt;&lt; std::endl;</text:p><text:p text:style-name="P466"/><text:p text:style-name="P466"><text:tab/>return( out );</text:p><text:p text:style-name="P466">}</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5786_1486593966"/><text:s text:c="4"/>Chromosome.h<text:bookmark-end text:name="__RefHeading___Toc5786_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P467">/*******************************************************************************</text:p><text:p text:style-name="P467"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P467"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P467"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P467"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P467"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P467"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P467"><text:s/>* Copyright (C) 2008-2011 by Todor Balabanov <text:s/>( todor.balabanov@gmail.com ) <text:s text:c="2"/>*</text:p><text:p text:style-name="P467"><text:s/>* <text:s text:c="22"/>Iliyan Zankinski <text:s text:c="2"/>( iliyan_mf@abv.bg ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P467"><text:s/>* <text:s text:c="22"/>Momchil Anachkov <text:s text:c="2"/>( mZer0000@gmail.com ) <text:s text:c="12"/>*</text:p><text:p text:style-name="P467"><text:s/>* <text:s text:c="22"/>Daniel Chutrov <text:s text:c="4"/>( d.chutrov@gmail.com ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P467"><text:s/>* <text:s text:c="22"/>Nikola Simeonov <text:s text:c="3"/>( n.simeonow@gmail.com ) <text:s text:c="10"/>*</text:p><text:p text:style-name="P467"><text:s/>* <text:s text:c="22"/>Galq Cirkalova <text:s text:c="4"/>( galq_cirkalova@abv.bg ) <text:s text:c="9"/>*</text:p><text:p text:style-name="P467"><text:s/>* <text:s text:c="22"/>Ivan Grozev <text:s text:c="7"/>( ivan.iliev.grozev@gmail.com ) <text:s text:c="3"/>*</text:p><text:p text:style-name="P467"><text:s/>* <text:s text:c="22"/>Elisaveta Hristova ( elisaveta.s.hristova@gmail.com ) *</text:p><text:p text:style-name="P467"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P467"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P467"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P467"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P467"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P467"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P467"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P467"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P467"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P467"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P467"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P467"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P467"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P467"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P467"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P467"/><text:p text:style-name="P467">#ifndef CHROMOSOME_H</text:p><text:p text:style-name="P467">#define CHROMOSOME_H</text:p><text:p text:style-name="P467"/><text:p text:style-name="P467">#include &lt;cstdlib&gt;</text:p><text:p text:style-name="P467">#include &lt;iostream&gt;</text:p><text:p text:style-name="P467"/><text:p text:style-name="P467">#include &quot;WeightsMatrix.h&quot;</text:p><text:p text:style-name="P467"/><text:p text:style-name="P467">/**</text:p><text:p text:style-name="P467"><text:s/>* DE chromosome class.</text:p><text:p text:style-name="P467"><text:s/>*</text:p><text:p text:style-name="P467"><text:s/>* @author Todor Balabanov</text:p><text:p text:style-name="P467"><text:s/>*</text:p><text:p text:style-name="P467"><text:s/>* @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P467"><text:s/>*</text:p><text:p text:style-name="P467"><text:s/>* @date 05 Aug 2011</text:p><text:p text:style-name="P467"><text:s/>*/</text:p><text:p text:style-name="P467">class Chromosome {</text:p><text:p text:style-name="P467"/><text:p text:style-name="P467">public:</text:p><text:p text:style-name="P467"/><text:p text:style-name="P467"><text:tab/>/**</text:p><text:p text:style-name="P467"><text:tab/> * Less optimal fitness value constant.</text:p><text:p text:style-name="P467"><text:tab/> */</text:p><text:p text:style-name="P467"><text:tab/>static const double LESS_OPTIMAL_FITNESS_VALUE;</text:p><text:p text:style-name="P467"/><text:p text:style-name="P467"><text:tab/>/**</text:p><text:p text:style-name="P467"><text:tab/> * Minimuim random initializaton value for initial chromosome values.</text:p><text:p text:style-name="P467"><text:tab/> */</text:p><text:p text:style-name="P467"><text:tab/>static const double MIN_INIT_RANDOM;</text:p><text:p text:style-name="P467"/><text:p text:style-name="P467"><text:tab/>/**</text:p><text:p text:style-name="P467"><text:tab/> * Maximum random initializaton value for initial chromosome values.</text:p><text:p text:style-name="P467"><text:tab/> */</text:p><text:p text:style-name="P467"><text:tab/>static const double MAX_INIT_RANDOM;</text:p><text:p text:style-name="P467"/><text:p text:style-name="P467">private:</text:p><text:p text:style-name="P467"/><text:p text:style-name="P467"><text:tab/>/**</text:p><text:p text:style-name="P467"><text:tab/> * Each chromosome is matrix of weights.</text:p><text:p text:style-name="P467"><text:tab/> */</text:p><text:p text:style-name="P467"><text:tab/>WeightsMatrix weights;</text:p><text:p text:style-name="P467"/><text:p text:style-name="P467"><text:tab/>/**</text:p><text:p text:style-name="P467"><text:tab/> * Chromosome fitness value. Smaller output error is better fitness for the</text:p><text:p text:style-name="P467"><text:tab/> * chromosome (weights set).</text:p><text:p text:style-name="P467"><text:tab/> */</text:p><text:p text:style-name="P467"><text:tab/>double fitness;</text:p><text:p text:style-name="P467"/><text:p text:style-name="P467">public:</text:p><text:p text:style-name="P467"/><text:p text:style-name="P467"><text:tab/>/**</text:p><text:p text:style-name="P467"><text:tab/> * Constructor without parameters.</text:p><text:p text:style-name="P467"><text:tab/> *</text:p><text:p text:style-name="P467"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P467"><text:tab/> *</text:p><text:p text:style-name="P467"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P467"><text:tab/> *</text:p><text:p text:style-name="P467"><text:tab/> * @date 05 Aug 2011</text:p><text:p text:style-name="P467"><text:tab/> */</text:p><text:p text:style-name="P467"><text:tab/>Chromosome();</text:p><text:p text:style-name="P467"/><text:p text:style-name="P467"><text:tab/>/**</text:p><text:p text:style-name="P467"><text:tab/> * Class constructor. Memory allocation and internal variables initializaton.</text:p><text:p text:style-name="P467"><text:tab/> *</text:p><text:p text:style-name="P467"><text:tab/> * @param weights Set of weights.</text:p><text:p text:style-name="P467"><text:tab/> *</text:p><text:p text:style-name="P467"><text:tab/> * @param fintess Total ANN error as fitness value.</text:p><text:p text:style-name="P467"><text:tab/> *</text:p><text:p text:style-name="P467"><text:soft-page-break/><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P467"><text:tab/> *</text:p><text:p text:style-name="P467"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P467"><text:tab/> *</text:p><text:p text:style-name="P467"><text:tab/> * @date 05 Aug 2011</text:p><text:p text:style-name="P467"><text:tab/> */</text:p><text:p text:style-name="P467"><text:tab/>Chromosome(WeightsMatrix &amp;weights, double fintess);</text:p><text:p text:style-name="P467"/><text:p text:style-name="P467"><text:tab/>/**</text:p><text:p text:style-name="P467"><text:tab/> * Copy constructor.</text:p><text:p text:style-name="P467"><text:tab/> *</text:p><text:p text:style-name="P467"><text:tab/> * @param list Instance to be copied.</text:p><text:p text:style-name="P467"><text:tab/> *</text:p><text:p text:style-name="P467"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P467"><text:tab/> *</text:p><text:p text:style-name="P467"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P467"><text:tab/> *</text:p><text:p text:style-name="P467"><text:tab/> * @date 05 Aug 2011</text:p><text:p text:style-name="P467"><text:tab/> */</text:p><text:p text:style-name="P467"><text:tab/>Chromosome(const Chromosome &amp;chromosome);</text:p><text:p text:style-name="P467"/><text:p text:style-name="P467"><text:tab/>/**</text:p><text:p text:style-name="P467"><text:tab/> * Weights matrix getter.</text:p><text:p text:style-name="P467"><text:tab/> *</text:p><text:p text:style-name="P467"><text:tab/> * @return Weights matrix reference.</text:p><text:p text:style-name="P467"><text:tab/> *</text:p><text:p text:style-name="P467"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P467"><text:tab/> *</text:p><text:p text:style-name="P467"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P467"><text:tab/> *</text:p><text:p text:style-name="P467"><text:tab/> * @date 05 Aug 2011</text:p><text:p text:style-name="P467"><text:tab/> */</text:p><text:p text:style-name="P467"><text:tab/>WeightsMatrix&amp; getWeights();</text:p><text:p text:style-name="P467"/><text:p text:style-name="P467"><text:tab/>/**</text:p><text:p text:style-name="P467"><text:tab/> * Weights matrix setter.</text:p><text:p text:style-name="P467"><text:tab/> *</text:p><text:p text:style-name="P467"><text:tab/> * @param weights Weights matrix.</text:p><text:p text:style-name="P467"><text:tab/> *</text:p><text:p text:style-name="P467"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P467"><text:tab/> *</text:p><text:p text:style-name="P467"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P467"><text:tab/> *</text:p><text:p text:style-name="P467"><text:tab/> * @date 05 Aug 2011</text:p><text:p text:style-name="P467"><text:tab/> */</text:p><text:p text:style-name="P467"><text:tab/>void setWeights(WeightsMatrix &amp;weights);</text:p><text:p text:style-name="P467"/><text:p text:style-name="P467"><text:tab/>/**</text:p><text:p text:style-name="P467"><text:tab/> * Chromosome fintess value getter.</text:p><text:p text:style-name="P467"><text:tab/> *</text:p><text:p text:style-name="P467"><text:tab/> * @return Fitness value.</text:p><text:p text:style-name="P467"><text:tab/> *</text:p><text:p text:style-name="P467"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P467"><text:tab/> *</text:p><text:p text:style-name="P467"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P467"><text:tab/> *</text:p><text:p text:style-name="P467"><text:tab/> * @date 05 Aug 2011</text:p><text:p text:style-name="P467"><text:tab/> */</text:p><text:p text:style-name="P467"><text:tab/>double getFitness() const;</text:p><text:p text:style-name="P467"/><text:p text:style-name="P467"><text:tab/>/**</text:p><text:p text:style-name="P467"><text:tab/> * Chromosome fintess value setter.</text:p><text:p text:style-name="P467"><text:tab/> *</text:p><text:p text:style-name="P467"><text:tab/> * @param fitness Fitness value.</text:p><text:p text:style-name="P467"><text:tab/> *</text:p><text:p text:style-name="P467"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P467"><text:tab/> *</text:p><text:p text:style-name="P467"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P467"><text:tab/> *</text:p><text:p text:style-name="P467"><text:tab/> * @date 05 Aug 2011</text:p><text:p text:style-name="P467"><text:tab/> */</text:p><text:p text:style-name="P467"><text:tab/>void setFitness(double fitness);</text:p><text:p text:style-name="P467"/><text:p text:style-name="P467"><text:tab/>/**</text:p><text:p text:style-name="P467"><text:tab/> * Initialize chromosome with random values.</text:p><text:p text:style-name="P467"><text:tab/> *</text:p><text:p text:style-name="P467"><text:tab/> * @param index Chromosome index in population array.</text:p><text:p text:style-name="P467"><text:tab/> *</text:p><text:p text:style-name="P467"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P467"><text:tab/> *</text:p><text:p text:style-name="P467"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P467"><text:tab/> *</text:p><text:p text:style-name="P467"><text:tab/> * @date 25 Aug 2009</text:p><text:p text:style-name="P467"><text:tab/> */</text:p><text:p text:style-name="P467"><text:tab/>void random();</text:p><text:p text:style-name="P467"/><text:p text:style-name="P467"><text:tab/>/**</text:p><text:p text:style-name="P467"><text:tab/> * Class destructor.</text:p><text:p text:style-name="P467"><text:tab/> *</text:p><text:p text:style-name="P467"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P467"><text:tab/> *</text:p><text:p text:style-name="P467"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P467"><text:tab/> *</text:p><text:p text:style-name="P467"><text:tab/> * @date 22 Oct 2011</text:p><text:p text:style-name="P467"><text:tab/> */</text:p><text:p text:style-name="P467"><text:tab/>virtual ~Chromosome();</text:p><text:p text:style-name="P467"/><text:p text:style-name="P467"><text:tab/>/**</text:p><text:p text:style-name="P467"><text:tab/> * Assignment operator overloading.</text:p><text:p text:style-name="P467"><text:tab/> *</text:p><text:p text:style-name="P467"><text:tab/> * @param chromosome Right side operand.</text:p><text:p text:style-name="P467"><text:tab/> *</text:p><text:p text:style-name="P467"><text:tab/> * @return Neurons list instance reference.</text:p><text:p text:style-name="P467"><text:tab/> *</text:p><text:p text:style-name="P467"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P467"><text:tab/> *</text:p><text:p text:style-name="P467"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P467"><text:tab/> *</text:p><text:p text:style-name="P467"><text:tab/> * @date 05 Aug 2011</text:p><text:p text:style-name="P467"><text:tab/> */</text:p><text:p text:style-name="P467"><text:tab/>virtual Chromosome&amp; operator=(const Chromosome &amp;chromosome);</text:p><text:p text:style-name="P467"/><text:p text:style-name="P467"><text:tab/>friend std::ostream&amp; operator&lt;&lt;(std::ostream &amp;out, Chromosome &amp;chromosome);</text:p><text:p text:style-name="P467">};</text:p><text:p text:style-name="P467"/><text:p text:style-name="P467">/**</text:p><text:p text:style-name="P467"><text:s/>* Output operator redefinition.</text:p><text:p text:style-name="P467"><text:s/>*</text:p><text:p text:style-name="P467"><text:s/>* @param out Output stream reference.</text:p><text:p text:style-name="P467"><text:s/>*</text:p><text:p text:style-name="P467"><text:s/>* @param chromosome Chromosome instance reference.</text:p><text:p text:style-name="P467"><text:s/>*</text:p><text:p text:style-name="P467"><text:s/>* @return Output stream reference.</text:p><text:p text:style-name="P467"><text:s/>*</text:p><text:p text:style-name="P467"><text:s/>* @author Todor Balabanov</text:p><text:p text:style-name="P467"><text:soft-page-break/><text:s/>*</text:p><text:p text:style-name="P467"><text:s/>* @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P467"><text:s/>*</text:p><text:p text:style-name="P467"><text:s/>* @date 05 Aug 2011</text:p><text:p text:style-name="P467"><text:s/>*/</text:p><text:p text:style-name="P467">std::ostream&amp; operator&lt;&lt;(std::ostream &amp;out, Chromosome &amp;chromosome);</text:p><text:p text:style-name="P467"/><text:p text:style-name="P467">#endif</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5788_1486593966"/><text:s text:c="4"/>Communicator.cpp<text:bookmark-end text:name="__RefHeading___Toc5788_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P468">/*******************************************************************************</text:p><text:p text:style-name="P468"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P468"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P468"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P468"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P468"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P468"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P468"><text:s/>* Copyright (C) 2008-2011 by Todor Balabanov <text:s/>( todor.balabanov@gmail.com ) <text:s text:c="2"/>*</text:p><text:p text:style-name="P468"><text:s/>* <text:s text:c="22"/>Iliyan Zankinski <text:s text:c="2"/>( iliyan_mf@abv.bg ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P468"><text:s/>* <text:s text:c="22"/>Momchil Anachkov <text:s text:c="2"/>( mZer0000@gmail.com ) <text:s text:c="12"/>*</text:p><text:p text:style-name="P468"><text:s/>* <text:s text:c="22"/>Daniel Chutrov <text:s text:c="4"/>( d.chutrov@gmail.com ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P468"><text:s/>* <text:s text:c="22"/>Nikola Simeonov <text:s text:c="3"/>( n.simeonow@gmail.com ) <text:s text:c="10"/>*</text:p><text:p text:style-name="P468"><text:s/>* <text:s text:c="22"/>Galq Cirkalova <text:s text:c="4"/>( galq_cirkalova@abv.bg ) <text:s text:c="9"/>*</text:p><text:p text:style-name="P468"><text:s/>* <text:s text:c="22"/>Ivan Grozev <text:s text:c="7"/>( ivan.iliev.grozev@gmail.com ) <text:s text:c="3"/>*</text:p><text:p text:style-name="P468"><text:s/>* <text:s text:c="22"/>Elisaveta Hristova ( elisaveta.s.hristova@gmail.com ) *</text:p><text:p text:style-name="P468"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P468"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P468"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P468"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P468"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P468"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P468"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P468"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P468"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P468"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P468"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P468"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P468"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P468"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P468"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5790_1486593966"/><text:s text:c="4"/>Communicator.h<text:bookmark-end text:name="__RefHeading___Toc5790_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P469">/*******************************************************************************</text:p><text:p text:style-name="P469"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P469"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P469"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P469"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P469"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P469"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P469"><text:s/>* Copyright (C) 2008-2013 by Todor Balabanov <text:s/>( todor.balabanov@gmail.com ) <text:s text:c="2"/>*</text:p><text:p text:style-name="P469"><text:s/>* <text:s text:c="22"/>Iliyan Zankinski <text:s text:c="2"/>( iliyan_mf@abv.bg ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P469"><text:s/>* <text:s text:c="22"/>Momchil Anachkov <text:s text:c="2"/>( mZer0000@gmail.com ) <text:s text:c="12"/>*</text:p><text:p text:style-name="P469"><text:s/>* <text:s text:c="22"/>Daniel Chutrov <text:s text:c="4"/>( d.chutrov@gmail.com ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P469"><text:s/>* <text:s text:c="22"/>Nikola Simeonov <text:s text:c="3"/>( n.simeonow@gmail.com ) <text:s text:c="10"/>*</text:p><text:p text:style-name="P469"><text:s/>* <text:s text:c="22"/>Galq Cirkalova <text:s text:c="4"/>( galq_cirkalova@abv.bg ) <text:s text:c="9"/>*</text:p><text:p text:style-name="P469"><text:s/>* <text:s text:c="22"/>Ivan Grozev <text:s text:c="7"/>( ivan.iliev.grozev@gmail.com ) <text:s text:c="3"/>*</text:p><text:p text:style-name="P469"><text:s/>* <text:s text:c="22"/>Elisaveta Hristova ( elisaveta.s.hristova@gmail.com ) *</text:p><text:p text:style-name="P469"><text:s/>* <text:s text:c="22"/>Simona Karadachka <text:s/>( simona.karadachka@gmail.com ) <text:s text:c="3"/>*</text:p><text:p text:style-name="P469"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P469"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P469"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P469"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P469"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P469"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P469"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P469"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P469"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P469"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P469"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P469"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P469"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P469"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P469"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P469"/><text:p text:style-name="P469">#ifndef COMMUNICATOR_H</text:p><text:p text:style-name="P469">#define COMMUNICATOR_H</text:p><text:p text:style-name="P469"/><text:p text:style-name="P469">class DE;</text:p><text:p text:style-name="P469">class ANN;</text:p><text:p text:style-name="P469"/><text:p text:style-name="P469">#include &quot;RateInfo.h&quot;</text:p><text:p text:style-name="P469">#include &quot;TimePeriod.h&quot;</text:p><text:p text:style-name="P469">#include &quot;ModelParameters.h&quot;</text:p><text:p text:style-name="P469"/><text:p text:style-name="P469">/**</text:p><text:p text:style-name="P469"><text:s/>* Communication class used for abstract data transfer.</text:p><text:p text:style-name="P469"><text:s/>*</text:p><text:p text:style-name="P469"><text:s/>* @author Todor Balabanov</text:p><text:p text:style-name="P469"><text:s/>*</text:p><text:p text:style-name="P469"><text:s/>* @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P469"><text:s/>*</text:p><text:p text:style-name="P469"><text:s/>* @date 18 Jun 2013</text:p><text:p text:style-name="P469"><text:s/>*/</text:p><text:p text:style-name="P469">class Communicator {</text:p><text:p text:style-name="P469"/><text:p text:style-name="P469">public:</text:p><text:p text:style-name="P469"/><text:p text:style-name="P469"><text:tab/>/**</text:p><text:p text:style-name="P469"><text:tab/> * Load list with ANNs.</text:p><text:p text:style-name="P469"><text:tab/> *</text:p><text:p text:style-name="P469"><text:tab/> * @param list List of ANN ids on the server side.</text:p><text:p text:style-name="P469"><text:tab/> *</text:p><text:p text:style-name="P469"><text:tab/> * @param annId Id of ANN to be used as selection parameter.</text:p><text:p text:style-name="P469"><text:tab/> *</text:p><text:p text:style-name="P469"><text:tab/> * @param symbol MetaTrader 4 chart currency pair symbol.</text:p><text:p text:style-name="P469"><text:tab/> *</text:p><text:p text:style-name="P469"><text:tab/> * @param period MetaTrader 4 chart time period.</text:p><text:p text:style-name="P469"><text:tab/> *</text:p><text:p text:style-name="P469"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P469"><text:tab/> *</text:p><text:p text:style-name="P469"><text:soft-page-break/><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P469"><text:tab/> *</text:p><text:p text:style-name="P469"><text:tab/> * @date 10 May 2013</text:p><text:p text:style-name="P469"><text:tab/> */</text:p><text:p text:style-name="P469"><text:tab/>virtual void loadAnnList(std::vector&lt;int&gt; &amp;list, int annId, char symbol[], TimePeriod period) = 0;</text:p><text:p text:style-name="P469"/><text:p text:style-name="P469"><text:tab/>/**</text:p><text:p text:style-name="P469"><text:tab/> * Allocate memory and load ANN and DE objects.</text:p><text:p text:style-name="P469"><text:tab/> *</text:p><text:p text:style-name="P469"><text:tab/> * @param ann Not allocated artificial nerural network object pointer with</text:p><text:p text:style-name="P469"><text:tab/> * value NULL.</text:p><text:p text:style-name="P469"><text:tab/> *</text:p><text:p text:style-name="P469"><text:tab/> * @param <text:s/>de Not allocated differential evolution object pointer with</text:p><text:p text:style-name="P469"><text:tab/> * value NULL.</text:p><text:p text:style-name="P469"><text:tab/> *</text:p><text:p text:style-name="P469"><text:tab/> * @param symbol MetaTrader 4 chart currency pair symbol.</text:p><text:p text:style-name="P469"><text:tab/> *</text:p><text:p text:style-name="P469"><text:tab/> * @param period MetaTrader 4 chart time period.</text:p><text:p text:style-name="P469"><text:tab/> *</text:p><text:p text:style-name="P469"><text:tab/> * @param parameters All other netwrok parameters.</text:p><text:p text:style-name="P469"><text:tab/> *</text:p><text:p text:style-name="P469"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P469"><text:tab/> *</text:p><text:p text:style-name="P469"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P469"><text:tab/> *</text:p><text:p text:style-name="P469"><text:tab/> * @date 26 Aug 2013</text:p><text:p text:style-name="P469"><text:tab/> */</text:p><text:p text:style-name="P469"><text:tab/>virtual void loadTrainerObjects(Counter &amp;counters, ANN &amp;ann, DE &amp;de, char symbol[], TimePeriod period, const ModelParameters &amp;parameters) = 0;</text:p><text:p text:style-name="P469"/><text:p text:style-name="P469"><text:tab/>/**</text:p><text:p text:style-name="P469"><text:tab/> * Save single ANN record on the remote side server.</text:p><text:p text:style-name="P469"><text:tab/> *</text:p><text:p text:style-name="P469"><text:tab/> * @param symbol Currency pair symbol.</text:p><text:p text:style-name="P469"><text:tab/> *</text:p><text:p text:style-name="P469"><text:tab/> * @param period Currency chart period.</text:p><text:p text:style-name="P469"><text:tab/> *</text:p><text:p text:style-name="P469"><text:tab/> * @param fitness Weights set fitness value.</text:p><text:p text:style-name="P469"><text:tab/> *</text:p><text:p text:style-name="P469"><text:tab/> * @param numberOfNeurons Number of neurons used as topology.</text:p><text:p text:style-name="P469"><text:tab/> *</text:p><text:p text:style-name="P469"><text:tab/> * @param flags Nurons flags.</text:p><text:p text:style-name="P469"><text:tab/> *</text:p><text:p text:style-name="P469"><text:tab/> * @param weights Weights set.</text:p><text:p text:style-name="P469"><text:tab/> *</text:p><text:p text:style-name="P469"><text:tab/> * @param activities Weights activities.</text:p><text:p text:style-name="P469"><text:tab/> *</text:p><text:p text:style-name="P469"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P469"><text:tab/> *</text:p><text:p text:style-name="P469"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P469"><text:tab/> *</text:p><text:p text:style-name="P469"><text:tab/> * @date 10 May 2013</text:p><text:p text:style-name="P469"><text:tab/> */</text:p><text:p text:style-name="P469"><text:tab/>virtual void saveSingleANN(char *symbol, TimePeriod period, double fitness, NeuronsList &amp;neurons, WeightsMatrix &amp;weights, ActivitiesMatrix &amp;activities) = 0;</text:p><text:p text:style-name="P469"/><text:p text:style-name="P469"><text:tab/>/**</text:p><text:p text:style-name="P469"><text:tab/> * Load ANN neurons amount from DB.</text:p><text:p text:style-name="P469"><text:tab/> *</text:p><text:p text:style-name="P469"><text:tab/> * @param annId Id of ANN to be used as selection parameter.</text:p><text:p text:style-name="P469"><text:tab/> *</text:p><text:p text:style-name="P469"><text:tab/> * @return Neurons amount value.</text:p><text:p text:style-name="P469"><text:tab/> *</text:p><text:p text:style-name="P469"><text:tab/> * @author Iliyan Zankinski</text:p><text:p text:style-name="P469"><text:tab/> *</text:p><text:p text:style-name="P469"><text:tab/> * @email iliyan_mf@abv.bg</text:p><text:p text:style-name="P469"><text:tab/> *</text:p><text:p text:style-name="P469"><text:tab/> * @date 01 Aug 2013</text:p><text:p text:style-name="P469"><text:tab/> */</text:p><text:p text:style-name="P469"><text:tab/>virtual int loadAnnNeuronsAmount(int annId) = 0;</text:p><text:p text:style-name="P469"/><text:p text:style-name="P469"><text:tab/>/**</text:p><text:p text:style-name="P469"><text:tab/> * Load single ANN objec record from remote server side.</text:p><text:p text:style-name="P469"><text:tab/> *</text:p><text:p text:style-name="P469"><text:tab/> * @param annId Id of ANN to be used as selection parameter.</text:p><text:p text:style-name="P469"><text:tab/> *</text:p><text:p text:style-name="P469"><text:tab/> * @param symbol Currency pair symbol.</text:p><text:p text:style-name="P469"><text:tab/> *</text:p><text:p text:style-name="P469"><text:tab/> * @param period Currency chart period.</text:p><text:p text:style-name="P469"><text:tab/> *</text:p><text:p text:style-name="P469"><text:tab/> * @param fitness Weights set fitness value.</text:p><text:p text:style-name="P469"><text:tab/> *</text:p><text:p text:style-name="P469"><text:tab/> * @param numberOfNeurons Number of neurons used as topology. Neurons amount will be used only for new crated ANN.</text:p><text:p text:style-name="P469"><text:tab/> *</text:p><text:p text:style-name="P469"><text:tab/> * @param flags Nurons flags.</text:p><text:p text:style-name="P469"><text:tab/> *</text:p><text:p text:style-name="P469"><text:tab/> * @param weights Weights set.</text:p><text:p text:style-name="P469"><text:tab/> *</text:p><text:p text:style-name="P469"><text:tab/> * @param activities Weights activities.</text:p><text:p text:style-name="P469"><text:tab/> *</text:p><text:p text:style-name="P469"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P469"><text:tab/> *</text:p><text:p text:style-name="P469"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P469"><text:tab/> *</text:p><text:p text:style-name="P469"><text:tab/> * @date 26 Aug 2013</text:p><text:p text:style-name="P469"><text:tab/> */</text:p><text:p text:style-name="P469"><text:tab/>virtual void loadSingleANN(int annId, char *symbol, TimePeriod &amp;period, double &amp;fitness, NeuronsList &amp;neurons, WeightsMatrix &amp;weights, ActivitiesMatrix &amp;activities) = 0;</text:p><text:p text:style-name="P469"/><text:p text:style-name="P469"><text:tab/>/**</text:p><text:p text:style-name="P469"><text:tab/> * Load training set size from remote side server.</text:p><text:p text:style-name="P469"><text:tab/> *</text:p><text:p text:style-name="P469"><text:tab/> * @param symbol Currency pair symbol.</text:p><text:p text:style-name="P469"><text:tab/> *</text:p><text:p text:style-name="P469"><text:tab/> * @param period Currency chart period.</text:p><text:p text:style-name="P469"><text:tab/> *</text:p><text:p text:style-name="P469"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P469"><text:tab/> *</text:p><text:p text:style-name="P469"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P469"><text:tab/> *</text:p><text:p text:style-name="P469"><text:tab/> * @date 23 Sep 2013</text:p><text:p text:style-name="P469"><text:tab/> */</text:p><text:p text:style-name="P469"><text:tab/>virtual int loadTrainingSetSize(char *symbol, TimePeriod period) = 0;</text:p><text:p text:style-name="P469"/><text:p text:style-name="P469"><text:tab/>/**</text:p><text:p text:style-name="P469"><text:tab/> * Save training set record on remote side server.</text:p><text:p text:style-name="P469"><text:tab/> *</text:p><text:p text:style-name="P469"><text:tab/> * @param symbol Currency pair symbol.</text:p><text:p text:style-name="P469"><text:tab/> *</text:p><text:p text:style-name="P469"><text:tab/> * @param period Currency chart period.</text:p><text:p text:style-name="P469"><text:tab/> *</text:p><text:p text:style-name="P469"><text:tab/> * @param rates Rates values.</text:p><text:p text:style-name="P469"><text:tab/> *</text:p><text:p text:style-name="P469"><text:tab/> * @param size Number of training set examples.</text:p><text:p text:style-name="P469"><text:tab/> *</text:p><text:p text:style-name="P469"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P469"><text:tab/> *</text:p><text:p text:style-name="P469"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P469"><text:soft-page-break/><text:tab/> *</text:p><text:p text:style-name="P469"><text:tab/> * @date 22 Sep 2013</text:p><text:p text:style-name="P469"><text:tab/> */</text:p><text:p text:style-name="P469"><text:tab/>virtual void saveTrainingSet(char symbol[], TimePeriod period, const std::vector&lt;RateInfo&gt; &amp;rates, int size) = 0;</text:p><text:p text:style-name="P469"/><text:p text:style-name="P469"><text:tab/>/**</text:p><text:p text:style-name="P469"><text:tab/> * Load training set record from remote side server.</text:p><text:p text:style-name="P469"><text:tab/> *</text:p><text:p text:style-name="P469"><text:tab/> * @param symbol Currency pair symbol.</text:p><text:p text:style-name="P469"><text:tab/> *</text:p><text:p text:style-name="P469"><text:tab/> * @param period Currency chart period.</text:p><text:p text:style-name="P469"><text:tab/> *</text:p><text:p text:style-name="P469"><text:tab/> * @param rates Rates values.</text:p><text:p text:style-name="P469"><text:tab/> *</text:p><text:p text:style-name="P469"><text:tab/> * @param size Number of training set examples.</text:p><text:p text:style-name="P469"><text:tab/> *</text:p><text:p text:style-name="P469"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P469"><text:tab/> *</text:p><text:p text:style-name="P469"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P469"><text:tab/> *</text:p><text:p text:style-name="P469"><text:tab/> * @date 22 Sep 2013</text:p><text:p text:style-name="P469"><text:tab/> */</text:p><text:p text:style-name="P469"><text:tab/>virtual void loadTrainingSet(char symbol[], TimePeriod period, std::vector&lt;RateInfo&gt; &amp;rates, int size) = 0;</text:p><text:p text:style-name="P469"/><text:p text:style-name="P469"><text:tab/>/**</text:p><text:p text:style-name="P469"><text:tab/> * Load remote server best known fitness for particular ANN kind.</text:p><text:p text:style-name="P469"><text:tab/> *</text:p><text:p text:style-name="P469"><text:tab/> * @param symbol Currency pair symbol.</text:p><text:p text:style-name="P469"><text:tab/> *</text:p><text:p text:style-name="P469"><text:tab/> * @param period MetaTrader 4 chart period.</text:p><text:p text:style-name="P469"><text:tab/> *</text:p><text:p text:style-name="P469"><text:tab/> * @param numberOfNeurons Number of neurons used as topology.</text:p><text:p text:style-name="P469"><text:tab/> *</text:p><text:p text:style-name="P469"><text:tab/> * @param flags Nurons flags.</text:p><text:p text:style-name="P469"><text:tab/> *</text:p><text:p text:style-name="P469"><text:tab/> * @param activities Weights activities.</text:p><text:p text:style-name="P469"><text:tab/> *</text:p><text:p text:style-name="P469"><text:tab/> * @return Best known server side fitness.</text:p><text:p text:style-name="P469"><text:tab/> *</text:p><text:p text:style-name="P469"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P469"><text:tab/> *</text:p><text:p text:style-name="P469"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P469"><text:tab/> *</text:p><text:p text:style-name="P469"><text:tab/> * @date 10 May 2013</text:p><text:p text:style-name="P469"><text:tab/> */</text:p><text:p text:style-name="P469"><text:tab/>virtual double loadRemoteBestFitness(char *symbol, TimePeriod period, NeuronsList &amp;neurons, ActivitiesMatrix &amp;activities) = 0;</text:p><text:p text:style-name="P469"/><text:p text:style-name="P469">};</text:p><text:p text:style-name="P469"/><text:p text:style-name="P469">#endif</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5792_1486593966"/><text:s text:c="4"/>Counter.cpp<text:bookmark-end text:name="__RefHeading___Toc5792_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P469">/*******************************************************************************</text:p><text:p text:style-name="P469"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P469"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P469"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P469"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P469"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P469"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P469"><text:s/>* Copyright (C) 2008-2011 by Todor Balabanov <text:s/>( todor.balabanov@gmail.com ) <text:s text:c="2"/>*</text:p><text:p text:style-name="P469"><text:s/>* <text:s text:c="22"/>Iliyan Zankinski <text:s text:c="2"/>( iliyan_mf@abv.bg ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P469"><text:s/>* <text:s text:c="22"/>Momchil Anachkov <text:s text:c="2"/>( mZer0000@gmail.com ) <text:s text:c="12"/>*</text:p><text:p text:style-name="P469"><text:s/>* <text:s text:c="22"/>Daniel Chutrov <text:s text:c="4"/>( d.chutrov@gmail.com ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P469"><text:s/>* <text:s text:c="22"/>Nikola Simeonov <text:s text:c="3"/>( n.simeonow@gmail.com ) <text:s text:c="10"/>*</text:p><text:p text:style-name="P469"><text:s/>* <text:s text:c="22"/>Galq Cirkalova <text:s text:c="4"/>( galq_cirkalova@abv.bg ) <text:s text:c="9"/>*</text:p><text:p text:style-name="P469"><text:s/>* <text:s text:c="22"/>Ivan Grozev <text:s text:c="7"/>( ivan.iliev.grozev@gmail.com ) <text:s text:c="3"/>*</text:p><text:p text:style-name="P469"><text:s/>* <text:s text:c="22"/>Elisaveta Hristova ( elisaveta.s.hristova@gmail.com ) *</text:p><text:p text:style-name="P469"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P469"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P469"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P469"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P469"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P469"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P469"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P469"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P469"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P469"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P469"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P469"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P469"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P469"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P469"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P469"/><text:p text:style-name="P469">#include &quot;Counter.h&quot;</text:p><text:p text:style-name="P469"/><text:p text:style-name="P469">void Counter::clear() {</text:p><text:p text:style-name="P469"><text:tab/>counters.clear();</text:p><text:p text:style-name="P469">}</text:p><text:p text:style-name="P469"/><text:p text:style-name="P469">long Counter::getValue(const char* key) {</text:p><text:p text:style-name="P469"><text:tab/>if (counters.count(key) == 0) {</text:p><text:p text:style-name="P469"><text:tab/><text:tab/>return( 0 );</text:p><text:p text:style-name="P469"><text:tab/>} else {</text:p><text:p text:style-name="P469"><text:tab/><text:tab/>return( counters[key] );</text:p><text:p text:style-name="P469"><text:tab/>}</text:p><text:p text:style-name="P469">}</text:p><text:p text:style-name="P469"/><text:p text:style-name="P469">void Counter::setValue(const char* key, long value) {</text:p><text:p text:style-name="P469"><text:tab/>counters[key] = value;</text:p><text:p text:style-name="P469">}</text:p><text:p text:style-name="P469"/><text:p text:style-name="P469">void Counter::increment(const char* key) {</text:p><text:p text:style-name="P469"><text:tab/>if (counters.count(key) == 0) {</text:p><text:p text:style-name="P469"><text:tab/><text:tab/>counters[key] = +1;</text:p><text:p text:style-name="P469"><text:tab/>} else {</text:p><text:p text:style-name="P469"><text:tab/><text:tab/>counters[key]++;</text:p><text:p text:style-name="P469"><text:tab/>}</text:p><text:p text:style-name="P469">}</text:p><text:p text:style-name="P469"/><text:p text:style-name="P469">void Counter::decrement(const char* key) {</text:p><text:p text:style-name="P469"><text:tab/>if (counters.count(key) == 0) {</text:p><text:p text:style-name="P469"><text:tab/><text:tab/>counters[key] = -1;</text:p><text:p text:style-name="P469"><text:tab/>} else {</text:p><text:p text:style-name="P469"><text:tab/><text:tab/>counters[key]--;</text:p><text:p text:style-name="P469"><text:tab/>}</text:p><text:p text:style-name="P469">}</text:p><text:p text:style-name="P469"/><text:p text:style-name="P469">long Counter::operator[](const char* key) {</text:p><text:p text:style-name="P469"><text:soft-page-break/><text:tab/>return( getValue(key) );</text:p><text:p text:style-name="P469">}</text:p><text:p text:style-name="P469"/><text:p text:style-name="P469">std::ostream&amp; operator&lt;&lt;(std::ostream &amp;out, Counter &amp;counter) {</text:p><text:p text:style-name="P469"><text:tab/>for (std::map&lt;const char*, long&gt;::iterator i=counter.counters.begin(); i!=counter.counters.end();) {</text:p><text:p text:style-name="P469"><text:tab/><text:tab/>out &lt;&lt; (*i).first &lt;&lt; &quot;\t :\t &quot; &lt;&lt; (*i).second;</text:p><text:p text:style-name="P469"/><text:p text:style-name="P469"><text:s text:c="8"/>++i;</text:p><text:p text:style-name="P469"><text:tab/><text:tab/>if (i != counter.counters.end()) {</text:p><text:p text:style-name="P469"><text:tab/><text:tab/><text:tab/>out &lt;&lt; std::endl;</text:p><text:p text:style-name="P469"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P469"><text:tab/>}</text:p><text:p text:style-name="P469"/><text:p text:style-name="P469"><text:tab/>return( out );</text:p><text:p text:style-name="P469">}</text:p><text:p text:style-name="P469"/><text:p text:style-name="P469">//TODO Implement ++ and -- operators.</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5794_1486593966"/><text:s text:c="4"/>Counter.h<text:bookmark-end text:name="__RefHeading___Toc5794_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P470">/*******************************************************************************</text:p><text:p text:style-name="P470"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P470"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P470"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P470"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P470"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P470"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P470"><text:s/>* Copyright (C) 2008-2011 by Todor Balabanov <text:s/>( todor.balabanov@gmail.com ) <text:s text:c="2"/>*</text:p><text:p text:style-name="P470"><text:s/>* <text:s text:c="22"/>Iliyan Zankinski <text:s text:c="2"/>( iliyan_mf@abv.bg ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P470"><text:s/>* <text:s text:c="22"/>Momchil Anachkov <text:s text:c="2"/>( mZer0000@gmail.com ) <text:s text:c="12"/>*</text:p><text:p text:style-name="P470"><text:s/>* <text:s text:c="22"/>Daniel Chutrov <text:s text:c="4"/>( d.chutrov@gmail.com ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P470"><text:s/>* <text:s text:c="22"/>Nikola Simeonov <text:s text:c="3"/>( n.simeonow@gmail.com ) <text:s text:c="10"/>*</text:p><text:p text:style-name="P470"><text:s/>* <text:s text:c="22"/>Galq Cirkalova <text:s text:c="4"/>( galq_cirkalova@abv.bg ) <text:s text:c="9"/>*</text:p><text:p text:style-name="P470"><text:s/>* <text:s text:c="22"/>Ivan Grozev <text:s text:c="7"/>( ivan.iliev.grozev@gmail.com ) <text:s text:c="3"/>*</text:p><text:p text:style-name="P470"><text:s/>* <text:s text:c="22"/>Elisaveta Hristova ( elisaveta.s.hristova@gmail.com ) *</text:p><text:p text:style-name="P470"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P470"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P470"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P470"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P470"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P470"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P470"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P470"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P470"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P470"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P470"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P470"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P470"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P470"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P470"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P470"/><text:p text:style-name="P470">#ifndef COUNTER_H</text:p><text:p text:style-name="P470">#define COUNTER_H</text:p><text:p text:style-name="P470"/><text:p text:style-name="P470">#include &lt;map&gt;</text:p><text:p text:style-name="P470">#include &lt;iostream&gt;</text:p><text:p text:style-name="P470"/><text:p text:style-name="P470">/**</text:p><text:p text:style-name="P470"><text:s/>* Counter for application statistics.</text:p><text:p text:style-name="P470"><text:s/>*</text:p><text:p text:style-name="P470"><text:s/>* @author Todor Balabanov</text:p><text:p text:style-name="P470"><text:s/>*</text:p><text:p text:style-name="P470"><text:s/>* @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P470"><text:s/>*</text:p><text:p text:style-name="P470"><text:s/>* @date 28 Sep 2009</text:p><text:p text:style-name="P470"><text:s/>*/</text:p><text:p text:style-name="P470">class Counter {</text:p><text:p text:style-name="P470"/><text:p text:style-name="P470">private:</text:p><text:p text:style-name="P470"/><text:p text:style-name="P470"><text:tab/>/**</text:p><text:p text:style-name="P470"><text:tab/> * Container with counters values.</text:p><text:p text:style-name="P470"><text:tab/> */</text:p><text:p text:style-name="P470"><text:tab/>std::map&lt;const char*, long&gt; counters;</text:p><text:p text:style-name="P470"/><text:p text:style-name="P470">public:</text:p><text:p text:style-name="P470"/><text:p text:style-name="P470"><text:tab/>/**</text:p><text:p text:style-name="P470"><text:tab/> * Clear counters.</text:p><text:p text:style-name="P470"><text:tab/> *</text:p><text:p text:style-name="P470"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P470"><text:tab/> *</text:p><text:p text:style-name="P470"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P470"><text:tab/> *</text:p><text:p text:style-name="P470"><text:tab/> * @date 28 Sep 2009</text:p><text:p text:style-name="P470"><text:tab/> */</text:p><text:p text:style-name="P470"><text:tab/>void clear();</text:p><text:p text:style-name="P470"/><text:p text:style-name="P470"><text:tab/>/**</text:p><text:p text:style-name="P470"><text:tab/> * Get counter value.</text:p><text:p text:style-name="P470"><text:tab/> *</text:p><text:p text:style-name="P470"><text:tab/> * @param key Counter key.</text:p><text:p text:style-name="P470"><text:tab/> *</text:p><text:p text:style-name="P470"><text:tab/> * @return Counter value.</text:p><text:p text:style-name="P470"><text:tab/> *</text:p><text:p text:style-name="P470"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P470"><text:tab/> *</text:p><text:p text:style-name="P470"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P470"><text:tab/> *</text:p><text:p text:style-name="P470"><text:tab/> * @date 28 Sep 2009</text:p><text:p text:style-name="P470"><text:tab/> */</text:p><text:p text:style-name="P470"><text:tab/>long getValue(const char* key);</text:p><text:p text:style-name="P470"/><text:p text:style-name="P470"><text:tab/>/**</text:p><text:p text:style-name="P470"><text:tab/> * Set counter value.</text:p><text:p text:style-name="P470"><text:tab/> *</text:p><text:p text:style-name="P470"><text:tab/> * @param key Counter key.</text:p><text:p text:style-name="P470"><text:tab/> *</text:p><text:p text:style-name="P470"><text:tab/> * @param value Counter value.</text:p><text:p text:style-name="P470"><text:tab/> *</text:p><text:p text:style-name="P470"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P470"><text:tab/> *</text:p><text:p text:style-name="P470"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P470"><text:tab/> *</text:p><text:p text:style-name="P470"><text:tab/> * @date 28 Sep 2009</text:p><text:p text:style-name="P470"><text:tab/> */</text:p><text:p text:style-name="P470"><text:tab/>void setValue(const char* key, long value);</text:p><text:p text:style-name="P470"/><text:p text:style-name="P470"><text:tab/>/**</text:p><text:p text:style-name="P470"><text:soft-page-break/><text:tab/> * Increment counter value.</text:p><text:p text:style-name="P470"><text:tab/> *</text:p><text:p text:style-name="P470"><text:tab/> * @param key Counter key.</text:p><text:p text:style-name="P470"><text:tab/> *</text:p><text:p text:style-name="P470"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P470"><text:tab/> *</text:p><text:p text:style-name="P470"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P470"><text:tab/> *</text:p><text:p text:style-name="P470"><text:tab/> * @date 28 Sep 2009</text:p><text:p text:style-name="P470"><text:tab/> */</text:p><text:p text:style-name="P470"><text:tab/>void increment(const char* key);</text:p><text:p text:style-name="P470"/><text:p text:style-name="P470"><text:tab/>/**</text:p><text:p text:style-name="P470"><text:tab/> * Decrement counter value.</text:p><text:p text:style-name="P470"><text:tab/> *</text:p><text:p text:style-name="P470"><text:tab/> * @param key Counter key.</text:p><text:p text:style-name="P470"><text:tab/> *</text:p><text:p text:style-name="P470"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P470"><text:tab/> *</text:p><text:p text:style-name="P470"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P470"><text:tab/> *</text:p><text:p text:style-name="P470"><text:tab/> * @date 28 Sep 2009</text:p><text:p text:style-name="P470"><text:tab/> */</text:p><text:p text:style-name="P470"><text:tab/>void decrement(const char* key);</text:p><text:p text:style-name="P470"/><text:p text:style-name="P470"><text:tab/>/**</text:p><text:p text:style-name="P470"><text:tab/> * Access specific value.</text:p><text:p text:style-name="P470"><text:tab/> *</text:p><text:p text:style-name="P470"><text:tab/> * @param key Counter key.</text:p><text:p text:style-name="P470"><text:tab/> *</text:p><text:p text:style-name="P470"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P470"><text:tab/> *</text:p><text:p text:style-name="P470"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P470"><text:tab/> *</text:p><text:p text:style-name="P470"><text:tab/> * @date 13 Oct 2011</text:p><text:p text:style-name="P470"><text:tab/> */</text:p><text:p text:style-name="P470"><text:tab/>long operator[](const char* key);</text:p><text:p text:style-name="P470"/><text:p text:style-name="P470"><text:tab/>friend std::ostream&amp; operator&lt;&lt;(std::ostream &amp;out, Counter &amp;counter);</text:p><text:p text:style-name="P470">};</text:p><text:p text:style-name="P470"/><text:p text:style-name="P470">/**</text:p><text:p text:style-name="P470"><text:s/>* Output operator redefinition.</text:p><text:p text:style-name="P470"><text:s/>*</text:p><text:p text:style-name="P470"><text:s/>* @param out Output stream.</text:p><text:p text:style-name="P470"><text:s/>*</text:p><text:p text:style-name="P470"><text:s/>* @param counter Counters instance.</text:p><text:p text:style-name="P470"><text:s/>*</text:p><text:p text:style-name="P470"><text:s/>* @return Output stream.</text:p><text:p text:style-name="P470"><text:s/>*</text:p><text:p text:style-name="P470"><text:s/>* @author Todor Balabanov</text:p><text:p text:style-name="P470"><text:s/>*</text:p><text:p text:style-name="P470"><text:s/>* @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P470"><text:s/>*</text:p><text:p text:style-name="P470"><text:s/>* @date 28 Sep 2009</text:p><text:p text:style-name="P470"><text:s/>*/</text:p><text:p text:style-name="P470">std::ostream&amp; operator&lt;&lt;(std::ostream &amp;out, Counter &amp;counter);</text:p><text:p text:style-name="P470"/><text:p text:style-name="P470">#endif</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5796_1486593966"/><text:s text:c="4"/>CrossoverType.h<text:bookmark-end text:name="__RefHeading___Toc5796_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P471">/*******************************************************************************</text:p><text:p text:style-name="P471"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P471"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P471"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P471"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P471"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P471"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P471"><text:s/>* Copyright (C) 2008-2011 by Todor Balabanov <text:s/>( todor.balabanov@gmail.com ) <text:s text:c="2"/>*</text:p><text:p text:style-name="P471"><text:s/>* <text:s text:c="22"/>Iliyan Zankinski <text:s text:c="2"/>( iliyan_mf@abv.bg ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P471"><text:s/>* <text:s text:c="22"/>Momchil Anachkov <text:s text:c="2"/>( mZer0000@gmail.com ) <text:s text:c="12"/>*</text:p><text:p text:style-name="P471"><text:s/>* <text:s text:c="22"/>Daniel Chutrov <text:s text:c="4"/>( d.chutrov@gmail.com ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P471"><text:s/>* <text:s text:c="22"/>Nikola Simeonov <text:s text:c="3"/>( n.simeonow@gmail.com ) <text:s text:c="10"/>*</text:p><text:p text:style-name="P471"><text:s/>* <text:s text:c="22"/>Galq Cirkalova <text:s text:c="4"/>( galq_cirkalova@abv.bg ) <text:s text:c="9"/>*</text:p><text:p text:style-name="P471"><text:s/>* <text:s text:c="22"/>Ivan Grozev <text:s text:c="7"/>( ivan.iliev.grozev@gmail.com ) <text:s text:c="3"/>*</text:p><text:p text:style-name="P471"><text:s/>* <text:s text:c="22"/>Elisaveta Hristova ( elisaveta.s.hristova@gmail.com ) *</text:p><text:p text:style-name="P471"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P471"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P471"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P471"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P471"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P471"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P471"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P471"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P471"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P471"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P471"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P471"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P471"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P471"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P471"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471">#ifndef CROSSOVER_TYPE_H</text:p><text:p text:style-name="P471">#define CROSSOVER_TYPE_H</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471">/**</text:p><text:p text:style-name="P471"><text:s/>* Constants for different types of crossover.</text:p><text:p text:style-name="P471"><text:s/>*</text:p><text:p text:style-name="P471"><text:s/>* @author Todor Balabanov</text:p><text:p text:style-name="P471"><text:s/>*</text:p><text:p text:style-name="P471"><text:s/>* @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P471"><text:s/>*</text:p><text:p text:style-name="P471"><text:s/>* @date 13 Oct 2011</text:p><text:p text:style-name="P471"><text:s/>*/</text:p><text:p text:style-name="P471">enum CrossoverType {</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/>/**</text:p><text:p text:style-name="P471"><text:tab/> * Flag to switch off crossover at all.</text:p><text:p text:style-name="P471"><text:tab/> */</text:p><text:p text:style-name="P471"><text:tab/>NONE = 0x00,</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/>/**</text:p><text:p text:style-name="P471"><text:tab/> * Crossover by randomly selected gens flag.</text:p><text:p text:style-name="P471"><text:tab/> */</text:p><text:p text:style-name="P471"><text:tab/>RANDOM = 0x01,</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/>/**</text:p><text:p text:style-name="P471"><text:tab/> * Crossover by randomly selected gens flag.</text:p><text:p text:style-name="P471"><text:soft-page-break/><text:tab/> */</text:p><text:p text:style-name="P471"><text:tab/>FIFTY_FIFTY = 0x02,</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/>/**</text:p><text:p text:style-name="P471"><text:tab/> * Crossover by single intersection flag.</text:p><text:p text:style-name="P471"><text:tab/> */</text:p><text:p text:style-name="P471"><text:tab/>SINGLE_CUT = 0x03,</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/>/**</text:p><text:p text:style-name="P471"><text:tab/> * Crossover by binary metrix flag.</text:p><text:p text:style-name="P471"><text:tab/> */</text:p><text:p text:style-name="P471"><text:tab/>BINARY_MATRIX = 0x04</text:p><text:p text:style-name="P471">};</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471">#endif</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5798_1486593966"/><text:s text:c="4"/>DE.cpp<text:bookmark-end text:name="__RefHeading___Toc5798_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P471">/*******************************************************************************</text:p><text:p text:style-name="P471"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P471"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P471"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P471"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P471"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P471"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P471"><text:s/>* Copyright (C) 2008-2011 by Todor Balabanov <text:s/>( todor.balabanov@gmail.com ) <text:s text:c="2"/>*</text:p><text:p text:style-name="P471"><text:s/>* <text:s text:c="22"/>Iliyan Zankinski <text:s text:c="2"/>( iliyan_mf@abv.bg ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P471"><text:s/>* <text:s text:c="22"/>Momchil Anachkov <text:s text:c="2"/>( mZer0000@gmail.com ) <text:s text:c="12"/>*</text:p><text:p text:style-name="P471"><text:s/>* <text:s text:c="22"/>Daniel Chutrov <text:s text:c="4"/>( d.chutrov@gmail.com ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P471"><text:s/>* <text:s text:c="22"/>Nikola Simeonov <text:s text:c="3"/>( n.simeonow@gmail.com ) <text:s text:c="10"/>*</text:p><text:p text:style-name="P471"><text:s/>* <text:s text:c="22"/>Galq Cirkalova <text:s text:c="4"/>( galq_cirkalova@abv.bg ) <text:s text:c="9"/>*</text:p><text:p text:style-name="P471"><text:s/>* <text:s text:c="22"/>Ivan Grozev <text:s text:c="7"/>( ivan.iliev.grozev@gmail.com ) <text:s text:c="3"/>*</text:p><text:p text:style-name="P471"><text:s/>* <text:s text:c="22"/>Elisaveta Hristova ( elisaveta.s.hristova@gmail.com ) *</text:p><text:p text:style-name="P471"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P471"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P471"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P471"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P471"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P471"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P471"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P471"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P471"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P471"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P471"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P471"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P471"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P471"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P471"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471">#include &lt;cmath&gt;</text:p><text:p text:style-name="P471">#include &lt;climits&gt;</text:p><text:p text:style-name="P471">#include &lt;cstdlib&gt;</text:p><text:p text:style-name="P471">#include &lt;iomanip&gt;</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471">using namespace std;</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471">#include &quot;DE.h&quot;</text:p><text:p text:style-name="P471">#include &quot;ANN.h&quot;</text:p><text:p text:style-name="P471">#include &quot;Counter.h&quot;</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471">extern void sleep();</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471">/*</text:p><text:p text:style-name="P471"><text:s/>* Control running of the thread.</text:p><text:p text:style-name="P471"><text:s/>*/</text:p><text:p text:style-name="P471">extern bool isRunning;</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471">const bool DE::PREDICT_WITH_EACH_CHROMOSOME = true;</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471">const double DE::MIN_MUTATION_FACTOR = 0.000;</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471">const double DE::MAX_MUTATION_FACTOR = 0.002;</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471">const int DE::MIN_CROSSOVER_RATE = 0;</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471">const int DE::MAX_CROSSOVER_RATE = 10000;</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471">bool DE::validIndexes() {</text:p><text:p text:style-name="P471"><text:tab/>if(trialIndex == baseIndex || trialIndex == targetIndex || trialIndex == firstIndex || trialIndex == secondIndex) {</text:p><text:p text:style-name="P471"><text:tab/><text:tab/>return false;</text:p><text:p text:style-name="P471"><text:tab/>}</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/>if(baseIndex == targetIndex || baseIndex == firstIndex || baseIndex == secondIndex) {</text:p><text:p text:style-name="P471"><text:tab/><text:tab/>return false;</text:p><text:p text:style-name="P471"><text:tab/>}</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/>if(targetIndex == firstIndex || targetIndex == secondIndex) {</text:p><text:p text:style-name="P471"><text:tab/><text:tab/>return false;</text:p><text:p text:style-name="P471"><text:tab/>}</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/>if(firstIndex == secondIndex) {</text:p><text:p text:style-name="P471"><text:tab/><text:tab/>return false;</text:p><text:p text:style-name="P471"><text:tab/>}</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/>return true;</text:p><text:p text:style-name="P471">}</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"/><text:p text:style-name="P471">void DE::recombine() {</text:p><text:p text:style-name="P471"><text:tab/>int CR = MIN_CROSSOVER_RATE + rand() % (MAX_CROSSOVER_RATE - MIN_CROSSOVER_RATE + 1);</text:p><text:p text:style-name="P471"><text:tab/>double F = MIN_MUTATION_FACTOR + (MAX_MUTATION_FACTOR - MIN_MUTATION_FACTOR) * ((double)rand() / (double)RAND_MAX);</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/>/*</text:p><text:p text:style-name="P471"><text:tab/> * Trail vector.</text:p><text:p text:style-name="P471"><text:tab/> */</text:p><text:p text:style-name="P471"><text:tab/>WeightsMatrix &amp;trial = population[trialIndex].getWeights();</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/>/*</text:p><text:p text:style-name="P471"><text:tab/> * Base vector.</text:p><text:p text:style-name="P471"><text:tab/> */</text:p><text:p text:style-name="P471"><text:tab/>WeightsMatrix &amp;base = population[baseIndex].getWeights();</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/>/*</text:p><text:p text:style-name="P471"><text:tab/> * Target vector.</text:p><text:p text:style-name="P471"><text:tab/> */</text:p><text:p text:style-name="P471"><text:tab/>WeightsMatrix &amp;target = population[targetIndex].getWeights();</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/>/*</text:p><text:p text:style-name="P471"><text:tab/> * First vector for the difference.</text:p><text:p text:style-name="P471"><text:soft-page-break/><text:tab/> */</text:p><text:p text:style-name="P471"><text:tab/>WeightsMatrix &amp;first = population[firstIndex].getWeights();</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/>/*</text:p><text:p text:style-name="P471"><text:tab/> * Second vector for the difference.</text:p><text:p text:style-name="P471"><text:tab/> */</text:p><text:p text:style-name="P471"><text:tab/>WeightsMatrix &amp;second = population[secondIndex].getWeights();</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/>/*</text:p><text:p text:style-name="P471"><text:tab/> * Size of the ANN should not be zero.</text:p><text:p text:style-name="P471"><text:tab/> */</text:p><text:p text:style-name="P471"><text:s text:c="4"/>if(trial.dimension() &lt;= 0) {</text:p><text:p text:style-name="P471"><text:tab/><text:tab/>throw( &quot;DE00219&quot; );</text:p><text:p text:style-name="P471"><text:tab/><text:tab/>return;</text:p><text:p text:style-name="P471"><text:s text:c="4"/>}</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/>//TODO Implement recombination as polymorphic class.</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/>/*</text:p><text:p text:style-name="P471"><text:tab/> * It is a guarantee that at least one element will be crossed.</text:p><text:p text:style-name="P471"><text:tab/> */</text:p><text:p text:style-name="P471"><text:tab/>int R = rand() % (trial.dimension() * trial.dimension());</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:s text:c="4"/>/*</text:p><text:p text:style-name="P471"><text:s text:c="5"/>* Binomial crossover.</text:p><text:p text:style-name="P471"><text:s text:c="5"/>*/</text:p><text:p text:style-name="P471"><text:tab/>for (int j=0, k=0; j&lt;trial.dimension(); j++) {</text:p><text:p text:style-name="P471"><text:tab/><text:tab/>for (int i=0; i&lt;trial.dimension(); i++, k++) {</text:p><text:p text:style-name="P471"><text:tab/><text:tab/><text:tab/>int ri = MIN_CROSSOVER_RATE + rand() % (MAX_CROSSOVER_RATE - MIN_CROSSOVER_RATE + 1);</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/><text:tab/><text:tab/>if (ri &lt; CR || k == R) {</text:p><text:p text:style-name="P471"><text:tab/><text:tab/><text:tab/><text:tab/>trial(i,j) = base(i,j) + F * (first(i,j)-second(i,j));</text:p><text:p text:style-name="P471"><text:tab/><text:tab/><text:tab/>} else {</text:p><text:p text:style-name="P471"><text:tab/><text:tab/><text:tab/><text:tab/>trial(i,j) = target(i,j);</text:p><text:p text:style-name="P471"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P471"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P471"><text:tab/>}</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/>/*</text:p><text:p text:style-name="P471"><text:tab/> * Update result chromosome. When reference is used result is already on place.</text:p><text:p text:style-name="P471"><text:tab/> */</text:p><text:p text:style-name="P471"><text:tab/>//TODO population[trialIndex].setWeights( trial );</text:p><text:p text:style-name="P471">}</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"/><text:p text:style-name="P471">DE::DE() {</text:p><text:p text:style-name="P471"><text:tab/>/*</text:p><text:p text:style-name="P471"><text:tab/> * Initialize class members.</text:p><text:p text:style-name="P471"><text:tab/> */</text:p><text:p text:style-name="P471"><text:tab/>this-&gt;counters = NULL;</text:p><text:p text:style-name="P471"><text:tab/>this-&gt;ann = NULL;</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/>/*</text:p><text:p text:style-name="P471"><text:tab/> * Memory allocation.</text:p><text:p text:style-name="P471"><text:tab/> */</text:p><text:p text:style-name="P471"><text:tab/>Population population( 0 );</text:p><text:p text:style-name="P471"><text:tab/>this-&gt;population = population;</text:p><text:p text:style-name="P471">}</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471">DE::DE(const DE &amp;de) {</text:p><text:p text:style-name="P471"><text:tab/>this-&gt;counters = de.counters;</text:p><text:p text:style-name="P471"><text:tab/>this-&gt;ann = de.ann;</text:p><text:p text:style-name="P471"><text:tab/>this-&gt;population = de.population;</text:p><text:p text:style-name="P471">}</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471">DE::DE(Counter *counters, ANN *ann, int populationSize) {</text:p><text:p text:style-name="P471"><text:tab/>/*</text:p><text:p text:style-name="P471"><text:tab/> * Check counters pointer for point valid object.</text:p><text:p text:style-name="P471"><text:tab/> */</text:p><text:p text:style-name="P471"><text:tab/>if (counters == NULL) {</text:p><text:p text:style-name="P471"><text:tab/><text:tab/>throw( &quot;DE00148&quot; );</text:p><text:p text:style-name="P471"><text:tab/><text:tab/>return;</text:p><text:p text:style-name="P471"><text:tab/>}</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/>/*</text:p><text:p text:style-name="P471"><text:tab/> * Check ANN pointer for point valid object.</text:p><text:p text:style-name="P471"><text:tab/> */</text:p><text:p text:style-name="P471"><text:tab/>if (ann == NULL) {</text:p><text:p text:style-name="P471"><text:tab/><text:tab/>throw( &quot;DE00095&quot; );</text:p><text:p text:style-name="P471"><text:tab/><text:tab/>return;</text:p><text:p text:style-name="P471"><text:tab/>}</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/>this-&gt;counters = counters;</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/>/*</text:p><text:p text:style-name="P471"><text:tab/> * Initialize class members.</text:p><text:p text:style-name="P471"><text:tab/> */</text:p><text:p text:style-name="P471"><text:tab/>this-&gt;ann = ann;</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/>/*</text:p><text:p text:style-name="P471"><text:tab/> * Memory allocation.</text:p><text:p text:style-name="P471"><text:tab/> */</text:p><text:p text:style-name="P471"><text:tab/>Population population( populationSize );</text:p><text:p text:style-name="P471"><text:tab/>this-&gt;population = population;</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/>/*</text:p><text:p text:style-name="P471"><text:tab/> * Check valid object internal structure.</text:p><text:p text:style-name="P471"><text:tab/> */</text:p><text:p text:style-name="P471"><text:tab/>if (population.dimension() &lt;= 0) {</text:p><text:p text:style-name="P471"><text:tab/><text:tab/>throw( &quot;DE00035&quot; );</text:p><text:p text:style-name="P471"><text:tab/><text:tab/>return;</text:p><text:p text:style-name="P471"><text:tab/>}</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/>/*</text:p><text:p text:style-name="P471"><text:tab/> * Estimate work done.</text:p><text:p text:style-name="P471"><text:tab/> */</text:p><text:p text:style-name="P471"><text:tab/>if (counters != NULL) {</text:p><text:p text:style-name="P471"><text:tab/><text:tab/>counters-&gt;setValue(&quot;Population size&quot;, population.dimension());</text:p><text:p text:style-name="P471"><text:tab/>}</text:p><text:p text:style-name="P471">}</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471">Population&amp; DE::getPopulation() {</text:p><text:p text:style-name="P471"><text:tab/>return( population );</text:p><text:p text:style-name="P471">}</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471">void DE::setPopulation(Population &amp;population) {</text:p><text:p text:style-name="P471"><text:tab/>this-&gt;population = population;</text:p><text:p text:style-name="P471">}</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471">void DE::evolve() {</text:p><text:p text:style-name="P471"><text:tab/>/*</text:p><text:p text:style-name="P471"><text:tab/> * Estimate work done.</text:p><text:p text:style-name="P471"><text:tab/> */</text:p><text:p text:style-name="P471"><text:tab/>if (counters != NULL) {</text:p><text:p text:style-name="P471"><text:tab/><text:tab/>counters-&gt;increment( &quot;Evolution loops&quot; );</text:p><text:p text:style-name="P471"><text:soft-page-break/><text:tab/>}</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/>/*</text:p><text:p text:style-name="P471"><text:tab/> * Select trial vector index (it is used as buffer).</text:p><text:p text:style-name="P471"><text:tab/> */</text:p><text:p text:style-name="P471"><text:tab/>//TODO Use the chromosome with the worst fitness.</text:p><text:p text:style-name="P471"><text:tab/>trialIndex = rand() % population.dimension();</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/>/*</text:p><text:p text:style-name="P471"><text:tab/> * Evolve more chromosomes of the population (not all of them).</text:p><text:p text:style-name="P471"><text:tab/> */</text:p><text:p text:style-name="P471"><text:tab/>for (int k=0; k&lt;population.dimension()&amp;&amp;isRunning==true; k++) {</text:p><text:p text:style-name="P471"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P471"><text:tab/><text:tab/> * Select random indivudials for crossover according selection strategy.</text:p><text:p text:style-name="P471"><text:tab/><text:tab/> * The best chromosome is not part of the evolution to give better chances</text:p><text:p text:style-name="P471"><text:tab/><text:tab/> * to other chromosomes to survive and to evolve.</text:p><text:p text:style-name="P471"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P471"><text:tab/><text:tab/>do {</text:p><text:p text:style-name="P471"><text:tab/><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P471"><text:tab/><text:tab/><text:tab/> * Base vector should never be equal to the trial vector. That is why k can not be used as x vector selection.</text:p><text:p text:style-name="P471"><text:tab/><text:tab/><text:tab/> */</text:p><text:p text:style-name="P471"><text:tab/><text:tab/><text:tab/>baseIndex = rand() % population.dimension();</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/><text:tab/><text:tab/>targetIndex = rand() % population.dimension();</text:p><text:p text:style-name="P471"><text:tab/><text:tab/><text:tab/>firstIndex = rand() % population.dimension();</text:p><text:p text:style-name="P471"><text:tab/><text:tab/><text:tab/>secondIndex = rand() % population.dimension();</text:p><text:p text:style-name="P471"><text:tab/><text:tab/>} while (validIndexes() == false);</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P471"><text:tab/><text:tab/> * Produce trial vector.</text:p><text:p text:style-name="P471"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P471"><text:tab/><text:tab/>recombine();</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P471"><text:tab/><text:tab/> * Load chromosome&apos;s weights into ANN.</text:p><text:p text:style-name="P471"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P471"><text:tab/><text:tab/>ann-&gt;setWeights(population[trialIndex].getWeights());</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P471"><text:tab/><text:tab/> * Calculate chromosome fitness by calling ANN total error calculation.</text:p><text:p text:style-name="P471"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P471"><text:tab/><text:tab/>population[ trialIndex ].setFitness( ann-&gt;totalError() );</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P471"><text:tab/><text:tab/> * There is a chance total error calculation to be interrupted.</text:p><text:p text:style-name="P471"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P471"><text:tab/><text:tab/>if (isRunning == false) {</text:p><text:p text:style-name="P471"><text:tab/><text:tab/><text:tab/>population[trialIndex].setFitness( RAND_MAX );</text:p><text:p text:style-name="P471"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P471"><text:tab/><text:tab/> * Update ANN prediction.</text:p><text:p text:style-name="P471"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P471"><text:tab/><text:tab/>if (population[trialIndex].getFitness()&lt;=population.getBestFitness() || PREDICT_WITH_EACH_CHROMOSOME==true) {</text:p><text:p text:style-name="P471"><text:tab/><text:tab/><text:tab/>ann-&gt;predict();</text:p><text:p text:style-name="P471"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P471"><text:tab/><text:tab/> * If trial vector is better than base vector than switch indexes.</text:p><text:p text:style-name="P471"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P471"><text:tab/><text:tab/>if(population[ trialIndex ].getFitness() &lt; population[ baseIndex ].getFitness()) {</text:p><text:p text:style-name="P471"><text:tab/><text:tab/><text:tab/>trialIndex = baseIndex;</text:p><text:p text:style-name="P471"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P471"><text:tab/><text:tab/> * Update best fitness index.</text:p><text:p text:style-name="P471"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P471"><text:tab/><text:tab/>population.searchBestFitnessIndex();</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P471"><text:tab/><text:tab/> * Sleep for better performance.</text:p><text:p text:style-name="P471"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P471"><text:tab/><text:tab/>sleep();</text:p><text:p text:style-name="P471"><text:tab/>}</text:p><text:p text:style-name="P471">}</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471">DE::~DE() {</text:p><text:p text:style-name="P471"><text:tab/>ann = NULL;</text:p><text:p text:style-name="P471"><text:tab/>counters = NULL;</text:p><text:p text:style-name="P471">}</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471">DE&amp; DE::operator=(const DE &amp;de) {</text:p><text:p text:style-name="P471"><text:tab/>this-&gt;counters = de.counters;</text:p><text:p text:style-name="P471"><text:tab/>this-&gt;ann = de.ann;</text:p><text:p text:style-name="P471"><text:tab/>this-&gt;population = de.population;</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/>return( *this );</text:p><text:p text:style-name="P471">}</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471">ostream&amp; operator&lt;&lt;(ostream &amp;out, DE &amp;de) {</text:p><text:p text:style-name="P471"><text:tab/>out &lt;&lt; fixed;</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/>out &lt;&lt; de.population;</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/>return( out );</text:p><text:p text:style-name="P471">}</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5800_1486593966"/><text:s text:c="4"/>DE.h<text:bookmark-end text:name="__RefHeading___Toc5800_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P471">/*******************************************************************************</text:p><text:p text:style-name="P471"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P471"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P471"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P471"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P471"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P471"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P471"><text:s/>* Copyright (C) 2008-2011 by Todor Balabanov <text:s/>( todor.balabanov@gmail.com ) <text:s text:c="2"/>*</text:p><text:p text:style-name="P471"><text:s/>* <text:s text:c="22"/>Iliyan Zankinski <text:s text:c="2"/>( iliyan_mf@abv.bg ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P471"><text:s/>* <text:s text:c="22"/>Momchil Anachkov <text:s text:c="2"/>( mZer0000@gmail.com ) <text:s text:c="12"/>*</text:p><text:p text:style-name="P471"><text:s/>* <text:s text:c="22"/>Daniel Chutrov <text:s text:c="4"/>( d.chutrov@gmail.com ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P471"><text:s/>* <text:s text:c="22"/>Nikola Simeonov <text:s text:c="3"/>( n.simeonow@gmail.com ) <text:s text:c="10"/>*</text:p><text:p text:style-name="P471"><text:s/>* <text:s text:c="22"/>Galq Cirkalova <text:s text:c="4"/>( galq_cirkalova@abv.bg ) <text:s text:c="9"/>*</text:p><text:p text:style-name="P471"><text:s/>* <text:s text:c="22"/>Ivan Grozev <text:s text:c="7"/>( ivan.iliev.grozev@gmail.com ) <text:s text:c="3"/>*</text:p><text:p text:style-name="P471"><text:s/>* <text:s text:c="22"/>Elisaveta Hristova ( elisaveta.s.hristova@gmail.com ) *</text:p><text:p text:style-name="P471"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P471"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P471"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P471"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P471"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P471"><text:soft-page-break/><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P471"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P471"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P471"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P471"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P471"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P471"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P471"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P471"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P471"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471">#ifndef DE_H</text:p><text:p text:style-name="P471">#define DE_H</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471">#include &lt;iostream&gt;</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471">class ANN;</text:p><text:p text:style-name="P471">class Counter;</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471">#include &quot;Population.h&quot;</text:p><text:p text:style-name="P471">#include &quot;CrossoverType.h&quot;</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471">/**</text:p><text:p text:style-name="P471"><text:s/>* A basic variant of the DE algorithm works by having a population of candidate solutions (called agents). These agents are moved around in the search-space by using simple mathematical formulae to combine the positions of existing agents from the population. If the new position of an agent is an improvement it is accepted and forms part of the population, otherwise the new position is simply discarded. The process is repeated and by doing so it is hoped, but not guaranteed, that a satisfactory solution will eventually be discovered.</text:p><text:p text:style-name="P471"><text:s/>*</text:p><text:p text:style-name="P471"><text:s/>* Formally, let f: \Bbb{R}^n \to \Bbb{R} be the cost function which must be minimized or fitness function which must be maximized. The function takes a candidate solution as argument in the form of a vector of real numbers and produces a real number as output which indicates the fitness of the given candidate solution. The gradient of f is not known. The goal is to find a solution m for which f(m) \leq f(p) for all p in the search-space, which would mean m is the global minimum. Maximization can be performed by considering the function h := -f instead.</text:p><text:p text:style-name="P471"><text:s/>*</text:p><text:p text:style-name="P471"><text:s/>* Let \mathbf{x} \in \Bbb{R}^n designate a candidate solution (agent) in the population. The basic DE algorithm can then be described as follows:</text:p><text:p text:style-name="P471"><text:s/>*</text:p><text:p text:style-name="P471"><text:s/>* Initialize all agents \mathbf{x} with random positions in the search-space.</text:p><text:p text:style-name="P471"><text:s/>* Until a termination criterion is met (e.g. number of iterations performed, or adequate fitness reached), repeat the following:</text:p><text:p text:style-name="P471"><text:s/>* For each agent \mathbf{x} in the population do:</text:p><text:p text:style-name="P471"><text:s/>* Pick three agents \mathbf{a},\mathbf{b}, and \mathbf{c} from the population at random, they must be distinct from each other as well as from agent \mathbf{x}</text:p><text:p text:style-name="P471"><text:s/>* Pick a random index R \in \{1, \ldots, n\} (n being the dimensionality of the problem to be optimized).</text:p><text:p text:style-name="P471"><text:s/>* Compute the agent&apos;s potentially new position \mathbf{y} = [y_1, \ldots, y_n] as follows:</text:p><text:p text:style-name="P471"><text:s/>* For each i, pick a uniformly distributed number r_i \equiv U(0,1)</text:p><text:p text:style-name="P471"><text:s/>* If r_i &lt; \text{CR} or i = R then set y_i = a_i + F \times (b_i-c_i) otherwise set y_i = x_i</text:p><text:p text:style-name="P471"><text:s/>* (In essence, the new position is outcome of binary crossover of agent \mathbf{x} with intermediate agent \mathbf{z} = \mathbf{a} + F \times (\mathbf{b}-\mathbf{c}).)</text:p><text:p text:style-name="P471"><text:s/>* If f(\mathbf{y}) &lt; f(\mathbf{x}) then replace the agent in the population with the improved candidate solution, that is, replace \mathbf{x} with \mathbf{y} in the population.</text:p><text:p text:style-name="P471"><text:s/>* Pick the agent from the population that has the highest fitness or lowest cost and return it as the best found candidate solution.</text:p><text:p text:style-name="P471"><text:s/>*</text:p><text:p text:style-name="P471"><text:s/>* Note that F \in [0,2] is called the differential weight and \text{CR} \in [0,1] is called the crossover probability, both these parameters are selectable by the practitioner along with the population size \text{NP} \geq 4 see below. *</text:p><text:p text:style-name="P471"><text:s/>*</text:p><text:p text:style-name="P471"><text:s/>* @author Todor Balabanov</text:p><text:p text:style-name="P471"><text:s/>*</text:p><text:p text:style-name="P471"><text:s/>* @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P471"><text:s/>*</text:p><text:p text:style-name="P471"><text:s/>* @date 10 Mar 2009</text:p><text:p text:style-name="P471"><text:s/>*/</text:p><text:p text:style-name="P471">class DE {</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471">public:</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/>/**</text:p><text:p text:style-name="P471"><text:tab/> * Do prediction with each chromosome, not only with the best one.</text:p><text:p text:style-name="P471"><text:tab/> */</text:p><text:p text:style-name="P471"><text:tab/>//TODO implement it as member variable.</text:p><text:p text:style-name="P471"><text:tab/>static const bool PREDICT_WITH_EACH_CHROMOSOME;</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/>/**</text:p><text:p text:style-name="P471"><text:tab/> * Minimum mutation factor.</text:p><text:p text:style-name="P471"><text:tab/> */</text:p><text:p text:style-name="P471"><text:tab/>static const double MIN_MUTATION_FACTOR;</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/>/**</text:p><text:p text:style-name="P471"><text:tab/> * Maximum mutation factor.</text:p><text:p text:style-name="P471"><text:tab/> */</text:p><text:p text:style-name="P471"><text:tab/>static const double MAX_MUTATION_FACTOR;</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/>/**</text:p><text:p text:style-name="P471"><text:tab/> * Minimum crossover rate as integer number between [0-10000] instead of double number between [0.0-1.0].</text:p><text:p text:style-name="P471"><text:tab/> */</text:p><text:p text:style-name="P471"><text:tab/>static const int MIN_CROSSOVER_RATE;</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/>/**</text:p><text:p text:style-name="P471"><text:tab/> * Maximum crossover rate as integer number between [0-10000] instead of double number between [0.0-1.0].</text:p><text:p text:style-name="P471"><text:tab/> */</text:p><text:p text:style-name="P471"><text:tab/>static const int MAX_CROSSOVER_RATE;</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471">private:</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/>/**</text:p><text:p text:style-name="P471"><text:tab/> * Population array. Population array is dynamically allocated. Each</text:p><text:p text:style-name="P471"><text:tab/> * member is two dimensional array (matrix of weights). Weights matrix is</text:p><text:p text:style-name="P471"><text:tab/> * also dynamically allocated.</text:p><text:p text:style-name="P471"><text:tab/> */</text:p><text:p text:style-name="P471"><text:tab/>Population population;</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/>/**</text:p><text:p text:style-name="P471"><text:tab/> * Use one of the elements in the population as trial element. When the element is better than some other element just change the index value.</text:p><text:p text:style-name="P471"><text:tab/> */</text:p><text:p text:style-name="P471"><text:tab/>int trialIndex;</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/>/**</text:p><text:p text:style-name="P471"><text:tab/> * In original DE x vector is selected in a loop and each element is visited. Here we will select x random way (statistically it should not have a difference).</text:p><text:p text:style-name="P471"><text:tab/> */</text:p><text:p text:style-name="P471"><text:tab/>int baseIndex;</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/>/**</text:p><text:p text:style-name="P471"><text:tab/> * Vector a from the original DE implementation.</text:p><text:p text:style-name="P471"><text:tab/> */</text:p><text:p text:style-name="P471"><text:tab/>int targetIndex;</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/>/**</text:p><text:p text:style-name="P471"><text:tab/> * Vector b from the original DE implementation.</text:p><text:p text:style-name="P471"><text:tab/> */</text:p><text:p text:style-name="P471"><text:tab/>int firstIndex;</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/>/**</text:p><text:p text:style-name="P471"><text:tab/> * Vector c from the original DE implementation.</text:p><text:p text:style-name="P471"><text:tab/> */</text:p><text:p text:style-name="P471"><text:tab/>int secondIndex;</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/>/**</text:p><text:p text:style-name="P471"><text:tab/> * Link to counters object.</text:p><text:p text:style-name="P471"><text:tab/> */</text:p><text:p text:style-name="P471"><text:tab/>Counter *counters;</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/>/**</text:p><text:p text:style-name="P471"><text:tab/> * Link to real artificial neural network object.</text:p><text:p text:style-name="P471"><text:tab/> */</text:p><text:p text:style-name="P471"><text:soft-page-break/><text:tab/>ANN *ann;</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471">private:</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/>/**</text:p><text:p text:style-name="P471"><text:tab/> * Indexes should be different in order DE to work.</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @date 27 Dec 2014</text:p><text:p text:style-name="P471"><text:tab/> */</text:p><text:p text:style-name="P471"><text:tab/>bool validIndexes();</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/>/**</text:p><text:p text:style-name="P471"><text:tab/> * Recombine chromosomes.</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @author Iliyan Zankinski</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @email iliyan_mf@abv.bg</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @date 31 Mar 2009</text:p><text:p text:style-name="P471"><text:tab/> */</text:p><text:p text:style-name="P471"><text:tab/>//TODO Do it in Chromosome class.</text:p><text:p text:style-name="P471"><text:tab/>void recombine();</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471">public:</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/>/**</text:p><text:p text:style-name="P471"><text:tab/> * Differential evolution class constructor.</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @date 20 Oct 2011</text:p><text:p text:style-name="P471"><text:tab/> */</text:p><text:p text:style-name="P471"><text:tab/>DE();</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/>/**</text:p><text:p text:style-name="P471"><text:tab/> * Differential evolution class constructor.</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @param de Instance to be copied.</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @date 22 Oct 2011</text:p><text:p text:style-name="P471"><text:tab/> */</text:p><text:p text:style-name="P471"><text:tab/>DE(const DE &amp;de);</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/>/**</text:p><text:p text:style-name="P471"><text:tab/> * Differential evolution class constructor.</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @param counters Link to real counters object.</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @param ann Link to artificial neural network.</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @param populationSize Population size to be used.</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @date 10 Mar 2009</text:p><text:p text:style-name="P471"><text:tab/> */</text:p><text:p text:style-name="P471"><text:tab/>DE(Counter *counters, ANN *ann, int populationSize);</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/>/**</text:p><text:p text:style-name="P471"><text:tab/> * Population getter.</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @return Weights Population reference.</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @date 19 Aug 2009</text:p><text:p text:style-name="P471"><text:tab/> */</text:p><text:p text:style-name="P471"><text:tab/>Population&amp; getPopulation();</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/>/**</text:p><text:p text:style-name="P471"><text:tab/> * Population setter.</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @param population Population to set.</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @date 20 May 2009</text:p><text:p text:style-name="P471"><text:tab/> */</text:p><text:p text:style-name="P471"><text:tab/>void setPopulation(Population &amp;population);</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/>/**</text:p><text:p text:style-name="P471"><text:tab/> * Crossover type getter.</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @return Crossover type.</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @date 11 Aug 2011</text:p><text:p text:style-name="P471"><text:tab/> */</text:p><text:p text:style-name="P471"><text:tab/>CrossoverType getCrossoverType() const;</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/>/**</text:p><text:p text:style-name="P471"><text:tab/> * Crossover type setter.</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @param type Crossover type.</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @date 11 Aug 2011</text:p><text:p text:style-name="P471"><text:tab/> */</text:p><text:p text:style-name="P471"><text:tab/>void setCrossoverType(CrossoverType type);</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/>/**</text:p><text:p text:style-name="P471"><text:tab/> * Crossover percent getter.</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:soft-page-break/><text:tab/> * @return Crossover probability in percent.</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @date 11 Aug 2011</text:p><text:p text:style-name="P471"><text:tab/> */</text:p><text:p text:style-name="P471"><text:tab/>double getCrossoverPercent() const;</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/>/**</text:p><text:p text:style-name="P471"><text:tab/> * Crossover percent setter.</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @param percent Crossover probability in percent.</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @date 11 Aug 2011</text:p><text:p text:style-name="P471"><text:tab/> */</text:p><text:p text:style-name="P471"><text:tab/>void setCrossoverPercent(double percent);</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/>/**</text:p><text:p text:style-name="P471"><text:tab/> * Mutation percent getter.</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @return Mutation probability in percent.</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @date 11 Aug 2011</text:p><text:p text:style-name="P471"><text:tab/> */</text:p><text:p text:style-name="P471"><text:tab/>double getMutationPercent() const;</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/>/**</text:p><text:p text:style-name="P471"><text:tab/> * Mutation percent setter.</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @param percent Mutation probability in percent.</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @date 11 Aug 2011</text:p><text:p text:style-name="P471"><text:tab/> */</text:p><text:p text:style-name="P471"><text:tab/>void setMutationPercent(double percent);</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/>/**</text:p><text:p text:style-name="P471"><text:tab/> * Evolve population. Do selection for crossover. Crossover half of the</text:p><text:p text:style-name="P471"><text:tab/> * population. Mutate crossovered half of the population.</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @date 15 May 2009</text:p><text:p text:style-name="P471"><text:tab/> */</text:p><text:p text:style-name="P471"><text:tab/>void evolve();</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/>/**</text:p><text:p text:style-name="P471"><text:tab/> * Differential evolution class destructor.</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @date 10 Mar 2009</text:p><text:p text:style-name="P471"><text:tab/> */</text:p><text:p text:style-name="P471"><text:tab/>virtual ~DE();</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/>/**</text:p><text:p text:style-name="P471"><text:tab/> * Assignment operator overloading.</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @param de Right side DE operand.</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @return DE instance reference.</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @date 22 Oct 2011</text:p><text:p text:style-name="P471"><text:tab/> */</text:p><text:p text:style-name="P471"><text:tab/>virtual DE&amp; operator=(const DE &amp;de);</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/>friend std::ostream&amp; operator&lt;&lt;(std::ostream &amp;out, DE &amp;de);</text:p><text:p text:style-name="P471">};</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471">/**</text:p><text:p text:style-name="P471"><text:s/>* Output operator redefinition.</text:p><text:p text:style-name="P471"><text:s/>*</text:p><text:p text:style-name="P471"><text:s/>* @param out Output stream.</text:p><text:p text:style-name="P471"><text:s/>*</text:p><text:p text:style-name="P471"><text:s/>* @param de DE instance.</text:p><text:p text:style-name="P471"><text:s/>*</text:p><text:p text:style-name="P471"><text:s/>* @return Output stream.</text:p><text:p text:style-name="P471"><text:s/>*</text:p><text:p text:style-name="P471"><text:s/>* @author Iliyan Zankinski</text:p><text:p text:style-name="P471"><text:s/>*</text:p><text:p text:style-name="P471"><text:s/>* @email iliyan_mf@abv.bg</text:p><text:p text:style-name="P471"><text:s/>*</text:p><text:p text:style-name="P471"><text:s/>* @date 23 Aug 2009</text:p><text:p text:style-name="P471"><text:s/>*/</text:p><text:p text:style-name="P471">std::ostream&amp; operator&lt;&lt;(std::ostream &amp;out, DE &amp;de);</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471">#endif</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5802_1486593966"/><text:s text:c="4"/>GraphMatrix.cpp<text:bookmark-end text:name="__RefHeading___Toc5802_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P471">/*******************************************************************************</text:p><text:p text:style-name="P471"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P471"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P471"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P471"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P471"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P471"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P471"><text:s/>* Copyright (C) 2008-2011 by Todor Balabanov <text:s/>( todor.balabanov@gmail.com ) <text:s text:c="2"/>*</text:p><text:p text:style-name="P471"><text:soft-page-break/><text:s/>* <text:s text:c="22"/>Iliyan Zankinski <text:s text:c="2"/>( iliyan_mf@abv.bg ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P471"><text:s/>* <text:s text:c="22"/>Momchil Anachkov <text:s text:c="2"/>( mZer0000@gmail.com ) <text:s text:c="12"/>*</text:p><text:p text:style-name="P471"><text:s/>* <text:s text:c="22"/>Daniel Chutrov <text:s text:c="4"/>( d.chutrov@gmail.com ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P471"><text:s/>* <text:s text:c="22"/>Nikola Simeonov <text:s text:c="3"/>( n.simeonow@gmail.com ) <text:s text:c="10"/>*</text:p><text:p text:style-name="P471"><text:s/>* <text:s text:c="22"/>Galq Cirkalova <text:s text:c="4"/>( galq_cirkalova@abv.bg ) <text:s text:c="9"/>*</text:p><text:p text:style-name="P471"><text:s/>* <text:s text:c="22"/>Ivan Grozev <text:s text:c="7"/>( ivan.iliev.grozev@gmail.com ) <text:s text:c="3"/>*</text:p><text:p text:style-name="P471"><text:s/>* <text:s text:c="22"/>Elisaveta Hristova ( elisaveta.s.hristova@gmail.com ) *</text:p><text:p text:style-name="P471"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P471"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P471"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P471"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P471"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P471"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P471"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P471"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P471"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P471"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P471"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P471"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P471"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P471"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P471"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471">#include &lt;iomanip&gt;</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471">using namespace std;</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471">#include &quot;GraphMatrix.h&quot;</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471">GraphMatrix::GraphMatrix() {</text:p><text:p text:style-name="P471"><text:tab/>for (vector&lt; vector&lt;double&gt; &gt;::iterator i=values.begin(); i!=values.end(); i++) {</text:p><text:p text:style-name="P471"><text:tab/><text:tab/>(*i).clear();</text:p><text:p text:style-name="P471"><text:tab/>}</text:p><text:p text:style-name="P471"><text:tab/>values.clear();</text:p><text:p text:style-name="P471">}</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471">GraphMatrix::GraphMatrix(int size) {</text:p><text:p text:style-name="P471"><text:tab/>for (vector&lt; vector&lt;double&gt; &gt;::iterator i=values.begin(); i!=values.end(); i++) {</text:p><text:p text:style-name="P471"><text:tab/><text:tab/>(*i).clear();</text:p><text:p text:style-name="P471"><text:tab/>}</text:p><text:p text:style-name="P471"><text:tab/>values.clear();</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/>for(int i=0; i&lt;size; i++) {</text:p><text:p text:style-name="P471"><text:tab/><text:tab/>values.push_back( vector&lt;double&gt;() );</text:p><text:p text:style-name="P471"><text:tab/>}</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/>for(int i=0; i&lt;size; i++) {</text:p><text:p text:style-name="P471"><text:tab/><text:tab/>for(int j=0; j&lt;size; j++) {</text:p><text:p text:style-name="P471"><text:tab/><text:tab/><text:tab/>values[i].push_back( 0.0 );</text:p><text:p text:style-name="P471"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P471"><text:tab/>}</text:p><text:p text:style-name="P471">}</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471">GraphMatrix::GraphMatrix(const GraphMatrix &amp;graph) {</text:p><text:p text:style-name="P471"><text:tab/>values = graph.values;</text:p><text:p text:style-name="P471">}</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471">int GraphMatrix::dimension() const {</text:p><text:p text:style-name="P471"><text:tab/>return( values.size() );</text:p><text:p text:style-name="P471">}</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471">GraphMatrix::~GraphMatrix() {</text:p><text:p text:style-name="P471"><text:tab/>for (vector&lt; vector&lt;double&gt; &gt;::iterator i=values.begin(); i!=values.end(); i++) {</text:p><text:p text:style-name="P471"><text:tab/><text:tab/>(*i).clear();</text:p><text:p text:style-name="P471"><text:tab/>}</text:p><text:p text:style-name="P471"><text:tab/>values.clear();</text:p><text:p text:style-name="P471">}</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471">double GraphMatrix::operator()(int col, int row) const {</text:p><text:p text:style-name="P471"><text:tab/>if (col&lt;0 || col&gt;=values.size() || row&lt;0 || row&gt;=values.size()) {</text:p><text:p text:style-name="P471"><text:tab/><text:tab/>throw( &quot;GraphMatrix00171&quot; );</text:p><text:p text:style-name="P471"><text:tab/><text:tab/>return( 0.0 );</text:p><text:p text:style-name="P471"><text:tab/>}</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/>return( values[col][row] );</text:p><text:p text:style-name="P471">}</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471">double&amp; GraphMatrix::operator()(int col, int row) {</text:p><text:p text:style-name="P471"><text:tab/>if (col&lt;0 || col&gt;=values.size() || row&lt;0 || row&gt;=values.size()) {</text:p><text:p text:style-name="P471"><text:tab/><text:tab/>throw( &quot;GraphMatrix00211&quot; );</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P471"><text:tab/><text:tab/> * Fake object to bypass compiler.</text:p><text:p text:style-name="P471"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P471"><text:tab/><text:tab/>static double dummy = 0;</text:p><text:p text:style-name="P471"><text:tab/><text:tab/>return( dummy );</text:p><text:p text:style-name="P471"><text:tab/>}</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/>return( values[col][row] );</text:p><text:p text:style-name="P471">}</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471">GraphMatrix&amp; GraphMatrix::operator=(const GraphMatrix &amp;graph) {</text:p><text:p text:style-name="P471"><text:tab/>values = graph.values;</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/>return( *this );</text:p><text:p text:style-name="P471">}</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471">ostream&amp; operator&lt;&lt;(ostream &amp;out, GraphMatrix &amp;graph) {</text:p><text:p text:style-name="P471"><text:tab/>for (vector&lt; vector&lt;double&gt; &gt;::iterator i=graph.values.begin(); i!=graph.values.end(); i++) {</text:p><text:p text:style-name="P471"><text:tab/><text:tab/>for (vector&lt;double&gt;::iterator ij=(*i).begin(); ij!=(*i).end(); ij++) {</text:p><text:p text:style-name="P471"><text:tab/><text:tab/><text:tab/>out &lt;&lt; setw(8) &lt;&lt; *ij;</text:p><text:p text:style-name="P471"><text:tab/><text:tab/><text:tab/>if (ij+1 != (*i).end()) {</text:p><text:p text:style-name="P471"><text:tab/><text:tab/><text:tab/><text:tab/>out &lt;&lt; &quot; &quot;;</text:p><text:p text:style-name="P471"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P471"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/><text:tab/>if (i+1 != graph.values.end()) {</text:p><text:p text:style-name="P471"><text:tab/><text:tab/><text:tab/>out &lt;&lt; endl;</text:p><text:p text:style-name="P471"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P471"><text:tab/>}</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/>return( out );</text:p><text:p text:style-name="P471">}</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5804_1486593966"/><text:s text:c="4"/>GraphMatrix.h<text:bookmark-end text:name="__RefHeading___Toc5804_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P471">/*******************************************************************************</text:p><text:p text:style-name="P471"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P471"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P471"><text:soft-page-break/><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P471"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P471"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P471"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P471"><text:s/>* Copyright (C) 2008-2011 by Todor Balabanov <text:s/>( todor.balabanov@gmail.com ) <text:s text:c="2"/>*</text:p><text:p text:style-name="P471"><text:s/>* <text:s text:c="22"/>Iliyan Zankinski <text:s text:c="2"/>( iliyan_mf@abv.bg ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P471"><text:s/>* <text:s text:c="22"/>Momchil Anachkov <text:s text:c="2"/>( mZer0000@gmail.com ) <text:s text:c="12"/>*</text:p><text:p text:style-name="P471"><text:s/>* <text:s text:c="22"/>Daniel Chutrov <text:s text:c="4"/>( d.chutrov@gmail.com ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P471"><text:s/>* <text:s text:c="22"/>Nikola Simeonov <text:s text:c="3"/>( n.simeonow@gmail.com ) <text:s text:c="10"/>*</text:p><text:p text:style-name="P471"><text:s/>* <text:s text:c="22"/>Galq Cirkalova <text:s text:c="4"/>( galq_cirkalova@abv.bg ) <text:s text:c="9"/>*</text:p><text:p text:style-name="P471"><text:s/>* <text:s text:c="22"/>Ivan Grozev <text:s text:c="7"/>( ivan.iliev.grozev@gmail.com ) <text:s text:c="3"/>*</text:p><text:p text:style-name="P471"><text:s/>* <text:s text:c="22"/>Elisaveta Hristova ( elisaveta.s.hristova@gmail.com ) *</text:p><text:p text:style-name="P471"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P471"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P471"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P471"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P471"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P471"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P471"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P471"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P471"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P471"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P471"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P471"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P471"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P471"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P471"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471">#ifndef GRAPH_MATRIX_H</text:p><text:p text:style-name="P471">#define GRAPH_MATRIX_H</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471">#include &lt;vector&gt;</text:p><text:p text:style-name="P471">#include &lt;iostream&gt;</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471">/**</text:p><text:p text:style-name="P471"><text:s/>* Graph adjacency matrix base class used as base for ANN weights and topology</text:p><text:p text:style-name="P471"><text:s/>* matrices.</text:p><text:p text:style-name="P471"><text:s/>*</text:p><text:p text:style-name="P471"><text:s/>* @author Todor Balabanov</text:p><text:p text:style-name="P471"><text:s/>*</text:p><text:p text:style-name="P471"><text:s/>* @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P471"><text:s/>*</text:p><text:p text:style-name="P471"><text:s/>* @date 03 Aug 2011</text:p><text:p text:style-name="P471"><text:s/>*/</text:p><text:p text:style-name="P471">class GraphMatrix {</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471">protected:</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/>/**</text:p><text:p text:style-name="P471"><text:tab/> * Matrix values.</text:p><text:p text:style-name="P471"><text:tab/> */</text:p><text:p text:style-name="P471"><text:tab/>std::vector&lt; std::vector&lt;double&gt; &gt; values;</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471">public:</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/>/**</text:p><text:p text:style-name="P471"><text:tab/> * Constructor without parameters.</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @date 03 Aug 2011</text:p><text:p text:style-name="P471"><text:tab/> */</text:p><text:p text:style-name="P471"><text:tab/>GraphMatrix();</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/>/**</text:p><text:p text:style-name="P471"><text:tab/> * Class constructor. Memory allocation and internal variables initializaton.</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @param size Size of the matrix.</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @date 03 Aug 2011</text:p><text:p text:style-name="P471"><text:tab/> */</text:p><text:p text:style-name="P471"><text:tab/>GraphMatrix(int size);</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/>/**</text:p><text:p text:style-name="P471"><text:tab/> * Copy constructor.</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @param graph Instance to be copied.</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @date 03 Aug 2011</text:p><text:p text:style-name="P471"><text:tab/> */</text:p><text:p text:style-name="P471"><text:tab/>GraphMatrix(const GraphMatrix &amp;graph);</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/>/**</text:p><text:p text:style-name="P471"><text:tab/> * Size of the square matrix getter.</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @return Size of the square matrix.</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @date 03 Aug 2011</text:p><text:p text:style-name="P471"><text:tab/> */</text:p><text:p text:style-name="P471"><text:tab/>int dimension() const;</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/>/**</text:p><text:p text:style-name="P471"><text:tab/> * Class destructor. Memory release and variables deinitialization.</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @date 03 Aug 2011</text:p><text:p text:style-name="P471"><text:tab/> */</text:p><text:p text:style-name="P471"><text:tab/>virtual ~GraphMatrix();</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/>/**</text:p><text:p text:style-name="P471"><text:tab/> * Matrix elements access operator overloading.</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @param col Column.</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @param row Row.</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @return Constant element value.</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:soft-page-break/><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @date 03 Aug 2011</text:p><text:p text:style-name="P471"><text:tab/> */</text:p><text:p text:style-name="P471"><text:tab/>double operator()(int col, int row) const;</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/>/**</text:p><text:p text:style-name="P471"><text:tab/> * Matrix elements access operator overloading.</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @param col Column.</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @param row Row.</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @return Constant element value.</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @date 03 Aug 2011</text:p><text:p text:style-name="P471"><text:tab/> */</text:p><text:p text:style-name="P471"><text:tab/>double&amp; operator()(int col, int row);</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/>/**</text:p><text:p text:style-name="P471"><text:tab/> * Assignment operator overloading.</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @param graph Right side operand.</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @return Graph instance reference.</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P471"><text:tab/> *</text:p><text:p text:style-name="P471"><text:tab/> * @date 03 Aug 2011</text:p><text:p text:style-name="P471"><text:tab/> */</text:p><text:p text:style-name="P471"><text:tab/>virtual GraphMatrix&amp; operator=(const GraphMatrix &amp;graph);</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/>//TODO Overload poerator[].</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471"><text:tab/>friend std::ostream&amp; operator&lt;&lt;(std::ostream &amp;out, GraphMatrix &amp;graph);</text:p><text:p text:style-name="P471">};</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471">/**</text:p><text:p text:style-name="P471"><text:s/>* Output operator redefinition.</text:p><text:p text:style-name="P471"><text:s/>*</text:p><text:p text:style-name="P471"><text:s/>* @param out Output stream reference.</text:p><text:p text:style-name="P471"><text:s/>*</text:p><text:p text:style-name="P471"><text:s/>* @param graph Graph instance reference.</text:p><text:p text:style-name="P471"><text:s/>*</text:p><text:p text:style-name="P471"><text:s/>* @return Output stream reference.</text:p><text:p text:style-name="P471"><text:s/>*</text:p><text:p text:style-name="P471"><text:s/>* @author Todor Balabanov</text:p><text:p text:style-name="P471"><text:s/>*</text:p><text:p text:style-name="P471"><text:s/>* @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P471"><text:s/>*</text:p><text:p text:style-name="P471"><text:s/>* @date 03 Aug 2011</text:p><text:p text:style-name="P471"><text:s/>*/</text:p><text:p text:style-name="P471">std::ostream&amp; operator&lt;&lt;(std::ostream &amp;out, GraphMatrix &amp;graph);</text:p><text:p text:style-name="P471"/><text:p text:style-name="P471">#endif</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5806_1486593966"/><text:s text:c="4"/>HttpCommunicator.cpp<text:bookmark-end text:name="__RefHeading___Toc5806_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P472">/*******************************************************************************</text:p><text:p text:style-name="P472"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P472"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P472"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P472"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P472"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P472"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P472"><text:s/>* Copyright (C) 2008-2011 by Todor Balabanov <text:s/>( todor.balabanov@gmail.com ) <text:s text:c="2"/>*</text:p><text:p text:style-name="P472"><text:s/>* <text:s text:c="22"/>Iliyan Zankinski <text:s text:c="2"/>( iliyan_mf@abv.bg ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P472"><text:s/>* <text:s text:c="22"/>Momchil Anachkov <text:s text:c="2"/>( mZer0000@gmail.com ) <text:s text:c="12"/>*</text:p><text:p text:style-name="P472"><text:s/>* <text:s text:c="22"/>Daniel Chutrov <text:s text:c="4"/>( d.chutrov@gmail.com ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P472"><text:s/>* <text:s text:c="22"/>Nikola Simeonov <text:s text:c="3"/>( n.simeonow@gmail.com ) <text:s text:c="10"/>*</text:p><text:p text:style-name="P472"><text:s/>* <text:s text:c="22"/>Galq Cirkalova <text:s text:c="4"/>( galq_cirkalova@abv.bg ) <text:s text:c="9"/>*</text:p><text:p text:style-name="P472"><text:s/>* <text:s text:c="22"/>Ivan Grozev <text:s text:c="7"/>( ivan.iliev.grozev@gmail.com ) <text:s text:c="3"/>*</text:p><text:p text:style-name="P472"><text:s/>* <text:s text:c="22"/>Elisaveta Hristova ( elisaveta.s.hristova@gmail.com ) *</text:p><text:p text:style-name="P472"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P472"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P472"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P472"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P472"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P472"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P472"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P472"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P472"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P472"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P472"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P472"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P472"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P472"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P472"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472">#include &lt;cstdio&gt;</text:p><text:p text:style-name="P472">#include &lt;vector&gt;</text:p><text:p text:style-name="P472">#include &lt;cstdlib&gt;</text:p><text:p text:style-name="P472">#include &lt;cstring&gt;</text:p><text:p text:style-name="P472">#include &lt;climits&gt;</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472">#include &quot;curl/curl.h&quot;</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472">using namespace std;</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472">#include &quot;DE.h&quot;</text:p><text:p text:style-name="P472">#include &quot;ANN.h&quot;</text:p><text:p text:style-name="P472">#include &quot;NeuronsList.h&quot;</text:p><text:p text:style-name="P472">#include &quot;ActivitiesMatrix.h&quot;</text:p><text:p text:style-name="P472">#include &quot;TrainingExample.h&quot;</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472">#include &quot;HttpCommunicator.h&quot;</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472">#define MSG_WAITALL 0x0</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472">const char HttpCommunicator::HOST[] = &quot;localhost&quot;;</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:soft-page-break/>const char HttpCommunicator::LIST_OF_ANNS_SCRIPT[] = &quot;/logic/number_of_anns.php&quot;;</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472">const char HttpCommunicator::SAVE_SINGLE_ANN_SCRIPT[] = &quot;/logic/save_ann.php&quot;;</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472">const char HttpCommunicator::LOAD_NEURONS_AMOUNT_SCRIPT[] = &quot;/logic/load_neurons_amount.php&quot;;</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472">const char HttpCommunicator::LOAD_SINGLE_ANN_SCRIPT[] = &quot;/logic/load_ann.php&quot;;</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472">const char HttpCommunicator::LOAD_BEST_FITNESS_SCRIPT[] = &quot;/logic/load_best_fitness.php&quot;;</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472">const char HttpCommunicator::TRAINING_SET_SIZE_SCRIPT[] = &quot;/logic/training_set_size.php&quot;;</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472">const char HttpCommunicator::SAVE_TRAINING_SET_SCRIPT[] = &quot;/logic/save_training_set.php&quot;;</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472">const char HttpCommunicator::LOAD_TRAINING_SET_SCRIPT[] = &quot;/logic/load_training_set.php&quot;;</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472">struct MemoryStruct {</text:p><text:p text:style-name="P472"><text:tab/>char *memory;</text:p><text:p text:style-name="P472"><text:tab/>size_t size;</text:p><text:p text:style-name="P472">};</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472">static size_t WriteMemoryCallback(void *contents, size_t size, size_t nmemb, void *userp) {</text:p><text:p text:style-name="P472"><text:tab/>size_t realsize = size * nmemb;</text:p><text:p text:style-name="P472"><text:tab/>struct MemoryStruct *mem = (struct MemoryStruct *)userp;</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>mem-&gt;memory = (char*)realloc(mem-&gt;memory, mem-&gt;size + realsize + 1);</text:p><text:p text:style-name="P472"><text:tab/>if(mem-&gt;memory == NULL) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>return 0;</text:p><text:p text:style-name="P472"><text:tab/>}</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>memcpy(&amp;(mem-&gt;memory[mem-&gt;size]), contents, realsize);</text:p><text:p text:style-name="P472"><text:tab/>mem-&gt;size += realsize;</text:p><text:p text:style-name="P472"><text:tab/>mem-&gt;memory[mem-&gt;size] = 0;</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>return realsize;</text:p><text:p text:style-name="P472">}</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472">const char* HttpCommunicator::HttpRequestResponse(char *response, const char* fields, const char* host, const char* script) {</text:p><text:p text:style-name="P472"><text:tab/>CURL *curl;</text:p><text:p text:style-name="P472"><text:tab/>CURLcode result;</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>struct MemoryStruct chunk;</text:p><text:p text:style-name="P472"><text:tab/>chunk.memory = (char*)malloc(1);</text:p><text:p text:style-name="P472"><text:tab/>chunk.size = 0;</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>curl_global_init(CURL_GLOBAL_ALL);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>curl = curl_easy_init();</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>if(curl == NULL) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>throw( &quot;HttpCommunicator00212&quot; );</text:p><text:p text:style-name="P472"><text:tab/>}</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>sprintf(buffer, &quot;http://%s%s&quot;, host, script);</text:p><text:p text:style-name="P472"><text:tab/>curl_easy_setopt(curl, CURLOPT_URL, buffer);</text:p><text:p text:style-name="P472"><text:tab/>curl_easy_setopt(curl, CURLOPT_POST, 1);</text:p><text:p text:style-name="P472"><text:tab/>curl_easy_setopt(curl, CURLOPT_POSTFIELDS, fields);</text:p><text:p text:style-name="P472"><text:tab/>curl_easy_setopt(curl, CURLOPT_POSTFIELDSIZE, strlen(fields));</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>curl_easy_setopt(curl, CURLOPT_NOPROGRESS, 1L);</text:p><text:p text:style-name="P472"><text:tab/>curl_easy_setopt(curl, CURLOPT_WRITEFUNCTION, WriteMemoryCallback);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>curl_easy_setopt(curl, CURLOPT_WRITEDATA, (void *)(&amp;chunk));</text:p><text:p text:style-name="P472"><text:tab/>curl_easy_setopt(curl, CURLOPT_USERAGENT, &quot;libcurl-agent/1.0&quot;);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>result = curl_easy_perform(curl);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>if(result != CURLE_OK) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>throw( &quot;HttpCommunicator00213&quot; );</text:p><text:p text:style-name="P472"><text:tab/>}</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>curl_easy_cleanup(curl);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>memcpy(response, chunk.memory, sizeof(char)*(chunk.size+1));</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>if(chunk.memory) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>free(chunk.memory);</text:p><text:p text:style-name="P472"><text:tab/>}</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>curl_global_cleanup();</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>return(response);</text:p><text:p text:style-name="P472">}</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472">void HttpCommunicator::loadAnnList(vector&lt;int&gt; &amp;list, int annId, char symbol[], TimePeriod period) {</text:p><text:p text:style-name="P472"><text:tab/>char parameters[ HTTP_PARAMETERS_BUFFER_SIZE ];</text:p><text:p text:style-name="P472"><text:tab/>char *position = parameters;</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>sprintf(position, &quot;annid=%d&amp;&quot;, annId);</text:p><text:p text:style-name="P472"><text:tab/>position += strlen(position);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>sprintf(position, &quot;symbol=%s&amp;&quot;, symbol);</text:p><text:p text:style-name="P472"><text:tab/>position += strlen(position);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>sprintf(position, &quot;period=%d&quot;, period);</text:p><text:p text:style-name="P472"><text:tab/>position += strlen(position);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>HttpRequestResponse(buffer, parameters, HOST, LIST_OF_ANNS_SCRIPT);</text:p><text:p text:style-name="P472"><text:tab/>position = buffer;</text:p><text:p text:style-name="P472"><text:tab/>while(position[0]==&apos;\r&apos; || position[0]==&apos;\n&apos;) position++;</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>int numberOfIds = 0;</text:p><text:p text:style-name="P472"><text:tab/>sscanf(position, &quot;%d&quot;, &amp;numberOfIds);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>/*</text:p><text:p text:style-name="P472"><text:tab/> * Parse list values and limit it to the size of output array.</text:p><text:p text:style-name="P472"><text:tab/> */</text:p><text:p text:style-name="P472"><text:tab/>int i = 0;</text:p><text:p text:style-name="P472"><text:tab/>int value = 0;</text:p><text:p text:style-name="P472"><text:tab/>for (i=0; i&lt;numberOfIds; i++) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>position = strstr(position, &quot;\n&quot;);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>while(position[0]==&apos;\r&apos; || position[0]==&apos;\n&apos;) position++;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>sscanf(position, &quot;%d&quot;, &amp;value);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>list.push_back( value );</text:p><text:p text:style-name="P472"><text:tab/>}</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>/*</text:p><text:p text:style-name="P472"><text:tab/> * Resize list if there are less available ANNs.</text:p><text:p text:style-name="P472"><text:tab/> */</text:p><text:p text:style-name="P472"><text:tab/>if(i &lt; list.size()) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>list.resize( i );</text:p><text:p text:style-name="P472"><text:tab/>}</text:p><text:p text:style-name="P472">}</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472">int HttpCommunicator::loadAnnNeuronsAmount(int annId) {</text:p><text:p text:style-name="P472"><text:soft-page-break/><text:tab/>char parameters[ HTTP_PARAMETERS_BUFFER_SIZE ];</text:p><text:p text:style-name="P472"><text:tab/>sprintf(parameters, &quot;annid=%d&quot;, annId);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>HttpRequestResponse(buffer, parameters, HOST, LOAD_NEURONS_AMOUNT_SCRIPT);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>/*</text:p><text:p text:style-name="P472"><text:tab/> * Parse result.</text:p><text:p text:style-name="P472"><text:tab/> */</text:p><text:p text:style-name="P472"><text:tab/>int amout = 0;</text:p><text:p text:style-name="P472"><text:tab/>char *position = buffer;</text:p><text:p text:style-name="P472"><text:tab/>// TODO May be command should be like this: sscanf(position, &quot;\n\n%d&quot;, &amp;result);</text:p><text:p text:style-name="P472"><text:tab/>sscanf(position, &quot;%d&quot;, &amp;amout);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>return (amout);</text:p><text:p text:style-name="P472">}</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472">void HttpCommunicator::loadTrainerObjects(Counter &amp;counters, ANN &amp;ann, DE &amp;de, char symbol[], TimePeriod period, const ModelParameters &amp;parameters) {</text:p><text:p text:style-name="P472"><text:tab/>vector&lt;int&gt; list(parameters.populationSize);</text:p><text:p text:style-name="P472"><text:tab/>int neuronsAmount = parameters.neuronsAmount;</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>/*</text:p><text:p text:style-name="P472"><text:tab/> * Load list with available ANNs.</text:p><text:p text:style-name="P472"><text:tab/> */</text:p><text:p text:style-name="P472"><text:tab/>int numberOfNeurons = loadAnnNeuronsAmount(parameters.dbId);</text:p><text:p text:style-name="P472"><text:tab/>loadAnnList(list, parameters.dbId, symbol, period);</text:p><text:p text:style-name="P472"><text:tab/>if (list.size()&gt;0 &amp;&amp; numberOfNeurons&gt;0) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>neuronsAmount = numberOfNeurons;</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/><text:tab/>ANN annInstance(&amp;counters, neuronsAmount, parameters.learn, parameters.forecast, period);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>ann = annInstance;</text:p><text:p text:style-name="P472"><text:tab/>} else if (list.size() == 0) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P472"><text:tab/><text:tab/> * It is good new network to have at least neurons for input and output.</text:p><text:p text:style-name="P472"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>if(neuronsAmount &lt; (TrainingExample::NUMBER_OF_INPUT_SPLIT_DIGITS+TrainingExample::NUMBER_OF_OUTPUT_SPLIT_DIGITS)) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>neuronsAmount = TrainingExample::NUMBER_OF_INPUT_SPLIT_DIGITS + TrainingExample::NUMBER_OF_OUTPUT_SPLIT_DIGITS;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P472"><text:tab/><text:tab/> * Create new network if no record presented in database.</text:p><text:p text:style-name="P472"><text:tab/><text:tab/> * Input and output neurons should be specified on network creation.</text:p><text:p text:style-name="P472"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>ANN annInstance(&amp;counters, neuronsAmount, parameters.learn, parameters.forecast, period);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>ann = annInstance;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>ann.setupInput( TrainingExample::NUMBER_OF_INPUT_SPLIT_DIGITS );</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>ann.setupOutput( TrainingExample::NUMBER_OF_OUTPUT_SPLIT_DIGITS );</text:p><text:p text:style-name="P472"><text:tab/>}</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>/* Memory allocation. */ {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>DE deInstance(&amp;counters, &amp;ann, parameters.populationSize);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>de = deInstance;</text:p><text:p text:style-name="P472"><text:tab/>}</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>/*</text:p><text:p text:style-name="P472"><text:tab/> * Load DE with random values. It is useful in new ANN and DE creation.</text:p><text:p text:style-name="P472"><text:tab/> * Internal size of chromosomes should be given before initialization.</text:p><text:p text:style-name="P472"><text:tab/> */</text:p><text:p text:style-name="P472"><text:tab/>Population &amp;population = de.getPopulation();</text:p><text:p text:style-name="P472"><text:tab/>for(int i=0; i&lt;population.dimension(); i++) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>WeightsMatrix weights( ann.getNeurons().dimension() );</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>Chromosome chromosome(weights, (double)RAND_MAX);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>population[i] = chromosome;</text:p><text:p text:style-name="P472"><text:tab/>}</text:p><text:p text:style-name="P472"><text:tab/>//TODO Find better way to initialize random population with proper size of weight matrices.</text:p><text:p text:style-name="P472"><text:tab/>population.initRandom();</text:p><text:p text:style-name="P472"><text:tab/>//TODO This setter call may be is not needed.</text:p><text:p text:style-name="P472"><text:tab/>de.setPopulation( population );</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>/*</text:p><text:p text:style-name="P472"><text:tab/> * Load DB ANNs.</text:p><text:p text:style-name="P472"><text:tab/> */</text:p><text:p text:style-name="P472"><text:tab/>double fitness = (double)RAND_MAX;</text:p><text:p text:style-name="P472"><text:tab/>NeuronsList &amp;neurons = ann.getNeurons();</text:p><text:p text:style-name="P472"><text:tab/>ActivitiesMatrix &amp;activities = ann.getActivities();</text:p><text:p text:style-name="P472"><text:tab/>if (list.size()&gt;0 &amp;&amp; neurons.dimension()&gt;0 &amp;&amp; neurons.dimension()==neuronsAmount) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>Population &amp;population = de.getPopulation();</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>for (int i=0; i&lt;list.size(); i++) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>WeightsMatrix &amp;weights = population[i].getWeights();</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>//TODO Activities, symbol, period, number of neurons and flags can be loaded only once.</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>loadSingleANN(list[i], symbol, period, fitness, neurons, weights, activities);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>population[i].setFitness( fitness );</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>population[i].setWeights( weights );</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>de.setPopulation( population );</text:p><text:p text:style-name="P472"><text:tab/>}</text:p><text:p text:style-name="P472">}</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472">void HttpCommunicator::saveSingleANN(char *symbol, TimePeriod period, double fitness, NeuronsList &amp;neurons, WeightsMatrix &amp;weights, ActivitiesMatrix &amp;activities) {</text:p><text:p text:style-name="P472"><text:tab/>char number[ 100 ];</text:p><text:p text:style-name="P472"><text:tab/>char parameters[ HTTP_PARAMETERS_BUFFER_SIZE ] = &quot;&quot;;</text:p><text:p text:style-name="P472"><text:tab/>char *position = parameters;</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>sprintf(position, &quot;symbol=%s&amp;&quot;, symbol);</text:p><text:p text:style-name="P472"><text:tab/>position += strlen(position);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>sprintf(position, &quot;period=%d&amp;&quot;, period);</text:p><text:p text:style-name="P472"><text:tab/>position += strlen(position);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>sprintf(position, &quot;fitness=%lf&amp;&quot;, fitness);</text:p><text:p text:style-name="P472"><text:tab/>position += strlen(position);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>sprintf(position, &quot;number_of_neurons=%d&amp;&quot;, neurons.dimension());</text:p><text:p text:style-name="P472"><text:tab/>position += strlen(position);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>strcpy(buffer, &quot;&quot;);</text:p><text:p text:style-name="P472"><text:tab/>for (int i=0; i&lt;neurons.dimension(); i++) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>if (i &gt; 0) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>strcat(buffer, &quot; &quot;);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>sprintf(number, &quot;%d&quot;, neurons[i].getType());</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>strcat(buffer, number);</text:p><text:p text:style-name="P472"><text:tab/>}</text:p><text:p text:style-name="P472"><text:tab/>sprintf(position, &quot;flags=%s&amp;&quot;, buffer);</text:p><text:p text:style-name="P472"><text:tab/>position += strlen(position);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>strcpy(buffer, &quot;&quot;);</text:p><text:p text:style-name="P472"><text:tab/>for (int j=0; j&lt;neurons.dimension(); j++) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>if (j &gt; 0) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>strcat(buffer, &quot;\n&quot;);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>for (int i=0; i&lt;neurons.dimension(); i++) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>if (i &gt; 0) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/><text:tab/>strcat(buffer, &quot; &quot;);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>sprintf(number, &quot;%lf&quot;, weights(i,j));</text:p><text:p text:style-name="P472"><text:soft-page-break/><text:tab/><text:tab/><text:tab/>strcat(buffer, number);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P472"><text:tab/>}</text:p><text:p text:style-name="P472"><text:tab/>sprintf(position, &quot;weights=%s&amp;&quot;, buffer);</text:p><text:p text:style-name="P472"><text:tab/>position += strlen(position);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>strcpy(buffer, &quot;&quot;);</text:p><text:p text:style-name="P472"><text:tab/>for (int j=0; j&lt;neurons.dimension(); j++) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>if (j &gt; 0) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>strcat(buffer, &quot;\n&quot;);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>for (int i=0; i&lt;neurons.dimension(); i++) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>if (i &gt; 0) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/><text:tab/>strcat(buffer, &quot; &quot;);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>sprintf(number, &quot;%lf&quot;, activities(i,j));</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>strcat(buffer, number);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P472"><text:tab/>}</text:p><text:p text:style-name="P472"><text:tab/>sprintf(position, &quot;activities=%s&quot;, buffer);</text:p><text:p text:style-name="P472"><text:tab/>position += strlen(position);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>HttpRequestResponse(buffer, parameters, HOST, SAVE_SINGLE_ANN_SCRIPT);</text:p><text:p text:style-name="P472">}</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472">void HttpCommunicator::loadSingleANN(int annId, char *symbol, TimePeriod &amp;period, double &amp;fitness, NeuronsList &amp;neurons, WeightsMatrix &amp;weights, ActivitiesMatrix &amp;activities) {</text:p><text:p text:style-name="P472"><text:tab/>char parameters[ HTTP_PARAMETERS_BUFFER_SIZE ] = &quot;&quot;;</text:p><text:p text:style-name="P472"><text:tab/>sprintf(parameters, &quot;annid=%d&quot;, annId);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>HttpRequestResponse(buffer, parameters, HOST, LOAD_SINGLE_ANN_SCRIPT);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>char *position = buffer;</text:p><text:p text:style-name="P472"><text:tab/>while(position[0]==&apos;\r&apos; || position[0]==&apos;\n&apos;) position++;</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>int available = 0;</text:p><text:p text:style-name="P472"><text:tab/>sscanf(position, &quot;%d&quot;, &amp;available);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>if (available != 0) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>position = strstr(position, &quot;\n&quot;);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>while(position[0]==&apos;\r&apos; || position[0]==&apos;\n&apos;) position++;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>strcpy(symbol, &quot;&quot;);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>sscanf(position, &quot;%s&quot;, symbol);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/><text:tab/>position = strstr(position, &quot;\n&quot;);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>while(position[0]==&apos;\r&apos; || position[0]==&apos;\n&apos;) position++;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>period = NO;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>sscanf(position, &quot;%d&quot;, &amp;period);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/><text:tab/>position = strstr(position, &quot;\n&quot;);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>while(position[0]==&apos;\r&apos; || position[0]==&apos;\n&apos;) position++;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>fitness = (double)RAND_MAX;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>sscanf(position, &quot;%lf&quot;, &amp;fitness);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/><text:tab/>int numberOfNeurons = 0;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>position = strstr(position, &quot;\n&quot;);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>while(position[0]==&apos;\r&apos; || position[0]==&apos;\n&apos;) position++;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>sscanf(position, &quot;%d&quot;, &amp;numberOfNeurons);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/><text:tab/>int intValue = 0;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>position = strstr(position, &quot;\n&quot;);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>while(position[0]==&apos;\r&apos; || position[0]==&apos;\n&apos;) position++;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>for (int i=0; i&lt;numberOfNeurons; i++) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>intValue = 0;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>sscanf(position, &quot;%d&quot;, &amp;intValue);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>switch (intValue) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>case REGULAR:</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/><text:tab/>neurons[i].setType( REGULAR );</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>case BIAS:</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/><text:tab/>neurons[i].setType( BIAS );</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>case INPUT:</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/><text:tab/>neurons[i].setType( INPUT );</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>case INPUT_BIAS:</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/><text:tab/>neurons[i].setType( INPUT_BIAS );</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>case OUTPUT:</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/><text:tab/>neurons[i].setType( OUTPUT );</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>case OUTPUT_BIAS:</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/><text:tab/>neurons[i].setType( OUTPUT_BIAS );</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>case OUTPUT_INPUT:</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/><text:tab/>neurons[i].setType( OUTPUT_INPUT );</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>case OUTPUT_INPUT_BIAS:</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/><text:tab/>neurons[i].setType( OUTPUT_INPUT_BIAS );</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>default:</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/><text:tab/>neurons[i].setType( REGULAR );</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>if(i &lt; (numberOfNeurons-1)) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/><text:tab/>position = strstr(position, &quot; &quot;)+1;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/><text:tab/>double doubleValue = 0.0;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>position = strstr(position, &quot;\n&quot;);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>while(position[0]==&apos;\r&apos; || position[0]==&apos;\n&apos;) position++;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>for (int j=0; j&lt;numberOfNeurons; j++) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>for (int i=0; i&lt;numberOfNeurons; i++) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/><text:tab/>doubleValue = 0.0;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/><text:tab/>sscanf(position, &quot;%lf&quot;, &amp;doubleValue);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/><text:tab/>weights(i,j) = doubleValue;</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/><text:tab/>if(i &lt; (numberOfNeurons-1)) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>position = strstr(position, &quot; &quot;)+1;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/><text:tab/>} else {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>position = strstr(position, &quot;\n&quot;);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/><text:tab/>while(position[0]==&apos;\r&apos; || position[0]==&apos;\n&apos;) position++;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>for (int j=0; j&lt;numberOfNeurons; j++) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>for (int i=0; i&lt;numberOfNeurons; i++) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/><text:tab/>doubleValue = 0.0;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/><text:tab/>sscanf(position, &quot;%lf&quot;, &amp;doubleValue);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/><text:tab/>activities(i,j) = doubleValue;</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/><text:tab/>if(i &lt; (numberOfNeurons-1)) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>position = strstr(position, &quot; &quot;)+1;</text:p><text:p text:style-name="P472"><text:soft-page-break/><text:tab/><text:tab/><text:tab/><text:tab/>} else {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>position = strstr(position, &quot;\n&quot;);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P472"><text:tab/>}</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>if (available == 0) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>throw( &quot;HttpCommunicator00066&quot; );</text:p><text:p text:style-name="P472"><text:tab/>}</text:p><text:p text:style-name="P472">}</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472">int HttpCommunicator::loadTrainingSetSize(char *symbol, TimePeriod period) {</text:p><text:p text:style-name="P472"><text:tab/>char parameters[ HTTP_PARAMETERS_BUFFER_SIZE ] = &quot;&quot;;</text:p><text:p text:style-name="P472"><text:tab/>sprintf(parameters, &quot;symbol=%s&amp;period=%d&quot;, symbol, period);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>HttpRequestResponse(buffer, parameters, HOST, TRAINING_SET_SIZE_SCRIPT);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>/*</text:p><text:p text:style-name="P472"><text:tab/> * Parse result.</text:p><text:p text:style-name="P472"><text:tab/> */</text:p><text:p text:style-name="P472"><text:tab/>int size = 0;</text:p><text:p text:style-name="P472"><text:tab/>char *position = buffer;</text:p><text:p text:style-name="P472"><text:tab/>sscanf(position, &quot;%d&quot;, &amp;size);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>return( size );</text:p><text:p text:style-name="P472">}</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472">void HttpCommunicator::saveTrainingSet(char symbol[], TimePeriod period, const vector&lt;RateInfo&gt; &amp;rates, int size) {</text:p><text:p text:style-name="P472"><text:tab/>char number[ 100 ];</text:p><text:p text:style-name="P472"><text:tab/>char parameters[ HTTP_PARAMETERS_BUFFER_SIZE ] = &quot;&quot;;</text:p><text:p text:style-name="P472"><text:tab/>char *position = parameters;</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>sprintf(position, &quot;symbol=%s&amp;&quot;, symbol);</text:p><text:p text:style-name="P472"><text:tab/>position += strlen(position);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>sprintf(position, &quot;period=%d&amp;&quot;, period);</text:p><text:p text:style-name="P472"><text:tab/>position += strlen(position);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>sprintf(position, &quot;number_of_examples=%d&amp;&quot;, size);</text:p><text:p text:style-name="P472"><text:tab/>position += strlen(position);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>strcpy(buffer, &quot;&quot;);</text:p><text:p text:style-name="P472"><text:tab/>for (int i=0; i&lt;size; i++) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>if (i &gt; 0) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>strcat(buffer, &quot; &quot;);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>sprintf(number, &quot;%ld&quot;, rates[i].time);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>strcat(buffer, number);</text:p><text:p text:style-name="P472"><text:tab/>}</text:p><text:p text:style-name="P472"><text:tab/>sprintf(position, &quot;time=%s&amp;&quot;, buffer);</text:p><text:p text:style-name="P472"><text:tab/>position += strlen(position);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>strcpy(buffer, &quot;&quot;);</text:p><text:p text:style-name="P472"><text:tab/>for (int i=0; i&lt;size; i++) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>if (i &gt; 0) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>strcat(buffer, &quot; &quot;);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>sprintf(number, &quot;%lf&quot;, rates[i].open);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>strcat(buffer, number);</text:p><text:p text:style-name="P472"><text:tab/>}</text:p><text:p text:style-name="P472"><text:tab/>sprintf(position, &quot;open=%s&amp;&quot;, buffer);</text:p><text:p text:style-name="P472"><text:tab/>position += strlen(position);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>strcpy(buffer, &quot;&quot;);</text:p><text:p text:style-name="P472"><text:tab/>for (int i=0; i&lt;size; i++) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>if (i &gt; 0) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>strcat(buffer, &quot; &quot;);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>sprintf(number, &quot;%lf&quot;, rates[i].low);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>strcat(buffer, number);</text:p><text:p text:style-name="P472"><text:tab/>}</text:p><text:p text:style-name="P472"><text:tab/>sprintf(position, &quot;low=%s&amp;&quot;, buffer);</text:p><text:p text:style-name="P472"><text:tab/>position += strlen(position);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>strcpy(buffer, &quot;&quot;);</text:p><text:p text:style-name="P472"><text:tab/>for (int i=0; i&lt;size; i++) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>if (i &gt; 0) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>strcat(buffer, &quot; &quot;);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>sprintf(number, &quot;%lf&quot;, rates[i].high);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>strcat(buffer, number);</text:p><text:p text:style-name="P472"><text:tab/>}</text:p><text:p text:style-name="P472"><text:tab/>sprintf(position, &quot;high=%s&amp;&quot;, buffer);</text:p><text:p text:style-name="P472"><text:tab/>position += strlen(position);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>strcpy(buffer, &quot;&quot;);</text:p><text:p text:style-name="P472"><text:tab/>for (int i=0; i&lt;size; i++) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>if (i &gt; 0) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>strcat(buffer, &quot; &quot;);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>sprintf(number, &quot;%lf&quot;, rates[i].close);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>strcat(buffer, number);</text:p><text:p text:style-name="P472"><text:tab/>}</text:p><text:p text:style-name="P472"><text:tab/>sprintf(position, &quot;close=%s&amp;&quot;, buffer);</text:p><text:p text:style-name="P472"><text:tab/>position += strlen(position);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>strcpy(buffer, &quot;&quot;);</text:p><text:p text:style-name="P472"><text:tab/>for (int i=0; i&lt;size; i++) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>if (i &gt; 0) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>strcat(buffer, &quot; &quot;);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>sprintf(number, &quot;%lf&quot;, rates[i].volume);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>strcat(buffer, number);</text:p><text:p text:style-name="P472"><text:tab/>}</text:p><text:p text:style-name="P472"><text:tab/>sprintf(position, &quot;volume=%s&quot;, buffer);</text:p><text:p text:style-name="P472"><text:tab/>position += strlen(position);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>HttpRequestResponse(buffer, parameters, HOST, SAVE_TRAINING_SET_SCRIPT);</text:p><text:p text:style-name="P472">}</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472">void HttpCommunicator::loadTrainingSet(char symbol[], TimePeriod period, vector&lt;RateInfo&gt; &amp;rates, int size) {</text:p><text:p text:style-name="P472"><text:tab/>char parameters[ HTTP_PARAMETERS_BUFFER_SIZE ] = &quot;&quot;;</text:p><text:p text:style-name="P472"><text:tab/>sprintf(parameters, &quot;symbol=%s&amp;period=%d&quot;, symbol, period);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>HttpRequestResponse(buffer, parameters, HOST, LOAD_TRAINING_SET_SCRIPT);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>char *position = buffer;</text:p><text:p text:style-name="P472"><text:tab/>while(position[0]==&apos;\r&apos; || position[0]==&apos;\n&apos;) position++;</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>int available = 0;</text:p><text:p text:style-name="P472"><text:tab/>sscanf(position, &quot;%d&quot;, &amp;available);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>/*</text:p><text:p text:style-name="P472"><text:tab/> * No parsing is needed if there is no data in database.</text:p><text:p text:style-name="P472"><text:soft-page-break/><text:tab/> */</text:p><text:p text:style-name="P472"><text:tab/>if (available == 0) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>return;</text:p><text:p text:style-name="P472"><text:tab/>}</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>if (available &lt; size) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>size = available;</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/><text:tab/>rates.resize(size);</text:p><text:p text:style-name="P472"><text:tab/>}</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>int intValue = 0;</text:p><text:p text:style-name="P472"><text:tab/>position = strstr(position, &quot;\n&quot;);</text:p><text:p text:style-name="P472"><text:tab/>while(position[0]==&apos;\r&apos; || position[0]==&apos;\n&apos;) position++;</text:p><text:p text:style-name="P472"><text:tab/>for (int i=0; i&lt;size; i++) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>intValue = 0;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>sscanf(position, &quot;%d&quot;, &amp;intValue);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>rates[i].time = intValue;</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/><text:tab/>if(i &lt; (size-1)) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>position = strstr(position, &quot; &quot;)+1;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>} else {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>position = strstr(position, &quot;\n&quot;);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P472"><text:tab/>}</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>double doubleValue = 0.0;</text:p><text:p text:style-name="P472"><text:tab/>position = strstr(position, &quot;\n&quot;);</text:p><text:p text:style-name="P472"><text:tab/>while(position[0]==&apos;\r&apos; || position[0]==&apos;\n&apos;) position++;</text:p><text:p text:style-name="P472"><text:tab/>for (int i=0; i&lt;size; i++) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>doubleValue = 0.0;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>sscanf(position, &quot;%lf&quot;, &amp;doubleValue);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>rates[i].open = doubleValue;</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/><text:tab/>if(i &lt; (size-1)) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>position = strstr(position, &quot; &quot;)+1;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>} else {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>position = strstr(position, &quot;\n&quot;);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P472"><text:tab/>}</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>position = strstr(position, &quot;\n&quot;);</text:p><text:p text:style-name="P472"><text:tab/>while(position[0]==&apos;\r&apos; || position[0]==&apos;\n&apos;) position++;</text:p><text:p text:style-name="P472"><text:tab/>for (int i=0; i&lt;size; i++) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>doubleValue = 0.0;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>sscanf(position, &quot;%lf&quot;, &amp;doubleValue);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>rates[i].low = doubleValue;</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/><text:tab/>if(i &lt; (size-1)) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>position = strstr(position, &quot; &quot;)+1;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>} else {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>position = strstr(position, &quot;\n&quot;);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P472"><text:tab/>}</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>position = strstr(position, &quot;\n&quot;);</text:p><text:p text:style-name="P472"><text:tab/>while(position[0]==&apos;\r&apos; || position[0]==&apos;\n&apos;) position++;</text:p><text:p text:style-name="P472"><text:tab/>for (int i=0; i&lt;size; i++) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>doubleValue = 0.0;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>sscanf(position, &quot;%lf&quot;, &amp;doubleValue);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>rates[i].high = doubleValue;</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/><text:tab/>if(i &lt; (size-1)) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>position = strstr(position, &quot; &quot;)+1;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>} else {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>position = strstr(position, &quot;\n&quot;);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P472"><text:tab/>}</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>position = strstr(position, &quot;\n&quot;);</text:p><text:p text:style-name="P472"><text:tab/>while(position[0]==&apos;\r&apos; || position[0]==&apos;\n&apos;) position++;</text:p><text:p text:style-name="P472"><text:tab/>for (int i=0; i&lt;size; i++) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>doubleValue = 0.0;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>sscanf(position, &quot;%lf&quot;, &amp;doubleValue);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>rates[i].close = doubleValue;</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/><text:tab/>if(i &lt; (size-1)) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>position = strstr(position, &quot; &quot;)+1;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>} else {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>position = strstr(position, &quot;\n&quot;);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P472"><text:tab/>}</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>position = strstr(position, &quot;\n&quot;);</text:p><text:p text:style-name="P472"><text:tab/>while(position[0]==&apos;\r&apos; || position[0]==&apos;\n&apos;) position++;</text:p><text:p text:style-name="P472"><text:tab/>for (int i=0; i&lt;size; i++) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>doubleValue = 0.0;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>sscanf(position, &quot;%lf&quot;, &amp;doubleValue);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>rates[i].volume = doubleValue;</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/><text:tab/>if(i &lt; (size-1)) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>position = strstr(position, &quot; &quot;)+1;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>} else {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>position = strstr(position, &quot;\n&quot;);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P472"><text:tab/>}</text:p><text:p text:style-name="P472">}</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472">double HttpCommunicator::loadRemoteBestFitness(char *symbol, TimePeriod period, NeuronsList &amp;neurons, ActivitiesMatrix &amp;activities) {</text:p><text:p text:style-name="P472"><text:tab/>char number[ 100 ];</text:p><text:p text:style-name="P472"><text:tab/>char parameters[ HTTP_PARAMETERS_BUFFER_SIZE ] = &quot;&quot;;</text:p><text:p text:style-name="P472"><text:tab/>char *position = parameters;</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>sprintf(position, &quot;symbol=%s&amp;&quot;, symbol);</text:p><text:p text:style-name="P472"><text:tab/>position += strlen(position);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>sprintf(position, &quot;period=%d&amp;&quot;, period);</text:p><text:p text:style-name="P472"><text:tab/>position += strlen(position);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>sprintf(position, &quot;number_of_neurons=%d&amp;&quot;, neurons.dimension());</text:p><text:p text:style-name="P472"><text:tab/>position += strlen(position);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>strcpy(buffer, &quot;&quot;);</text:p><text:p text:style-name="P472"><text:tab/>for (int i=0; i&lt;neurons.dimension(); i++) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>if (i &gt; 0) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>strcat(buffer, &quot; &quot;);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>sprintf(number, &quot;%d&quot;, neurons[i].getType());</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>strcat(buffer, number);</text:p><text:p text:style-name="P472"><text:tab/>}</text:p><text:p text:style-name="P472"><text:tab/>sprintf(position, &quot;flags=%s&amp;&quot;, buffer);</text:p><text:p text:style-name="P472"><text:tab/>position += strlen(position);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>strcpy(buffer, &quot;&quot;);</text:p><text:p text:style-name="P472"><text:tab/>for (int j=0; j&lt;neurons.dimension(); j++) {</text:p><text:p text:style-name="P472"><text:soft-page-break/><text:tab/><text:tab/>if (j &gt; 0) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>strcat(buffer, &quot;\n&quot;);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>for (int i=0; i&lt;neurons.dimension(); i++) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>if (i &gt; 0) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/><text:tab/>strcat(buffer, &quot; &quot;);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>sprintf(number, &quot;%lf&quot;, activities(i,j));</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>strcat(buffer, number);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P472"><text:tab/>}</text:p><text:p text:style-name="P472"><text:tab/>sprintf(position, &quot;activities=%s&quot;, buffer);</text:p><text:p text:style-name="P472"><text:tab/>position += strlen(position);</text:p><text:p text:style-name="P472"><text:tab/>strcpy(buffer, &quot;&quot;);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>HttpRequestResponse(buffer, parameters, HOST, LOAD_BEST_FITNESS_SCRIPT);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>position = buffer;</text:p><text:p text:style-name="P472"><text:tab/>double bestFitness = (double)RAND_MAX;</text:p><text:p text:style-name="P472"><text:tab/>sscanf(position, &quot;%lf&quot;, &amp;bestFitness);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>return( bestFitness );</text:p><text:p text:style-name="P472">}</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5808_1486593966"/><text:s text:c="4"/>HttpCommunicator.h<text:bookmark-end text:name="__RefHeading___Toc5808_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P472">/*******************************************************************************</text:p><text:p text:style-name="P472"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P472"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P472"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P472"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P472"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P472"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P472"><text:s/>* Copyright (C) 2008-2011 by Todor Balabanov <text:s/>( todor.balabanov@gmail.com ) <text:s text:c="2"/>*</text:p><text:p text:style-name="P472"><text:s/>* <text:s text:c="22"/>Iliyan Zankinski <text:s text:c="2"/>( iliyan_mf@abv.bg ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P472"><text:s/>* <text:s text:c="22"/>Momchil Anachkov <text:s text:c="2"/>( mZer0000@gmail.com ) <text:s text:c="12"/>*</text:p><text:p text:style-name="P472"><text:s/>* <text:s text:c="22"/>Daniel Chutrov <text:s text:c="4"/>( d.chutrov@gmail.com ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P472"><text:s/>* <text:s text:c="22"/>Nikola Simeonov <text:s text:c="3"/>( n.simeonow@gmail.com ) <text:s text:c="10"/>*</text:p><text:p text:style-name="P472"><text:s/>* <text:s text:c="22"/>Galq Cirkalova <text:s text:c="4"/>( galq_cirkalova@abv.bg ) <text:s text:c="9"/>*</text:p><text:p text:style-name="P472"><text:s/>* <text:s text:c="22"/>Ivan Grozev <text:s text:c="7"/>( ivan.iliev.grozev@gmail.com ) <text:s text:c="3"/>*</text:p><text:p text:style-name="P472"><text:s/>* <text:s text:c="22"/>Elisaveta Hristova ( elisaveta.s.hristova@gmail.com ) *</text:p><text:p text:style-name="P472"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P472"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P472"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P472"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P472"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P472"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P472"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P472"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P472"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P472"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P472"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P472"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P472"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P472"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P472"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472">#ifndef HTTP_COMMUNICATOR_H</text:p><text:p text:style-name="P472">#define HTTP_COMMUNICATOR_H</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472">#include &lt;vector&gt;</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472">#include &quot;Communicator.h&quot;</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472">/**</text:p><text:p text:style-name="P472"><text:s/>* Communication class used for HTTP data transfer between client module and</text:p><text:p text:style-name="P472"><text:s/>* server side business logic.</text:p><text:p text:style-name="P472"><text:s/>*</text:p><text:p text:style-name="P472"><text:s/>* @author Todor Balabanov</text:p><text:p text:style-name="P472"><text:s/>*</text:p><text:p text:style-name="P472"><text:s/>* @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P472"><text:s/>*</text:p><text:p text:style-name="P472"><text:s/>* @date 10 May 2009</text:p><text:p text:style-name="P472"><text:s/>*/</text:p><text:p text:style-name="P472">class HttpCommunicator : public Communicator {</text:p><text:p text:style-name="P472">private:</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>/**</text:p><text:p text:style-name="P472"><text:tab/> * String buffer size.</text:p><text:p text:style-name="P472"><text:tab/> */</text:p><text:p text:style-name="P472"><text:tab/>static const int HTTP_PARAMETERS_BUFFER_SIZE = 1000000;</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472">public:</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>/**</text:p><text:p text:style-name="P472"><text:tab/> * String buffer size.</text:p><text:p text:style-name="P472"><text:tab/> */</text:p><text:p text:style-name="P472"><text:tab/>static const int BUFFER_SIZE = 1000000;</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>/**</text:p><text:p text:style-name="P472"><text:tab/> * Remote host URL address.</text:p><text:p text:style-name="P472"><text:tab/> */</text:p><text:p text:style-name="P472"><text:tab/>static const char HOST[];</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>/**</text:p><text:p text:style-name="P472"><text:tab/> * Remote host port.</text:p><text:p text:style-name="P472"><text:tab/> */</text:p><text:p text:style-name="P472"><text:tab/>static const int PORT = 80;</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>/**</text:p><text:p text:style-name="P472"><text:tab/> * Remote script ANN list provider.</text:p><text:p text:style-name="P472"><text:tab/> */</text:p><text:p text:style-name="P472"><text:tab/>static const char LIST_OF_ANNS_SCRIPT[];</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>/**</text:p><text:p text:style-name="P472"><text:tab/> * Remote single ANN save script.</text:p><text:p text:style-name="P472"><text:tab/> */</text:p><text:p text:style-name="P472"><text:tab/>static const char SAVE_SINGLE_ANN_SCRIPT[];</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>/**</text:p><text:p text:style-name="P472"><text:tab/> * Remote ANN neurons amount load script.</text:p><text:p text:style-name="P472"><text:tab/> */</text:p><text:p text:style-name="P472"><text:tab/>static const char LOAD_NEURONS_AMOUNT_SCRIPT[];</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>/**</text:p><text:p text:style-name="P472"><text:tab/> * Remote single ANN load script.</text:p><text:p text:style-name="P472"><text:tab/> */</text:p><text:p text:style-name="P472"><text:tab/>static const char LOAD_SINGLE_ANN_SCRIPT[];</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:soft-page-break/><text:tab/>/**</text:p><text:p text:style-name="P472"><text:tab/> * Remote single ANN load script.</text:p><text:p text:style-name="P472"><text:tab/> */</text:p><text:p text:style-name="P472"><text:tab/>static const char LOAD_BEST_FITNESS_SCRIPT[];</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>/**</text:p><text:p text:style-name="P472"><text:tab/> * Remote training set size script.</text:p><text:p text:style-name="P472"><text:tab/> */</text:p><text:p text:style-name="P472"><text:tab/>static const char TRAINING_SET_SIZE_SCRIPT[];</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>/**</text:p><text:p text:style-name="P472"><text:tab/> * Remote training set save script.</text:p><text:p text:style-name="P472"><text:tab/> */</text:p><text:p text:style-name="P472"><text:tab/>static const char SAVE_TRAINING_SET_SCRIPT[];</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>/**</text:p><text:p text:style-name="P472"><text:tab/> * Remote training set load script.</text:p><text:p text:style-name="P472"><text:tab/> */</text:p><text:p text:style-name="P472"><text:tab/>static const char LOAD_TRAINING_SET_SCRIPT[];</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472">private:</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>/**</text:p><text:p text:style-name="P472"><text:tab/> * String buffer.</text:p><text:p text:style-name="P472"><text:tab/> */</text:p><text:p text:style-name="P472"><text:tab/>char buffer[ BUFFER_SIZE ];</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472">private:</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>/**</text:p><text:p text:style-name="P472"><text:tab/> * Universal HTTP request-response function.</text:p><text:p text:style-name="P472"><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @param response Response string as out parameter.</text:p><text:p text:style-name="P472"><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @param fields Key-valeu pairs sent by HTTP POST request.</text:p><text:p text:style-name="P472"><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @param host Remote site host name.</text:p><text:p text:style-name="P472"><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @param script Remote site script path and name.</text:p><text:p text:style-name="P472"><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @retrun Pointer to response array.</text:p><text:p text:style-name="P472"><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P472"><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P472"><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @date 17 May 2013</text:p><text:p text:style-name="P472"><text:tab/> */</text:p><text:p text:style-name="P472"><text:tab/>const char* HttpRequestResponse(char *response, const char* fields, const char* host, const char* script);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472">public:</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>/**</text:p><text:p text:style-name="P472"><text:tab/> * Load list with ANNs.</text:p><text:p text:style-name="P472"><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @param list List of ANN ids on the server side.</text:p><text:p text:style-name="P472"><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @param annId Id of ANN to be used as selection parameter.</text:p><text:p text:style-name="P472"><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @param symbol MetaTrader 4 chart currency pair symbol.</text:p><text:p text:style-name="P472"><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @param period MetaTrader 4 chart time period.</text:p><text:p text:style-name="P472"><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P472"><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P472"><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @date 10 May 2009</text:p><text:p text:style-name="P472"><text:tab/> */</text:p><text:p text:style-name="P472"><text:tab/>virtual void loadAnnList(std::vector&lt;int&gt; &amp;list, int annId, char symbol[], TimePeriod period);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>/**</text:p><text:p text:style-name="P472"><text:tab/> * Allocate memory and load ANN and DE objects.</text:p><text:p text:style-name="P472"><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @param ann Not allocated artificial nerural network object pointer with</text:p><text:p text:style-name="P472"><text:tab/> * value NULL.</text:p><text:p text:style-name="P472"><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @param <text:s/>de Not allocated differential evolution object pointer with</text:p><text:p text:style-name="P472"><text:tab/> * value NULL.</text:p><text:p text:style-name="P472"><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @param symbol MetaTrader 4 chart currency pair symbol.</text:p><text:p text:style-name="P472"><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @param period MetaTrader 4 chart time period.</text:p><text:p text:style-name="P472"><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @param parameters All other netwrok parameters.</text:p><text:p text:style-name="P472"><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P472"><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P472"><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @date 26 Aug 2009</text:p><text:p text:style-name="P472"><text:tab/> */</text:p><text:p text:style-name="P472"><text:tab/>virtual void loadTrainerObjects(Counter &amp;counters, ANN &amp;ann, DE &amp;de, char symbol[], TimePeriod period, const ModelParameters &amp;parameters);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>/**</text:p><text:p text:style-name="P472"><text:tab/> * Save single ANN record on the remote side server.</text:p><text:p text:style-name="P472"><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @param symbol Currency pair symbol.</text:p><text:p text:style-name="P472"><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @param period Currency chart period.</text:p><text:p text:style-name="P472"><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @param fitness Weights set fitness value.</text:p><text:p text:style-name="P472"><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @param numberOfNeurons Number of neurons used as topology.</text:p><text:p text:style-name="P472"><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @param flags Nurons flags.</text:p><text:p text:style-name="P472"><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @param weights Weights set.</text:p><text:p text:style-name="P472"><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @param activities Weights activities.</text:p><text:p text:style-name="P472"><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P472"><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P472"><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @date 10 May 2009</text:p><text:p text:style-name="P472"><text:tab/> */</text:p><text:p text:style-name="P472"><text:tab/>virtual void saveSingleANN(char *symbol, TimePeriod period, double fitness, NeuronsList &amp;neurons, WeightsMatrix &amp;weights, ActivitiesMatrix &amp;activities);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>/**</text:p><text:p text:style-name="P472"><text:tab/> * Load ANN neurons amount from DB.</text:p><text:p text:style-name="P472"><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @param annId Id of ANN to be used as selection parameter.</text:p><text:p text:style-name="P472"><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @return Neurons amount value.</text:p><text:p text:style-name="P472"><text:soft-page-break/><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @author Iliyan Zankinski</text:p><text:p text:style-name="P472"><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @email iliyan_mf@abv.bg</text:p><text:p text:style-name="P472"><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @date 01 Aug 2009</text:p><text:p text:style-name="P472"><text:tab/> */</text:p><text:p text:style-name="P472"><text:tab/>virtual int loadAnnNeuronsAmount(int annId);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>/**</text:p><text:p text:style-name="P472"><text:tab/> * Load single ANN objec record from remote server side.</text:p><text:p text:style-name="P472"><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @param annId Id of ANN to be used as selection parameter.</text:p><text:p text:style-name="P472"><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @param symbol Currency pair symbol.</text:p><text:p text:style-name="P472"><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @param period Currency chart period.</text:p><text:p text:style-name="P472"><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @param fitness Weights set fitness value.</text:p><text:p text:style-name="P472"><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @param numberOfNeurons Number of neurons used as topology. Neurons amount will be used only for new crated ANN.</text:p><text:p text:style-name="P472"><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @param flags Nurons flags.</text:p><text:p text:style-name="P472"><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @param weights Weights set.</text:p><text:p text:style-name="P472"><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @param activities Weights activities.</text:p><text:p text:style-name="P472"><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P472"><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P472"><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @date 26 Aug 2009</text:p><text:p text:style-name="P472"><text:tab/> */</text:p><text:p text:style-name="P472"><text:tab/>virtual void loadSingleANN(int annId, char *symbol, TimePeriod &amp;period, double &amp;fitness, NeuronsList &amp;neurons, WeightsMatrix &amp;weights, ActivitiesMatrix &amp;activities);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>/**</text:p><text:p text:style-name="P472"><text:tab/> * Load training set size from remote side server.</text:p><text:p text:style-name="P472"><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @param symbol Currency pair symbol.</text:p><text:p text:style-name="P472"><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @param period Currency chart period.</text:p><text:p text:style-name="P472"><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P472"><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P472"><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @date 23 Sep 2009</text:p><text:p text:style-name="P472"><text:tab/> */</text:p><text:p text:style-name="P472"><text:tab/>virtual int loadTrainingSetSize(char *symbol, TimePeriod period);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>/**</text:p><text:p text:style-name="P472"><text:tab/> * Save training set record on remote side server.</text:p><text:p text:style-name="P472"><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @param symbol Currency pair symbol.</text:p><text:p text:style-name="P472"><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @param period Currency chart period.</text:p><text:p text:style-name="P472"><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @param rates Rates values.</text:p><text:p text:style-name="P472"><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @param size Number of training set examples.</text:p><text:p text:style-name="P472"><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P472"><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P472"><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @date 22 Sep 2009</text:p><text:p text:style-name="P472"><text:tab/> */</text:p><text:p text:style-name="P472"><text:tab/>virtual void saveTrainingSet(char symbol[], TimePeriod period, const std::vector&lt;RateInfo&gt; &amp;rates, int size);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>/**</text:p><text:p text:style-name="P472"><text:tab/> * Load training set record from remote side server.</text:p><text:p text:style-name="P472"><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @param symbol Currency pair symbol.</text:p><text:p text:style-name="P472"><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @param period Currency chart period.</text:p><text:p text:style-name="P472"><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @param rates Rates values.</text:p><text:p text:style-name="P472"><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @param size Number of training set examples.</text:p><text:p text:style-name="P472"><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P472"><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P472"><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @date 22 Sep 2009</text:p><text:p text:style-name="P472"><text:tab/> */</text:p><text:p text:style-name="P472"><text:tab/>virtual void loadTrainingSet(char symbol[], TimePeriod period, std::vector&lt;RateInfo&gt; &amp;rates, int size);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>/**</text:p><text:p text:style-name="P472"><text:tab/> * Load remote server best known fitness for particular ANN kind.</text:p><text:p text:style-name="P472"><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @param symbol Currency pair symbol.</text:p><text:p text:style-name="P472"><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @param period MetaTrader 4 chart period.</text:p><text:p text:style-name="P472"><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @param numberOfNeurons Number of neurons used as topology.</text:p><text:p text:style-name="P472"><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @param flags Nurons flags.</text:p><text:p text:style-name="P472"><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @param activities Weights activities.</text:p><text:p text:style-name="P472"><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @return Best known server side fitness.</text:p><text:p text:style-name="P472"><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P472"><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P472"><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @date 10 May 2009</text:p><text:p text:style-name="P472"><text:tab/> */</text:p><text:p text:style-name="P472"><text:tab/>virtual double loadRemoteBestFitness(char *symbol, TimePeriod period, NeuronsList &amp;neurons, ActivitiesMatrix &amp;activities);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472">};</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472">#endif</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5810_1486593966"/><text:s text:c="4"/>Init.cpp<text:bookmark-end text:name="__RefHeading___Toc5810_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P472"><text:soft-page-break/>/*******************************************************************************</text:p><text:p text:style-name="P472"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P472"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P472"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P472"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P472"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P472"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P472"><text:s/>* Copyright (C) 2008-2011 by Todor Balabanov <text:s/>( todor.balabanov@gmail.com ) <text:s text:c="2"/>*</text:p><text:p text:style-name="P472"><text:s/>* <text:s text:c="22"/>Iliyan Zankinski <text:s text:c="2"/>( iliyan_mf@abv.bg ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P472"><text:s/>* <text:s text:c="22"/>Momchil Anachkov <text:s text:c="2"/>( mZer0000@gmail.com ) <text:s text:c="12"/>*</text:p><text:p text:style-name="P472"><text:s/>* <text:s text:c="22"/>Daniel Chutrov <text:s text:c="4"/>( d.chutrov@gmail.com ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P472"><text:s/>* <text:s text:c="22"/>Nikola Simeonov <text:s text:c="3"/>( n.simeonow@gmail.com ) <text:s text:c="10"/>*</text:p><text:p text:style-name="P472"><text:s/>* <text:s text:c="22"/>Galq Cirkalova <text:s text:c="4"/>( galq_cirkalova@abv.bg ) <text:s text:c="9"/>*</text:p><text:p text:style-name="P472"><text:s/>* <text:s text:c="22"/>Ivan Grozev <text:s text:c="7"/>( ivan.iliev.grozev@gmail.com ) <text:s text:c="3"/>*</text:p><text:p text:style-name="P472"><text:s/>* <text:s text:c="22"/>Elisaveta Hristova ( elisaveta.s.hristova@gmail.com ) *</text:p><text:p text:style-name="P472"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P472"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P472"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P472"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P472"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P472"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P472"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P472"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P472"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P472"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P472"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P472"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P472"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P472"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P472"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472">#include &lt;stdio.h&gt;</text:p><text:p text:style-name="P472">#include &lt;cstdlib&gt;</text:p><text:p text:style-name="P472">#include &lt;cstring&gt;</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472">#include &quot;Init.h&quot;</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472">const char Init::INI_FILE_NAME[] = &quot;VitoshaTrade.ini&quot;;</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472">const char Init::TEMP_FILE_NAME[] = &quot;VitoshaTrade.tmp&quot;;</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472">double Init::load(const char key[], double value) {</text:p><text:p text:style-name="P472"><text:tab/>FILE *in;</text:p><text:p text:style-name="P472"><text:tab/>double result = value;</text:p><text:p text:style-name="P472"><text:tab/>char buffer[ BUFFER_SIZE ];</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>/*</text:p><text:p text:style-name="P472"><text:tab/> * Create file if does not exist.</text:p><text:p text:style-name="P472"><text:tab/> */</text:p><text:p text:style-name="P472"><text:tab/>in = fopen(INI_FILE_NAME, &quot;at&quot;);</text:p><text:p text:style-name="P472"><text:tab/>fclose( in );</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>/*</text:p><text:p text:style-name="P472"><text:tab/> * Find key and read value.</text:p><text:p text:style-name="P472"><text:tab/> */</text:p><text:p text:style-name="P472"><text:tab/>in = fopen(INI_FILE_NAME, &quot;rt&quot;);</text:p><text:p text:style-name="P472"><text:tab/>while ( !feof(in) ) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>fscanf(in, &quot;%s&quot;, buffer);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>if (strstr(buffer,key) != NULL) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>char *position = strstr(buffer, &quot;:&quot;) + 1;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>sscanf(position, &quot;%lf&quot;, &amp;result);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P472"><text:tab/>}</text:p><text:p text:style-name="P472"><text:tab/>fclose( in );</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>return( result );</text:p><text:p text:style-name="P472">}</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472">void Init::save(const char key[], double value) {</text:p><text:p text:style-name="P472"><text:tab/>FILE *in;</text:p><text:p text:style-name="P472"><text:tab/>FILE *out;</text:p><text:p text:style-name="P472"><text:tab/>char buffer[ BUFFER_SIZE ] = &quot;&quot;;</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>/*</text:p><text:p text:style-name="P472"><text:tab/> * Create file if does not exist.</text:p><text:p text:style-name="P472"><text:tab/> */</text:p><text:p text:style-name="P472"><text:tab/>in = fopen(INI_FILE_NAME, &quot;at&quot;);</text:p><text:p text:style-name="P472"><text:tab/>fprintf(in, &quot;&quot;);</text:p><text:p text:style-name="P472"><text:tab/>fclose( in );</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>/*</text:p><text:p text:style-name="P472"><text:tab/> * Find key and write value.</text:p><text:p text:style-name="P472"><text:tab/> */</text:p><text:p text:style-name="P472"><text:tab/>bool found = false;</text:p><text:p text:style-name="P472"><text:tab/>in = fopen(INI_FILE_NAME, &quot;rt&quot;);</text:p><text:p text:style-name="P472"><text:tab/>out = fopen(TEMP_FILE_NAME, &quot;wt&quot;);</text:p><text:p text:style-name="P472"><text:tab/>while ( !feof(in) ) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>fscanf(in, &quot;%s\r\n&quot;, buffer);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>if (strstr(buffer,key) != NULL) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>fprintf(out, &quot;%s:%lf\r\n&quot;, key, value);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>found = true;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>} else {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>fprintf(out, &quot;%s\r\n&quot;, buffer);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P472"><text:tab/>}</text:p><text:p text:style-name="P472"><text:tab/>if (found == false) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>fprintf(out, &quot;%s:%lf\r\n&quot;, key, value);</text:p><text:p text:style-name="P472"><text:tab/>}</text:p><text:p text:style-name="P472"><text:tab/>fclose( out );</text:p><text:p text:style-name="P472"><text:tab/>fclose( in );</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>/*</text:p><text:p text:style-name="P472"><text:tab/> * Swap INI file.</text:p><text:p text:style-name="P472"><text:tab/> */</text:p><text:p text:style-name="P472"><text:tab/>remove( INI_FILE_NAME );</text:p><text:p text:style-name="P472"><text:tab/>rename(TEMP_FILE_NAME, INI_FILE_NAME);</text:p><text:p text:style-name="P472">}</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5812_1486593966"/><text:s text:c="4"/>Init.h<text:bookmark-end text:name="__RefHeading___Toc5812_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P472">/*******************************************************************************</text:p><text:p text:style-name="P472"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P472"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P472"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P472"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P472"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P472"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P472"><text:s/>* Copyright (C) 2008-2011 by Todor Balabanov <text:s/>( todor.balabanov@gmail.com ) <text:s text:c="2"/>*</text:p><text:p text:style-name="P472"><text:s/>* <text:s text:c="22"/>Iliyan Zankinski <text:s text:c="2"/>( iliyan_mf@abv.bg ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P472"><text:soft-page-break/><text:s/>* <text:s text:c="22"/>Momchil Anachkov <text:s text:c="2"/>( mZer0000@gmail.com ) <text:s text:c="12"/>*</text:p><text:p text:style-name="P472"><text:s/>* <text:s text:c="22"/>Daniel Chutrov <text:s text:c="4"/>( d.chutrov@gmail.com ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P472"><text:s/>* <text:s text:c="22"/>Nikola Simeonov <text:s text:c="3"/>( n.simeonow@gmail.com ) <text:s text:c="10"/>*</text:p><text:p text:style-name="P472"><text:s/>* <text:s text:c="22"/>Galq Cirkalova <text:s text:c="4"/>( galq_cirkalova@abv.bg ) <text:s text:c="9"/>*</text:p><text:p text:style-name="P472"><text:s/>* <text:s text:c="22"/>Ivan Grozev <text:s text:c="7"/>( ivan.iliev.grozev@gmail.com ) <text:s text:c="3"/>*</text:p><text:p text:style-name="P472"><text:s/>* <text:s text:c="22"/>Elisaveta Hristova ( elisaveta.s.hristova@gmail.com ) *</text:p><text:p text:style-name="P472"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P472"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P472"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P472"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P472"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P472"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P472"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P472"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P472"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P472"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P472"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P472"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P472"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P472"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P472"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472">#ifndef INIT_H</text:p><text:p text:style-name="P472">#define INIT_H</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472">/**</text:p><text:p text:style-name="P472"><text:s/>* Initializer class used with INI file.</text:p><text:p text:style-name="P472"><text:s/>*</text:p><text:p text:style-name="P472"><text:s/>* @author Todor Balabanov</text:p><text:p text:style-name="P472"><text:s/>*</text:p><text:p text:style-name="P472"><text:s/>* @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P472"><text:s/>*</text:p><text:p text:style-name="P472"><text:s/>* @date 26 Aug 2009</text:p><text:p text:style-name="P472"><text:s/>*/</text:p><text:p text:style-name="P472">class Init {</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472">public:</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>/**</text:p><text:p text:style-name="P472"><text:tab/> * String buffer size.</text:p><text:p text:style-name="P472"><text:tab/> */</text:p><text:p text:style-name="P472"><text:tab/>static const int BUFFER_SIZE = 100;</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>/**</text:p><text:p text:style-name="P472"><text:tab/> * Name of the INI file.</text:p><text:p text:style-name="P472"><text:tab/> */</text:p><text:p text:style-name="P472"><text:tab/>static const char INI_FILE_NAME[];</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>/**</text:p><text:p text:style-name="P472"><text:tab/> * Name of the temp file.</text:p><text:p text:style-name="P472"><text:tab/> */</text:p><text:p text:style-name="P472"><text:tab/>static const char TEMP_FILE_NAME[];</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472">public:</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>/**</text:p><text:p text:style-name="P472"><text:tab/> * Load value from INI file. If key is not found default value is returned.</text:p><text:p text:style-name="P472"><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @param key Key of the value.</text:p><text:p text:style-name="P472"><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @param value Default value.</text:p><text:p text:style-name="P472"><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @return Loaded value.</text:p><text:p text:style-name="P472"><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P472"><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P472"><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @date 26 Aug 2009</text:p><text:p text:style-name="P472"><text:tab/> */</text:p><text:p text:style-name="P472"><text:tab/>static double load(const char key[], double value);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>/**</text:p><text:p text:style-name="P472"><text:tab/> * Save value to INI file.</text:p><text:p text:style-name="P472"><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @param key Key of the value.</text:p><text:p text:style-name="P472"><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @param value Default value.</text:p><text:p text:style-name="P472"><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P472"><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P472"><text:tab/> *</text:p><text:p text:style-name="P472"><text:tab/> * @date 26 Aug 2009</text:p><text:p text:style-name="P472"><text:tab/> */</text:p><text:p text:style-name="P472"><text:tab/>static void save(const char key[], double value);</text:p><text:p text:style-name="P472">};</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472">#endif</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5814_1486593966"/><text:s text:c="4"/>JsonHttpCommunicator.cpp<text:bookmark-end text:name="__RefHeading___Toc5814_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P472">/*******************************************************************************</text:p><text:p text:style-name="P472"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P472"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P472"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P472"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P472"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P472"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P472"><text:s/>* Copyright (C) 2008-2011 by Todor Balabanov <text:s/>( todor.balabanov@gmail.com ) <text:s text:c="2"/>*</text:p><text:p text:style-name="P472"><text:s/>* <text:s text:c="22"/>Iliyan Zankinski <text:s text:c="2"/>( iliyan_mf@abv.bg ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P472"><text:s/>* <text:s text:c="22"/>Momchil Anachkov <text:s text:c="2"/>( mZer0000@gmail.com ) <text:s text:c="12"/>*</text:p><text:p text:style-name="P472"><text:s/>* <text:s text:c="22"/>Daniel Chutrov <text:s text:c="4"/>( d.chutrov@gmail.com ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P472"><text:s/>* <text:s text:c="22"/>Nikola Simeonov <text:s text:c="3"/>( n.simeonow@gmail.com ) <text:s text:c="10"/>*</text:p><text:p text:style-name="P472"><text:s/>* <text:s text:c="22"/>Galq Cirkalova <text:s text:c="4"/>( galq_cirkalova@abv.bg ) <text:s text:c="9"/>*</text:p><text:p text:style-name="P472"><text:s/>* <text:s text:c="22"/>Ivan Grozev <text:s text:c="7"/>( ivan.iliev.grozev@gmail.com ) <text:s text:c="3"/>*</text:p><text:p text:style-name="P472"><text:s/>* <text:s text:c="22"/>Elisaveta Hristova ( elisaveta.s.hristova@gmail.com ) *</text:p><text:p text:style-name="P472"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P472"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P472"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P472"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P472"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P472"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P472"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P472"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P472"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P472"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P472"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P472"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P472"><text:soft-page-break/><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P472"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P472"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472">#include &lt;cstdio&gt;</text:p><text:p text:style-name="P472">#include &lt;vector&gt;</text:p><text:p text:style-name="P472">#include &lt;cstdlib&gt;</text:p><text:p text:style-name="P472">#include &lt;cstring&gt;</text:p><text:p text:style-name="P472">#include &lt;climits&gt;</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472">#include &quot;curl/curl.h&quot;</text:p><text:p text:style-name="P472">#include &quot;libjson/libjson.h&quot;</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472">#include &quot;DE.h&quot;</text:p><text:p text:style-name="P472">#include &quot;ANN.h&quot;</text:p><text:p text:style-name="P472">#include &quot;NeuronsList.h&quot;</text:p><text:p text:style-name="P472">#include &quot;ActivitiesMatrix.h&quot;</text:p><text:p text:style-name="P472">#include &quot;TrainingExample.h&quot;</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472">#include &quot;JsonHttpCommunicator.h&quot;</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472">#define MSG_WAITALL 0x0</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472">const char JsonHttpCommunicator::HOST[] = &quot;localhost&quot;;</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472">const char JsonHttpCommunicator::LIST_OF_ANNS_SCRIPT[] = &quot;/logic/json_number_of_anns.php&quot;;</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472">const char JsonHttpCommunicator::SAVE_SINGLE_ANN_SCRIPT[] = &quot;/logic/save_ann.php&quot;;</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472">const char JsonHttpCommunicator::LOAD_NEURONS_AMOUNT_SCRIPT[] = &quot;/logic/json_load_neurons_amount.php&quot;;</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472">const char JsonHttpCommunicator::LOAD_SINGLE_ANN_SCRIPT[] = &quot;/logic/json_load_ann.php&quot;;</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472">const char JsonHttpCommunicator::LOAD_BEST_FITNESS_SCRIPT[] = &quot;/logic/json_load_best_fitness.php&quot;;</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472">const char JsonHttpCommunicator::TRAINING_SET_SIZE_SCRIPT[] = &quot;/logic/json_training_set_size.php&quot;;</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472">const char JsonHttpCommunicator::SAVE_TRAINING_SET_SCRIPT[] = &quot;/logic/save_training_set.php&quot;;</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472">const char JsonHttpCommunicator::LOAD_TRAINING_SET_SCRIPT[] = &quot;/logic/json_load_training_set.php&quot;;</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472">struct MemoryStruct {</text:p><text:p text:style-name="P472"><text:tab/>char *memory;</text:p><text:p text:style-name="P472"><text:tab/>size_t size;</text:p><text:p text:style-name="P472">};</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472">static size_t WriteMemoryCallback(void *contents, size_t size, size_t nmemb, void *userp) {</text:p><text:p text:style-name="P472"><text:tab/>size_t realsize = size * nmemb;</text:p><text:p text:style-name="P472"><text:tab/>struct MemoryStruct *mem = (struct MemoryStruct *)userp;</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>mem-&gt;memory = (char*)realloc(mem-&gt;memory, mem-&gt;size + realsize + 1);</text:p><text:p text:style-name="P472"><text:tab/>if(mem-&gt;memory == NULL) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>return 0;</text:p><text:p text:style-name="P472"><text:tab/>}</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>memcpy(&amp;(mem-&gt;memory[mem-&gt;size]), contents, realsize);</text:p><text:p text:style-name="P472"><text:tab/>mem-&gt;size += realsize;</text:p><text:p text:style-name="P472"><text:tab/>mem-&gt;memory[mem-&gt;size] = 0;</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>return realsize;</text:p><text:p text:style-name="P472">}</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472">const char* JsonHttpCommunicator::HttpRequestResponse(char *response, const char* fields, const char* host, const char* script) {</text:p><text:p text:style-name="P472"><text:tab/>CURL *curl;</text:p><text:p text:style-name="P472"><text:tab/>CURLcode result;</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>struct MemoryStruct chunk;</text:p><text:p text:style-name="P472"><text:tab/>chunk.memory = (char*)malloc(1);</text:p><text:p text:style-name="P472"><text:tab/>chunk.size = 0;</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>curl_global_init(CURL_GLOBAL_ALL);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>curl = curl_easy_init();</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>if(curl == NULL) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>throw( &quot;JsonHttpCommunicator00214&quot; );</text:p><text:p text:style-name="P472"><text:tab/>}</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>sprintf(buffer, &quot;http://%s%s&quot;, host, script);</text:p><text:p text:style-name="P472"><text:tab/>curl_easy_setopt(curl, CURLOPT_URL, buffer);</text:p><text:p text:style-name="P472"><text:tab/>curl_easy_setopt(curl, CURLOPT_POST, 1);</text:p><text:p text:style-name="P472"><text:tab/>curl_easy_setopt(curl, CURLOPT_POSTFIELDS, fields);</text:p><text:p text:style-name="P472"><text:tab/>curl_easy_setopt(curl, CURLOPT_POSTFIELDSIZE, strlen(fields));</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>curl_easy_setopt(curl, CURLOPT_NOPROGRESS, 1L);</text:p><text:p text:style-name="P472"><text:tab/>curl_easy_setopt(curl, CURLOPT_WRITEFUNCTION, WriteMemoryCallback);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>curl_easy_setopt(curl, CURLOPT_WRITEDATA, (void *)(&amp;chunk));</text:p><text:p text:style-name="P472"><text:tab/>curl_easy_setopt(curl, CURLOPT_USERAGENT, &quot;libcurl-agent/1.0&quot;);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>result = curl_easy_perform(curl);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>if(result != CURLE_OK) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>throw( &quot;JsonHttpCommunicator00215&quot; );</text:p><text:p text:style-name="P472"><text:tab/>}</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>curl_easy_cleanup(curl);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>memcpy(response, chunk.memory, sizeof(char)*(chunk.size+1));</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>if(chunk.memory) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>free(chunk.memory);</text:p><text:p text:style-name="P472"><text:tab/>}</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>curl_global_cleanup();</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>return(response);</text:p><text:p text:style-name="P472">}</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472">void JsonHttpCommunicator::parseJsonLoadRemoteBestFitness(const JSONNode &amp;node, double &amp;fitness, const bool initialCall) {</text:p><text:p text:style-name="P472"><text:tab/>for(JSONNode::const_iterator i = node.begin(); i!=node.end(); ++i) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>std::string node_name = i -&gt; name();</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P472"><text:tab/><text:tab/> * Store values into proper object filds.</text:p><text:p text:style-name="P472"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>if (node_name == &quot;fitness&quot;) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>fitness = i-&gt;as_float();</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P472"><text:tab/><text:tab/> * Recursively call ourselves to dig deeper into the tree.</text:p><text:p text:style-name="P472"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>if (i -&gt; type() == JSON_ARRAY || i -&gt; type() == JSON_NODE) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>parseJsonLoadRemoteBestFitness(*i, fitness, false);</text:p><text:p text:style-name="P472"><text:soft-page-break/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P472"><text:tab/>}</text:p><text:p text:style-name="P472">}</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472">void JsonHttpCommunicator::parseJsonLoadAnnNeuronsAmount(const JSONNode &amp;node, int &amp;amount, const bool initialCall) {</text:p><text:p text:style-name="P472"><text:tab/>for(JSONNode::const_iterator i = node.begin(); i!=node.end(); ++i) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>std::string node_name = i -&gt; name();</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P472"><text:tab/><text:tab/> * Store values into proper object filds.</text:p><text:p text:style-name="P472"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>if (node_name == &quot;neuronsAmount&quot;) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>amount = i-&gt;as_int();</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P472"><text:tab/><text:tab/> * Recursively call ourselves to dig deeper into the tree.</text:p><text:p text:style-name="P472"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>if (i -&gt; type() == JSON_ARRAY || i -&gt; type() == JSON_NODE) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>parseJsonLoadAnnNeuronsAmount(*i, amount, false);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P472"><text:tab/>}</text:p><text:p text:style-name="P472">}</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472">void JsonHttpCommunicator::parseJsonLoadTrainingSetSize(const JSONNode &amp;node, int &amp;size, const bool initialCall) {</text:p><text:p text:style-name="P472"><text:tab/>for(JSONNode::const_iterator i = node.begin(); i!=node.end(); ++i) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>std::string node_name = i -&gt; name();</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P472"><text:tab/><text:tab/> * Store values into proper object filds.</text:p><text:p text:style-name="P472"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>if (node_name == &quot;numberOfExamples&quot;) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>size = i-&gt;as_int();</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P472"><text:tab/><text:tab/> * Recursively call ourselves to dig deeper into the tree.</text:p><text:p text:style-name="P472"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>if (i -&gt; type() == JSON_ARRAY || i -&gt; type() == JSON_NODE) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>parseJsonLoadTrainingSetSize(*i, size, false);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P472"><text:tab/>}</text:p><text:p text:style-name="P472">}</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472">void JsonHttpCommunicator::parseJsonLoadAnnList(const JSONNode &amp;node, std::vector&lt;int&gt; &amp;list, const bool initialCall) {</text:p><text:p text:style-name="P472"><text:tab/>static int size = 0;</text:p><text:p text:style-name="P472"><text:tab/>static int identifiersCounter = 0;</text:p><text:p text:style-name="P472"><text:tab/>static std::string array = &quot;&quot;;</text:p><text:p text:style-name="P472"><text:tab/>if(initialCall == true) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>size = 0;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>identifiersCounter = 0;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>array = &quot;&quot;;</text:p><text:p text:style-name="P472"><text:tab/>}</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>for(JSONNode::const_iterator i = node.begin(); i!=node.end(); ++i) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>std::string node_name = i -&gt; name();</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P472"><text:tab/><text:tab/> * Store values into proper object filds.</text:p><text:p text:style-name="P472"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>if (node_name == &quot;size&quot;) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>size = i-&gt;as_int();</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>} else if (node_name == &quot;identifiers&quot;) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>array = &quot;identifiers&quot;;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>} else if (array == &quot;identifiers&quot;) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>list.push_back( i-&gt;as_int() );</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>identifiersCounter++;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P472"><text:tab/><text:tab/> * Recursively call ourselves to dig deeper into the tree.</text:p><text:p text:style-name="P472"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>if (i -&gt; type() == JSON_ARRAY || i -&gt; type() == JSON_NODE) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>parseJsonLoadAnnList(*i, list, false);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P472"><text:tab/>}</text:p><text:p text:style-name="P472">}</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472">void JsonHttpCommunicator::parseJsonLoadTrainingSet(const JSONNode &amp;node, std::vector&lt;RateInfo&gt; &amp;rates, const bool initialCall) {</text:p><text:p text:style-name="P472"><text:tab/>static std::string array = &quot;&quot;;</text:p><text:p text:style-name="P472"><text:tab/>static int timeCounter = 0;</text:p><text:p text:style-name="P472"><text:tab/>static int openCounter = 0;</text:p><text:p text:style-name="P472"><text:tab/>static int lowCounter = 0;</text:p><text:p text:style-name="P472"><text:tab/>static int highCounter = 0;</text:p><text:p text:style-name="P472"><text:tab/>static int closeCounter = 0;</text:p><text:p text:style-name="P472"><text:tab/>static int volumeCounter = 0;</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>for(JSONNode::const_iterator i = node.begin(); i!=node.end(); ++i) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>std::string node_name = i -&gt; name();</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P472"><text:tab/><text:tab/> * Store values into proper object filds.</text:p><text:p text:style-name="P472"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>if (node_name == &quot;numberOfExamples&quot;) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>//TODO May be it is better to clear the vector.</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>//TODO Find better way to deal with the parallel arrays.</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>for(int j=i-&gt;as_int(); j&gt;0; j--) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/><text:tab/>//TODO Possible problems with local variables.</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/><text:tab/>rates.push_back( RateInfo() );</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>} else if (node_name == &quot;time&quot;) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>array = &quot;time&quot;;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>} else if (node_name == &quot;open&quot;) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>array = &quot;open&quot;;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>} else if (node_name == &quot;low&quot;) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>array = &quot;low&quot;;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>} else if (node_name == &quot;high&quot;) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>array = &quot;high&quot;;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>} else if (node_name == &quot;close&quot;) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>array = &quot;close&quot;;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>} else if (node_name == &quot;volume&quot;) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>array = &quot;volume&quot;;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>} else if (array == &quot;time&quot;) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>rates[timeCounter].time = i-&gt;as_int();</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>timeCounter++;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>} else if (array == &quot;open&quot;) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>rates[openCounter].open = i-&gt;as_float();</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>openCounter++;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>} else if (array == &quot;low&quot;) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>rates[lowCounter].low = i-&gt;as_float();</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>lowCounter++;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>} else if (array == &quot;high&quot;) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>rates[highCounter].high = i-&gt;as_float();</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>highCounter++;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>} else if (array == &quot;close&quot;) {</text:p><text:p text:style-name="P472"><text:soft-page-break/><text:tab/><text:tab/><text:tab/>rates[closeCounter].close = i-&gt;as_float();</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>closeCounter++;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>} else if (array == &quot;volume&quot;) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>rates[volumeCounter].volume = i-&gt;as_int();</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>volumeCounter++;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P472"><text:tab/><text:tab/> * Recursively call ourselves to dig deeper into the tree.</text:p><text:p text:style-name="P472"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>if (i -&gt; type() == JSON_ARRAY || i -&gt; type() == JSON_NODE) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>parseJsonLoadTrainingSet(*i, rates, false);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P472"><text:tab/>}</text:p><text:p text:style-name="P472">}</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472">void JsonHttpCommunicator::parseJsonLoadSingleANN(const JSONNode &amp;node, bool &amp;available, char *symbol, TimePeriod &amp;period, double &amp;fitness, NeuronsList &amp;neurons, WeightsMatrix &amp;weights, ActivitiesMatrix &amp;activities, const bool initialCall) {</text:p><text:p text:style-name="P472"><text:tab/>static int size = 0;</text:p><text:p text:style-name="P472"><text:tab/>static int numberOfNeurons = 0;</text:p><text:p text:style-name="P472"><text:tab/>static int flagsCounter = 0;</text:p><text:p text:style-name="P472"><text:tab/>static int weightsCounter = 0;</text:p><text:p text:style-name="P472"><text:tab/>static int activitiesCounter = 0;</text:p><text:p text:style-name="P472"><text:tab/>static std::string array = &quot;&quot;;</text:p><text:p text:style-name="P472"><text:tab/>if(initialCall == true) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>size = 0;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>numberOfNeurons = 0;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>flagsCounter = 0;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>weightsCounter = 0;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>activitiesCounter = 0;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>array = &quot;&quot;;</text:p><text:p text:style-name="P472"><text:tab/>}</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>if(available == false) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>return;</text:p><text:p text:style-name="P472"><text:tab/>}</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>for(JSONNode::const_iterator i = node.begin(); i!=node.end(); ++i) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>std::string node_name = i -&gt; name();</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P472"><text:tab/><text:tab/> * Store values into proper object filds.</text:p><text:p text:style-name="P472"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>if (node_name == &quot;size&quot;) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>size = i-&gt;as_int();</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>if(size == 0) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/><text:tab/>available = false;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>} else if (node_name == &quot;symbol&quot;) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>strcpy(symbol, (i-&gt;as_string()).c_str());</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>} else if (node_name == &quot;period&quot;) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>switch (i-&gt;as_int()) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>case 1:</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/><text:tab/>period = M1;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>case 5:</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/><text:tab/>period = M5;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>case 15:</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/><text:tab/>period = M15;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>case 30:</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/><text:tab/>period = M30;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>case 60:</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/><text:tab/>period = H1;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>case 240:</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/><text:tab/>period = H4;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>case 1440:</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/><text:tab/>period = D1;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>case 10080:</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/><text:tab/>period = W1;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>case 43200:</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/><text:tab/>period = MN1;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>default:</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/><text:tab/>period = NO;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>} else if (node_name == &quot;fitness&quot;) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>fitness = i-&gt;as_float();</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>} else if (node_name == &quot;numberOfNeurons&quot;) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>numberOfNeurons = i-&gt;as_int();</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>} else if (node_name == &quot;flags&quot;) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>array = &quot;flags&quot;;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>//TODO May be it will need to fill the data container with empty objects.</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>} else if (node_name == &quot;weights&quot;) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>array = &quot;weights&quot;;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>//TODO May be it will need to fill the data container with empty objects.</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>} else if (node_name == &quot;activities&quot;) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>array = &quot;activities&quot;;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>//TODO May be it will need to fill the data container with empty objects.</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>} else if (array == &quot;flags&quot;) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>switch (i-&gt;as_int()) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>case REGULAR:</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/><text:tab/>neurons[flagsCounter].setType( REGULAR );</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>case BIAS:</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/><text:tab/>neurons[flagsCounter].setType( BIAS );</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>case INPUT:</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/><text:tab/>neurons[flagsCounter].setType( INPUT );</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>case INPUT_BIAS:</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/><text:tab/>neurons[flagsCounter].setType( INPUT_BIAS );</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>case OUTPUT:</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/><text:tab/>neurons[flagsCounter].setType( OUTPUT );</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>case OUTPUT_BIAS:</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/><text:tab/>neurons[flagsCounter].setType( OUTPUT_BIAS );</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>case OUTPUT_INPUT:</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/><text:tab/>neurons[flagsCounter].setType( OUTPUT_INPUT );</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>case OUTPUT_INPUT_BIAS:</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/><text:tab/>neurons[flagsCounter].setType( OUTPUT_INPUT_BIAS );</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>default:</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/><text:tab/>neurons[flagsCounter].setType( REGULAR );</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P472"><text:soft-page-break/><text:tab/><text:tab/><text:tab/>flagsCounter++;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>//TODO After reading all numbers array value should be empty string.</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>} else if (array == &quot;weights&quot;) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>static int a = 0;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>static int b = 0;</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>//TODO There is a problem with extra reading of one more zero.</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>weights(a,b) = i-&gt;as_float();</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>a++;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>if(a &gt;= numberOfNeurons) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/><text:tab/>b++;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/><text:tab/>a = 0;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>weightsCounter++;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>//TODO After reading all numbers array value should be empty string.</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>} else if (array == &quot;activities&quot;) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>static int a = 0;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>static int b = 0;</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>//TODO There is a problem with extra reading of one more zero.</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>activities(a,b) = <text:s/>i-&gt;as_float();</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>a++;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>if(a &gt;= numberOfNeurons) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/><text:tab/>b++;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/><text:tab/>a = 0;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>activitiesCounter++;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>//TODO After reading all numbers array value should be empty string.</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P472"><text:tab/><text:tab/> * Recursively call ourselves to dig deeper into the tree.</text:p><text:p text:style-name="P472"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>if (i -&gt; type() == JSON_ARRAY || i -&gt; type() == JSON_NODE) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>parseJsonLoadSingleANN(*i, available, symbol, period, fitness, neurons, weights, activities, false);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P472"><text:tab/>}</text:p><text:p text:style-name="P472">}</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472">void JsonHttpCommunicator::loadAnnList(std::vector&lt;int&gt; &amp;list, int annId, char symbol[], TimePeriod period) {</text:p><text:p text:style-name="P472"><text:tab/>char parameters[ HTTP_PARAMETERS_BUFFER_SIZE ];</text:p><text:p text:style-name="P472"><text:tab/>char *position = parameters;</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>sprintf(position, &quot;annid=%d&amp;&quot;, annId);</text:p><text:p text:style-name="P472"><text:tab/>position += strlen(position);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>sprintf(position, &quot;symbol=%s&amp;&quot;, symbol);</text:p><text:p text:style-name="P472"><text:tab/>position += strlen(position);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>sprintf(position, &quot;period=%d&quot;, period);</text:p><text:p text:style-name="P472"><text:tab/>position += strlen(position);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>HttpRequestResponse(buffer, parameters, HOST, LIST_OF_ANNS_SCRIPT);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>list.clear();</text:p><text:p text:style-name="P472"><text:tab/>JSONNode node = libjson::parse(buffer);</text:p><text:p text:style-name="P472"><text:tab/>parseJsonLoadAnnList(node, list, true);</text:p><text:p text:style-name="P472">}</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472">int JsonHttpCommunicator::loadAnnNeuronsAmount(int annId) {</text:p><text:p text:style-name="P472"><text:tab/>char parameters[ HTTP_PARAMETERS_BUFFER_SIZE ];</text:p><text:p text:style-name="P472"><text:tab/>sprintf(parameters, &quot;annid=%d&quot;, annId);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>HttpRequestResponse(buffer, parameters, HOST, LOAD_NEURONS_AMOUNT_SCRIPT);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>/*</text:p><text:p text:style-name="P472"><text:tab/> * Parse result.</text:p><text:p text:style-name="P472"><text:tab/> */</text:p><text:p text:style-name="P472"><text:tab/>int amount = 0;</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>JSONNode node = libjson::parse(buffer);</text:p><text:p text:style-name="P472"><text:tab/>parseJsonLoadAnnNeuronsAmount(node, amount, true);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>return (amount);</text:p><text:p text:style-name="P472">}</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472">void JsonHttpCommunicator::loadTrainerObjects(Counter &amp;counters, ANN &amp;ann, DE &amp;de, char symbol[], TimePeriod period, const ModelParameters &amp;parameters) {</text:p><text:p text:style-name="P472"><text:tab/>std::vector&lt;int&gt; list(parameters.populationSize);</text:p><text:p text:style-name="P472"><text:tab/>int neuronsAmount = parameters.neuronsAmount;</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>/*</text:p><text:p text:style-name="P472"><text:tab/> * Load list with available ANNs.</text:p><text:p text:style-name="P472"><text:tab/> */</text:p><text:p text:style-name="P472"><text:tab/>int numberOfNeurons = loadAnnNeuronsAmount(parameters.dbId);</text:p><text:p text:style-name="P472"><text:tab/>loadAnnList(list, parameters.dbId, symbol, period);</text:p><text:p text:style-name="P472"><text:tab/>if (list.size()&gt;0 &amp;&amp; numberOfNeurons&gt;0) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>neuronsAmount = numberOfNeurons;</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/><text:tab/>ANN annInstance(&amp;counters, neuronsAmount, parameters.learn, parameters.forecast, period);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>ann = annInstance;</text:p><text:p text:style-name="P472"><text:tab/>} else if (list.size() == 0) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>neuronsAmount = parameters.neuronsAmount;</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P472"><text:tab/><text:tab/> * It is good new network to have at least neurons for input and output.</text:p><text:p text:style-name="P472"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>if(neuronsAmount &lt; (parameters.inputSize+parameters.outputSize)) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>neuronsAmount = parameters.inputSize+parameters.outputSize;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P472"><text:tab/><text:tab/> * Create new network if no record presented in database.</text:p><text:p text:style-name="P472"><text:tab/><text:tab/> * Input and output neurons should be specified on network creation.</text:p><text:p text:style-name="P472"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>ANN annInstance(&amp;counters, neuronsAmount, parameters.learn, parameters.forecast, period);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>ann = annInstance;</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>ann.setupInput( parameters.inputSize );</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>ann.setupOutput( parameters.outputSize );</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>ann.setupThreeLayers();</text:p><text:p text:style-name="P472"><text:tab/>}</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>/* Memory allocation. */ {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>DE deInstance(&amp;counters, &amp;ann, parameters.populationSize);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>de = deInstance;</text:p><text:p text:style-name="P472"><text:tab/>}</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>/*</text:p><text:p text:style-name="P472"><text:tab/> * Load DE with random values. It is useful in new ANN and DE creation.</text:p><text:p text:style-name="P472"><text:tab/> * Internal size of chromosomes should be given before initialization.</text:p><text:p text:style-name="P472"><text:tab/> */</text:p><text:p text:style-name="P472"><text:tab/>Population &amp;population = de.getPopulation();</text:p><text:p text:style-name="P472"><text:soft-page-break/><text:tab/>for(int i=0; i&lt;population.dimension(); i++) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>WeightsMatrix weights( ann.getNeurons().dimension() );</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>Chromosome chromosome(weights, (double)RAND_MAX);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>population[i] = chromosome;</text:p><text:p text:style-name="P472"><text:tab/>}</text:p><text:p text:style-name="P472"><text:tab/>//TODO Find better way to initialize random population with proper size of weight matrices.</text:p><text:p text:style-name="P472"><text:tab/>population.initRandom();</text:p><text:p text:style-name="P472"><text:tab/>//TODO This setter call may be is not needed.</text:p><text:p text:style-name="P472"><text:tab/>de.setPopulation( population );</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>/*</text:p><text:p text:style-name="P472"><text:tab/> * Load DB ANNs.</text:p><text:p text:style-name="P472"><text:tab/> */</text:p><text:p text:style-name="P472"><text:tab/>double fitness = (double)RAND_MAX;</text:p><text:p text:style-name="P472"><text:tab/>NeuronsList &amp;neurons = ann.getNeurons();</text:p><text:p text:style-name="P472"><text:tab/>ActivitiesMatrix &amp;activities = ann.getActivities();</text:p><text:p text:style-name="P472"><text:tab/>if (list.size()&gt;0 &amp;&amp; neurons.dimension()&gt;0 &amp;&amp; neurons.dimension()==neuronsAmount) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>Population &amp;population = de.getPopulation();</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>for (int i=0; i&lt;list.size(); i++) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>WeightsMatrix &amp;weights = population[i].getWeights();</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>//TODO Activities, symbol, period, number of neurons and flags can be loaded only once.</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>loadSingleANN(list[i], symbol, period, fitness, neurons, weights, activities);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>population[i].setFitness( fitness );</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>population[i].setWeights( weights );</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>de.setPopulation( population );</text:p><text:p text:style-name="P472"><text:tab/>}</text:p><text:p text:style-name="P472">}</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472">void JsonHttpCommunicator::saveSingleANN(char *symbol, TimePeriod period, double fitness, NeuronsList &amp;neurons, WeightsMatrix &amp;weights, ActivitiesMatrix &amp;activities) {</text:p><text:p text:style-name="P472"><text:tab/>char number[ 100 ];</text:p><text:p text:style-name="P472"><text:tab/>char parameters[ HTTP_PARAMETERS_BUFFER_SIZE ] = &quot;&quot;;</text:p><text:p text:style-name="P472"><text:tab/>char *position = parameters;</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>sprintf(position, &quot;symbol=%s&amp;&quot;, symbol);</text:p><text:p text:style-name="P472"><text:tab/>position += strlen(position);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>sprintf(position, &quot;period=%d&amp;&quot;, period);</text:p><text:p text:style-name="P472"><text:tab/>position += strlen(position);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>sprintf(position, &quot;fitness=%lf&amp;&quot;, fitness);</text:p><text:p text:style-name="P472"><text:tab/>position += strlen(position);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>sprintf(position, &quot;number_of_neurons=%d&amp;&quot;, neurons.dimension());</text:p><text:p text:style-name="P472"><text:tab/>position += strlen(position);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>strcpy(buffer, &quot;&quot;);</text:p><text:p text:style-name="P472"><text:tab/>for (int i=0; i&lt;neurons.dimension(); i++) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>if (i &gt; 0) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>strcat(buffer, &quot; &quot;);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>sprintf(number, &quot;%d&quot;, neurons[i].getType());</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>strcat(buffer, number);</text:p><text:p text:style-name="P472"><text:tab/>}</text:p><text:p text:style-name="P472"><text:tab/>sprintf(position, &quot;flags=%s&amp;&quot;, buffer);</text:p><text:p text:style-name="P472"><text:tab/>position += strlen(position);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>strcpy(buffer, &quot;&quot;);</text:p><text:p text:style-name="P472"><text:tab/>for (int j=0; j&lt;neurons.dimension(); j++) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>if (j &gt; 0) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>strcat(buffer, &quot;\n&quot;);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>for (int i=0; i&lt;neurons.dimension(); i++) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>if (i &gt; 0) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/><text:tab/>strcat(buffer, &quot; &quot;);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>sprintf(number, &quot;%lf&quot;, weights(i,j));</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>strcat(buffer, number);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P472"><text:tab/>}</text:p><text:p text:style-name="P472"><text:tab/>sprintf(position, &quot;weights=%s&amp;&quot;, buffer);</text:p><text:p text:style-name="P472"><text:tab/>position += strlen(position);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>strcpy(buffer, &quot;&quot;);</text:p><text:p text:style-name="P472"><text:tab/>for (int j=0; j&lt;neurons.dimension(); j++) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>if (j &gt; 0) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>strcat(buffer, &quot;\n&quot;);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>for (int i=0; i&lt;neurons.dimension(); i++) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>if (i &gt; 0) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/><text:tab/>strcat(buffer, &quot; &quot;);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>sprintf(number, &quot;%lf&quot;, activities(i,j));</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>strcat(buffer, number);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P472"><text:tab/>}</text:p><text:p text:style-name="P472"><text:tab/>sprintf(position, &quot;activities=%s&quot;, buffer);</text:p><text:p text:style-name="P472"><text:tab/>position += strlen(position);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>HttpRequestResponse(buffer, parameters, HOST, SAVE_SINGLE_ANN_SCRIPT);</text:p><text:p text:style-name="P472">}</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472">void JsonHttpCommunicator::loadSingleANN(int annId, char *symbol, TimePeriod &amp;period, double &amp;fitness, NeuronsList &amp;neurons, WeightsMatrix &amp;weights, ActivitiesMatrix &amp;activities) {</text:p><text:p text:style-name="P472"><text:tab/>char parameters[ HTTP_PARAMETERS_BUFFER_SIZE ] = &quot;&quot;;</text:p><text:p text:style-name="P472"><text:tab/>sprintf(parameters, &quot;annid=%d&quot;, annId);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>HttpRequestResponse(buffer, parameters, HOST, LOAD_SINGLE_ANN_SCRIPT);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>bool available = false;</text:p><text:p text:style-name="P472"><text:tab/>strcpy(symbol, &quot;&quot;);</text:p><text:p text:style-name="P472"><text:tab/>period = NO;</text:p><text:p text:style-name="P472"><text:tab/>fitness = (double)RAND_MAX;</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>JSONNode node = libjson::parse(buffer);</text:p><text:p text:style-name="P472"><text:tab/>parseJsonLoadSingleANN(node, available, symbol, period, fitness, neurons, weights, activities, true);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>if (available == false) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>throw( &quot;JsonHttpCommunicator00216&quot; );</text:p><text:p text:style-name="P472"><text:tab/>}</text:p><text:p text:style-name="P472">}</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472">int JsonHttpCommunicator::loadTrainingSetSize(char *symbol, TimePeriod period) {</text:p><text:p text:style-name="P472"><text:tab/>char parameters[ HTTP_PARAMETERS_BUFFER_SIZE ] = &quot;&quot;;</text:p><text:p text:style-name="P472"><text:tab/>sprintf(parameters, &quot;symbol=%s&amp;period=%d&quot;, symbol, period);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>HttpRequestResponse(buffer, parameters, HOST, TRAINING_SET_SIZE_SCRIPT);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>/*</text:p><text:p text:style-name="P472"><text:tab/> * Parse result.</text:p><text:p text:style-name="P472"><text:tab/> */</text:p><text:p text:style-name="P472"><text:tab/>int size = 0;</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>JSONNode node = libjson::parse(buffer);</text:p><text:p text:style-name="P472"><text:tab/>parseJsonLoadTrainingSetSize(node, size, true);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:soft-page-break/><text:tab/>return( size );</text:p><text:p text:style-name="P472">}</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472">void JsonHttpCommunicator::saveTrainingSet(char symbol[], TimePeriod period, const std::vector&lt;RateInfo&gt; &amp;rates, int size) {</text:p><text:p text:style-name="P472"><text:tab/>char number[ 100 ];</text:p><text:p text:style-name="P472"><text:tab/>char parameters[ HTTP_PARAMETERS_BUFFER_SIZE ] = &quot;&quot;;</text:p><text:p text:style-name="P472"><text:tab/>char *position = parameters;</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>size = rates.size();</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>sprintf(position, &quot;symbol=%s&amp;&quot;, symbol);</text:p><text:p text:style-name="P472"><text:tab/>position += strlen(position);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>sprintf(position, &quot;period=%d&amp;&quot;, period);</text:p><text:p text:style-name="P472"><text:tab/>position += strlen(position);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>sprintf(position, &quot;number_of_examples=%d&amp;&quot;, size);</text:p><text:p text:style-name="P472"><text:tab/>position += strlen(position);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>strcpy(buffer, &quot;&quot;);</text:p><text:p text:style-name="P472"><text:tab/>for (int i=0; i&lt;size; i++) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>if (i &gt; 0) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>strcat(buffer, &quot; &quot;);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>sprintf(number, &quot;%ld&quot;, rates[i].time);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>strcat(buffer, number);</text:p><text:p text:style-name="P472"><text:tab/>}</text:p><text:p text:style-name="P472"><text:tab/>sprintf(position, &quot;time=%s&amp;&quot;, buffer);</text:p><text:p text:style-name="P472"><text:tab/>position += strlen(position);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>strcpy(buffer, &quot;&quot;);</text:p><text:p text:style-name="P472"><text:tab/>for (int i=0; i&lt;size; i++) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>if (i &gt; 0) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>strcat(buffer, &quot; &quot;);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>sprintf(number, &quot;%lf&quot;, rates[i].open);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>strcat(buffer, number);</text:p><text:p text:style-name="P472"><text:tab/>}</text:p><text:p text:style-name="P472"><text:tab/>sprintf(position, &quot;open=%s&amp;&quot;, buffer);</text:p><text:p text:style-name="P472"><text:tab/>position += strlen(position);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>strcpy(buffer, &quot;&quot;);</text:p><text:p text:style-name="P472"><text:tab/>for (int i=0; i&lt;size; i++) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>if (i &gt; 0) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>strcat(buffer, &quot; &quot;);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>sprintf(number, &quot;%lf&quot;, rates[i].low);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>strcat(buffer, number);</text:p><text:p text:style-name="P472"><text:tab/>}</text:p><text:p text:style-name="P472"><text:tab/>sprintf(position, &quot;low=%s&amp;&quot;, buffer);</text:p><text:p text:style-name="P472"><text:tab/>position += strlen(position);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>strcpy(buffer, &quot;&quot;);</text:p><text:p text:style-name="P472"><text:tab/>for (int i=0; i&lt;size; i++) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>if (i &gt; 0) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>strcat(buffer, &quot; &quot;);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>sprintf(number, &quot;%lf&quot;, rates[i].high);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>strcat(buffer, number);</text:p><text:p text:style-name="P472"><text:tab/>}</text:p><text:p text:style-name="P472"><text:tab/>sprintf(position, &quot;high=%s&amp;&quot;, buffer);</text:p><text:p text:style-name="P472"><text:tab/>position += strlen(position);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>strcpy(buffer, &quot;&quot;);</text:p><text:p text:style-name="P472"><text:tab/>for (int i=0; i&lt;size; i++) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>if (i &gt; 0) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>strcat(buffer, &quot; &quot;);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>sprintf(number, &quot;%lf&quot;, rates[i].close);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>strcat(buffer, number);</text:p><text:p text:style-name="P472"><text:tab/>}</text:p><text:p text:style-name="P472"><text:tab/>sprintf(position, &quot;close=%s&amp;&quot;, buffer);</text:p><text:p text:style-name="P472"><text:tab/>position += strlen(position);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>strcpy(buffer, &quot;&quot;);</text:p><text:p text:style-name="P472"><text:tab/>for (int i=0; i&lt;size; i++) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>if (i &gt; 0) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>strcat(buffer, &quot; &quot;);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>sprintf(number, &quot;%lf&quot;, rates[i].volume);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>strcat(buffer, number);</text:p><text:p text:style-name="P472"><text:tab/>}</text:p><text:p text:style-name="P472"><text:tab/>sprintf(position, &quot;volume=%s&quot;, buffer);</text:p><text:p text:style-name="P472"><text:tab/>position += strlen(position);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>HttpRequestResponse(buffer, parameters, HOST, SAVE_TRAINING_SET_SCRIPT);</text:p><text:p text:style-name="P472">}</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472">void JsonHttpCommunicator::loadTrainingSet(char symbol[], TimePeriod period, std::vector&lt;RateInfo&gt; &amp;rates, int size) {</text:p><text:p text:style-name="P472"><text:tab/>char parameters[ HTTP_PARAMETERS_BUFFER_SIZE ] = &quot;&quot;;</text:p><text:p text:style-name="P472"><text:tab/>sprintf(parameters, &quot;symbol=%s&amp;period=%d&quot;, symbol, period);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>HttpRequestResponse(buffer, parameters, HOST, LOAD_TRAINING_SET_SCRIPT);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>rates.clear();</text:p><text:p text:style-name="P472"><text:tab/>JSONNode node = libjson::parse(buffer);</text:p><text:p text:style-name="P472"><text:tab/>parseJsonLoadTrainingSet(node, rates, true);</text:p><text:p text:style-name="P472">}</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472">double JsonHttpCommunicator::loadRemoteBestFitness(char *symbol, TimePeriod period, NeuronsList &amp;neurons, ActivitiesMatrix &amp;activities) {</text:p><text:p text:style-name="P472"><text:tab/>char number[ 100 ];</text:p><text:p text:style-name="P472"><text:tab/>char parameters[ HTTP_PARAMETERS_BUFFER_SIZE ] = &quot;&quot;;</text:p><text:p text:style-name="P472"><text:tab/>char *position = parameters;</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>sprintf(position, &quot;symbol=%s&amp;&quot;, symbol);</text:p><text:p text:style-name="P472"><text:tab/>position += strlen(position);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>sprintf(position, &quot;period=%d&amp;&quot;, period);</text:p><text:p text:style-name="P472"><text:tab/>position += strlen(position);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>sprintf(position, &quot;number_of_neurons=%d&amp;&quot;, neurons.dimension());</text:p><text:p text:style-name="P472"><text:tab/>position += strlen(position);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>strcpy(buffer, &quot;&quot;);</text:p><text:p text:style-name="P472"><text:tab/>for (int i=0; i&lt;neurons.dimension(); i++) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>if (i &gt; 0) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>strcat(buffer, &quot; &quot;);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>sprintf(number, &quot;%d&quot;, neurons[i].getType());</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>strcat(buffer, number);</text:p><text:p text:style-name="P472"><text:tab/>}</text:p><text:p text:style-name="P472"><text:tab/>sprintf(position, &quot;flags=%s&amp;&quot;, buffer);</text:p><text:p text:style-name="P472"><text:tab/>position += strlen(position);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>strcpy(buffer, &quot;&quot;);</text:p><text:p text:style-name="P472"><text:soft-page-break/><text:tab/>for (int j=0; j&lt;neurons.dimension(); j++) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>if (j &gt; 0) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>strcat(buffer, &quot;\n&quot;);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>for (int i=0; i&lt;neurons.dimension(); i++) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>if (i &gt; 0) {</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/><text:tab/>strcat(buffer, &quot; &quot;);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>sprintf(number, &quot;%lf&quot;, activities(i,j));</text:p><text:p text:style-name="P472"><text:tab/><text:tab/><text:tab/>strcat(buffer, number);</text:p><text:p text:style-name="P472"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P472"><text:tab/>}</text:p><text:p text:style-name="P472"><text:tab/>sprintf(position, &quot;activities=%s&quot;, buffer);</text:p><text:p text:style-name="P472"><text:tab/>position += strlen(position);</text:p><text:p text:style-name="P472"><text:tab/>strcpy(buffer, &quot;&quot;);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>HttpRequestResponse(buffer, parameters, HOST, LOAD_BEST_FITNESS_SCRIPT);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>double bestFitness = (double)RAND_MAX;</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>JSONNode node = libjson::parse(buffer);</text:p><text:p text:style-name="P472"><text:tab/>parseJsonLoadRemoteBestFitness(node, bestFitness, true);</text:p><text:p text:style-name="P472"/><text:p text:style-name="P472"><text:tab/>return( bestFitness );</text:p><text:p text:style-name="P472">}</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5816_1486593966"/><text:s text:c="4"/>JsonHttpCommunicator.h<text:bookmark-end text:name="__RefHeading___Toc5816_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P473">/*******************************************************************************</text:p><text:p text:style-name="P473"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P473"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P473"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P473"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P473"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P473"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P473"><text:s/>* Copyright (C) 2008-2011 by Todor Balabanov <text:s/>( todor.balabanov@gmail.com ) <text:s text:c="2"/>*</text:p><text:p text:style-name="P473"><text:s/>* <text:s text:c="22"/>Iliyan Zankinski <text:s text:c="2"/>( iliyan_mf@abv.bg ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P473"><text:s/>* <text:s text:c="22"/>Momchil Anachkov <text:s text:c="2"/>( mZer0000@gmail.com ) <text:s text:c="12"/>*</text:p><text:p text:style-name="P473"><text:s/>* <text:s text:c="22"/>Daniel Chutrov <text:s text:c="4"/>( d.chutrov@gmail.com ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P473"><text:s/>* <text:s text:c="22"/>Nikola Simeonov <text:s text:c="3"/>( n.simeonow@gmail.com ) <text:s text:c="10"/>*</text:p><text:p text:style-name="P473"><text:s/>* <text:s text:c="22"/>Galq Cirkalova <text:s text:c="4"/>( galq_cirkalova@abv.bg ) <text:s text:c="9"/>*</text:p><text:p text:style-name="P473"><text:s/>* <text:s text:c="22"/>Ivan Grozev <text:s text:c="7"/>( ivan.iliev.grozev@gmail.com ) <text:s text:c="3"/>*</text:p><text:p text:style-name="P473"><text:s/>* <text:s text:c="22"/>Elisaveta Hristova ( elisaveta.s.hristova@gmail.com ) *</text:p><text:p text:style-name="P473"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P473"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P473"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P473"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P473"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P473"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P473"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P473"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P473"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P473"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P473"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P473"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P473"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P473"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P473"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P473"/><text:p text:style-name="P473">#ifndef JSON_HTTP_COMMUNICATOR_H</text:p><text:p text:style-name="P473">#define JSON_HTTP_COMMUNICATOR_H</text:p><text:p text:style-name="P473"/><text:p text:style-name="P473">#include &lt;vector&gt;</text:p><text:p text:style-name="P473"/><text:p text:style-name="P473">#include &quot;libjson/libjson.h&quot;</text:p><text:p text:style-name="P473"/><text:p text:style-name="P473">#include &quot;RateInfo.h&quot;</text:p><text:p text:style-name="P473">#include &quot;Communicator.h&quot;</text:p><text:p text:style-name="P473"/><text:p text:style-name="P473">/**</text:p><text:p text:style-name="P473"><text:s/>* Communication class used for HTTP JSON data transfer between client module and</text:p><text:p text:style-name="P473"><text:s/>* server side business logic.</text:p><text:p text:style-name="P473"><text:s/>*</text:p><text:p text:style-name="P473"><text:s/>* @author Todor Balabanov</text:p><text:p text:style-name="P473"><text:s/>*</text:p><text:p text:style-name="P473"><text:s/>* @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P473"><text:s/>*</text:p><text:p text:style-name="P473"><text:s/>* @date 16 Sep 2013</text:p><text:p text:style-name="P473"><text:s/>*/</text:p><text:p text:style-name="P473">class JsonHttpCommunicator : public Communicator {</text:p><text:p text:style-name="P473">private:</text:p><text:p text:style-name="P473"/><text:p text:style-name="P473"><text:tab/>/**</text:p><text:p text:style-name="P473"><text:tab/> * String buffer size.</text:p><text:p text:style-name="P473"><text:tab/> */</text:p><text:p text:style-name="P473"><text:tab/>static const int HTTP_PARAMETERS_BUFFER_SIZE = 1000000;</text:p><text:p text:style-name="P473"/><text:p text:style-name="P473">public:</text:p><text:p text:style-name="P473"/><text:p text:style-name="P473"><text:tab/>/**</text:p><text:p text:style-name="P473"><text:tab/> * String buffer size.</text:p><text:p text:style-name="P473"><text:tab/> */</text:p><text:p text:style-name="P473"><text:tab/>static const int BUFFER_SIZE = 1000000;</text:p><text:p text:style-name="P473"/><text:p text:style-name="P473"><text:tab/>/**</text:p><text:p text:style-name="P473"><text:tab/> * Remote host URL address.</text:p><text:p text:style-name="P473"><text:tab/> */</text:p><text:p text:style-name="P473"><text:tab/>static const char HOST[];</text:p><text:p text:style-name="P473"/><text:p text:style-name="P473"><text:tab/>/**</text:p><text:p text:style-name="P473"><text:tab/> * Remote host port.</text:p><text:p text:style-name="P473"><text:tab/> */</text:p><text:p text:style-name="P473"><text:tab/>static const int PORT = 80;</text:p><text:p text:style-name="P473"/><text:p text:style-name="P473"><text:tab/>/**</text:p><text:p text:style-name="P473"><text:tab/> * Remote script ANN list provider.</text:p><text:p text:style-name="P473"><text:tab/> */</text:p><text:p text:style-name="P473"><text:tab/>static const char LIST_OF_ANNS_SCRIPT[];</text:p><text:p text:style-name="P473"/><text:p text:style-name="P473"><text:tab/>/**</text:p><text:p text:style-name="P473"><text:tab/> * Remote single ANN save script.</text:p><text:p text:style-name="P473"><text:tab/> */</text:p><text:p text:style-name="P473"><text:tab/>static const char SAVE_SINGLE_ANN_SCRIPT[];</text:p><text:p text:style-name="P473"/><text:p text:style-name="P473"><text:tab/>/**</text:p><text:p text:style-name="P473"><text:tab/> * Remote ANN neurons amount load script.</text:p><text:p text:style-name="P473"><text:tab/> */</text:p><text:p text:style-name="P473"><text:tab/>static const char LOAD_NEURONS_AMOUNT_SCRIPT[];</text:p><text:p text:style-name="P473"/><text:p text:style-name="P473"><text:soft-page-break/><text:tab/>/**</text:p><text:p text:style-name="P473"><text:tab/> * Remote single ANN load script.</text:p><text:p text:style-name="P473"><text:tab/> */</text:p><text:p text:style-name="P473"><text:tab/>static const char LOAD_SINGLE_ANN_SCRIPT[];</text:p><text:p text:style-name="P473"/><text:p text:style-name="P473"><text:tab/>/**</text:p><text:p text:style-name="P473"><text:tab/> * Remote single ANN load script.</text:p><text:p text:style-name="P473"><text:tab/> */</text:p><text:p text:style-name="P473"><text:tab/>static const char LOAD_BEST_FITNESS_SCRIPT[];</text:p><text:p text:style-name="P473"/><text:p text:style-name="P473"><text:tab/>/**</text:p><text:p text:style-name="P473"><text:tab/> * Remote training set size script.</text:p><text:p text:style-name="P473"><text:tab/> */</text:p><text:p text:style-name="P473"><text:tab/>static const char TRAINING_SET_SIZE_SCRIPT[];</text:p><text:p text:style-name="P473"/><text:p text:style-name="P473"><text:tab/>/**</text:p><text:p text:style-name="P473"><text:tab/> * Remote training set save script.</text:p><text:p text:style-name="P473"><text:tab/> */</text:p><text:p text:style-name="P473"><text:tab/>static const char SAVE_TRAINING_SET_SCRIPT[];</text:p><text:p text:style-name="P473"/><text:p text:style-name="P473"><text:tab/>/**</text:p><text:p text:style-name="P473"><text:tab/> * Remote training set load script.</text:p><text:p text:style-name="P473"><text:tab/> */</text:p><text:p text:style-name="P473"><text:tab/>static const char LOAD_TRAINING_SET_SCRIPT[];</text:p><text:p text:style-name="P473"/><text:p text:style-name="P473">private:</text:p><text:p text:style-name="P473"/><text:p text:style-name="P473"><text:tab/>/**</text:p><text:p text:style-name="P473"><text:tab/> * String buffer.</text:p><text:p text:style-name="P473"><text:tab/> */</text:p><text:p text:style-name="P473"><text:tab/>char buffer[ BUFFER_SIZE ];</text:p><text:p text:style-name="P473"/><text:p text:style-name="P473">private:</text:p><text:p text:style-name="P473"/><text:p text:style-name="P473"><text:tab/>/**</text:p><text:p text:style-name="P473"><text:tab/> * Universal HTTP request-response function.</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @param response Response string as out parameter.</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @param fields Key-valeu pairs sent by HTTP POST request.</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @param host Remote site host name.</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @param script Remote site script path and name.</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @retrun Pointer to response array.</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @date 16 Sep 2013</text:p><text:p text:style-name="P473"><text:tab/> */</text:p><text:p text:style-name="P473"><text:tab/>const char* HttpRequestResponse(char *response, const char* fields, const char* host, const char* script);</text:p><text:p text:style-name="P473"/><text:p text:style-name="P473"><text:tab/>/**</text:p><text:p text:style-name="P473"><text:tab/> * Load remote best fitness helper function.</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @param node JSON message as node.</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @param fitness Output parameter for remote best fitness value.</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @param initialCall Falg for recursive initial call.</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @date 13 Apr 2014</text:p><text:p text:style-name="P473"><text:tab/> */</text:p><text:p text:style-name="P473"><text:tab/>void parseJsonLoadRemoteBestFitness(const JSONNode &amp;node, double &amp;fitness, const bool initialCall);</text:p><text:p text:style-name="P473"/><text:p text:style-name="P473"><text:tab/>/**</text:p><text:p text:style-name="P473"><text:tab/> * Load ANN neurons amount helper function.</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @param node JSON message as node.</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @param amount Output parameter for amount of nurons in particular ANN.</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @param initialCall Falg for recursive initial call.</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @date 11 May 2014</text:p><text:p text:style-name="P473"><text:tab/> */</text:p><text:p text:style-name="P473"><text:tab/>void parseJsonLoadAnnNeuronsAmount(const JSONNode &amp;node, int &amp;amount, const bool initialCall);</text:p><text:p text:style-name="P473"/><text:p text:style-name="P473"><text:tab/>/**</text:p><text:p text:style-name="P473"><text:tab/> * Load training set size helper function.</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @param node JSON message as node.</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @param size Output parameter for training set size.</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @param initialCall Falg for recursive initial call.</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @date 11 May 2014</text:p><text:p text:style-name="P473"><text:tab/> */</text:p><text:p text:style-name="P473"><text:tab/>void parseJsonLoadTrainingSetSize(const JSONNode &amp;node, int &amp;size, const bool initialCall);</text:p><text:p text:style-name="P473"/><text:p text:style-name="P473"><text:tab/>/**</text:p><text:p text:style-name="P473"><text:tab/> * Load ANN ids list helper function.</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @param node JSON message as node.</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @param list Output parameter for ANN ids list.</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @param initialCall Falg for recursive initial call.</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @date 11 May 2014</text:p><text:p text:style-name="P473"><text:tab/> */</text:p><text:p text:style-name="P473"><text:tab/>void parseJsonLoadAnnList(const JSONNode &amp;node, std::vector&lt;int&gt; &amp;list, const bool initialCall);</text:p><text:p text:style-name="P473"/><text:p text:style-name="P473"><text:tab/>/**</text:p><text:p text:style-name="P473"><text:tab/> * Load training set helper function.</text:p><text:p text:style-name="P473"><text:soft-page-break/><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @param node JSON message as node.</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @param rates Output parameter for training set.</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @param initialCall Falg for recursive initial call.</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @date 11 May 2014</text:p><text:p text:style-name="P473"><text:tab/> */</text:p><text:p text:style-name="P473"><text:tab/>void parseJsonLoadTrainingSet(const JSONNode &amp;node, std::vector&lt;RateInfo&gt; &amp;rates, const bool initialCall);</text:p><text:p text:style-name="P473"/><text:p text:style-name="P473"><text:tab/>/**</text:p><text:p text:style-name="P473"><text:tab/> * Load training set helper function.</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @param node JSON message as node.</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @param available Is ANN available with this id.</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @param symbol Currency pair symbol.</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @param period Currency chart period.</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @param fitness Weights set fitness value.</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @param numberOfNeurons Number of neurons used as topology. Neurons amount will be used only for new crated ANN.</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @param flags Nurons flags.</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @param weights Weights set.</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @param activities Weights activities.</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @param initialCall Falg for recursive initial call.</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @date 25 May 2014</text:p><text:p text:style-name="P473"><text:tab/> */</text:p><text:p text:style-name="P473"><text:tab/>void parseJsonLoadSingleANN(const JSONNode &amp;node, bool &amp;available, char *symbol, TimePeriod &amp;period, double &amp;fitness, NeuronsList &amp;neurons, WeightsMatrix &amp;weights, ActivitiesMatrix &amp;activities, const bool initialCall);</text:p><text:p text:style-name="P473"/><text:p text:style-name="P473">public:</text:p><text:p text:style-name="P473"/><text:p text:style-name="P473"><text:tab/>/**</text:p><text:p text:style-name="P473"><text:tab/> * Load list with ANNs.</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @param list List of ANN ids on the server side.</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @param annId Id of ANN to be used as selection parameter.</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @param symbol MetaTrader 4 chart currency pair symbol.</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @param period MetaTrader 4 chart time period.</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @date 16 Sep 2013</text:p><text:p text:style-name="P473"><text:tab/> */</text:p><text:p text:style-name="P473"><text:tab/>virtual void loadAnnList(std::vector&lt;int&gt; &amp;list, int annId, char symbol[], TimePeriod period);</text:p><text:p text:style-name="P473"/><text:p text:style-name="P473"><text:tab/>/**</text:p><text:p text:style-name="P473"><text:tab/> * Allocate memory and load ANN and DE objects.</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @param ann Not allocated artificial nerural network object pointer with</text:p><text:p text:style-name="P473"><text:tab/> * value NULL.</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @param <text:s/>de Not allocated differential evolution object pointer with</text:p><text:p text:style-name="P473"><text:tab/> * value NULL.</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @param symbol MetaTrader 4 chart currency pair symbol.</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @param period MetaTrader 4 chart time period.</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @param parameters All other netwrok parameters.</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @date 16 Sep 2013</text:p><text:p text:style-name="P473"><text:tab/> */</text:p><text:p text:style-name="P473"><text:tab/>virtual void loadTrainerObjects(Counter &amp;counters, ANN &amp;ann, DE &amp;de, char symbol[], TimePeriod period, const ModelParameters &amp;parameters);</text:p><text:p text:style-name="P473"/><text:p text:style-name="P473"><text:tab/>/**</text:p><text:p text:style-name="P473"><text:tab/> * Save single ANN record on the remote side server.</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @param symbol Currency pair symbol.</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @param period Currency chart period.</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @param fitness Weights set fitness value.</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @param numberOfNeurons Number of neurons used as topology.</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @param flags Nurons flags.</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @param weights Weights set.</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @param activities Weights activities.</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @date 16 Sep 2013</text:p><text:p text:style-name="P473"><text:tab/> */</text:p><text:p text:style-name="P473"><text:tab/>virtual void saveSingleANN(char *symbol, TimePeriod period, double fitness, NeuronsList &amp;neurons, WeightsMatrix &amp;weights, ActivitiesMatrix &amp;activities);</text:p><text:p text:style-name="P473"/><text:p text:style-name="P473"><text:tab/>/**</text:p><text:p text:style-name="P473"><text:tab/> * Load ANN neurons amount from DB.</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @param annId Id of ANN to be used as selection parameter.</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @return Neurons amount value.</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @author Iliyan Zankinski</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @email iliyan_mf@abv.bg</text:p><text:p text:style-name="P473"><text:soft-page-break/><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @date 16 Sep 2013</text:p><text:p text:style-name="P473"><text:tab/> */</text:p><text:p text:style-name="P473"><text:tab/>virtual int loadAnnNeuronsAmount(int annId);</text:p><text:p text:style-name="P473"/><text:p text:style-name="P473"><text:tab/>/**</text:p><text:p text:style-name="P473"><text:tab/> * Load single ANN objec record from remote server side.</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @param annId Id of ANN to be used as selection parameter.</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @param symbol Currency pair symbol.</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @param period Currency chart period.</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @param fitness Weights set fitness value.</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @param numberOfNeurons Number of neurons used as topology. Neurons amount will be used only for new crated ANN.</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @param flags Nurons flags.</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @param weights Weights set.</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @param activities Weights activities.</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @date 16 Sep 2013</text:p><text:p text:style-name="P473"><text:tab/> */</text:p><text:p text:style-name="P473"><text:tab/>virtual void loadSingleANN(int annId, char *symbol, TimePeriod &amp;period, double &amp;fitness, NeuronsList &amp;neurons, WeightsMatrix &amp;weights, ActivitiesMatrix &amp;activities);</text:p><text:p text:style-name="P473"/><text:p text:style-name="P473"><text:tab/>/**</text:p><text:p text:style-name="P473"><text:tab/> * Load training set size from remote side server.</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @param symbol Currency pair symbol.</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @param period Currency chart period.</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @date 16 Sep 2013</text:p><text:p text:style-name="P473"><text:tab/> */</text:p><text:p text:style-name="P473"><text:tab/>virtual int loadTrainingSetSize(char *symbol, TimePeriod period);</text:p><text:p text:style-name="P473"/><text:p text:style-name="P473"><text:tab/>/**</text:p><text:p text:style-name="P473"><text:tab/> * Save training set record on remote side server.</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @param symbol Currency pair symbol.</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @param period Currency chart period.</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @param rates Rates values.</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @param size Number of training set examples.</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @date 16 Sep 2013</text:p><text:p text:style-name="P473"><text:tab/> */</text:p><text:p text:style-name="P473"><text:tab/>virtual void saveTrainingSet(char symbol[], TimePeriod period, const std::vector&lt;RateInfo&gt; &amp;rates, int size);</text:p><text:p text:style-name="P473"/><text:p text:style-name="P473"><text:tab/>/**</text:p><text:p text:style-name="P473"><text:tab/> * Load training set record from remote side server.</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @param symbol Currency pair symbol.</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @param period Currency chart period.</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @param rates Rates values.</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @param size Number of training set examples.</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @date 16 Sep 2013</text:p><text:p text:style-name="P473"><text:tab/> */</text:p><text:p text:style-name="P473"><text:tab/>virtual void loadTrainingSet(char symbol[], TimePeriod period, std::vector&lt;RateInfo&gt; &amp;rates, int size);</text:p><text:p text:style-name="P473"/><text:p text:style-name="P473"><text:tab/>/**</text:p><text:p text:style-name="P473"><text:tab/> * Load remote server best known fitness for particular ANN kind.</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @param symbol Currency pair symbol.</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @param period MetaTrader 4 chart period.</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @param numberOfNeurons Number of neurons used as topology.</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @param flags Nurons flags.</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @param activities Weights activities.</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @return Best known server side fitness.</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P473"><text:tab/> *</text:p><text:p text:style-name="P473"><text:tab/> * @date 16 Sep 2013</text:p><text:p text:style-name="P473"><text:tab/> */</text:p><text:p text:style-name="P473"><text:tab/>virtual double loadRemoteBestFitness(char *symbol, TimePeriod period, NeuronsList &amp;neurons, ActivitiesMatrix &amp;activities);</text:p><text:p text:style-name="P473"/><text:p text:style-name="P473">};</text:p><text:p text:style-name="P473"/><text:p text:style-name="P473">#endif</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5818_1486593966"/><text:s text:c="4"/>ModelParameters.h<text:bookmark-end text:name="__RefHeading___Toc5818_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P474">/*******************************************************************************</text:p><text:p text:style-name="P474"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P474"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P474"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P474"><text:soft-page-break/><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P474"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P474"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P474"><text:s/>* Copyright (C) 2008-2011 by Todor Balabanov <text:s/>( todor.balabanov@gmail.com ) <text:s text:c="2"/>*</text:p><text:p text:style-name="P474"><text:s/>* <text:s text:c="22"/>Iliyan Zankinski <text:s text:c="2"/>( iliyan_mf@abv.bg ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P474"><text:s/>* <text:s text:c="22"/>Momchil Anachkov <text:s text:c="2"/>( mZer0000@gmail.com ) <text:s text:c="12"/>*</text:p><text:p text:style-name="P474"><text:s/>* <text:s text:c="22"/>Daniel Chutrov <text:s text:c="4"/>( d.chutrov@gmail.com ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P474"><text:s/>* <text:s text:c="22"/>Nikola Simeonov <text:s text:c="3"/>( n.simeonow@gmail.com ) <text:s text:c="10"/>*</text:p><text:p text:style-name="P474"><text:s/>* <text:s text:c="22"/>Galq Cirkalova <text:s text:c="4"/>( galq_cirkalova@abv.bg ) <text:s text:c="9"/>*</text:p><text:p text:style-name="P474"><text:s/>* <text:s text:c="22"/>Ivan Grozev <text:s text:c="7"/>( ivan.iliev.grozev@gmail.com ) <text:s text:c="3"/>*</text:p><text:p text:style-name="P474"><text:s/>* <text:s text:c="22"/>Elisaveta Hristova ( elisaveta.s.hristova@gmail.com ) *</text:p><text:p text:style-name="P474"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P474"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P474"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P474"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P474"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P474"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P474"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P474"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P474"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P474"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P474"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P474"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P474"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P474"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P474"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P474"/><text:p text:style-name="P474">#ifndef MODEL_PARAMETERS_H</text:p><text:p text:style-name="P474">#define MODEL_PARAMETERS_H</text:p><text:p text:style-name="P474"/><text:p text:style-name="P474">#include &quot;TimePeriod.h&quot;</text:p><text:p text:style-name="P474"/><text:p text:style-name="P474">/**</text:p><text:p text:style-name="P474"><text:s/>* Training and predicting model parameters.</text:p><text:p text:style-name="P474"><text:s/>*</text:p><text:p text:style-name="P474"><text:s/>* @author Todor Balabanov</text:p><text:p text:style-name="P474"><text:s/>*</text:p><text:p text:style-name="P474"><text:s/>* @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P474"><text:s/>*</text:p><text:p text:style-name="P474"><text:s/>* @date 25 Oct 2011</text:p><text:p text:style-name="P474"><text:s/>*/</text:p><text:p text:style-name="P474">struct ModelParameters {</text:p><text:p text:style-name="P474"/><text:p text:style-name="P474"><text:tab/>/**</text:p><text:p text:style-name="P474"><text:tab/> * Database identifier of ANN.</text:p><text:p text:style-name="P474"><text:tab/> */</text:p><text:p text:style-name="P474"><text:tab/>int dbId;</text:p><text:p text:style-name="P474"/><text:p text:style-name="P474"><text:tab/>/**</text:p><text:p text:style-name="P474"><text:tab/> * Currency pair symbol.</text:p><text:p text:style-name="P474"><text:tab/> */</text:p><text:p text:style-name="P474"><text:tab/>char symbol[100];</text:p><text:p text:style-name="P474"/><text:p text:style-name="P474"><text:tab/>/**</text:p><text:p text:style-name="P474"><text:tab/> * Time series period.</text:p><text:p text:style-name="P474"><text:tab/> */</text:p><text:p text:style-name="P474"><text:tab/>TimePeriod period;</text:p><text:p text:style-name="P474"/><text:p text:style-name="P474"><text:tab/>/**</text:p><text:p text:style-name="P474"><text:tab/> * Number of neurons in ANN.</text:p><text:p text:style-name="P474"><text:tab/> */</text:p><text:p text:style-name="P474"><text:tab/>int neuronsAmount;</text:p><text:p text:style-name="P474"/><text:p text:style-name="P474"><text:tab/>/**</text:p><text:p text:style-name="P474"><text:tab/> * Number of neurons used for input.</text:p><text:p text:style-name="P474"><text:tab/> */</text:p><text:p text:style-name="P474"><text:tab/>int inputSize;</text:p><text:p text:style-name="P474"/><text:p text:style-name="P474"><text:tab/>/**</text:p><text:p text:style-name="P474"><text:tab/> * Number of neurons used for output.</text:p><text:p text:style-name="P474"><text:tab/> */</text:p><text:p text:style-name="P474"><text:tab/>int outputSize;</text:p><text:p text:style-name="P474"/><text:p text:style-name="P474"><text:tab/>/**</text:p><text:p text:style-name="P474"><text:tab/> * Number of chromosomes in DE population.</text:p><text:p text:style-name="P474"><text:tab/> */</text:p><text:p text:style-name="P474"><text:tab/>int populationSize;</text:p><text:p text:style-name="P474"/><text:p text:style-name="P474"><text:tab/>/**</text:p><text:p text:style-name="P474"><text:tab/> * Number of past bars where history information will be used for the training.</text:p><text:p text:style-name="P474"><text:tab/> */</text:p><text:p text:style-name="P474"><text:tab/>int learn;</text:p><text:p text:style-name="P474"/><text:p text:style-name="P474"><text:tab/>/**</text:p><text:p text:style-name="P474"><text:tab/> * Number of future bars where prediction will be needed.</text:p><text:p text:style-name="P474"><text:tab/> */</text:p><text:p text:style-name="P474"><text:tab/>int forecast;</text:p><text:p text:style-name="P474">};</text:p><text:p text:style-name="P474"/><text:p text:style-name="P474">#endif</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5820_1486593966"/><text:s text:c="4"/>Neuron.cpp<text:bookmark-end text:name="__RefHeading___Toc5820_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P475">/*******************************************************************************</text:p><text:p text:style-name="P475"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P475"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P475"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P475"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P475"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P475"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P475"><text:s/>* Copyright (C) 2008-2011 by Todor Balabanov <text:s/>( todor.balabanov@gmail.com ) <text:s text:c="2"/>*</text:p><text:p text:style-name="P475"><text:s/>* <text:s text:c="22"/>Iliyan Zankinski <text:s text:c="2"/>( iliyan_mf@abv.bg ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P475"><text:s/>* <text:s text:c="22"/>Momchil Anachkov <text:s text:c="2"/>( mZer0000@gmail.com ) <text:s text:c="12"/>*</text:p><text:p text:style-name="P475"><text:s/>* <text:s text:c="22"/>Daniel Chutrov <text:s text:c="4"/>( d.chutrov@gmail.com ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P475"><text:s/>* <text:s text:c="22"/>Nikola Simeonov <text:s text:c="3"/>( n.simeonow@gmail.com ) <text:s text:c="10"/>*</text:p><text:p text:style-name="P475"><text:s/>* <text:s text:c="22"/>Galq Cirkalova <text:s text:c="4"/>( galq_cirkalova@abv.bg ) <text:s text:c="9"/>*</text:p><text:p text:style-name="P475"><text:s/>* <text:s text:c="22"/>Ivan Grozev <text:s text:c="7"/>( ivan.iliev.grozev@gmail.com ) <text:s text:c="3"/>*</text:p><text:p text:style-name="P475"><text:s/>* <text:s text:c="22"/>Elisaveta Hristova ( elisaveta.s.hristova@gmail.com ) *</text:p><text:p text:style-name="P475"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P475"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P475"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P475"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P475"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P475"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P475"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P475"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P475"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P475"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P475"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P475"><text:soft-page-break/><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P475"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P475"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P475"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P475"/><text:p text:style-name="P475">#include &lt;iomanip&gt;</text:p><text:p text:style-name="P475"/><text:p text:style-name="P475">using namespace std;</text:p><text:p text:style-name="P475"/><text:p text:style-name="P475">#include &quot;Neuron.h&quot;</text:p><text:p text:style-name="P475"/><text:p text:style-name="P475">const double Neuron::BIAS_VALUE = 1.0;</text:p><text:p text:style-name="P475"/><text:p text:style-name="P475">const double Neuron::RESET_VALUE = 0.5;</text:p><text:p text:style-name="P475"/><text:p text:style-name="P475">const double Neuron::MIN_ERROR = 0.0;</text:p><text:p text:style-name="P475"/><text:p text:style-name="P475">Neuron::Neuron() {</text:p><text:p text:style-name="P475"><text:tab/>setRegular( true );</text:p><text:p text:style-name="P475"><text:tab/>reset();</text:p><text:p text:style-name="P475">}</text:p><text:p text:style-name="P475"/><text:p text:style-name="P475">Neuron::Neuron(const Neuron &amp;neuron) {</text:p><text:p text:style-name="P475"><text:tab/>type = neuron.type;</text:p><text:p text:style-name="P475"><text:tab/>value = neuron.value;</text:p><text:p text:style-name="P475"><text:tab/>error = neuron.error;</text:p><text:p text:style-name="P475">}</text:p><text:p text:style-name="P475"/><text:p text:style-name="P475">bool Neuron::isRegular() const {</text:p><text:p text:style-name="P475"><text:tab/>if (type == REGULAR) {</text:p><text:p text:style-name="P475"><text:tab/><text:tab/>return( true );</text:p><text:p text:style-name="P475"><text:tab/>} else {</text:p><text:p text:style-name="P475"><text:tab/><text:tab/>return( false );</text:p><text:p text:style-name="P475"><text:tab/>}</text:p><text:p text:style-name="P475">}</text:p><text:p text:style-name="P475"/><text:p text:style-name="P475">void Neuron::setRegular(bool value) {</text:p><text:p text:style-name="P475"><text:tab/>if (value == true) {</text:p><text:p text:style-name="P475"><text:tab/><text:tab/>type = REGULAR;</text:p><text:p text:style-name="P475"><text:tab/>}</text:p><text:p text:style-name="P475">}</text:p><text:p text:style-name="P475"/><text:p text:style-name="P475">bool Neuron::isBias() const {</text:p><text:p text:style-name="P475"><text:tab/>if ((type&amp;BIAS) == BIAS) {</text:p><text:p text:style-name="P475"><text:tab/><text:tab/>return( true );</text:p><text:p text:style-name="P475"><text:tab/>} else {</text:p><text:p text:style-name="P475"><text:tab/><text:tab/>return( false );</text:p><text:p text:style-name="P475"><text:tab/>}</text:p><text:p text:style-name="P475">}</text:p><text:p text:style-name="P475"/><text:p text:style-name="P475">void Neuron::setBias(bool value) {</text:p><text:p text:style-name="P475"><text:tab/>if (value == true) {</text:p><text:p text:style-name="P475"><text:tab/><text:tab/>switch (type) {</text:p><text:p text:style-name="P475"><text:tab/><text:tab/>case REGULAR:</text:p><text:p text:style-name="P475"><text:tab/><text:tab/><text:tab/>type = BIAS;</text:p><text:p text:style-name="P475"><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P475"><text:tab/><text:tab/>case BIAS:</text:p><text:p text:style-name="P475"><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P475"><text:tab/><text:tab/>case INPUT:</text:p><text:p text:style-name="P475"><text:tab/><text:tab/><text:tab/>type = INPUT_BIAS;</text:p><text:p text:style-name="P475"><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P475"><text:tab/><text:tab/>case INPUT_BIAS:</text:p><text:p text:style-name="P475"><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P475"><text:tab/><text:tab/>case OUTPUT:</text:p><text:p text:style-name="P475"><text:tab/><text:tab/><text:tab/>type = OUTPUT_BIAS;</text:p><text:p text:style-name="P475"><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P475"><text:tab/><text:tab/>case OUTPUT_BIAS:</text:p><text:p text:style-name="P475"><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P475"><text:tab/><text:tab/>case OUTPUT_INPUT:</text:p><text:p text:style-name="P475"><text:tab/><text:tab/><text:tab/>type = OUTPUT_INPUT_BIAS;</text:p><text:p text:style-name="P475"><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P475"><text:tab/><text:tab/>case OUTPUT_INPUT_BIAS:</text:p><text:p text:style-name="P475"><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P475"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P475"/><text:p text:style-name="P475"><text:tab/><text:tab/>value = BIAS_VALUE;</text:p><text:p text:style-name="P475"><text:tab/>} else if (value == false) {</text:p><text:p text:style-name="P475"><text:tab/><text:tab/>switch (type) {</text:p><text:p text:style-name="P475"><text:tab/><text:tab/>case REGULAR:</text:p><text:p text:style-name="P475"><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P475"><text:tab/><text:tab/>case BIAS:</text:p><text:p text:style-name="P475"><text:tab/><text:tab/><text:tab/>type = REGULAR;</text:p><text:p text:style-name="P475"><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P475"><text:tab/><text:tab/>case INPUT:</text:p><text:p text:style-name="P475"><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P475"><text:tab/><text:tab/>case INPUT_BIAS:</text:p><text:p text:style-name="P475"><text:tab/><text:tab/><text:tab/>type = INPUT;</text:p><text:p text:style-name="P475"><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P475"><text:tab/><text:tab/>case OUTPUT:</text:p><text:p text:style-name="P475"><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P475"><text:tab/><text:tab/>case OUTPUT_BIAS:</text:p><text:p text:style-name="P475"><text:tab/><text:tab/><text:tab/>type = OUTPUT;</text:p><text:p text:style-name="P475"><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P475"><text:tab/><text:tab/>case OUTPUT_INPUT:</text:p><text:p text:style-name="P475"><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P475"><text:tab/><text:tab/>case OUTPUT_INPUT_BIAS:</text:p><text:p text:style-name="P475"><text:tab/><text:tab/><text:tab/>type = OUTPUT_INPUT;</text:p><text:p text:style-name="P475"><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P475"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P475"><text:tab/>}</text:p><text:p text:style-name="P475">}</text:p><text:p text:style-name="P475"/><text:p text:style-name="P475">bool Neuron::isInput() const {</text:p><text:p text:style-name="P475"><text:tab/>if ((type&amp;INPUT) == INPUT) {</text:p><text:p text:style-name="P475"><text:tab/><text:tab/>return( true );</text:p><text:p text:style-name="P475"><text:tab/>} else {</text:p><text:p text:style-name="P475"><text:tab/><text:tab/>return( false );</text:p><text:p text:style-name="P475"><text:tab/>}</text:p><text:p text:style-name="P475">}</text:p><text:p text:style-name="P475"/><text:p text:style-name="P475">void Neuron::setInput(bool value) {</text:p><text:p text:style-name="P475"><text:tab/>if (value == true) {</text:p><text:p text:style-name="P475"><text:tab/><text:tab/>switch (type) {</text:p><text:p text:style-name="P475"><text:tab/><text:tab/>case REGULAR:</text:p><text:p text:style-name="P475"><text:tab/><text:tab/><text:tab/>type = INPUT;</text:p><text:p text:style-name="P475"><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P475"><text:tab/><text:tab/>case BIAS:</text:p><text:p text:style-name="P475"><text:tab/><text:tab/><text:tab/>type = INPUT_BIAS;</text:p><text:p text:style-name="P475"><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P475"><text:tab/><text:tab/>case INPUT:</text:p><text:p text:style-name="P475"><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P475"><text:tab/><text:tab/>case INPUT_BIAS:</text:p><text:p text:style-name="P475"><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P475"><text:tab/><text:tab/>case OUTPUT:</text:p><text:p text:style-name="P475"><text:tab/><text:tab/><text:tab/>type = OUTPUT_INPUT;</text:p><text:p text:style-name="P475"><text:soft-page-break/><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P475"><text:tab/><text:tab/>case OUTPUT_BIAS:</text:p><text:p text:style-name="P475"><text:tab/><text:tab/><text:tab/>type = OUTPUT_INPUT_BIAS;</text:p><text:p text:style-name="P475"><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P475"><text:tab/><text:tab/>case OUTPUT_INPUT:</text:p><text:p text:style-name="P475"><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P475"><text:tab/><text:tab/>case OUTPUT_INPUT_BIAS:</text:p><text:p text:style-name="P475"><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P475"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P475"><text:tab/>} else if (value == false) {</text:p><text:p text:style-name="P475"><text:tab/><text:tab/>switch (type) {</text:p><text:p text:style-name="P475"><text:tab/><text:tab/>case REGULAR:</text:p><text:p text:style-name="P475"><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P475"><text:tab/><text:tab/>case BIAS:</text:p><text:p text:style-name="P475"><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P475"><text:tab/><text:tab/>case INPUT:</text:p><text:p text:style-name="P475"><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P475"><text:tab/><text:tab/>case INPUT_BIAS:</text:p><text:p text:style-name="P475"><text:tab/><text:tab/><text:tab/>type = BIAS;</text:p><text:p text:style-name="P475"><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P475"><text:tab/><text:tab/>case OUTPUT:</text:p><text:p text:style-name="P475"><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P475"><text:tab/><text:tab/>case OUTPUT_BIAS:</text:p><text:p text:style-name="P475"><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P475"><text:tab/><text:tab/>case OUTPUT_INPUT:</text:p><text:p text:style-name="P475"><text:tab/><text:tab/><text:tab/>type = OUTPUT;</text:p><text:p text:style-name="P475"><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P475"><text:tab/><text:tab/>case OUTPUT_INPUT_BIAS:</text:p><text:p text:style-name="P475"><text:tab/><text:tab/><text:tab/>type = OUTPUT_BIAS;</text:p><text:p text:style-name="P475"><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P475"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P475"><text:tab/>}</text:p><text:p text:style-name="P475">}</text:p><text:p text:style-name="P475"/><text:p text:style-name="P475">bool Neuron::isOutput() const {</text:p><text:p text:style-name="P475"><text:tab/>if ((type&amp;OUTPUT) == OUTPUT) {</text:p><text:p text:style-name="P475"><text:tab/><text:tab/>return( true );</text:p><text:p text:style-name="P475"><text:tab/>} else {</text:p><text:p text:style-name="P475"><text:tab/><text:tab/>return( false );</text:p><text:p text:style-name="P475"><text:tab/>}</text:p><text:p text:style-name="P475">}</text:p><text:p text:style-name="P475"/><text:p text:style-name="P475">void Neuron::setOutput(bool value) {</text:p><text:p text:style-name="P475"><text:tab/>if (value == true) {</text:p><text:p text:style-name="P475"><text:tab/><text:tab/>switch (type) {</text:p><text:p text:style-name="P475"><text:tab/><text:tab/>case REGULAR:</text:p><text:p text:style-name="P475"><text:tab/><text:tab/><text:tab/>type = OUTPUT;</text:p><text:p text:style-name="P475"><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P475"><text:tab/><text:tab/>case BIAS:</text:p><text:p text:style-name="P475"><text:tab/><text:tab/><text:tab/>type = OUTPUT_BIAS;</text:p><text:p text:style-name="P475"><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P475"><text:tab/><text:tab/>case INPUT:</text:p><text:p text:style-name="P475"><text:tab/><text:tab/><text:tab/>type = OUTPUT_INPUT;</text:p><text:p text:style-name="P475"><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P475"><text:tab/><text:tab/>case INPUT_BIAS:</text:p><text:p text:style-name="P475"><text:tab/><text:tab/><text:tab/>type = OUTPUT_INPUT_BIAS;</text:p><text:p text:style-name="P475"><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P475"><text:tab/><text:tab/>case OUTPUT:</text:p><text:p text:style-name="P475"><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P475"><text:tab/><text:tab/>case OUTPUT_BIAS:</text:p><text:p text:style-name="P475"><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P475"><text:tab/><text:tab/>case OUTPUT_INPUT:</text:p><text:p text:style-name="P475"><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P475"><text:tab/><text:tab/>case OUTPUT_INPUT_BIAS:</text:p><text:p text:style-name="P475"><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P475"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P475"><text:tab/>} else if (value == false) {</text:p><text:p text:style-name="P475"><text:tab/><text:tab/>switch (type) {</text:p><text:p text:style-name="P475"><text:tab/><text:tab/>case REGULAR:</text:p><text:p text:style-name="P475"><text:tab/><text:tab/><text:tab/>type = OUTPUT;</text:p><text:p text:style-name="P475"><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P475"><text:tab/><text:tab/>case BIAS:</text:p><text:p text:style-name="P475"><text:tab/><text:tab/><text:tab/>type = OUTPUT_BIAS;</text:p><text:p text:style-name="P475"><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P475"><text:tab/><text:tab/>case INPUT:</text:p><text:p text:style-name="P475"><text:tab/><text:tab/><text:tab/>type = OUTPUT_INPUT;</text:p><text:p text:style-name="P475"><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P475"><text:tab/><text:tab/>case INPUT_BIAS:</text:p><text:p text:style-name="P475"><text:tab/><text:tab/><text:tab/>type = OUTPUT_INPUT_BIAS;</text:p><text:p text:style-name="P475"><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P475"><text:tab/><text:tab/>case OUTPUT:</text:p><text:p text:style-name="P475"><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P475"><text:tab/><text:tab/>case OUTPUT_BIAS:</text:p><text:p text:style-name="P475"><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P475"><text:tab/><text:tab/>case OUTPUT_INPUT:</text:p><text:p text:style-name="P475"><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P475"><text:tab/><text:tab/>case OUTPUT_INPUT_BIAS:</text:p><text:p text:style-name="P475"><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P475"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P475"><text:tab/>}</text:p><text:p text:style-name="P475">}</text:p><text:p text:style-name="P475"/><text:p text:style-name="P475">NeuronType Neuron::getType() const {</text:p><text:p text:style-name="P475"><text:tab/>return( type );</text:p><text:p text:style-name="P475">}</text:p><text:p text:style-name="P475"/><text:p text:style-name="P475">void Neuron::setType(NeuronType type) {</text:p><text:p text:style-name="P475"><text:tab/>this-&gt;type = type;</text:p><text:p text:style-name="P475">}</text:p><text:p text:style-name="P475"/><text:p text:style-name="P475">double Neuron::getValue() const {</text:p><text:p text:style-name="P475"><text:tab/>return( value );</text:p><text:p text:style-name="P475">}</text:p><text:p text:style-name="P475"/><text:p text:style-name="P475">void Neuron::setValue(double value) {</text:p><text:p text:style-name="P475"><text:tab/>this-&gt;value = value;</text:p><text:p text:style-name="P475">}</text:p><text:p text:style-name="P475"/><text:p text:style-name="P475">double Neuron::getError() const {</text:p><text:p text:style-name="P475"><text:tab/>return( error );</text:p><text:p text:style-name="P475">}</text:p><text:p text:style-name="P475"/><text:p text:style-name="P475">void Neuron::setError(double error) {</text:p><text:p text:style-name="P475"><text:tab/>this-&gt;error = error;</text:p><text:p text:style-name="P475">}</text:p><text:p text:style-name="P475"/><text:p text:style-name="P475">void Neuron::reset() {</text:p><text:p text:style-name="P475"><text:tab/>if (isBias() == true) {</text:p><text:p text:style-name="P475"><text:tab/><text:tab/>value = BIAS_VALUE;</text:p><text:p text:style-name="P475"><text:tab/>} else {</text:p><text:p text:style-name="P475"><text:tab/><text:tab/>value = RESET_VALUE;</text:p><text:p text:style-name="P475"><text:tab/>}</text:p><text:p text:style-name="P475"/><text:p text:style-name="P475"><text:tab/>error = MIN_ERROR;</text:p><text:p text:style-name="P475">}</text:p><text:p text:style-name="P475"><text:soft-page-break/></text:p><text:p text:style-name="P475">Neuron::~Neuron() {</text:p><text:p text:style-name="P475">}</text:p><text:p text:style-name="P475"/><text:p text:style-name="P475">Neuron&amp; Neuron::operator=(const Neuron &amp;neuron) {</text:p><text:p text:style-name="P475"><text:tab/>type = neuron.type;</text:p><text:p text:style-name="P475"><text:tab/>value = neuron.value;</text:p><text:p text:style-name="P475"><text:tab/>error = neuron.error;</text:p><text:p text:style-name="P475"/><text:p text:style-name="P475"><text:tab/>return( *this );</text:p><text:p text:style-name="P475">}</text:p><text:p text:style-name="P475"/><text:p text:style-name="P475">Neuron&amp; Neuron::operator+=(const double value) {</text:p><text:p text:style-name="P475"><text:tab/>setValue( value );</text:p><text:p text:style-name="P475"/><text:p text:style-name="P475"><text:tab/>return( *this );</text:p><text:p text:style-name="P475">}</text:p><text:p text:style-name="P475"/><text:p text:style-name="P475">Neuron&amp; Neuron::operator-=(const double error) {</text:p><text:p text:style-name="P475"><text:tab/>setError( error );</text:p><text:p text:style-name="P475"/><text:p text:style-name="P475"><text:tab/>return( *this );</text:p><text:p text:style-name="P475">}</text:p><text:p text:style-name="P475"/><text:p text:style-name="P475">ostream&amp; operator&lt;&lt;(ostream &amp;out, Neuron &amp;neuron) {</text:p><text:p text:style-name="P475"><text:tab/>out &lt;&lt; &quot;[&quot; &lt;&lt; (unsigned)neuron.type &lt;&lt; &quot;, &quot; &lt;&lt; setw(8) &lt;&lt; neuron.value &lt;&lt; &quot;, &quot; &lt;&lt; setw(8) &lt;&lt; neuron.error &lt;&lt; &quot;]&quot;;</text:p><text:p text:style-name="P475"/><text:p text:style-name="P475"><text:tab/>return( out );</text:p><text:p text:style-name="P475">}</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5822_1486593966"/><text:s text:c="4"/>Neuron.h<text:bookmark-end text:name="__RefHeading___Toc5822_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P476">/*******************************************************************************</text:p><text:p text:style-name="P476"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P476"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P476"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P476"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P476"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P476"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P476"><text:s/>* Copyright (C) 2008-2011 by Todor Balabanov <text:s/>( todor.balabanov@gmail.com ) <text:s text:c="2"/>*</text:p><text:p text:style-name="P476"><text:s/>* <text:s text:c="22"/>Iliyan Zankinski <text:s text:c="2"/>( iliyan_mf@abv.bg ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P476"><text:s/>* <text:s text:c="22"/>Momchil Anachkov <text:s text:c="2"/>( mZer0000@gmail.com ) <text:s text:c="12"/>*</text:p><text:p text:style-name="P476"><text:s/>* <text:s text:c="22"/>Daniel Chutrov <text:s text:c="4"/>( d.chutrov@gmail.com ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P476"><text:s/>* <text:s text:c="22"/>Nikola Simeonov <text:s text:c="3"/>( n.simeonow@gmail.com ) <text:s text:c="10"/>*</text:p><text:p text:style-name="P476"><text:s/>* <text:s text:c="22"/>Galq Cirkalova <text:s text:c="4"/>( galq_cirkalova@abv.bg ) <text:s text:c="9"/>*</text:p><text:p text:style-name="P476"><text:s/>* <text:s text:c="22"/>Ivan Grozev <text:s text:c="7"/>( ivan.iliev.grozev@gmail.com ) <text:s text:c="3"/>*</text:p><text:p text:style-name="P476"><text:s/>* <text:s text:c="22"/>Elisaveta Hristova ( elisaveta.s.hristova@gmail.com ) *</text:p><text:p text:style-name="P476"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P476"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P476"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P476"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P476"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P476"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P476"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P476"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P476"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P476"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P476"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P476"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P476"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P476"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P476"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P476"/><text:p text:style-name="P476">#ifndef NEURON_H</text:p><text:p text:style-name="P476">#define NEURON_H</text:p><text:p text:style-name="P476"/><text:p text:style-name="P476">#include &lt;iostream&gt;</text:p><text:p text:style-name="P476"/><text:p text:style-name="P476">#include &quot;NeuronType.h&quot;</text:p><text:p text:style-name="P476"/><text:p text:style-name="P476">/**</text:p><text:p text:style-name="P476"><text:s/>* Single neuron class.</text:p><text:p text:style-name="P476"><text:s/>*</text:p><text:p text:style-name="P476"><text:s/>* @author Todor Balabanov</text:p><text:p text:style-name="P476"><text:s/>*</text:p><text:p text:style-name="P476"><text:s/>* @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P476"><text:s/>*</text:p><text:p text:style-name="P476"><text:s/>* @date 03 Aug 2011</text:p><text:p text:style-name="P476"><text:s/>*/</text:p><text:p text:style-name="P476">class Neuron {</text:p><text:p text:style-name="P476"/><text:p text:style-name="P476">public:</text:p><text:p text:style-name="P476"/><text:p text:style-name="P476"><text:tab/>/**</text:p><text:p text:style-name="P476"><text:tab/> * Bias neuron value.</text:p><text:p text:style-name="P476"><text:tab/> */</text:p><text:p text:style-name="P476"><text:tab/>static const double BIAS_VALUE;</text:p><text:p text:style-name="P476"/><text:p text:style-name="P476"><text:tab/>/**</text:p><text:p text:style-name="P476"><text:tab/> * Neurons reset constant value.</text:p><text:p text:style-name="P476"><text:tab/> */</text:p><text:p text:style-name="P476"><text:tab/>static const double RESET_VALUE;</text:p><text:p text:style-name="P476"/><text:p text:style-name="P476"><text:tab/>/**</text:p><text:p text:style-name="P476"><text:tab/> * Minimal error constant value.</text:p><text:p text:style-name="P476"><text:tab/> */</text:p><text:p text:style-name="P476"><text:tab/>static const double MIN_ERROR;</text:p><text:p text:style-name="P476"/><text:p text:style-name="P476">private:</text:p><text:p text:style-name="P476"/><text:p text:style-name="P476"><text:tab/>/**</text:p><text:p text:style-name="P476"><text:tab/> * Neuron type. More than one neuron can be bias, input and output in multi</text:p><text:p text:style-name="P476"><text:tab/> * layer networks. Also each neuron can be in more than single type.</text:p><text:p text:style-name="P476"><text:tab/> */</text:p><text:p text:style-name="P476"><text:tab/>NeuronType type;</text:p><text:p text:style-name="P476"/><text:p text:style-name="P476"><text:tab/>/**</text:p><text:p text:style-name="P476"><text:tab/> * Neuron value.</text:p><text:p text:style-name="P476"><text:tab/> */</text:p><text:p text:style-name="P476"><text:tab/>double value;</text:p><text:p text:style-name="P476"/><text:p text:style-name="P476"><text:tab/>/**</text:p><text:p text:style-name="P476"><text:tab/> * Neuron error in back-propagation training.</text:p><text:p text:style-name="P476"><text:tab/> */</text:p><text:p text:style-name="P476"><text:tab/>double error;</text:p><text:p text:style-name="P476"/><text:p text:style-name="P476">public:</text:p><text:p text:style-name="P476"/><text:p text:style-name="P476"><text:tab/>/**</text:p><text:p text:style-name="P476"><text:soft-page-break/><text:tab/> * Constructor without parameters.</text:p><text:p text:style-name="P476"><text:tab/> *</text:p><text:p text:style-name="P476"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P476"><text:tab/> *</text:p><text:p text:style-name="P476"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P476"><text:tab/> *</text:p><text:p text:style-name="P476"><text:tab/> * @date 03 Aug 2011</text:p><text:p text:style-name="P476"><text:tab/> */</text:p><text:p text:style-name="P476"><text:tab/>Neuron();</text:p><text:p text:style-name="P476"/><text:p text:style-name="P476"><text:tab/>/**</text:p><text:p text:style-name="P476"><text:tab/> * Constructor without parameters.</text:p><text:p text:style-name="P476"><text:tab/> *</text:p><text:p text:style-name="P476"><text:tab/> * @param neuron Instance to be copied.</text:p><text:p text:style-name="P476"><text:tab/> *</text:p><text:p text:style-name="P476"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P476"><text:tab/> *</text:p><text:p text:style-name="P476"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P476"><text:tab/> *</text:p><text:p text:style-name="P476"><text:tab/> * @date 03 Aug 2011</text:p><text:p text:style-name="P476"><text:tab/> */</text:p><text:p text:style-name="P476"><text:tab/>Neuron(const Neuron &amp;neuron);</text:p><text:p text:style-name="P476"/><text:p text:style-name="P476"><text:tab/>/**</text:p><text:p text:style-name="P476"><text:tab/> * Is regular neuron getter.</text:p><text:p text:style-name="P476"><text:tab/> *</text:p><text:p text:style-name="P476"><text:tab/> * @return True if neuron is regular, false otherwise.</text:p><text:p text:style-name="P476"><text:tab/> *</text:p><text:p text:style-name="P476"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P476"><text:tab/> *</text:p><text:p text:style-name="P476"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P476"><text:tab/> *</text:p><text:p text:style-name="P476"><text:tab/> * @date 03 Aug 2011</text:p><text:p text:style-name="P476"><text:tab/> */</text:p><text:p text:style-name="P476"><text:tab/>bool isRegular() const;</text:p><text:p text:style-name="P476"/><text:p text:style-name="P476"><text:tab/>/**</text:p><text:p text:style-name="P476"><text:tab/> * Regular neuron setter.</text:p><text:p text:style-name="P476"><text:tab/> *</text:p><text:p text:style-name="P476"><text:tab/> * @param value True if neuron will be regular, false otherwise.</text:p><text:p text:style-name="P476"><text:tab/> *</text:p><text:p text:style-name="P476"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P476"><text:tab/> *</text:p><text:p text:style-name="P476"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P476"><text:tab/> *</text:p><text:p text:style-name="P476"><text:tab/> * @date 03 Aug 2011</text:p><text:p text:style-name="P476"><text:tab/> */</text:p><text:p text:style-name="P476"><text:tab/>void setRegular(bool value);</text:p><text:p text:style-name="P476"/><text:p text:style-name="P476"><text:tab/>/**</text:p><text:p text:style-name="P476"><text:tab/> * Is bias neuron getter.</text:p><text:p text:style-name="P476"><text:tab/> *</text:p><text:p text:style-name="P476"><text:tab/> * @return True if neuron is bias, false otherwise.</text:p><text:p text:style-name="P476"><text:tab/> *</text:p><text:p text:style-name="P476"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P476"><text:tab/> *</text:p><text:p text:style-name="P476"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P476"><text:tab/> *</text:p><text:p text:style-name="P476"><text:tab/> * @date 21 Aug 2009</text:p><text:p text:style-name="P476"><text:tab/> */</text:p><text:p text:style-name="P476"><text:tab/>bool isBias() const;</text:p><text:p text:style-name="P476"/><text:p text:style-name="P476"><text:tab/>/**</text:p><text:p text:style-name="P476"><text:tab/> * Bias neuron setter.</text:p><text:p text:style-name="P476"><text:tab/> *</text:p><text:p text:style-name="P476"><text:tab/> * @param value True if neuron will be bias, false otherwise.</text:p><text:p text:style-name="P476"><text:tab/> *</text:p><text:p text:style-name="P476"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P476"><text:tab/> *</text:p><text:p text:style-name="P476"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P476"><text:tab/> *</text:p><text:p text:style-name="P476"><text:tab/> * @date 08 Mar 2009</text:p><text:p text:style-name="P476"><text:tab/> */</text:p><text:p text:style-name="P476"><text:tab/>void setBias(bool value);</text:p><text:p text:style-name="P476"/><text:p text:style-name="P476"><text:tab/>/**</text:p><text:p text:style-name="P476"><text:tab/> * Is input neuron getter.</text:p><text:p text:style-name="P476"><text:tab/> *</text:p><text:p text:style-name="P476"><text:tab/> * @return True if neuron is input, false otherwise.</text:p><text:p text:style-name="P476"><text:tab/> *</text:p><text:p text:style-name="P476"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P476"><text:tab/> *</text:p><text:p text:style-name="P476"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P476"><text:tab/> *</text:p><text:p text:style-name="P476"><text:tab/> * @date 30 Apr 2009</text:p><text:p text:style-name="P476"><text:tab/> */</text:p><text:p text:style-name="P476"><text:tab/>bool isInput() const;</text:p><text:p text:style-name="P476"/><text:p text:style-name="P476"><text:tab/>/**</text:p><text:p text:style-name="P476"><text:tab/> * Input neurons setter.</text:p><text:p text:style-name="P476"><text:tab/> *</text:p><text:p text:style-name="P476"><text:tab/> * @param value True if neuron will be input, false otherwise.</text:p><text:p text:style-name="P476"><text:tab/> *</text:p><text:p text:style-name="P476"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P476"><text:tab/> *</text:p><text:p text:style-name="P476"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P476"><text:tab/> *</text:p><text:p text:style-name="P476"><text:tab/> * @date 29 Apr 2009</text:p><text:p text:style-name="P476"><text:tab/> */</text:p><text:p text:style-name="P476"><text:tab/>void setInput(bool value);</text:p><text:p text:style-name="P476"/><text:p text:style-name="P476"><text:tab/>/**</text:p><text:p text:style-name="P476"><text:tab/> * Is output neuron getter.</text:p><text:p text:style-name="P476"><text:tab/> *</text:p><text:p text:style-name="P476"><text:tab/> * @return True if neuron is output, false otherwise.</text:p><text:p text:style-name="P476"><text:tab/> *</text:p><text:p text:style-name="P476"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P476"><text:tab/> *</text:p><text:p text:style-name="P476"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P476"><text:tab/> *</text:p><text:p text:style-name="P476"><text:tab/> * @date 30 Apr 2009</text:p><text:p text:style-name="P476"><text:tab/> */</text:p><text:p text:style-name="P476"><text:tab/>bool isOutput() const;</text:p><text:p text:style-name="P476"/><text:p text:style-name="P476"><text:tab/>/**</text:p><text:p text:style-name="P476"><text:tab/> * Output neurons setter.</text:p><text:p text:style-name="P476"><text:tab/> *</text:p><text:p text:style-name="P476"><text:tab/> * @param size Amount of output neurons at the end of neurons array.</text:p><text:p text:style-name="P476"><text:tab/> *</text:p><text:p text:style-name="P476"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P476"><text:tab/> *</text:p><text:p text:style-name="P476"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P476"><text:tab/> *</text:p><text:p text:style-name="P476"><text:tab/> * @date 29 Apr 2009</text:p><text:p text:style-name="P476"><text:tab/> */</text:p><text:p text:style-name="P476"><text:soft-page-break/><text:tab/>void setOutput(bool value);</text:p><text:p text:style-name="P476"/><text:p text:style-name="P476"><text:tab/>/**</text:p><text:p text:style-name="P476"><text:tab/> * Neuron type getter.</text:p><text:p text:style-name="P476"><text:tab/> *</text:p><text:p text:style-name="P476"><text:tab/> * @return Neuron type.</text:p><text:p text:style-name="P476"><text:tab/> *</text:p><text:p text:style-name="P476"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P476"><text:tab/> *</text:p><text:p text:style-name="P476"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P476"><text:tab/> *</text:p><text:p text:style-name="P476"><text:tab/> * @date 04 Aug 2011</text:p><text:p text:style-name="P476"><text:tab/> */</text:p><text:p text:style-name="P476"><text:tab/>NeuronType getType() const;</text:p><text:p text:style-name="P476"/><text:p text:style-name="P476"><text:tab/>/**</text:p><text:p text:style-name="P476"><text:tab/> * Neuron type setter.</text:p><text:p text:style-name="P476"><text:tab/> *</text:p><text:p text:style-name="P476"><text:tab/> * @param type Neuron type.</text:p><text:p text:style-name="P476"><text:tab/> *</text:p><text:p text:style-name="P476"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P476"><text:tab/> *</text:p><text:p text:style-name="P476"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P476"><text:tab/> *</text:p><text:p text:style-name="P476"><text:tab/> * @date 04 Aug 2011</text:p><text:p text:style-name="P476"><text:tab/> */</text:p><text:p text:style-name="P476"><text:tab/>void setType(NeuronType type);</text:p><text:p text:style-name="P476"/><text:p text:style-name="P476"><text:tab/>/**</text:p><text:p text:style-name="P476"><text:tab/> * Neuron value getter.</text:p><text:p text:style-name="P476"><text:tab/> *</text:p><text:p text:style-name="P476"><text:tab/> * @return Neuron value.</text:p><text:p text:style-name="P476"><text:tab/> *</text:p><text:p text:style-name="P476"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P476"><text:tab/> *</text:p><text:p text:style-name="P476"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P476"><text:tab/> *</text:p><text:p text:style-name="P476"><text:tab/> * @date 03 Aug 2011</text:p><text:p text:style-name="P476"><text:tab/> */</text:p><text:p text:style-name="P476"><text:tab/>double getValue() const;</text:p><text:p text:style-name="P476"/><text:p text:style-name="P476"><text:tab/>/**</text:p><text:p text:style-name="P476"><text:tab/> * Neuron value setter.</text:p><text:p text:style-name="P476"><text:tab/> *</text:p><text:p text:style-name="P476"><text:tab/> * @param value Neuron value.</text:p><text:p text:style-name="P476"><text:tab/> *</text:p><text:p text:style-name="P476"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P476"><text:tab/> *</text:p><text:p text:style-name="P476"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P476"><text:tab/> *</text:p><text:p text:style-name="P476"><text:tab/> * @date 03 Aug 2011</text:p><text:p text:style-name="P476"><text:tab/> */</text:p><text:p text:style-name="P476"><text:tab/>void setValue(double value);</text:p><text:p text:style-name="P476"/><text:p text:style-name="P476"><text:tab/>/**</text:p><text:p text:style-name="P476"><text:tab/> * Neuron error getter.</text:p><text:p text:style-name="P476"><text:tab/> *</text:p><text:p text:style-name="P476"><text:tab/> * @return Neuron value.</text:p><text:p text:style-name="P476"><text:tab/> *</text:p><text:p text:style-name="P476"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P476"><text:tab/> *</text:p><text:p text:style-name="P476"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P476"><text:tab/> *</text:p><text:p text:style-name="P476"><text:tab/> * @date 03 Aug 2011</text:p><text:p text:style-name="P476"><text:tab/> */</text:p><text:p text:style-name="P476"><text:tab/>double getError() const;</text:p><text:p text:style-name="P476"/><text:p text:style-name="P476"><text:tab/>/**</text:p><text:p text:style-name="P476"><text:tab/> * Neuron error setter.</text:p><text:p text:style-name="P476"><text:tab/> *</text:p><text:p text:style-name="P476"><text:tab/> * @param value Neuron value.</text:p><text:p text:style-name="P476"><text:tab/> *</text:p><text:p text:style-name="P476"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P476"><text:tab/> *</text:p><text:p text:style-name="P476"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P476"><text:tab/> *</text:p><text:p text:style-name="P476"><text:tab/> * @date 03 Aug 2011</text:p><text:p text:style-name="P476"><text:tab/> */</text:p><text:p text:style-name="P476"><text:tab/>void setError(double error);</text:p><text:p text:style-name="P476"/><text:p text:style-name="P476"><text:tab/>/**</text:p><text:p text:style-name="P476"><text:tab/> * Reset neuron to constant value.</text:p><text:p text:style-name="P476"><text:tab/> *</text:p><text:p text:style-name="P476"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P476"><text:tab/> *</text:p><text:p text:style-name="P476"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P476"><text:tab/> *</text:p><text:p text:style-name="P476"><text:tab/> * @date 19 Aug 2009</text:p><text:p text:style-name="P476"><text:tab/> */</text:p><text:p text:style-name="P476"><text:tab/>void reset();</text:p><text:p text:style-name="P476"/><text:p text:style-name="P476"><text:tab/>/**</text:p><text:p text:style-name="P476"><text:tab/> * Class destructor.</text:p><text:p text:style-name="P476"><text:tab/> *</text:p><text:p text:style-name="P476"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P476"><text:tab/> *</text:p><text:p text:style-name="P476"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P476"><text:tab/> *</text:p><text:p text:style-name="P476"><text:tab/> * @date 22 Oct 2011</text:p><text:p text:style-name="P476"><text:tab/> */</text:p><text:p text:style-name="P476"><text:tab/>virtual ~Neuron();</text:p><text:p text:style-name="P476"/><text:p text:style-name="P476"><text:tab/>/**</text:p><text:p text:style-name="P476"><text:tab/> * Assignment operator overloading.</text:p><text:p text:style-name="P476"><text:tab/> *</text:p><text:p text:style-name="P476"><text:tab/> * @param neuron Right side neuron operand.</text:p><text:p text:style-name="P476"><text:tab/> *</text:p><text:p text:style-name="P476"><text:tab/> * @return Neuron instance reference.</text:p><text:p text:style-name="P476"><text:tab/> *</text:p><text:p text:style-name="P476"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P476"><text:tab/> *</text:p><text:p text:style-name="P476"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P476"><text:tab/> *</text:p><text:p text:style-name="P476"><text:tab/> * @date 03 Aug 2011</text:p><text:p text:style-name="P476"><text:tab/> */</text:p><text:p text:style-name="P476"><text:tab/>virtual Neuron&amp; operator=(const Neuron &amp;neuron);</text:p><text:p text:style-name="P476"/><text:p text:style-name="P476"><text:tab/>/**</text:p><text:p text:style-name="P476"><text:tab/> * Assignment operator overloading.</text:p><text:p text:style-name="P476"><text:tab/> *</text:p><text:p text:style-name="P476"><text:tab/> * @param neuron Right side neuron value operand.</text:p><text:p text:style-name="P476"><text:tab/> *</text:p><text:p text:style-name="P476"><text:tab/> * @return Neuron istance reference.</text:p><text:p text:style-name="P476"><text:tab/> *</text:p><text:p text:style-name="P476"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P476"><text:soft-page-break/><text:tab/> *</text:p><text:p text:style-name="P476"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P476"><text:tab/> *</text:p><text:p text:style-name="P476"><text:tab/> * @date 03 Aug 2011</text:p><text:p text:style-name="P476"><text:tab/> */</text:p><text:p text:style-name="P476"><text:tab/>Neuron&amp; operator+=(const double value);</text:p><text:p text:style-name="P476"/><text:p text:style-name="P476"><text:tab/>/**</text:p><text:p text:style-name="P476"><text:tab/> * Assignment operator overloading.</text:p><text:p text:style-name="P476"><text:tab/> *</text:p><text:p text:style-name="P476"><text:tab/> * @param neuron Right side neuron error operand.</text:p><text:p text:style-name="P476"><text:tab/> *</text:p><text:p text:style-name="P476"><text:tab/> * @return Neuron instance reference.</text:p><text:p text:style-name="P476"><text:tab/> *</text:p><text:p text:style-name="P476"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P476"><text:tab/> *</text:p><text:p text:style-name="P476"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P476"><text:tab/> *</text:p><text:p text:style-name="P476"><text:tab/> * @date 03 Aug 2011</text:p><text:p text:style-name="P476"><text:tab/> */</text:p><text:p text:style-name="P476"><text:tab/>Neuron&amp; operator-=(const double error);</text:p><text:p text:style-name="P476"/><text:p text:style-name="P476"><text:tab/>friend std::ostream&amp; operator&lt;&lt;(std::ostream &amp;out, Neuron &amp;neuron);</text:p><text:p text:style-name="P476">};</text:p><text:p text:style-name="P476"/><text:p text:style-name="P476">/**</text:p><text:p text:style-name="P476"><text:s/>* Output operator redefinition.</text:p><text:p text:style-name="P476"><text:s/>*</text:p><text:p text:style-name="P476"><text:s/>* @param out Output stream reference.</text:p><text:p text:style-name="P476"><text:s/>*</text:p><text:p text:style-name="P476"><text:s/>* @param neuron Neuron instance reference.</text:p><text:p text:style-name="P476"><text:s/>*</text:p><text:p text:style-name="P476"><text:s/>* @return Output stream reference.</text:p><text:p text:style-name="P476"><text:s/>*</text:p><text:p text:style-name="P476"><text:s/>* @author Todor Balabanov</text:p><text:p text:style-name="P476"><text:s/>*</text:p><text:p text:style-name="P476"><text:s/>* @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P476"><text:s/>*</text:p><text:p text:style-name="P476"><text:s/>* @date 03 Aug 2011</text:p><text:p text:style-name="P476"><text:s/>*/</text:p><text:p text:style-name="P476">std::ostream&amp; operator&lt;&lt;(std::ostream &amp;out, Neuron &amp;neuron);</text:p><text:p text:style-name="P476"/><text:p text:style-name="P476">#endif</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5824_1486593966"/><text:s text:c="4"/>NeuronType.h<text:bookmark-end text:name="__RefHeading___Toc5824_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P477">/*******************************************************************************</text:p><text:p text:style-name="P477"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P477"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P477"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P477"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P477"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P477"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P477"><text:s/>* Copyright (C) 2008-2011 by Todor Balabanov <text:s/>( todor.balabanov@gmail.com ) <text:s text:c="2"/>*</text:p><text:p text:style-name="P477"><text:s/>* <text:s text:c="22"/>Iliyan Zankinski <text:s text:c="2"/>( iliyan_mf@abv.bg ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P477"><text:s/>* <text:s text:c="22"/>Momchil Anachkov <text:s text:c="2"/>( mZer0000@gmail.com ) <text:s text:c="12"/>*</text:p><text:p text:style-name="P477"><text:s/>* <text:s text:c="22"/>Daniel Chutrov <text:s text:c="4"/>( d.chutrov@gmail.com ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P477"><text:s/>* <text:s text:c="22"/>Nikola Simeonov <text:s text:c="3"/>( n.simeonow@gmail.com ) <text:s text:c="10"/>*</text:p><text:p text:style-name="P477"><text:s/>* <text:s text:c="22"/>Galq Cirkalova <text:s text:c="4"/>( galq_cirkalova@abv.bg ) <text:s text:c="9"/>*</text:p><text:p text:style-name="P477"><text:s/>* <text:s text:c="22"/>Ivan Grozev <text:s text:c="7"/>( ivan.iliev.grozev@gmail.com ) <text:s text:c="3"/>*</text:p><text:p text:style-name="P477"><text:s/>* <text:s text:c="22"/>Elisaveta Hristova ( elisaveta.s.hristova@gmail.com ) *</text:p><text:p text:style-name="P477"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P477"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P477"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P477"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P477"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P477"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P477"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P477"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P477"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P477"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P477"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P477"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P477"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P477"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P477"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P477"/><text:p text:style-name="P477">#ifndef NEURON_TYPE_H</text:p><text:p text:style-name="P477">#define NEURON_TYPE_H</text:p><text:p text:style-name="P477"/><text:p text:style-name="P477">/**</text:p><text:p text:style-name="P477"><text:s/>* Neuron type constants.</text:p><text:p text:style-name="P477"><text:s/>*</text:p><text:p text:style-name="P477"><text:s/>* @author Todor Balabanov</text:p><text:p text:style-name="P477"><text:s/>*</text:p><text:p text:style-name="P477"><text:s/>* @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P477"><text:s/>*</text:p><text:p text:style-name="P477"><text:s/>* @date 25 Feb 2016</text:p><text:p text:style-name="P477"><text:s/>*/</text:p><text:p text:style-name="P477">enum NeuronType {</text:p><text:p text:style-name="P477"><text:tab/>/**</text:p><text:p text:style-name="P477"><text:tab/> * Regular neuron flag.</text:p><text:p text:style-name="P477"><text:tab/> */</text:p><text:p text:style-name="P477"><text:tab/>REGULAR = 0x00,</text:p><text:p text:style-name="P477"/><text:p text:style-name="P477"><text:tab/>/**</text:p><text:p text:style-name="P477"><text:tab/> * Bias neuron flag.</text:p><text:p text:style-name="P477"><text:tab/> */</text:p><text:p text:style-name="P477"><text:tab/>BIAS = 0x01,</text:p><text:p text:style-name="P477"/><text:p text:style-name="P477"><text:tab/>/**</text:p><text:p text:style-name="P477"><text:tab/> * Input neuron flag.</text:p><text:p text:style-name="P477"><text:tab/> */</text:p><text:p text:style-name="P477"><text:tab/>INPUT = 0x02,</text:p><text:p text:style-name="P477"/><text:p text:style-name="P477"><text:tab/>/**</text:p><text:p text:style-name="P477"><text:tab/> * Input and bias neuron flag.</text:p><text:p text:style-name="P477"><text:tab/> */</text:p><text:p text:style-name="P477"><text:tab/>INPUT_BIAS = 0x03,</text:p><text:p text:style-name="P477"/><text:p text:style-name="P477"><text:tab/>/**</text:p><text:p text:style-name="P477"><text:tab/> * Output neuron flag.</text:p><text:p text:style-name="P477"><text:tab/> */</text:p><text:p text:style-name="P477"><text:tab/>OUTPUT = 0x04,</text:p><text:p text:style-name="P477"/><text:p text:style-name="P477"><text:tab/>/**</text:p><text:p text:style-name="P477"><text:tab/> * Output and bias neuron flag.</text:p><text:p text:style-name="P477"><text:tab/> */</text:p><text:p text:style-name="P477"><text:tab/>OUTPUT_BIAS = 0x05,</text:p><text:p text:style-name="P477"><text:soft-page-break/></text:p><text:p text:style-name="P477"><text:tab/>/**</text:p><text:p text:style-name="P477"><text:tab/> * Output and input neuron flag.</text:p><text:p text:style-name="P477"><text:tab/> */</text:p><text:p text:style-name="P477"><text:tab/>OUTPUT_INPUT = 0x06,</text:p><text:p text:style-name="P477"/><text:p text:style-name="P477"><text:tab/>/**</text:p><text:p text:style-name="P477"><text:tab/> * Output, input and bias neuron flag.</text:p><text:p text:style-name="P477"><text:tab/> */</text:p><text:p text:style-name="P477"><text:tab/>OUTPUT_INPUT_BIAS = 0x07</text:p><text:p text:style-name="P477">};</text:p><text:p text:style-name="P477"/><text:p text:style-name="P477">#endif</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5826_1486593966"/><text:s text:c="4"/>NeuronsList.cpp<text:bookmark-end text:name="__RefHeading___Toc5826_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P478">/*******************************************************************************</text:p><text:p text:style-name="P478"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P478"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P478"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P478"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P478"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P478"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P478"><text:s/>* Copyright (C) 2008-2011 by Todor Balabanov <text:s/>( todor.balabanov@gmail.com ) <text:s text:c="2"/>*</text:p><text:p text:style-name="P478"><text:s/>* <text:s text:c="22"/>Iliyan Zankinski <text:s text:c="2"/>( iliyan_mf@abv.bg ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P478"><text:s/>* <text:s text:c="22"/>Momchil Anachkov <text:s text:c="2"/>( mZer0000@gmail.com ) <text:s text:c="12"/>*</text:p><text:p text:style-name="P478"><text:s/>* <text:s text:c="22"/>Daniel Chutrov <text:s text:c="4"/>( d.chutrov@gmail.com ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P478"><text:s/>* <text:s text:c="22"/>Nikola Simeonov <text:s text:c="3"/>( n.simeonow@gmail.com ) <text:s text:c="10"/>*</text:p><text:p text:style-name="P478"><text:s/>* <text:s text:c="22"/>Galq Cirkalova <text:s text:c="4"/>( galq_cirkalova@abv.bg ) <text:s text:c="9"/>*</text:p><text:p text:style-name="P478"><text:s/>* <text:s text:c="22"/>Ivan Grozev <text:s text:c="7"/>( ivan.iliev.grozev@gmail.com ) <text:s text:c="3"/>*</text:p><text:p text:style-name="P478"><text:s/>* <text:s text:c="22"/>Elisaveta Hristova ( elisaveta.s.hristova@gmail.com ) *</text:p><text:p text:style-name="P478"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P478"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P478"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P478"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P478"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P478"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P478"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P478"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P478"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P478"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P478"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P478"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P478"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P478"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P478"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P478"/><text:p text:style-name="P478">#include &quot;NeuronsList.h&quot;</text:p><text:p text:style-name="P478"/><text:p text:style-name="P478">NeuronsList::NeuronsList() {</text:p><text:p text:style-name="P478"><text:tab/>list.clear();</text:p><text:p text:style-name="P478">}</text:p><text:p text:style-name="P478"/><text:p text:style-name="P478">NeuronsList::NeuronsList(int size) {</text:p><text:p text:style-name="P478"><text:tab/>/*</text:p><text:p text:style-name="P478"><text:tab/> * It is not possible neurons amount to be negative number.</text:p><text:p text:style-name="P478"><text:tab/> */</text:p><text:p text:style-name="P478"><text:tab/>if (size &lt; MIN_NEURONS_AMOUNT) {</text:p><text:p text:style-name="P478"><text:tab/><text:tab/>size = MIN_NEURONS_AMOUNT;</text:p><text:p text:style-name="P478"><text:tab/>}</text:p><text:p text:style-name="P478"/><text:p text:style-name="P478"><text:tab/>list.clear();</text:p><text:p text:style-name="P478"><text:tab/>for(int i=0; i&lt;size; i++) {</text:p><text:p text:style-name="P478"><text:tab/><text:tab/>list.push_back( Neuron() );</text:p><text:p text:style-name="P478"><text:tab/>}</text:p><text:p text:style-name="P478"/><text:p text:style-name="P478"><text:tab/>clearTypes();</text:p><text:p text:style-name="P478">}</text:p><text:p text:style-name="P478"/><text:p text:style-name="P478">NeuronsList::NeuronsList(const NeuronsList &amp;neurons) {</text:p><text:p text:style-name="P478"><text:tab/>list = neurons.list;</text:p><text:p text:style-name="P478">}</text:p><text:p text:style-name="P478"/><text:p text:style-name="P478">int NeuronsList::getInputNeuronsAmount() const {</text:p><text:p text:style-name="P478"><text:tab/>int inputNeuronsAmount = 0;</text:p><text:p text:style-name="P478"/><text:p text:style-name="P478"><text:tab/>for (std::vector&lt;Neuron&gt;::const_iterator i=list.begin(); i!=list.end(); i++) {</text:p><text:p text:style-name="P478"><text:tab/><text:tab/>if((*i).isInput() == true) {</text:p><text:p text:style-name="P478"><text:tab/><text:tab/><text:tab/>inputNeuronsAmount++;</text:p><text:p text:style-name="P478"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P478"><text:tab/>}</text:p><text:p text:style-name="P478"/><text:p text:style-name="P478"><text:tab/>return( inputNeuronsAmount );</text:p><text:p text:style-name="P478">}</text:p><text:p text:style-name="P478"/><text:p text:style-name="P478">int NeuronsList::getOutputNeuronsAmount() const {</text:p><text:p text:style-name="P478"><text:tab/>int outputNeuronsAmount = 0;</text:p><text:p text:style-name="P478"/><text:p text:style-name="P478"><text:tab/>for (std::vector&lt;Neuron&gt;::const_iterator i=list.begin(); i!=list.end(); i++) {</text:p><text:p text:style-name="P478"><text:tab/><text:tab/>if((*i).isOutput() == true) {</text:p><text:p text:style-name="P478"><text:tab/><text:tab/><text:tab/>outputNeuronsAmount++;</text:p><text:p text:style-name="P478"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P478"><text:tab/>}</text:p><text:p text:style-name="P478"/><text:p text:style-name="P478"><text:tab/>return( outputNeuronsAmount );</text:p><text:p text:style-name="P478">}</text:p><text:p text:style-name="P478"/><text:p text:style-name="P478">int NeuronsList::dimension() const {</text:p><text:p text:style-name="P478"><text:tab/>return( list.size() );</text:p><text:p text:style-name="P478">}</text:p><text:p text:style-name="P478"/><text:p text:style-name="P478">void NeuronsList::clearTypes() {</text:p><text:p text:style-name="P478"><text:tab/>for (std::vector&lt;Neuron&gt;::iterator i=list.begin(); i!=list.end(); i++) {</text:p><text:p text:style-name="P478"><text:tab/><text:tab/>(*i).setRegular( true );</text:p><text:p text:style-name="P478"><text:tab/>}</text:p><text:p text:style-name="P478">}</text:p><text:p text:style-name="P478"/><text:p text:style-name="P478">void NeuronsList::reset() {</text:p><text:p text:style-name="P478"><text:tab/>for (std::vector&lt;Neuron&gt;::iterator i=list.begin(); i!=list.end(); i++) {</text:p><text:p text:style-name="P478"><text:tab/><text:tab/>(*i).reset();</text:p><text:p text:style-name="P478"><text:tab/>}</text:p><text:p text:style-name="P478">}</text:p><text:p text:style-name="P478"/><text:p text:style-name="P478">NeuronsList::~NeuronsList() {</text:p><text:p text:style-name="P478"><text:tab/>list.clear();</text:p><text:p text:style-name="P478">}</text:p><text:p text:style-name="P478"/><text:p text:style-name="P478">Neuron NeuronsList::operator[](int index) const {</text:p><text:p text:style-name="P478"><text:tab/>if (index&lt;0 || index&gt;=list.size()) {</text:p><text:p text:style-name="P478"><text:soft-page-break/><text:tab/><text:tab/>throw( &quot;NeuronsList00206&quot; );</text:p><text:p text:style-name="P478"><text:tab/>}</text:p><text:p text:style-name="P478"/><text:p text:style-name="P478"><text:tab/>return( list[index] );</text:p><text:p text:style-name="P478">}</text:p><text:p text:style-name="P478"/><text:p text:style-name="P478">Neuron&amp; NeuronsList::operator[](int index) {</text:p><text:p text:style-name="P478"><text:tab/>if (index&lt;0 || index&gt;=list.size()) {</text:p><text:p text:style-name="P478"><text:tab/><text:tab/>throw( &quot;NeuronsList00207&quot; );</text:p><text:p text:style-name="P478"><text:tab/>}</text:p><text:p text:style-name="P478"/><text:p text:style-name="P478"><text:tab/>return( list[index] );</text:p><text:p text:style-name="P478">}</text:p><text:p text:style-name="P478"/><text:p text:style-name="P478">NeuronsList&amp; NeuronsList::operator=(const NeuronsList &amp;neurons) {</text:p><text:p text:style-name="P478"><text:tab/>list = neurons.list;</text:p><text:p text:style-name="P478"/><text:p text:style-name="P478"><text:tab/>return( *this );</text:p><text:p text:style-name="P478">}</text:p><text:p text:style-name="P478"/><text:p text:style-name="P478">std::ostream&amp; operator&lt;&lt;(std::ostream &amp;out, NeuronsList &amp;neurons) {</text:p><text:p text:style-name="P478"><text:tab/>out &lt;&lt; neurons.list.size();</text:p><text:p text:style-name="P478"><text:tab/>out &lt;&lt; std::endl;</text:p><text:p text:style-name="P478"/><text:p text:style-name="P478"><text:tab/>out &lt;&lt; neurons.getInputNeuronsAmount();</text:p><text:p text:style-name="P478"><text:tab/>out &lt;&lt; std::endl;</text:p><text:p text:style-name="P478"/><text:p text:style-name="P478"><text:tab/>out &lt;&lt; neurons.getOutputNeuronsAmount();</text:p><text:p text:style-name="P478"><text:tab/>out &lt;&lt; std::endl;</text:p><text:p text:style-name="P478"/><text:p text:style-name="P478"><text:tab/>for (std::vector&lt;Neuron&gt;::iterator i=neurons.list.begin(); i!=neurons.list.end(); i++) {</text:p><text:p text:style-name="P478"><text:tab/><text:tab/>out &lt;&lt; (*i);</text:p><text:p text:style-name="P478"><text:tab/><text:tab/>if (i+1 != neurons.list.end()) {</text:p><text:p text:style-name="P478"><text:tab/><text:tab/><text:tab/>out &lt;&lt; &quot; &quot;;</text:p><text:p text:style-name="P478"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P478"><text:tab/>}</text:p><text:p text:style-name="P478"/><text:p text:style-name="P478"><text:tab/>return( out );</text:p><text:p text:style-name="P478">}</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5828_1486593966"/><text:s text:c="4"/>NeuronsList.h<text:bookmark-end text:name="__RefHeading___Toc5828_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P479">/*******************************************************************************</text:p><text:p text:style-name="P479"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P479"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P479"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P479"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P479"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P479"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P479"><text:s/>* Copyright (C) 2008-2011 by Todor Balabanov <text:s/>( todor.balabanov@gmail.com ) <text:s text:c="2"/>*</text:p><text:p text:style-name="P479"><text:s/>* <text:s text:c="22"/>Iliyan Zankinski <text:s text:c="2"/>( iliyan_mf@abv.bg ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P479"><text:s/>* <text:s text:c="22"/>Momchil Anachkov <text:s text:c="2"/>( mZer0000@gmail.com ) <text:s text:c="12"/>*</text:p><text:p text:style-name="P479"><text:s/>* <text:s text:c="22"/>Daniel Chutrov <text:s text:c="4"/>( d.chutrov@gmail.com ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P479"><text:s/>* <text:s text:c="22"/>Nikola Simeonov <text:s text:c="3"/>( n.simeonow@gmail.com ) <text:s text:c="10"/>*</text:p><text:p text:style-name="P479"><text:s/>* <text:s text:c="22"/>Galq Cirkalova <text:s text:c="4"/>( galq_cirkalova@abv.bg ) <text:s text:c="9"/>*</text:p><text:p text:style-name="P479"><text:s/>* <text:s text:c="22"/>Ivan Grozev <text:s text:c="7"/>( ivan.iliev.grozev@gmail.com ) <text:s text:c="3"/>*</text:p><text:p text:style-name="P479"><text:s/>* <text:s text:c="22"/>Elisaveta Hristova ( elisaveta.s.hristova@gmail.com ) *</text:p><text:p text:style-name="P479"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P479"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P479"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P479"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P479"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P479"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P479"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P479"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P479"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P479"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P479"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P479"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P479"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P479"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P479"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P479"/><text:p text:style-name="P479">#ifndef NEURON_LIST_H</text:p><text:p text:style-name="P479">#define NEURON_LIST_H</text:p><text:p text:style-name="P479"/><text:p text:style-name="P479">#include &lt;vector&gt;</text:p><text:p text:style-name="P479">#include &lt;iostream&gt;</text:p><text:p text:style-name="P479"/><text:p text:style-name="P479">#include &quot;Neuron.h&quot;</text:p><text:p text:style-name="P479"/><text:p text:style-name="P479">/**</text:p><text:p text:style-name="P479"><text:s/>* List of neurons class.</text:p><text:p text:style-name="P479"><text:s/>*</text:p><text:p text:style-name="P479"><text:s/>* @author Todor Balabanov</text:p><text:p text:style-name="P479"><text:s/>*</text:p><text:p text:style-name="P479"><text:s/>* @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P479"><text:s/>*</text:p><text:p text:style-name="P479"><text:s/>* @date 03 Aug 2011</text:p><text:p text:style-name="P479"><text:s/>*/</text:p><text:p text:style-name="P479">class NeuronsList {</text:p><text:p text:style-name="P479"/><text:p text:style-name="P479">public:</text:p><text:p text:style-name="P479"/><text:p text:style-name="P479"><text:tab/>/**</text:p><text:p text:style-name="P479"><text:tab/> * Minumum input amount of ANN neurons.</text:p><text:p text:style-name="P479"><text:tab/> */</text:p><text:p text:style-name="P479"><text:tab/>static const int MIN_INPUT_NEURONS_AMOUNT = 1;</text:p><text:p text:style-name="P479"/><text:p text:style-name="P479"><text:tab/>/**</text:p><text:p text:style-name="P479"><text:tab/> * Minumum regular amount of ANN neurons.</text:p><text:p text:style-name="P479"><text:tab/> */</text:p><text:p text:style-name="P479"><text:tab/>static const int MIN_REGULAR_NEURONS_AMOUNT = 1;</text:p><text:p text:style-name="P479"/><text:p text:style-name="P479"><text:tab/>/**</text:p><text:p text:style-name="P479"><text:tab/> * Minumum output amount of ANN neurons.</text:p><text:p text:style-name="P479"><text:tab/> */</text:p><text:p text:style-name="P479"><text:tab/>static const int MIN_OUTPUT_NEURONS_AMOUNT = 1;</text:p><text:p text:style-name="P479"/><text:p text:style-name="P479"><text:tab/>/**</text:p><text:p text:style-name="P479"><text:tab/> * Minumum amount of ANN neurons.</text:p><text:p text:style-name="P479"><text:tab/> */</text:p><text:p text:style-name="P479"><text:tab/>static const int MIN_NEURONS_AMOUNT = MIN_INPUT_NEURONS_AMOUNT+MIN_REGULAR_NEURONS_AMOUNT+MIN_OUTPUT_NEURONS_AMOUNT;</text:p><text:p text:style-name="P479"/><text:p text:style-name="P479">private:</text:p><text:p text:style-name="P479"/><text:p text:style-name="P479"><text:tab/>/**</text:p><text:p text:style-name="P479"><text:tab/> * Neurons list.</text:p><text:p text:style-name="P479"><text:tab/> */</text:p><text:p text:style-name="P479"><text:soft-page-break/><text:tab/>std::vector&lt;Neuron&gt; list;</text:p><text:p text:style-name="P479"/><text:p text:style-name="P479">public:</text:p><text:p text:style-name="P479"/><text:p text:style-name="P479"><text:tab/>/**</text:p><text:p text:style-name="P479"><text:tab/> * Constructor without parameters.</text:p><text:p text:style-name="P479"><text:tab/> *</text:p><text:p text:style-name="P479"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P479"><text:tab/> *</text:p><text:p text:style-name="P479"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P479"><text:tab/> *</text:p><text:p text:style-name="P479"><text:tab/> * @date 03 Aug 2011</text:p><text:p text:style-name="P479"><text:tab/> */</text:p><text:p text:style-name="P479"><text:tab/>NeuronsList();</text:p><text:p text:style-name="P479"/><text:p text:style-name="P479"><text:tab/>/**</text:p><text:p text:style-name="P479"><text:tab/> * Class constructor. Memory allocation and internal variables initializaton.</text:p><text:p text:style-name="P479"><text:tab/> *</text:p><text:p text:style-name="P479"><text:tab/> * @param size Size of the neurons list.</text:p><text:p text:style-name="P479"><text:tab/> *</text:p><text:p text:style-name="P479"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P479"><text:tab/> *</text:p><text:p text:style-name="P479"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P479"><text:tab/> *</text:p><text:p text:style-name="P479"><text:tab/> * @date 03 Aug 2011</text:p><text:p text:style-name="P479"><text:tab/> */</text:p><text:p text:style-name="P479"><text:tab/>NeuronsList(int size);</text:p><text:p text:style-name="P479"/><text:p text:style-name="P479"><text:tab/>/**</text:p><text:p text:style-name="P479"><text:tab/> * Copy constructor.</text:p><text:p text:style-name="P479"><text:tab/> *</text:p><text:p text:style-name="P479"><text:tab/> * @param list Instance to be copied.</text:p><text:p text:style-name="P479"><text:tab/> *</text:p><text:p text:style-name="P479"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P479"><text:tab/> *</text:p><text:p text:style-name="P479"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P479"><text:tab/> *</text:p><text:p text:style-name="P479"><text:tab/> * @date 03 Aug 2011</text:p><text:p text:style-name="P479"><text:tab/> */</text:p><text:p text:style-name="P479"><text:tab/>NeuronsList(const NeuronsList &amp;neurons);</text:p><text:p text:style-name="P479"/><text:p text:style-name="P479"><text:tab/>/**</text:p><text:p text:style-name="P479"><text:tab/> * Input neurons amount getter.</text:p><text:p text:style-name="P479"><text:tab/> *</text:p><text:p text:style-name="P479"><text:tab/> * @return Input neurons amount.</text:p><text:p text:style-name="P479"><text:tab/> *</text:p><text:p text:style-name="P479"><text:tab/> * @author Iliyan Zankinski</text:p><text:p text:style-name="P479"><text:tab/> *</text:p><text:p text:style-name="P479"><text:tab/> * @email iliyan_mf@abv.bg</text:p><text:p text:style-name="P479"><text:tab/> *</text:p><text:p text:style-name="P479"><text:tab/> * @date 27 Jul 2009</text:p><text:p text:style-name="P479"><text:tab/> */</text:p><text:p text:style-name="P479"><text:tab/>int getInputNeuronsAmount() const;</text:p><text:p text:style-name="P479"/><text:p text:style-name="P479"><text:tab/>/**</text:p><text:p text:style-name="P479"><text:tab/> * Output neurons amount getter.</text:p><text:p text:style-name="P479"><text:tab/> *</text:p><text:p text:style-name="P479"><text:tab/> * @return Output neurons amount.</text:p><text:p text:style-name="P479"><text:tab/> *</text:p><text:p text:style-name="P479"><text:tab/> * @author Iliyan Zankinski</text:p><text:p text:style-name="P479"><text:tab/> *</text:p><text:p text:style-name="P479"><text:tab/> * @email iliyan_mf@abv.bg</text:p><text:p text:style-name="P479"><text:tab/> *</text:p><text:p text:style-name="P479"><text:tab/> * @date 27 Jul 2009</text:p><text:p text:style-name="P479"><text:tab/> */</text:p><text:p text:style-name="P479"><text:tab/>int getOutputNeuronsAmount() const;</text:p><text:p text:style-name="P479"/><text:p text:style-name="P479"><text:tab/>/**</text:p><text:p text:style-name="P479"><text:tab/> * Size of neurons list getter.</text:p><text:p text:style-name="P479"><text:tab/> *</text:p><text:p text:style-name="P479"><text:tab/> * @return Size of neurons list.</text:p><text:p text:style-name="P479"><text:tab/> *</text:p><text:p text:style-name="P479"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P479"><text:tab/> *</text:p><text:p text:style-name="P479"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P479"><text:tab/> *</text:p><text:p text:style-name="P479"><text:tab/> * @date 03 Aug 2011</text:p><text:p text:style-name="P479"><text:tab/> */</text:p><text:p text:style-name="P479"><text:tab/>int dimension() const;</text:p><text:p text:style-name="P479"/><text:p text:style-name="P479"><text:tab/>/**</text:p><text:p text:style-name="P479"><text:tab/> * Clear all type flags.</text:p><text:p text:style-name="P479"><text:tab/> *</text:p><text:p text:style-name="P479"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P479"><text:tab/> *</text:p><text:p text:style-name="P479"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P479"><text:tab/> *</text:p><text:p text:style-name="P479"><text:tab/> * @date 21 Aug 2009</text:p><text:p text:style-name="P479"><text:tab/> */</text:p><text:p text:style-name="P479"><text:tab/>void clearTypes();</text:p><text:p text:style-name="P479"/><text:p text:style-name="P479"><text:tab/>/**</text:p><text:p text:style-name="P479"><text:tab/> * Reset all neurons values.</text:p><text:p text:style-name="P479"><text:tab/> *</text:p><text:p text:style-name="P479"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P479"><text:tab/> *</text:p><text:p text:style-name="P479"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P479"><text:tab/> *</text:p><text:p text:style-name="P479"><text:tab/> * @date 21 Aug 2009</text:p><text:p text:style-name="P479"><text:tab/> */</text:p><text:p text:style-name="P479"><text:tab/>void reset();</text:p><text:p text:style-name="P479"/><text:p text:style-name="P479"><text:tab/>/**</text:p><text:p text:style-name="P479"><text:tab/> * Class destructor. Memory release and variables deinitialization.</text:p><text:p text:style-name="P479"><text:tab/> *</text:p><text:p text:style-name="P479"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P479"><text:tab/> *</text:p><text:p text:style-name="P479"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P479"><text:tab/> *</text:p><text:p text:style-name="P479"><text:tab/> * @date 03 Aug 2011</text:p><text:p text:style-name="P479"><text:tab/> */</text:p><text:p text:style-name="P479"><text:tab/>virtual ~NeuronsList();</text:p><text:p text:style-name="P479"/><text:p text:style-name="P479"><text:tab/>/**</text:p><text:p text:style-name="P479"><text:tab/> * List elements access operator overloading.</text:p><text:p text:style-name="P479"><text:tab/> *</text:p><text:p text:style-name="P479"><text:tab/> * @param index Index of element.</text:p><text:p text:style-name="P479"><text:tab/> *</text:p><text:p text:style-name="P479"><text:tab/> * @return Constant element value.</text:p><text:p text:style-name="P479"><text:tab/> *</text:p><text:p text:style-name="P479"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P479"><text:tab/> *</text:p><text:p text:style-name="P479"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P479"><text:tab/> *</text:p><text:p text:style-name="P479"><text:tab/> * @date 03 Aug 2011</text:p><text:p text:style-name="P479"><text:soft-page-break/><text:tab/> */</text:p><text:p text:style-name="P479"><text:tab/>Neuron operator[](int index) const;</text:p><text:p text:style-name="P479"/><text:p text:style-name="P479"><text:tab/>/**</text:p><text:p text:style-name="P479"><text:tab/> * List elements access operator overloading.</text:p><text:p text:style-name="P479"><text:tab/> *</text:p><text:p text:style-name="P479"><text:tab/> * @param index Index of element.</text:p><text:p text:style-name="P479"><text:tab/> *</text:p><text:p text:style-name="P479"><text:tab/> * @return Constant element value.</text:p><text:p text:style-name="P479"><text:tab/> *</text:p><text:p text:style-name="P479"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P479"><text:tab/> *</text:p><text:p text:style-name="P479"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P479"><text:tab/> *</text:p><text:p text:style-name="P479"><text:tab/> * @date 03 Aug 2011</text:p><text:p text:style-name="P479"><text:tab/> */</text:p><text:p text:style-name="P479"><text:tab/>Neuron&amp; operator[](int index);</text:p><text:p text:style-name="P479"/><text:p text:style-name="P479"><text:tab/>/**</text:p><text:p text:style-name="P479"><text:tab/> * Assignment operator overloading.</text:p><text:p text:style-name="P479"><text:tab/> *</text:p><text:p text:style-name="P479"><text:tab/> * @param neurons Right side operand.</text:p><text:p text:style-name="P479"><text:tab/> *</text:p><text:p text:style-name="P479"><text:tab/> * @return Neurons list instance reference.</text:p><text:p text:style-name="P479"><text:tab/> *</text:p><text:p text:style-name="P479"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P479"><text:tab/> *</text:p><text:p text:style-name="P479"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P479"><text:tab/> *</text:p><text:p text:style-name="P479"><text:tab/> * @date 03 Aug 2011</text:p><text:p text:style-name="P479"><text:tab/> */</text:p><text:p text:style-name="P479"><text:tab/>virtual NeuronsList&amp; operator=(const NeuronsList &amp;neurons);</text:p><text:p text:style-name="P479"/><text:p text:style-name="P479"><text:tab/>friend std::ostream&amp; operator&lt;&lt;(std::ostream &amp;out, NeuronsList &amp;neurons);</text:p><text:p text:style-name="P479"/><text:p text:style-name="P479">};</text:p><text:p text:style-name="P479"/><text:p text:style-name="P479">/**</text:p><text:p text:style-name="P479"><text:s/>* Output operator redefinition.</text:p><text:p text:style-name="P479"><text:s/>*</text:p><text:p text:style-name="P479"><text:s/>* @param out Output stream reference.</text:p><text:p text:style-name="P479"><text:s/>*</text:p><text:p text:style-name="P479"><text:s/>* @param neuron Neuron list instance reference.</text:p><text:p text:style-name="P479"><text:s/>*</text:p><text:p text:style-name="P479"><text:s/>* @return Output stream reference.</text:p><text:p text:style-name="P479"><text:s/>*</text:p><text:p text:style-name="P479"><text:s/>* @author Todor Balabanov</text:p><text:p text:style-name="P479"><text:s/>*</text:p><text:p text:style-name="P479"><text:s/>* @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P479"><text:s/>*</text:p><text:p text:style-name="P479"><text:s/>* @date 03 Aug 2011</text:p><text:p text:style-name="P479"><text:s/>*/</text:p><text:p text:style-name="P479">std::ostream&amp; operator&lt;&lt;(std::ostream &amp;out, NeuronsList &amp;neurons);</text:p><text:p text:style-name="P479"/><text:p text:style-name="P479">#endif</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5830_1486593966"/><text:s text:c="4"/>Population.cpp<text:bookmark-end text:name="__RefHeading___Toc5830_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P480">/*******************************************************************************</text:p><text:p text:style-name="P480"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P480"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P480"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P480"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P480"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P480"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P480"><text:s/>* Copyright (C) 2008-2011 by Todor Balabanov <text:s/>( todor.balabanov@gmail.com ) <text:s text:c="2"/>*</text:p><text:p text:style-name="P480"><text:s/>* <text:s text:c="22"/>Iliyan Zankinski <text:s text:c="2"/>( iliyan_mf@abv.bg ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P480"><text:s/>* <text:s text:c="22"/>Momchil Anachkov <text:s text:c="2"/>( mZer0000@gmail.com ) <text:s text:c="12"/>*</text:p><text:p text:style-name="P480"><text:s/>* <text:s text:c="22"/>Daniel Chutrov <text:s text:c="4"/>( d.chutrov@gmail.com ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P480"><text:s/>* <text:s text:c="22"/>Nikola Simeonov <text:s text:c="3"/>( n.simeonow@gmail.com ) <text:s text:c="10"/>*</text:p><text:p text:style-name="P480"><text:s/>* <text:s text:c="22"/>Galq Cirkalova <text:s text:c="4"/>( galq_cirkalova@abv.bg ) <text:s text:c="9"/>*</text:p><text:p text:style-name="P480"><text:s/>* <text:s text:c="22"/>Ivan Grozev <text:s text:c="7"/>( ivan.iliev.grozev@gmail.com ) <text:s text:c="3"/>*</text:p><text:p text:style-name="P480"><text:s/>* <text:s text:c="22"/>Elisaveta Hristova ( elisaveta.s.hristova@gmail.com ) *</text:p><text:p text:style-name="P480"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P480"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P480"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P480"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P480"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P480"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P480"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P480"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P480"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P480"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P480"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P480"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P480"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P480"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P480"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P480"/><text:p text:style-name="P480">#include &quot;Population.h&quot;</text:p><text:p text:style-name="P480"/><text:p text:style-name="P480">Population::Population() {</text:p><text:p text:style-name="P480"><text:tab/>list.clear();</text:p><text:p text:style-name="P480"/><text:p text:style-name="P480"><text:tab/>searchBestFitnessIndex();</text:p><text:p text:style-name="P480">}</text:p><text:p text:style-name="P480"/><text:p text:style-name="P480">Population::Population(int size) {</text:p><text:p text:style-name="P480"><text:tab/>/*</text:p><text:p text:style-name="P480"><text:tab/> * DE is not working with less than minimum amount of chromosomes.</text:p><text:p text:style-name="P480"><text:tab/> */</text:p><text:p text:style-name="P480"><text:tab/>if (size &lt; MIN_POPULATION_SIZE) {</text:p><text:p text:style-name="P480"><text:tab/><text:tab/>size = MIN_POPULATION_SIZE;</text:p><text:p text:style-name="P480"><text:tab/>}</text:p><text:p text:style-name="P480"/><text:p text:style-name="P480"><text:tab/>list.clear();</text:p><text:p text:style-name="P480"><text:tab/>for(int i=0; i&lt;size; i++) {</text:p><text:p text:style-name="P480"><text:tab/><text:tab/>list.push_back( Chromosome() );</text:p><text:p text:style-name="P480"><text:tab/>}</text:p><text:p text:style-name="P480"/><text:p text:style-name="P480"><text:tab/>searchBestFitnessIndex();</text:p><text:p text:style-name="P480">}</text:p><text:p text:style-name="P480"/><text:p text:style-name="P480">Population::Population(const Population &amp;population) {</text:p><text:p text:style-name="P480"><text:tab/>list = population.list;</text:p><text:p text:style-name="P480"/><text:p text:style-name="P480"><text:tab/>searchBestFitnessIndex();</text:p><text:p text:style-name="P480">}</text:p><text:p text:style-name="P480"/><text:p text:style-name="P480"><text:soft-page-break/>int Population::dimension() const {</text:p><text:p text:style-name="P480"><text:tab/>return( list.size() );</text:p><text:p text:style-name="P480">}</text:p><text:p text:style-name="P480"/><text:p text:style-name="P480">double Population::getBestFitness() const {</text:p><text:p text:style-name="P480"><text:tab/>return( list[bestFitnessIndex].getFitness() );</text:p><text:p text:style-name="P480">}</text:p><text:p text:style-name="P480"/><text:p text:style-name="P480">int Population::getBestFitnessIndex() const {</text:p><text:p text:style-name="P480"><text:tab/>return( bestFitnessIndex );</text:p><text:p text:style-name="P480">}</text:p><text:p text:style-name="P480"/><text:p text:style-name="P480">bool Population::hasDuplication(Chromosome &amp;chromosome) {</text:p><text:p text:style-name="P480"><text:tab/>/*</text:p><text:p text:style-name="P480"><text:tab/> * Check chromosome for duplication.</text:p><text:p text:style-name="P480"><text:tab/> */</text:p><text:p text:style-name="P480"><text:tab/>for (std::vector&lt;Chromosome&gt;::iterator k=list.begin(); k!=list.end(); k++) {</text:p><text:p text:style-name="P480"><text:tab/><text:tab/>if ((*k).getFitness()==chromosome.getFitness() &amp;&amp; (&amp;(*k) != &amp;chromosome)) {</text:p><text:p text:style-name="P480"><text:tab/><text:tab/><text:tab/>return( true );</text:p><text:p text:style-name="P480"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P480"><text:tab/>}</text:p><text:p text:style-name="P480"/><text:p text:style-name="P480"><text:tab/>return( false );</text:p><text:p text:style-name="P480">}</text:p><text:p text:style-name="P480"/><text:p text:style-name="P480">void Population::initRandom() {</text:p><text:p text:style-name="P480"><text:tab/>for (std::vector&lt;Chromosome&gt;::iterator i=list.begin(); i!=list.end(); i++) {</text:p><text:p text:style-name="P480"><text:tab/><text:tab/>(*i).random();</text:p><text:p text:style-name="P480"><text:tab/>}</text:p><text:p text:style-name="P480"/><text:p text:style-name="P480"><text:tab/>searchBestFitnessIndex();</text:p><text:p text:style-name="P480">}</text:p><text:p text:style-name="P480"/><text:p text:style-name="P480">void Population::searchBestFitnessIndex() {</text:p><text:p text:style-name="P480"><text:tab/>bestFitnessIndex = 0;</text:p><text:p text:style-name="P480"/><text:p text:style-name="P480"><text:tab/>/*</text:p><text:p text:style-name="P480"><text:tab/> * Best fintess is the smallest possible. Fitness is artificial neural</text:p><text:p text:style-name="P480"><text:tab/> * network total error.</text:p><text:p text:style-name="P480"><text:tab/> */</text:p><text:p text:style-name="P480"><text:tab/>for (int i=0; i&lt;list.size(); i++) {</text:p><text:p text:style-name="P480"><text:tab/><text:tab/>if (list[i].getFitness() &lt; list[bestFitnessIndex].getFitness()) {</text:p><text:p text:style-name="P480"><text:tab/><text:tab/><text:tab/>bestFitnessIndex = i;</text:p><text:p text:style-name="P480"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P480"><text:tab/>}</text:p><text:p text:style-name="P480">}</text:p><text:p text:style-name="P480"/><text:p text:style-name="P480">Population::~Population() {</text:p><text:p text:style-name="P480"><text:tab/>list.clear();</text:p><text:p text:style-name="P480">}</text:p><text:p text:style-name="P480"/><text:p text:style-name="P480">Chromosome Population::operator[](int index) const {</text:p><text:p text:style-name="P480"><text:tab/>if (index&lt;0 || index&gt;=list.size()) {</text:p><text:p text:style-name="P480"><text:tab/><text:tab/>throw( &quot;Population00204&quot; );</text:p><text:p text:style-name="P480"><text:tab/>}</text:p><text:p text:style-name="P480"/><text:p text:style-name="P480"><text:tab/>return( list[index] );</text:p><text:p text:style-name="P480">}</text:p><text:p text:style-name="P480"/><text:p text:style-name="P480">Chromosome&amp; Population::operator[](int index) {</text:p><text:p text:style-name="P480"><text:tab/>if (index&lt;0 || index&gt;=list.size()) {</text:p><text:p text:style-name="P480"><text:tab/><text:tab/>throw( &quot;Population00210&quot; );</text:p><text:p text:style-name="P480"/><text:p text:style-name="P480"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P480"><text:tab/><text:tab/> * Fake object to bypass compiler.</text:p><text:p text:style-name="P480"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P480"><text:tab/><text:tab/>static Chromosome dummy;</text:p><text:p text:style-name="P480"><text:tab/><text:tab/>return( dummy );</text:p><text:p text:style-name="P480"><text:tab/>}</text:p><text:p text:style-name="P480"/><text:p text:style-name="P480"><text:tab/>return( list[index] );</text:p><text:p text:style-name="P480">}</text:p><text:p text:style-name="P480"/><text:p text:style-name="P480">Population&amp; Population::operator=(const Population &amp;population) {</text:p><text:p text:style-name="P480"><text:tab/>list = population.list;</text:p><text:p text:style-name="P480"/><text:p text:style-name="P480"><text:tab/>searchBestFitnessIndex();</text:p><text:p text:style-name="P480"/><text:p text:style-name="P480"><text:tab/>return( *this );</text:p><text:p text:style-name="P480">}</text:p><text:p text:style-name="P480"/><text:p text:style-name="P480">std::ostream&amp; operator&lt;&lt;(std::ostream &amp;out, Population &amp;population) {</text:p><text:p text:style-name="P480"><text:tab/>out &lt;&lt; population.list.size();</text:p><text:p text:style-name="P480"><text:tab/>out &lt;&lt; std::endl;</text:p><text:p text:style-name="P480"/><text:p text:style-name="P480"><text:tab/>for (std::vector&lt;Chromosome&gt;::iterator i=population.list.begin(); i!=population.list.end(); i++) {</text:p><text:p text:style-name="P480"><text:tab/><text:tab/>out &lt;&lt; (*i);</text:p><text:p text:style-name="P480"><text:tab/><text:tab/>if (i+1 != population.list.end()) {</text:p><text:p text:style-name="P480"><text:tab/><text:tab/><text:tab/>out &lt;&lt; std::endl;</text:p><text:p text:style-name="P480"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P480"><text:tab/>}</text:p><text:p text:style-name="P480"><text:tab/>out &lt;&lt; std::endl;</text:p><text:p text:style-name="P480"/><text:p text:style-name="P480"><text:tab/>out &lt;&lt; population.bestFitnessIndex;</text:p><text:p text:style-name="P480"/><text:p text:style-name="P480"><text:tab/>return( out );</text:p><text:p text:style-name="P480">}</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5832_1486593966"/><text:s text:c="4"/>Population.h<text:bookmark-end text:name="__RefHeading___Toc5832_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P481">/*******************************************************************************</text:p><text:p text:style-name="P481"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P481"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P481"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P481"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P481"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P481"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P481"><text:s/>* Copyright (C) 2008-2011 by Todor Balabanov <text:s/>( todor.balabanov@gmail.com ) <text:s text:c="2"/>*</text:p><text:p text:style-name="P481"><text:s/>* <text:s text:c="22"/>Iliyan Zankinski <text:s text:c="2"/>( iliyan_mf@abv.bg ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P481"><text:s/>* <text:s text:c="22"/>Momchil Anachkov <text:s text:c="2"/>( mZer0000@gmail.com ) <text:s text:c="12"/>*</text:p><text:p text:style-name="P481"><text:s/>* <text:s text:c="22"/>Daniel Chutrov <text:s text:c="4"/>( d.chutrov@gmail.com ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P481"><text:s/>* <text:s text:c="22"/>Nikola Simeonov <text:s text:c="3"/>( n.simeonow@gmail.com ) <text:s text:c="10"/>*</text:p><text:p text:style-name="P481"><text:s/>* <text:s text:c="22"/>Galq Cirkalova <text:s text:c="4"/>( galq_cirkalova@abv.bg ) <text:s text:c="9"/>*</text:p><text:p text:style-name="P481"><text:s/>* <text:s text:c="22"/>Ivan Grozev <text:s text:c="7"/>( ivan.iliev.grozev@gmail.com ) <text:s text:c="3"/>*</text:p><text:p text:style-name="P481"><text:s/>* <text:s text:c="22"/>Elisaveta Hristova ( elisaveta.s.hristova@gmail.com ) *</text:p><text:p text:style-name="P481"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P481"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P481"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P481"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P481"><text:soft-page-break/><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P481"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P481"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P481"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P481"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P481"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P481"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P481"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P481"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P481"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P481"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P481"/><text:p text:style-name="P481">#ifndef POPULATION_H</text:p><text:p text:style-name="P481">#define POPULATION_H</text:p><text:p text:style-name="P481"/><text:p text:style-name="P481">#include &lt;vector&gt;</text:p><text:p text:style-name="P481">#include &lt;iostream&gt;</text:p><text:p text:style-name="P481"/><text:p text:style-name="P481">#include &quot;Chromosome.h&quot;</text:p><text:p text:style-name="P481"/><text:p text:style-name="P481">/**</text:p><text:p text:style-name="P481"><text:s/>* List of weights used as population class.</text:p><text:p text:style-name="P481"><text:s/>*</text:p><text:p text:style-name="P481"><text:s/>* @author Todor Balabanov</text:p><text:p text:style-name="P481"><text:s/>*</text:p><text:p text:style-name="P481"><text:s/>* @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P481"><text:s/>*</text:p><text:p text:style-name="P481"><text:s/>* @date 05 Aug 2011</text:p><text:p text:style-name="P481"><text:s/>*/</text:p><text:p text:style-name="P481">class Population {</text:p><text:p text:style-name="P481"/><text:p text:style-name="P481">public:</text:p><text:p text:style-name="P481"/><text:p text:style-name="P481"><text:tab/>/**</text:p><text:p text:style-name="P481"><text:tab/> * Minimum population size. Four is useful at each crossover and mutation to</text:p><text:p text:style-name="P481"><text:tab/> * have two parents, one child and one reserved best chromosome.</text:p><text:p text:style-name="P481"><text:tab/> */</text:p><text:p text:style-name="P481"><text:tab/>static const int MIN_POPULATION_SIZE = 4;</text:p><text:p text:style-name="P481"/><text:p text:style-name="P481">private:</text:p><text:p text:style-name="P481"/><text:p text:style-name="P481"><text:tab/>/**</text:p><text:p text:style-name="P481"><text:tab/> * Weights list.</text:p><text:p text:style-name="P481"><text:tab/> */</text:p><text:p text:style-name="P481"><text:tab/>std::vector&lt;Chromosome&gt; list;</text:p><text:p text:style-name="P481"/><text:p text:style-name="P481"><text:tab/>/**</text:p><text:p text:style-name="P481"><text:tab/> * Index of the chromozome with the best fitness.</text:p><text:p text:style-name="P481"><text:tab/> */</text:p><text:p text:style-name="P481"><text:tab/>int bestFitnessIndex;</text:p><text:p text:style-name="P481"/><text:p text:style-name="P481">public:</text:p><text:p text:style-name="P481"/><text:p text:style-name="P481"><text:tab/>/**</text:p><text:p text:style-name="P481"><text:tab/> * Constructor without parameters.</text:p><text:p text:style-name="P481"><text:tab/> *</text:p><text:p text:style-name="P481"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P481"><text:tab/> *</text:p><text:p text:style-name="P481"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P481"><text:tab/> *</text:p><text:p text:style-name="P481"><text:tab/> * @date 05 Aug 2011</text:p><text:p text:style-name="P481"><text:tab/> */</text:p><text:p text:style-name="P481"><text:tab/>Population();</text:p><text:p text:style-name="P481"/><text:p text:style-name="P481"><text:tab/>/**</text:p><text:p text:style-name="P481"><text:tab/> * Class constructor. Memory allocation and internal variables initializaton.</text:p><text:p text:style-name="P481"><text:tab/> *</text:p><text:p text:style-name="P481"><text:tab/> * @param size Size of the population.</text:p><text:p text:style-name="P481"><text:tab/> *</text:p><text:p text:style-name="P481"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P481"><text:tab/> *</text:p><text:p text:style-name="P481"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P481"><text:tab/> *</text:p><text:p text:style-name="P481"><text:tab/> * @date 05 Aug 2011</text:p><text:p text:style-name="P481"><text:tab/> */</text:p><text:p text:style-name="P481"><text:tab/>Population(int size);</text:p><text:p text:style-name="P481"/><text:p text:style-name="P481"><text:tab/>/**</text:p><text:p text:style-name="P481"><text:tab/> * Copy constructor.</text:p><text:p text:style-name="P481"><text:tab/> *</text:p><text:p text:style-name="P481"><text:tab/> * @param list Instance to be copied.</text:p><text:p text:style-name="P481"><text:tab/> *</text:p><text:p text:style-name="P481"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P481"><text:tab/> *</text:p><text:p text:style-name="P481"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P481"><text:tab/> *</text:p><text:p text:style-name="P481"><text:tab/> * @date 05 Aug 2011</text:p><text:p text:style-name="P481"><text:tab/> */</text:p><text:p text:style-name="P481"><text:tab/>Population(const Population &amp;population);</text:p><text:p text:style-name="P481"/><text:p text:style-name="P481"><text:tab/>/**</text:p><text:p text:style-name="P481"><text:tab/> * Size of neurons list getter.</text:p><text:p text:style-name="P481"><text:tab/> *</text:p><text:p text:style-name="P481"><text:tab/> * @return Size of neurons list.</text:p><text:p text:style-name="P481"><text:tab/> *</text:p><text:p text:style-name="P481"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P481"><text:tab/> *</text:p><text:p text:style-name="P481"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P481"><text:tab/> *</text:p><text:p text:style-name="P481"><text:tab/> * @date 05 Aug 2011</text:p><text:p text:style-name="P481"><text:tab/> */</text:p><text:p text:style-name="P481"><text:tab/>int dimension() const;</text:p><text:p text:style-name="P481"/><text:p text:style-name="P481"><text:tab/>/**</text:p><text:p text:style-name="P481"><text:tab/> * Best local fitness value getter.</text:p><text:p text:style-name="P481"><text:tab/> *</text:p><text:p text:style-name="P481"><text:tab/> * @return Best local fitness value.</text:p><text:p text:style-name="P481"><text:tab/> *</text:p><text:p text:style-name="P481"><text:tab/> * @author Ivan Grozev</text:p><text:p text:style-name="P481"><text:tab/> *</text:p><text:p text:style-name="P481"><text:tab/> * @email Ivan.Iliev.Grozev@gmail.com</text:p><text:p text:style-name="P481"><text:tab/> *</text:p><text:p text:style-name="P481"><text:tab/> * @date 07 Jun 2009</text:p><text:p text:style-name="P481"><text:tab/> */</text:p><text:p text:style-name="P481"><text:tab/>double getBestFitness() const;</text:p><text:p text:style-name="P481"/><text:p text:style-name="P481"><text:tab/>/**</text:p><text:p text:style-name="P481"><text:tab/> * Find index of the chromosome with the best fitness value.</text:p><text:p text:style-name="P481"><text:tab/> *</text:p><text:p text:style-name="P481"><text:tab/> * @return Index of the chromosome with the best fitness.</text:p><text:p text:style-name="P481"><text:tab/> *</text:p><text:p text:style-name="P481"><text:tab/> * @author Galq Cirkalova</text:p><text:p text:style-name="P481"><text:tab/> *</text:p><text:p text:style-name="P481"><text:tab/> * @email galq_cirkalova@abv.bg</text:p><text:p text:style-name="P481"><text:tab/> *</text:p><text:p text:style-name="P481"><text:soft-page-break/><text:tab/> * @date 24 Apr 2009</text:p><text:p text:style-name="P481"><text:tab/> */</text:p><text:p text:style-name="P481"><text:tab/>int getBestFitnessIndex() const;</text:p><text:p text:style-name="P481"/><text:p text:style-name="P481"><text:tab/>/**</text:p><text:p text:style-name="P481"><text:tab/> * Check chromosome for duplication.</text:p><text:p text:style-name="P481"><text:tab/> *</text:p><text:p text:style-name="P481"><text:tab/> * @param chromosome Chromosome in population array.</text:p><text:p text:style-name="P481"><text:tab/> *</text:p><text:p text:style-name="P481"><text:tab/> * @return True if duplicate is found, false otherwise.</text:p><text:p text:style-name="P481"><text:tab/> *</text:p><text:p text:style-name="P481"><text:tab/> * @author Iliyan Zankinski</text:p><text:p text:style-name="P481"><text:tab/> *</text:p><text:p text:style-name="P481"><text:tab/> * @email iliyan_mf@abv.bg</text:p><text:p text:style-name="P481"><text:tab/> *</text:p><text:p text:style-name="P481"><text:tab/> * @date 25 Aug 2009</text:p><text:p text:style-name="P481"><text:tab/> */</text:p><text:p text:style-name="P481"><text:tab/>bool hasDuplication(Chromosome &amp;chromosome);</text:p><text:p text:style-name="P481"/><text:p text:style-name="P481"><text:tab/>/**</text:p><text:p text:style-name="P481"><text:tab/> * Initialize population with random chromosomes.</text:p><text:p text:style-name="P481"><text:tab/> *</text:p><text:p text:style-name="P481"><text:tab/> * @author Iliyan Zankinski</text:p><text:p text:style-name="P481"><text:tab/> *</text:p><text:p text:style-name="P481"><text:tab/> * @email iliyan_mf@abv.bg</text:p><text:p text:style-name="P481"><text:tab/> *</text:p><text:p text:style-name="P481"><text:tab/> * @date 27 Mar 2009</text:p><text:p text:style-name="P481"><text:tab/> */</text:p><text:p text:style-name="P481"><text:tab/>void initRandom();</text:p><text:p text:style-name="P481"/><text:p text:style-name="P481"><text:tab/>/**</text:p><text:p text:style-name="P481"><text:tab/> * Search for best fitness and save it in class member variable.</text:p><text:p text:style-name="P481"><text:tab/> *</text:p><text:p text:style-name="P481"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P481"><text:tab/> *</text:p><text:p text:style-name="P481"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P481"><text:tab/> *</text:p><text:p text:style-name="P481"><text:tab/> * @date 18 Aug 2009</text:p><text:p text:style-name="P481"><text:tab/> */</text:p><text:p text:style-name="P481"><text:tab/>void searchBestFitnessIndex();</text:p><text:p text:style-name="P481"/><text:p text:style-name="P481"><text:tab/>/**</text:p><text:p text:style-name="P481"><text:tab/> * Class destructor. Memory release and variables deinitialization.</text:p><text:p text:style-name="P481"><text:tab/> *</text:p><text:p text:style-name="P481"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P481"><text:tab/> *</text:p><text:p text:style-name="P481"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P481"><text:tab/> *</text:p><text:p text:style-name="P481"><text:tab/> * @date 05 Aug 2011</text:p><text:p text:style-name="P481"><text:tab/> */</text:p><text:p text:style-name="P481"><text:tab/>virtual ~Population();</text:p><text:p text:style-name="P481"/><text:p text:style-name="P481"><text:tab/>/**</text:p><text:p text:style-name="P481"><text:tab/> * List elements access operator overloading.</text:p><text:p text:style-name="P481"><text:tab/> *</text:p><text:p text:style-name="P481"><text:tab/> * @param index Index of element.</text:p><text:p text:style-name="P481"><text:tab/> *</text:p><text:p text:style-name="P481"><text:tab/> * @return Constant element value.</text:p><text:p text:style-name="P481"><text:tab/> *</text:p><text:p text:style-name="P481"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P481"><text:tab/> *</text:p><text:p text:style-name="P481"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P481"><text:tab/> *</text:p><text:p text:style-name="P481"><text:tab/> * @date 05 Aug 2011</text:p><text:p text:style-name="P481"><text:tab/> */</text:p><text:p text:style-name="P481"><text:tab/>Chromosome operator[](int index) const;</text:p><text:p text:style-name="P481"/><text:p text:style-name="P481"><text:tab/>/**</text:p><text:p text:style-name="P481"><text:tab/> * List elements access operator overloading.</text:p><text:p text:style-name="P481"><text:tab/> *</text:p><text:p text:style-name="P481"><text:tab/> * @param index Index of element.</text:p><text:p text:style-name="P481"><text:tab/> *</text:p><text:p text:style-name="P481"><text:tab/> * @return Constant element value.</text:p><text:p text:style-name="P481"><text:tab/> *</text:p><text:p text:style-name="P481"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P481"><text:tab/> *</text:p><text:p text:style-name="P481"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P481"><text:tab/> *</text:p><text:p text:style-name="P481"><text:tab/> * @date 05 Aug 2011</text:p><text:p text:style-name="P481"><text:tab/> */</text:p><text:p text:style-name="P481"><text:tab/>Chromosome&amp; operator[](int index);</text:p><text:p text:style-name="P481"/><text:p text:style-name="P481"><text:tab/>/**</text:p><text:p text:style-name="P481"><text:tab/> * Assignment operator overloading.</text:p><text:p text:style-name="P481"><text:tab/> *</text:p><text:p text:style-name="P481"><text:tab/> * @param population Right side operand.</text:p><text:p text:style-name="P481"><text:tab/> *</text:p><text:p text:style-name="P481"><text:tab/> * @return Neurons list instance reference.</text:p><text:p text:style-name="P481"><text:tab/> *</text:p><text:p text:style-name="P481"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P481"><text:tab/> *</text:p><text:p text:style-name="P481"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P481"><text:tab/> *</text:p><text:p text:style-name="P481"><text:tab/> * @date 05 Aug 2011</text:p><text:p text:style-name="P481"><text:tab/> */</text:p><text:p text:style-name="P481"><text:tab/>Population&amp; operator=(const Population &amp;population);</text:p><text:p text:style-name="P481"/><text:p text:style-name="P481"><text:tab/>friend std::ostream&amp; operator&lt;&lt;(std::ostream &amp;out, Population &amp;population);</text:p><text:p text:style-name="P481">};</text:p><text:p text:style-name="P481"/><text:p text:style-name="P481">/**</text:p><text:p text:style-name="P481"><text:s/>* Output operator redefinition.</text:p><text:p text:style-name="P481"><text:s/>*</text:p><text:p text:style-name="P481"><text:s/>* @param out Output stream reference.</text:p><text:p text:style-name="P481"><text:s/>*</text:p><text:p text:style-name="P481"><text:s/>* @param population Population instance reference.</text:p><text:p text:style-name="P481"><text:s/>*</text:p><text:p text:style-name="P481"><text:s/>* @return Output stream reference.</text:p><text:p text:style-name="P481"><text:s/>*</text:p><text:p text:style-name="P481"><text:s/>* @author Todor Balabanov</text:p><text:p text:style-name="P481"><text:s/>*</text:p><text:p text:style-name="P481"><text:s/>* @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P481"><text:s/>*</text:p><text:p text:style-name="P481"><text:s/>* @date 05 Aug 2011</text:p><text:p text:style-name="P481"><text:s/>*/</text:p><text:p text:style-name="P481">std::ostream&amp; operator&lt;&lt;(std::ostream &amp;out, Population &amp;population);</text:p><text:p text:style-name="P481"/><text:p text:style-name="P481">#endif</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5834_1486593966"/><text:soft-page-break/><text:s text:c="4"/>RateInfo.h<text:bookmark-end text:name="__RefHeading___Toc5834_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P482">/*******************************************************************************</text:p><text:p text:style-name="P482"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P482"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P482"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P482"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P482"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P482"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P482"><text:s/>* Copyright (C) 2008-2011 by Todor Balabanov <text:s/>( todor.balabanov@gmail.com ) <text:s text:c="2"/>*</text:p><text:p text:style-name="P482"><text:s/>* <text:s text:c="22"/>Iliyan Zankinski <text:s text:c="2"/>( iliyan_mf@abv.bg ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P482"><text:s/>* <text:s text:c="22"/>Momchil Anachkov <text:s text:c="2"/>( mZer0000@gmail.com ) <text:s text:c="12"/>*</text:p><text:p text:style-name="P482"><text:s/>* <text:s text:c="22"/>Daniel Chutrov <text:s text:c="4"/>( d.chutrov@gmail.com ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P482"><text:s/>* <text:s text:c="22"/>Nikola Simeonov <text:s text:c="3"/>( n.simeonow@gmail.com ) <text:s text:c="10"/>*</text:p><text:p text:style-name="P482"><text:s/>* <text:s text:c="22"/>Galq Cirkalova <text:s text:c="4"/>( galq_cirkalova@abv.bg ) <text:s text:c="9"/>*</text:p><text:p text:style-name="P482"><text:s/>* <text:s text:c="22"/>Ivan Grozev <text:s text:c="7"/>( ivan.iliev.grozev@gmail.com ) <text:s text:c="3"/>*</text:p><text:p text:style-name="P482"><text:s/>* <text:s text:c="22"/>Elisaveta Hristova ( elisaveta.s.hristova@gmail.com ) *</text:p><text:p text:style-name="P482"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P482"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P482"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P482"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P482"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P482"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P482"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P482"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P482"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P482"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P482"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P482"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P482"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P482"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P482"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P482"/><text:p text:style-name="P482">#ifndef RATE_INFO_H</text:p><text:p text:style-name="P482">#define RATE_INFO_H</text:p><text:p text:style-name="P482"/><text:p text:style-name="P482">#include &lt;ctime&gt;</text:p><text:p text:style-name="P482"/><text:p text:style-name="P482">/**</text:p><text:p text:style-name="P482"><text:s/>* Single rate structure.</text:p><text:p text:style-name="P482"><text:s/>*</text:p><text:p text:style-name="P482"><text:s/>* @author Todor Balabanov</text:p><text:p text:style-name="P482"><text:s/>*</text:p><text:p text:style-name="P482"><text:s/>* @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P482"><text:s/>*</text:p><text:p text:style-name="P482"><text:s/>* @date 12 Sep 2009</text:p><text:p text:style-name="P482"><text:s/>*/</text:p><text:p text:style-name="P482">struct RateInfo {</text:p><text:p text:style-name="P482"/><text:p text:style-name="P482"><text:tab/>/**</text:p><text:p text:style-name="P482"><text:tab/> * Rate time value.</text:p><text:p text:style-name="P482"><text:tab/> */</text:p><text:p text:style-name="P482"><text:tab/>std::time_t time;</text:p><text:p text:style-name="P482"/><text:p text:style-name="P482"><text:tab/>/**</text:p><text:p text:style-name="P482"><text:tab/> * Rate open value.</text:p><text:p text:style-name="P482"><text:tab/> */</text:p><text:p text:style-name="P482"><text:tab/>double open;</text:p><text:p text:style-name="P482"/><text:p text:style-name="P482"><text:tab/>/**</text:p><text:p text:style-name="P482"><text:tab/> * Rate low value.</text:p><text:p text:style-name="P482"><text:tab/> */</text:p><text:p text:style-name="P482"><text:tab/>double low;</text:p><text:p text:style-name="P482"/><text:p text:style-name="P482"><text:tab/>/**</text:p><text:p text:style-name="P482"><text:tab/> * Rate high value.</text:p><text:p text:style-name="P482"><text:tab/> */</text:p><text:p text:style-name="P482"><text:tab/>double high;</text:p><text:p text:style-name="P482"/><text:p text:style-name="P482"><text:tab/>/**</text:p><text:p text:style-name="P482"><text:tab/> * Rate close value.</text:p><text:p text:style-name="P482"><text:tab/> */</text:p><text:p text:style-name="P482"><text:tab/>double close;</text:p><text:p text:style-name="P482"/><text:p text:style-name="P482"><text:tab/>/**</text:p><text:p text:style-name="P482"><text:tab/> * Rate volume value.</text:p><text:p text:style-name="P482"><text:tab/> */</text:p><text:p text:style-name="P482"><text:tab/>double volume;</text:p><text:p text:style-name="P482">};</text:p><text:p text:style-name="P482"/><text:p text:style-name="P482">#endif</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5836_1486593966"/><text:s text:c="4"/>TimePeriod.h<text:bookmark-end text:name="__RefHeading___Toc5836_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P483">/*******************************************************************************</text:p><text:p text:style-name="P483"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P483"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P483"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P483"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P483"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P483"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P483"><text:s/>* Copyright (C) 2008-2011 by Todor Balabanov <text:s/>( todor.balabanov@gmail.com ) <text:s text:c="2"/>*</text:p><text:p text:style-name="P483"><text:s/>* <text:s text:c="22"/>Iliyan Zankinski <text:s text:c="2"/>( iliyan_mf@abv.bg ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P483"><text:s/>* <text:s text:c="22"/>Momchil Anachkov <text:s text:c="2"/>( mZer0000@gmail.com ) <text:s text:c="12"/>*</text:p><text:p text:style-name="P483"><text:s/>* <text:s text:c="22"/>Daniel Chutrov <text:s text:c="4"/>( d.chutrov@gmail.com ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P483"><text:s/>* <text:s text:c="22"/>Nikola Simeonov <text:s text:c="3"/>( n.simeonow@gmail.com ) <text:s text:c="10"/>*</text:p><text:p text:style-name="P483"><text:s/>* <text:s text:c="22"/>Galq Cirkalova <text:s text:c="4"/>( galq_cirkalova@abv.bg ) <text:s text:c="9"/>*</text:p><text:p text:style-name="P483"><text:s/>* <text:s text:c="22"/>Ivan Grozev <text:s text:c="7"/>( ivan.iliev.grozev@gmail.com ) <text:s text:c="3"/>*</text:p><text:p text:style-name="P483"><text:s/>* <text:s text:c="22"/>Elisaveta Hristova ( elisaveta.s.hristova@gmail.com ) *</text:p><text:p text:style-name="P483"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P483"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P483"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P483"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P483"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P483"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P483"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P483"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P483"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P483"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P483"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P483"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P483"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P483"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P483"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P483"><text:soft-page-break/></text:p><text:p text:style-name="P483">#ifndef TIME_PERIOD_H</text:p><text:p text:style-name="P483">#define TIME_PERIOD_H</text:p><text:p text:style-name="P483"/><text:p text:style-name="P483">enum TimePeriod {</text:p><text:p text:style-name="P483"/><text:p text:style-name="P483"><text:tab/>/**</text:p><text:p text:style-name="P483"><text:tab/> * No time period at all.</text:p><text:p text:style-name="P483"><text:tab/> */</text:p><text:p text:style-name="P483"><text:tab/>NO = 0,</text:p><text:p text:style-name="P483"/><text:p text:style-name="P483"><text:tab/>/**</text:p><text:p text:style-name="P483"><text:tab/> * One minute.</text:p><text:p text:style-name="P483"><text:tab/> */</text:p><text:p text:style-name="P483"><text:tab/>M1 = 1,</text:p><text:p text:style-name="P483"/><text:p text:style-name="P483"><text:tab/>/**</text:p><text:p text:style-name="P483"><text:tab/> * Five minutes.</text:p><text:p text:style-name="P483"><text:tab/> */</text:p><text:p text:style-name="P483"><text:tab/>M5 = 5,</text:p><text:p text:style-name="P483"/><text:p text:style-name="P483"><text:tab/>/**</text:p><text:p text:style-name="P483"><text:tab/> * Fifteen minutes.</text:p><text:p text:style-name="P483"><text:tab/> */</text:p><text:p text:style-name="P483"><text:tab/>M15 = 15,</text:p><text:p text:style-name="P483"/><text:p text:style-name="P483"><text:tab/>/**</text:p><text:p text:style-name="P483"><text:tab/> * Thirty minutes.</text:p><text:p text:style-name="P483"><text:tab/> */</text:p><text:p text:style-name="P483"><text:tab/>M30 = 30,</text:p><text:p text:style-name="P483"/><text:p text:style-name="P483"><text:tab/>/**</text:p><text:p text:style-name="P483"><text:tab/> * One hour.</text:p><text:p text:style-name="P483"><text:tab/> */</text:p><text:p text:style-name="P483"><text:tab/>H1 = 60,</text:p><text:p text:style-name="P483"/><text:p text:style-name="P483"><text:tab/>/**</text:p><text:p text:style-name="P483"><text:tab/> * Four hours.</text:p><text:p text:style-name="P483"><text:tab/> */</text:p><text:p text:style-name="P483"><text:tab/>H4 = 240,</text:p><text:p text:style-name="P483"/><text:p text:style-name="P483"><text:tab/>/**</text:p><text:p text:style-name="P483"><text:tab/> * One day.</text:p><text:p text:style-name="P483"><text:tab/> */</text:p><text:p text:style-name="P483"><text:tab/>D1 = 1440,</text:p><text:p text:style-name="P483"/><text:p text:style-name="P483"><text:tab/>/**</text:p><text:p text:style-name="P483"><text:tab/> * One week.</text:p><text:p text:style-name="P483"><text:tab/> */</text:p><text:p text:style-name="P483"><text:tab/>W1 = 10080,</text:p><text:p text:style-name="P483"/><text:p text:style-name="P483"><text:tab/>/**</text:p><text:p text:style-name="P483"><text:tab/> * One month.</text:p><text:p text:style-name="P483"><text:tab/> */</text:p><text:p text:style-name="P483"><text:tab/>MN1 = 43200</text:p><text:p text:style-name="P483">};</text:p><text:p text:style-name="P483"/><text:p text:style-name="P483">#endif</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5838_1486593966"/><text:s text:c="4"/>Trainer.cpp<text:bookmark-end text:name="__RefHeading___Toc5838_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P484">/*******************************************************************************</text:p><text:p text:style-name="P484"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P484"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P484"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P484"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P484"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P484"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P484"><text:s/>* Copyright (C) 2008-2011 by Todor Balabanov <text:s/>( todor.balabanov@gmail.com ) <text:s text:c="2"/>*</text:p><text:p text:style-name="P484"><text:s/>* <text:s text:c="22"/>Iliyan Zankinski <text:s text:c="2"/>( iliyan_mf@abv.bg ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P484"><text:s/>* <text:s text:c="22"/>Momchil Anachkov <text:s text:c="2"/>( mZer0000@gmail.com ) <text:s text:c="12"/>*</text:p><text:p text:style-name="P484"><text:s/>* <text:s text:c="22"/>Daniel Chutrov <text:s text:c="4"/>( d.chutrov@gmail.com ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P484"><text:s/>* <text:s text:c="22"/>Nikola Simeonov <text:s text:c="3"/>( n.simeonow@gmail.com ) <text:s text:c="10"/>*</text:p><text:p text:style-name="P484"><text:s/>* <text:s text:c="22"/>Galq Cirkalova <text:s text:c="4"/>( galq_cirkalova@abv.bg ) <text:s text:c="9"/>*</text:p><text:p text:style-name="P484"><text:s/>* <text:s text:c="22"/>Ivan Grozev <text:s text:c="7"/>( ivan.iliev.grozev@gmail.com ) <text:s text:c="3"/>*</text:p><text:p text:style-name="P484"><text:s/>* <text:s text:c="22"/>Elisaveta Hristova ( elisaveta.s.hristova@gmail.com ) *</text:p><text:p text:style-name="P484"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P484"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P484"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P484"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P484"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P484"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P484"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P484"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P484"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P484"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P484"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P484"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P484"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P484"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P484"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P484"/><text:p text:style-name="P484">#include &lt;ctime&gt;</text:p><text:p text:style-name="P484">#include &lt;climits&gt;</text:p><text:p text:style-name="P484">#include &lt;cstdlib&gt;</text:p><text:p text:style-name="P484">#include &lt;cstring&gt;</text:p><text:p text:style-name="P484">#include &lt;fstream&gt;</text:p><text:p text:style-name="P484"/><text:p text:style-name="P484">using namespace std;</text:p><text:p text:style-name="P484"/><text:p text:style-name="P484">#include &quot;NeuronsList.h&quot;</text:p><text:p text:style-name="P484">#include &quot;ModelParameters.h&quot;</text:p><text:p text:style-name="P484"/><text:p text:style-name="P484">#include &quot;Trainer.h&quot;</text:p><text:p text:style-name="P484"/><text:p text:style-name="P484">const char Trainer::REPORT_FILE_NAME[] = &quot;VitoshaTradeTrainingReport.txt&quot;;</text:p><text:p text:style-name="P484"/><text:p text:style-name="P484">Trainer::Trainer() {</text:p><text:p text:style-name="P484"><text:tab/>/*</text:p><text:p text:style-name="P484"><text:tab/> * At start there is no report at all.</text:p><text:p text:style-name="P484"><text:tab/> */</text:p><text:p text:style-name="P484"><text:tab/>lastBestFitnessReportTime = 0L;</text:p><text:p text:style-name="P484"/><text:p text:style-name="P484"><text:tab/>/*</text:p><text:p text:style-name="P484"><text:tab/> * Estimate work done.</text:p><text:p text:style-name="P484"><text:tab/> */</text:p><text:p text:style-name="P484"><text:tab/>counters.setValue(&quot;Training start time seconds&quot;, clock()/CLOCKS_PER_SEC);</text:p><text:p text:style-name="P484">}</text:p><text:p text:style-name="P484"/><text:p text:style-name="P484"><text:soft-page-break/>void Trainer::setup(const ModelParameters &amp;parameters) {</text:p><text:p text:style-name="P484"><text:tab/>strcpy(this-&gt;symbol, parameters.symbol);</text:p><text:p text:style-name="P484"><text:tab/>this-&gt;period = parameters.period;</text:p><text:p text:style-name="P484"/><text:p text:style-name="P484"><text:tab/>/*</text:p><text:p text:style-name="P484"><text:tab/> * At the beginning there is no training set.</text:p><text:p text:style-name="P484"><text:tab/> */</text:p><text:p text:style-name="P484"><text:tab/>http.loadTrainingSet(symbol, period, ts.getRates(), ts.getSize());</text:p><text:p text:style-name="P484"><text:tab/>ts.splitData(parameters.learn, parameters.forecast); </text:p><text:p text:style-name="P484"/><text:p text:style-name="P484"><text:tab/>/*</text:p><text:p text:style-name="P484"><text:tab/> * Create object structure.</text:p><text:p text:style-name="P484"><text:tab/> */</text:p><text:p text:style-name="P484"><text:tab/> //TODO Symbol and period parameters are not needed during the function call.</text:p><text:p text:style-name="P484"><text:tab/>http.loadTrainerObjects(counters, ann, de, symbol, period, parameters);</text:p><text:p text:style-name="P484"><text:tab/>ann.setTrainingSetPointer( &amp;ts );</text:p><text:p text:style-name="P484">}</text:p><text:p text:style-name="P484"/><text:p text:style-name="P484">void Trainer::updateTrainingSet(const std::vector&lt;RateInfo&gt; &amp;rates, int size) {</text:p><text:p text:style-name="P484"><text:tab/>/*</text:p><text:p text:style-name="P484"><text:tab/> * Do not update if there is no new data at latest known time.</text:p><text:p text:style-name="P484"><text:tab/> */</text:p><text:p text:style-name="P484"><text:tab/>if (ts.getSize()==size &amp;&amp; ts.getTime(ts.getSize()-1)==rates[size-1].time) {</text:p><text:p text:style-name="P484"><text:tab/><text:tab/>return;</text:p><text:p text:style-name="P484"><text:tab/>}</text:p><text:p text:style-name="P484"/><text:p text:style-name="P484"><text:tab/>/*</text:p><text:p text:style-name="P484"><text:tab/> * Create new training set object and swap it with the old one.</text:p><text:p text:style-name="P484"><text:tab/> * Constructor with merge capabilities also can be used.</text:p><text:p text:style-name="P484"><text:tab/> */</text:p><text:p text:style-name="P484"><text:tab/>TrainingSet swap(rates, size, ann.getNeurons().getInputNeuronsAmount(), ann.getNeurons().getOutputNeuronsAmount());</text:p><text:p text:style-name="P484"><text:tab/>ts = swap;</text:p><text:p text:style-name="P484"/><text:p text:style-name="P484"><text:tab/>/*</text:p><text:p text:style-name="P484"><text:tab/> * Update ANN training set pointer.</text:p><text:p text:style-name="P484"><text:tab/> */</text:p><text:p text:style-name="P484"><text:tab/>ann.setTrainingSetPointer( &amp;ts );</text:p><text:p text:style-name="P484"/><text:p text:style-name="P484"><text:tab/>/*</text:p><text:p text:style-name="P484"><text:tab/> * Estimate work done.</text:p><text:p text:style-name="P484"><text:tab/> */</text:p><text:p text:style-name="P484"><text:tab/>counters.setValue(&quot;Training set size&quot;, ts.getSize());</text:p><text:p text:style-name="P484">}</text:p><text:p text:style-name="P484"/><text:p text:style-name="P484">void Trainer::train() {</text:p><text:p text:style-name="P484"><text:tab/>/*</text:p><text:p text:style-name="P484"><text:tab/> * If training set is not present training can not be done.</text:p><text:p text:style-name="P484"><text:tab/> */</text:p><text:p text:style-name="P484"><text:tab/>if (ts.getSize()==0) {</text:p><text:p text:style-name="P484"><text:tab/><text:tab/>return;</text:p><text:p text:style-name="P484"><text:tab/>}</text:p><text:p text:style-name="P484"/><text:p text:style-name="P484"><text:tab/>/*</text:p><text:p text:style-name="P484"><text:tab/> * Run one epoche of evolution.</text:p><text:p text:style-name="P484"><text:tab/> */</text:p><text:p text:style-name="P484"><text:tab/>de.evolve();</text:p><text:p text:style-name="P484"/><text:p text:style-name="P484"><text:tab/>/*</text:p><text:p text:style-name="P484"><text:tab/> * Report best chromosome at regular time interval.</text:p><text:p text:style-name="P484"><text:tab/> */</text:p><text:p text:style-name="P484"><text:tab/>if (time(NULL)-BEST_FITNESS_REPORT_INTERVAL &gt; lastBestFitnessReportTime) {</text:p><text:p text:style-name="P484"><text:tab/><text:tab/>reportLocalBestFitness();</text:p><text:p text:style-name="P484"><text:tab/>}</text:p><text:p text:style-name="P484">}</text:p><text:p text:style-name="P484"/><text:p text:style-name="P484">double Trainer::predict() {</text:p><text:p text:style-name="P484"><text:tab/>/*</text:p><text:p text:style-name="P484"><text:tab/> * If training set is not present training can not be done.</text:p><text:p text:style-name="P484"><text:tab/> */</text:p><text:p text:style-name="P484"><text:tab/>if (ts.getSize() == 0) {</text:p><text:p text:style-name="P484"><text:tab/><text:tab/>return( 0 );</text:p><text:p text:style-name="P484"><text:tab/>}</text:p><text:p text:style-name="P484"/><text:p text:style-name="P484"><text:tab/>return( ann.getPrediction() );</text:p><text:p text:style-name="P484">}</text:p><text:p text:style-name="P484"/><text:p text:style-name="P484">void Trainer::reportLocalBestFitness() {</text:p><text:p text:style-name="P484"><text:tab/>/*</text:p><text:p text:style-name="P484"><text:tab/> * Remote best fitness to be used as level for better result server report.</text:p><text:p text:style-name="P484"><text:tab/> */</text:p><text:p text:style-name="P484"><text:tab/>double remoteBestFitness = (double)RAND_MAX;</text:p><text:p text:style-name="P484"/><text:p text:style-name="P484"><text:tab/>/*</text:p><text:p text:style-name="P484"><text:tab/> * Get pointers needed.</text:p><text:p text:style-name="P484"><text:tab/> */</text:p><text:p text:style-name="P484"><text:tab/>ActivitiesMatrix &amp;activities = ann.getActivities();</text:p><text:p text:style-name="P484"><text:tab/>NeuronsList &amp;neurons = ann.getNeurons();</text:p><text:p text:style-name="P484"/><text:p text:style-name="P484"><text:tab/>/*</text:p><text:p text:style-name="P484"><text:tab/> * Do not handle zero size ANNs.</text:p><text:p text:style-name="P484"><text:tab/> */</text:p><text:p text:style-name="P484"><text:tab/>if(activities.dimension()==0 || neurons.dimension()==0) {</text:p><text:p text:style-name="P484"><text:tab/><text:tab/>return;</text:p><text:p text:style-name="P484"><text:tab/>}</text:p><text:p text:style-name="P484"/><text:p text:style-name="P484"><text:tab/>/*</text:p><text:p text:style-name="P484"><text:tab/> * Check remote best fitness.</text:p><text:p text:style-name="P484"><text:tab/> */</text:p><text:p text:style-name="P484"><text:tab/>remoteBestFitness = http.loadRemoteBestFitness(symbol, period, neurons, activities);</text:p><text:p text:style-name="P484"/><text:p text:style-name="P484"><text:tab/>/*</text:p><text:p text:style-name="P484"><text:tab/> * Load Compare remote and local best fitness value.</text:p><text:p text:style-name="P484"><text:tab/> */</text:p><text:p text:style-name="P484"><text:tab/>Population &amp;population = de.getPopulation();</text:p><text:p text:style-name="P484"><text:tab/>if (population.getBestFitness() &lt; remoteBestFitness) {</text:p><text:p text:style-name="P484"><text:tab/><text:tab/>WeightsMatrix &amp;weights = population[population.getBestFitnessIndex()].getWeights();</text:p><text:p text:style-name="P484"/><text:p text:style-name="P484"><text:tab/><text:tab/>/*</text:p><text:p text:style-name="P484"><text:tab/><text:tab/> * Do not handle zero size ANNs.</text:p><text:p text:style-name="P484"><text:tab/><text:tab/> */</text:p><text:p text:style-name="P484"><text:tab/><text:tab/>if(weights.dimension() &gt; 0) {</text:p><text:p text:style-name="P484"><text:tab/><text:tab/><text:tab/>http.saveSingleANN(symbol, period, population.getBestFitness(), neurons, weights, activities);</text:p><text:p text:style-name="P484"><text:tab/><text:tab/><text:tab/>http.saveTrainingSet(symbol, period, ts.getRates(), ts.getSize());</text:p><text:p text:style-name="P484"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P484"><text:tab/>}</text:p><text:p text:style-name="P484"/><text:p text:style-name="P484"><text:tab/>/*</text:p><text:p text:style-name="P484"><text:tab/> * Mark last time checked for server best fitness.</text:p><text:p text:style-name="P484"><text:tab/> */</text:p><text:p text:style-name="P484"><text:tab/>lastBestFitnessReportTime = time(NULL);</text:p><text:p text:style-name="P484">}</text:p><text:p text:style-name="P484"/><text:p text:style-name="P484">Trainer::~Trainer() {</text:p><text:p text:style-name="P484"><text:tab/>/*</text:p><text:p text:style-name="P484"><text:tab/> * Report local best fitness value.</text:p><text:p text:style-name="P484"><text:soft-page-break/><text:tab/> */</text:p><text:p text:style-name="P484"><text:tab/>reportLocalBestFitness();</text:p><text:p text:style-name="P484"/><text:p text:style-name="P484"><text:tab/>/*</text:p><text:p text:style-name="P484"><text:tab/> * Estimate work done.</text:p><text:p text:style-name="P484"><text:tab/> */</text:p><text:p text:style-name="P484"><text:tab/>counters.setValue(&quot;Training end time seconds&quot;, clock()/CLOCKS_PER_SEC);</text:p><text:p text:style-name="P484"/><text:p text:style-name="P484"><text:tab/>/*</text:p><text:p text:style-name="P484"><text:tab/> * Report training results.</text:p><text:p text:style-name="P484"><text:tab/> */</text:p><text:p text:style-name="P484"><text:tab/>if (DO_FINAL_REPORT == true) {</text:p><text:p text:style-name="P484"><text:tab/><text:tab/>ofstream out( REPORT_FILE_NAME );</text:p><text:p text:style-name="P484"><text:tab/><text:tab/>out &lt;&lt; &quot;================================================================================&quot; &lt;&lt; endl;</text:p><text:p text:style-name="P484"><text:tab/><text:tab/>out &lt;&lt; counters &lt;&lt; endl;</text:p><text:p text:style-name="P484"><text:tab/><text:tab/>out &lt;&lt; &quot;================================================================================&quot; &lt;&lt; endl;</text:p><text:p text:style-name="P484"><text:tab/><text:tab/>out &lt;&lt; ann &lt;&lt; endl;</text:p><text:p text:style-name="P484"><text:tab/><text:tab/>out &lt;&lt; &quot;================================================================================&quot; &lt;&lt; endl;</text:p><text:p text:style-name="P484"><text:tab/><text:tab/>out &lt;&lt; de &lt;&lt; endl;</text:p><text:p text:style-name="P484"><text:tab/><text:tab/>out &lt;&lt; &quot;================================================================================&quot; &lt;&lt; endl;</text:p><text:p text:style-name="P484"><text:tab/><text:tab/>out &lt;&lt; ts &lt;&lt; endl;</text:p><text:p text:style-name="P484"><text:tab/><text:tab/>out &lt;&lt; &quot;================================================================================&quot; &lt;&lt; endl;</text:p><text:p text:style-name="P484"><text:tab/><text:tab/>out.close();</text:p><text:p text:style-name="P484"><text:tab/>}</text:p><text:p text:style-name="P484">}</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5840_1486593966"/><text:s text:c="4"/>Trainer.h<text:bookmark-end text:name="__RefHeading___Toc5840_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P485">/*******************************************************************************</text:p><text:p text:style-name="P485"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P485"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P485"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P485"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P485"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P485"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P485"><text:s/>* Copyright (C) 2008-2011 by Todor Balabanov <text:s/>( todor.balabanov@gmail.com ) <text:s text:c="2"/>*</text:p><text:p text:style-name="P485"><text:s/>* <text:s text:c="22"/>Iliyan Zankinski <text:s text:c="2"/>( iliyan_mf@abv.bg ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P485"><text:s/>* <text:s text:c="22"/>Momchil Anachkov <text:s text:c="2"/>( mZer0000@gmail.com ) <text:s text:c="12"/>*</text:p><text:p text:style-name="P485"><text:s/>* <text:s text:c="22"/>Daniel Chutrov <text:s text:c="4"/>( d.chutrov@gmail.com ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P485"><text:s/>* <text:s text:c="22"/>Nikola Simeonov <text:s text:c="3"/>( n.simeonow@gmail.com ) <text:s text:c="10"/>*</text:p><text:p text:style-name="P485"><text:s/>* <text:s text:c="22"/>Galq Cirkalova <text:s text:c="4"/>( galq_cirkalova@abv.bg ) <text:s text:c="9"/>*</text:p><text:p text:style-name="P485"><text:s/>* <text:s text:c="22"/>Ivan Grozev <text:s text:c="7"/>( ivan.iliev.grozev@gmail.com ) <text:s text:c="3"/>*</text:p><text:p text:style-name="P485"><text:s/>* <text:s text:c="22"/>Elisaveta Hristova ( elisaveta.s.hristova@gmail.com ) *</text:p><text:p text:style-name="P485"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P485"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P485"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P485"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P485"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P485"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P485"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P485"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P485"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P485"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P485"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P485"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P485"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P485"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P485"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P485"/><text:p text:style-name="P485">#ifndef TRAINER_H</text:p><text:p text:style-name="P485">#define TRAINER_H</text:p><text:p text:style-name="P485"/><text:p text:style-name="P485">#include &lt;vector&gt;</text:p><text:p text:style-name="P485"/><text:p text:style-name="P485">struct ModelParameters;</text:p><text:p text:style-name="P485"/><text:p text:style-name="P485">#include &quot;DE.h&quot;</text:p><text:p text:style-name="P485">#include &quot;ANN.h&quot;</text:p><text:p text:style-name="P485">#include &quot;Counter.h&quot;</text:p><text:p text:style-name="P485">#include &quot;RateInfo.h&quot;</text:p><text:p text:style-name="P485">#include &quot;TimePeriod.h&quot;</text:p><text:p text:style-name="P485">#include &quot;TrainingSet.h&quot;</text:p><text:p text:style-name="P485">#include &quot;JsonHttpCommunicator.h&quot;</text:p><text:p text:style-name="P485"/><text:p text:style-name="P485">/**</text:p><text:p text:style-name="P485"><text:s/>* Artificial neural network trainer.</text:p><text:p text:style-name="P485"><text:s/>*</text:p><text:p text:style-name="P485"><text:s/>* @author Todor Balabanov</text:p><text:p text:style-name="P485"><text:s/>*</text:p><text:p text:style-name="P485"><text:s/>* @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P485"><text:s/>*</text:p><text:p text:style-name="P485"><text:s/>* @date 16 Apr 2009</text:p><text:p text:style-name="P485"><text:s/>*/</text:p><text:p text:style-name="P485">class Trainer {</text:p><text:p text:style-name="P485">public:</text:p><text:p text:style-name="P485"/><text:p text:style-name="P485"><text:tab/>/**</text:p><text:p text:style-name="P485"><text:tab/> * Do report flag.</text:p><text:p text:style-name="P485"><text:tab/> */</text:p><text:p text:style-name="P485"><text:tab/>static const bool DO_FINAL_REPORT = true;</text:p><text:p text:style-name="P485"/><text:p text:style-name="P485"><text:tab/>/**</text:p><text:p text:style-name="P485"><text:tab/> * Report file name.</text:p><text:p text:style-name="P485"><text:tab/> */</text:p><text:p text:style-name="P485"><text:tab/>static const char REPORT_FILE_NAME[];</text:p><text:p text:style-name="P485"/><text:p text:style-name="P485"><text:tab/>/**</text:p><text:p text:style-name="P485"><text:tab/> * Number of seconds to request training set update.</text:p><text:p text:style-name="P485"><text:tab/> */</text:p><text:p text:style-name="P485"><text:tab/>static const unsigned long TRAINING_SET_UPDATE_INTERVAL = 600;</text:p><text:p text:style-name="P485"/><text:p text:style-name="P485"><text:tab/>/**</text:p><text:p text:style-name="P485"><text:tab/> * Number of seconds to report local best fitness.</text:p><text:p text:style-name="P485"><text:tab/> */</text:p><text:p text:style-name="P485"><text:tab/>static const unsigned long BEST_FITNESS_REPORT_INTERVAL = 600;</text:p><text:p text:style-name="P485"/><text:p text:style-name="P485">private:</text:p><text:p text:style-name="P485"/><text:p text:style-name="P485"><text:tab/>/**</text:p><text:p text:style-name="P485"><text:tab/> * MetaTrader 4 chart symbol.</text:p><text:p text:style-name="P485"><text:tab/> */</text:p><text:p text:style-name="P485"><text:tab/>char symbol[ 10 ];</text:p><text:p text:style-name="P485"/><text:p text:style-name="P485"><text:tab/>/**</text:p><text:p text:style-name="P485"><text:tab/> * MetaTrader 4 chart period.</text:p><text:p text:style-name="P485"><text:tab/> */</text:p><text:p text:style-name="P485"><text:tab/>TimePeriod period;</text:p><text:p text:style-name="P485"/><text:p text:style-name="P485"><text:tab/>/**</text:p><text:p text:style-name="P485"><text:soft-page-break/><text:tab/> * Statistic counters dynamic instance.</text:p><text:p text:style-name="P485"><text:tab/> */</text:p><text:p text:style-name="P485"><text:tab/>Counter counters;</text:p><text:p text:style-name="P485"/><text:p text:style-name="P485"><text:tab/>/**</text:p><text:p text:style-name="P485"><text:tab/> * Artificial neural network dynamic instance.</text:p><text:p text:style-name="P485"><text:tab/> */</text:p><text:p text:style-name="P485"><text:tab/>ANN ann;</text:p><text:p text:style-name="P485"/><text:p text:style-name="P485"><text:tab/>/**</text:p><text:p text:style-name="P485"><text:tab/> * Differential evolution dynamic instance.</text:p><text:p text:style-name="P485"><text:tab/> */</text:p><text:p text:style-name="P485"><text:tab/>DE de;</text:p><text:p text:style-name="P485"/><text:p text:style-name="P485"><text:tab/>/**</text:p><text:p text:style-name="P485"><text:tab/> * Training set dynamic instance.</text:p><text:p text:style-name="P485"><text:tab/> */</text:p><text:p text:style-name="P485"><text:tab/>TrainingSet ts;</text:p><text:p text:style-name="P485"/><text:p text:style-name="P485"><text:tab/>/**</text:p><text:p text:style-name="P485"><text:tab/> * HTTP communication dynamic instance.</text:p><text:p text:style-name="P485"><text:tab/> */</text:p><text:p text:style-name="P485"><text:tab/>JsonHttpCommunicator http;</text:p><text:p text:style-name="P485"/><text:p text:style-name="P485"><text:tab/>/**</text:p><text:p text:style-name="P485"><text:tab/> * Last best local fitness report UNIX time.</text:p><text:p text:style-name="P485"><text:tab/> */</text:p><text:p text:style-name="P485"><text:tab/>unsigned long lastBestFitnessReportTime;</text:p><text:p text:style-name="P485"/><text:p text:style-name="P485">public:</text:p><text:p text:style-name="P485"/><text:p text:style-name="P485"><text:tab/>/**</text:p><text:p text:style-name="P485"><text:tab/> * Constructing trainer by using database data or user defined parameters.</text:p><text:p text:style-name="P485"><text:tab/> *</text:p><text:p text:style-name="P485"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P485"><text:tab/> *</text:p><text:p text:style-name="P485"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P485"><text:tab/> *</text:p><text:p text:style-name="P485"><text:tab/> * @date 12 Sep 2009</text:p><text:p text:style-name="P485"><text:tab/> */</text:p><text:p text:style-name="P485"><text:tab/>Trainer();</text:p><text:p text:style-name="P485"/><text:p text:style-name="P485"><text:tab/>/**</text:p><text:p text:style-name="P485"><text:tab/> * Setup trainer by using database data or user defined parameters.</text:p><text:p text:style-name="P485"><text:tab/> *</text:p><text:p text:style-name="P485"><text:tab/> * @param parameters Calculation model parameters.</text:p><text:p text:style-name="P485"><text:tab/> *</text:p><text:p text:style-name="P485"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P485"><text:tab/> *</text:p><text:p text:style-name="P485"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P485"><text:tab/> *</text:p><text:p text:style-name="P485"><text:tab/> * @date 18 Jun 2013</text:p><text:p text:style-name="P485"><text:tab/> */</text:p><text:p text:style-name="P485"><text:tab/>void setup(const ModelParameters &amp;parameters);</text:p><text:p text:style-name="P485"/><text:p text:style-name="P485"><text:tab/>/**</text:p><text:p text:style-name="P485"><text:tab/> * Update training set.</text:p><text:p text:style-name="P485"><text:tab/> *</text:p><text:p text:style-name="P485"><text:tab/> * @param rates Array with rates values.</text:p><text:p text:style-name="P485"><text:tab/> *</text:p><text:p text:style-name="P485"><text:tab/> * @param size Size of all parallel arrays.</text:p><text:p text:style-name="P485"><text:tab/> *</text:p><text:p text:style-name="P485"><text:tab/> * @author Iliyan Zankinski</text:p><text:p text:style-name="P485"><text:tab/> *</text:p><text:p text:style-name="P485"><text:tab/> * @email iliyan_mf@abv.bg</text:p><text:p text:style-name="P485"><text:tab/> *</text:p><text:p text:style-name="P485"><text:tab/> * @date 26 Jul 2009</text:p><text:p text:style-name="P485"><text:tab/> */</text:p><text:p text:style-name="P485"><text:tab/>void updateTrainingSet(const std::vector&lt;RateInfo&gt; &amp;rates, int size);</text:p><text:p text:style-name="P485"/><text:p text:style-name="P485"><text:tab/>/**</text:p><text:p text:style-name="P485"><text:tab/> * Do training process.</text:p><text:p text:style-name="P485"><text:tab/> *</text:p><text:p text:style-name="P485"><text:tab/> * @author Iliyan Zankinski</text:p><text:p text:style-name="P485"><text:tab/> *</text:p><text:p text:style-name="P485"><text:tab/> * @email iliyan_mf@abv.bg</text:p><text:p text:style-name="P485"><text:tab/> *</text:p><text:p text:style-name="P485"><text:tab/> * @date 28 Jul 2009</text:p><text:p text:style-name="P485"><text:tab/> */</text:p><text:p text:style-name="P485"><text:tab/>void train();</text:p><text:p text:style-name="P485"/><text:p text:style-name="P485"><text:tab/>/**</text:p><text:p text:style-name="P485"><text:tab/> * Obtain predicted value.</text:p><text:p text:style-name="P485"><text:tab/> *</text:p><text:p text:style-name="P485"><text:tab/> * @return Predicted value.</text:p><text:p text:style-name="P485"><text:tab/> *</text:p><text:p text:style-name="P485"><text:tab/> * @author Iliyan Zankinski</text:p><text:p text:style-name="P485"><text:tab/> *</text:p><text:p text:style-name="P485"><text:tab/> * @email iliyan_mf@abv.bg</text:p><text:p text:style-name="P485"><text:tab/> *</text:p><text:p text:style-name="P485"><text:tab/> * @date 28 Jul 2009</text:p><text:p text:style-name="P485"><text:tab/> */</text:p><text:p text:style-name="P485"><text:tab/>double predict();</text:p><text:p text:style-name="P485"/><text:p text:style-name="P485"><text:tab/>/**</text:p><text:p text:style-name="P485"><text:tab/> * Report local best fitness.</text:p><text:p text:style-name="P485"><text:tab/> *</text:p><text:p text:style-name="P485"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P485"><text:tab/> *</text:p><text:p text:style-name="P485"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P485"><text:tab/> *</text:p><text:p text:style-name="P485"><text:tab/> * @date 12 Sep 2009</text:p><text:p text:style-name="P485"><text:tab/> */</text:p><text:p text:style-name="P485"><text:tab/>void reportLocalBestFitness();</text:p><text:p text:style-name="P485"/><text:p text:style-name="P485"><text:tab/>/**</text:p><text:p text:style-name="P485"><text:tab/> * Trainer destructor.</text:p><text:p text:style-name="P485"><text:tab/> *</text:p><text:p text:style-name="P485"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P485"><text:tab/> *</text:p><text:p text:style-name="P485"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P485"><text:tab/> *</text:p><text:p text:style-name="P485"><text:tab/> * @date 12 Sep 2009</text:p><text:p text:style-name="P485"><text:tab/> */</text:p><text:p text:style-name="P485"><text:tab/>virtual ~Trainer();</text:p><text:p text:style-name="P485">};</text:p><text:p text:style-name="P485"/><text:p text:style-name="P485">#endif</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5842_1486593966"/><text:soft-page-break/><text:s text:c="4"/>TrainingExample.cpp<text:bookmark-end text:name="__RefHeading___Toc5842_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P486">/*******************************************************************************</text:p><text:p text:style-name="P486"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P486"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P486"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P486"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P486"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P486"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P486"><text:s/>* Copyright (C) 2008-2011 by Todor Balabanov <text:s/>( todor.balabanov@gmail.com ) <text:s text:c="2"/>*</text:p><text:p text:style-name="P486"><text:s/>* <text:s text:c="22"/>Iliyan Zankinski <text:s text:c="2"/>( iliyan_mf@abv.bg ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P486"><text:s/>* <text:s text:c="22"/>Momchil Anachkov <text:s text:c="2"/>( mZer0000@gmail.com ) <text:s text:c="12"/>*</text:p><text:p text:style-name="P486"><text:s/>* <text:s text:c="22"/>Daniel Chutrov <text:s text:c="4"/>( d.chutrov@gmail.com ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P486"><text:s/>* <text:s text:c="22"/>Nikola Simeonov <text:s text:c="3"/>( n.simeonow@gmail.com ) <text:s text:c="10"/>*</text:p><text:p text:style-name="P486"><text:s/>* <text:s text:c="22"/>Galq Cirkalova <text:s text:c="4"/>( galq_cirkalova@abv.bg ) <text:s text:c="9"/>*</text:p><text:p text:style-name="P486"><text:s/>* <text:s text:c="22"/>Ivan Grozev <text:s text:c="7"/>( ivan.iliev.grozev@gmail.com ) <text:s text:c="3"/>*</text:p><text:p text:style-name="P486"><text:s/>* <text:s text:c="22"/>Elisaveta Hristova ( elisaveta.s.hristova@gmail.com ) *</text:p><text:p text:style-name="P486"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P486"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P486"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P486"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P486"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P486"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P486"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P486"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P486"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P486"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P486"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P486"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P486"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P486"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P486"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P486"/><text:p text:style-name="P486">#include &quot;TrainingExample.h&quot;</text:p><text:p text:style-name="P486"/><text:p text:style-name="P486">TrainingExample::TrainingExample() {</text:p><text:p text:style-name="P486"><text:tab/>ANNIO inputted(0);</text:p><text:p text:style-name="P486"><text:tab/>ANNIO expected(0);</text:p><text:p text:style-name="P486"><text:tab/>ANNIO predicted(0);</text:p><text:p text:style-name="P486"/><text:p text:style-name="P486"><text:tab/>this-&gt;inputted = inputted;</text:p><text:p text:style-name="P486"><text:tab/>this-&gt;expected = expected;</text:p><text:p text:style-name="P486"><text:tab/>this-&gt;predicted = predicted;</text:p><text:p text:style-name="P486">}</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5844_1486593966"/><text:s text:c="4"/>TrainingExample.h<text:bookmark-end text:name="__RefHeading___Toc5844_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P487">/*******************************************************************************</text:p><text:p text:style-name="P487"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P487"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P487"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P487"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P487"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P487"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P487"><text:s/>* Copyright (C) 2008-2011 by Todor Balabanov <text:s/>( todor.balabanov@gmail.com ) <text:s text:c="2"/>*</text:p><text:p text:style-name="P487"><text:s/>* <text:s text:c="22"/>Iliyan Zankinski <text:s text:c="2"/>( iliyan_mf@abv.bg ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P487"><text:s/>* <text:s text:c="22"/>Momchil Anachkov <text:s text:c="2"/>( mZer0000@gmail.com ) <text:s text:c="12"/>*</text:p><text:p text:style-name="P487"><text:s/>* <text:s text:c="22"/>Daniel Chutrov <text:s text:c="4"/>( d.chutrov@gmail.com ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P487"><text:s/>* <text:s text:c="22"/>Nikola Simeonov <text:s text:c="3"/>( n.simeonow@gmail.com ) <text:s text:c="10"/>*</text:p><text:p text:style-name="P487"><text:s/>* <text:s text:c="22"/>Galq Cirkalova <text:s text:c="4"/>( galq_cirkalova@abv.bg ) <text:s text:c="9"/>*</text:p><text:p text:style-name="P487"><text:s/>* <text:s text:c="22"/>Ivan Grozev <text:s text:c="7"/>( ivan.iliev.grozev@gmail.com ) <text:s text:c="3"/>*</text:p><text:p text:style-name="P487"><text:s/>* <text:s text:c="22"/>Elisaveta Hristova ( elisaveta.s.hristova@gmail.com ) *</text:p><text:p text:style-name="P487"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P487"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P487"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P487"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P487"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P487"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P487"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P487"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P487"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P487"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P487"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P487"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P487"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P487"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P487"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P487"/><text:p text:style-name="P487">#ifndef TRAINING_EXAMPLE_H</text:p><text:p text:style-name="P487">#define TRAINING_EXAMPLE_H</text:p><text:p text:style-name="P487"/><text:p text:style-name="P487">#include &quot;ANNIO.h&quot;</text:p><text:p text:style-name="P487"/><text:p text:style-name="P487">#pragma pack(push,1)</text:p><text:p text:style-name="P487"/><text:p text:style-name="P487">/**</text:p><text:p text:style-name="P487"><text:s/>* Single training example structure.</text:p><text:p text:style-name="P487"><text:s/>*</text:p><text:p text:style-name="P487"><text:s/>* @author Todor Balabanov</text:p><text:p text:style-name="P487"><text:s/>*</text:p><text:p text:style-name="P487"><text:s/>* @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P487"><text:s/>*</text:p><text:p text:style-name="P487"><text:s/>* @date 12 Sep 2009</text:p><text:p text:style-name="P487"><text:s/>*/</text:p><text:p text:style-name="P487">struct TrainingExample {</text:p><text:p text:style-name="P487"/><text:p text:style-name="P487"><text:tab/>/**</text:p><text:p text:style-name="P487"><text:tab/> * Constructor without parameters.</text:p><text:p text:style-name="P487"><text:tab/> *</text:p><text:p text:style-name="P487"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P487"><text:tab/> *</text:p><text:p text:style-name="P487"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P487"><text:tab/> *</text:p><text:p text:style-name="P487"><text:tab/> * @date 12 Aug 2011</text:p><text:p text:style-name="P487"><text:tab/> */</text:p><text:p text:style-name="P487"><text:tab/>TrainingExample();</text:p><text:p text:style-name="P487"/><text:p text:style-name="P487"><text:tab/>/**</text:p><text:p text:style-name="P487"><text:tab/> * Size of arrays with input split digits.</text:p><text:p text:style-name="P487"><text:tab/> */</text:p><text:p text:style-name="P487"><text:tab/>static const int NUMBER_OF_INPUT_SPLIT_DIGITS = 10;</text:p><text:p text:style-name="P487"/><text:p text:style-name="P487"><text:tab/>/**</text:p><text:p text:style-name="P487"><text:tab/> * Size of arrays with output split digits.</text:p><text:p text:style-name="P487"><text:soft-page-break/><text:tab/> */</text:p><text:p text:style-name="P487"><text:tab/>static const int NUMBER_OF_OUTPUT_SPLIT_DIGITS = 5;</text:p><text:p text:style-name="P487"/><text:p text:style-name="P487"><text:tab/>/**</text:p><text:p text:style-name="P487"><text:tab/> * Rate time values.</text:p><text:p text:style-name="P487"><text:tab/> */</text:p><text:p text:style-name="P487"><text:tab/>//TODO Wrong spelling. It should be inputted.</text:p><text:p text:style-name="P487"><text:tab/>ANNIO inputted;</text:p><text:p text:style-name="P487"/><text:p text:style-name="P487"><text:tab/>/**</text:p><text:p text:style-name="P487"><text:tab/> * Expected values.</text:p><text:p text:style-name="P487"><text:tab/> */</text:p><text:p text:style-name="P487"><text:tab/>ANNIO expected;</text:p><text:p text:style-name="P487"/><text:p text:style-name="P487"><text:tab/>/**</text:p><text:p text:style-name="P487"><text:tab/> * Predicted values.</text:p><text:p text:style-name="P487"><text:tab/> */</text:p><text:p text:style-name="P487"><text:tab/>ANNIO predicted;</text:p><text:p text:style-name="P487">};</text:p><text:p text:style-name="P487"/><text:p text:style-name="P487">#pragma pack(pop)</text:p><text:p text:style-name="P487"/><text:p text:style-name="P487">#endif</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5846_1486593966"/><text:s text:c="4"/>TrainingSet.cpp<text:bookmark-end text:name="__RefHeading___Toc5846_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P488">/*******************************************************************************</text:p><text:p text:style-name="P488"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P488"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P488"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P488"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P488"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P488"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P488"><text:s/>* Copyright (C) 2008-2011 by Todor Balabanov <text:s/>( todor.balabanov@gmail.com ) <text:s text:c="2"/>*</text:p><text:p text:style-name="P488"><text:s/>* <text:s text:c="22"/>Iliyan Zankinski <text:s text:c="2"/>( iliyan_mf@abv.bg ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P488"><text:s/>* <text:s text:c="22"/>Momchil Anachkov <text:s text:c="2"/>( mZer0000@gmail.com ) <text:s text:c="12"/>*</text:p><text:p text:style-name="P488"><text:s/>* <text:s text:c="22"/>Daniel Chutrov <text:s text:c="4"/>( d.chutrov@gmail.com ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P488"><text:s/>* <text:s text:c="22"/>Nikola Simeonov <text:s text:c="3"/>( n.simeonow@gmail.com ) <text:s text:c="10"/>*</text:p><text:p text:style-name="P488"><text:s/>* <text:s text:c="22"/>Galq Cirkalova <text:s text:c="4"/>( galq_cirkalova@abv.bg ) <text:s text:c="9"/>*</text:p><text:p text:style-name="P488"><text:s/>* <text:s text:c="22"/>Ivan Grozev <text:s text:c="7"/>( ivan.iliev.grozev@gmail.com ) <text:s text:c="3"/>*</text:p><text:p text:style-name="P488"><text:s/>* <text:s text:c="22"/>Elisaveta Hristova ( elisaveta.s.hristova@gmail.com ) *</text:p><text:p text:style-name="P488"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P488"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P488"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P488"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P488"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P488"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P488"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P488"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P488"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P488"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P488"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P488"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P488"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P488"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P488"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P488"/><text:p text:style-name="P488">#include &lt;cstdlib&gt;</text:p><text:p text:style-name="P488">#include &lt;iomanip&gt;</text:p><text:p text:style-name="P488"/><text:p text:style-name="P488">using namespace std;</text:p><text:p text:style-name="P488"/><text:p text:style-name="P488">#include &quot;TrainingSet.h&quot;</text:p><text:p text:style-name="P488"/><text:p text:style-name="P488">const double TrainingSet::FLOATING_POINT_FACTOR = 10000.0;</text:p><text:p text:style-name="P488"/><text:p text:style-name="P488">void TrainingSet::splitDigits(ANNIO &amp;values, unsigned long number) {</text:p><text:p text:style-name="P488"><text:tab/>for (int i=values.dimension()-1; i&gt;=0; i--) {</text:p><text:p text:style-name="P488"><text:tab/><text:tab/>values[i] = ((double)(number % 10) / 10.0);</text:p><text:p text:style-name="P488"><text:tab/><text:tab/>number /= 10;</text:p><text:p text:style-name="P488"><text:tab/>}</text:p><text:p text:style-name="P488">}</text:p><text:p text:style-name="P488"/><text:p text:style-name="P488">double TrainingSet::mergeDigits(ANNIO &amp;values) {</text:p><text:p text:style-name="P488"><text:tab/>double result = 0.0;</text:p><text:p text:style-name="P488"><text:tab/>double multiplier = 1.0;</text:p><text:p text:style-name="P488"/><text:p text:style-name="P488"><text:tab/>/*</text:p><text:p text:style-name="P488"><text:tab/> * Plus 0.5 is for rounding.</text:p><text:p text:style-name="P488"><text:tab/> */</text:p><text:p text:style-name="P488"><text:tab/>for (int i=values.dimension()-1; i&gt;=0; i--) {</text:p><text:p text:style-name="P488"><text:tab/><text:tab/>result += (long)(values[i]*10.0+0.5) * multiplier;</text:p><text:p text:style-name="P488"><text:tab/><text:tab/>multiplier *= 10;</text:p><text:p text:style-name="P488"><text:tab/>}</text:p><text:p text:style-name="P488"/><text:p text:style-name="P488"><text:tab/>return( result );</text:p><text:p text:style-name="P488">}</text:p><text:p text:style-name="P488"/><text:p text:style-name="P488">bool TrainingSet::isTimeFound(unsigned int time) const {</text:p><text:p text:style-name="P488"><text:tab/>/*</text:p><text:p text:style-name="P488"><text:tab/> * Left side is the begining. Right side is the end.</text:p><text:p text:style-name="P488"><text:tab/> */</text:p><text:p text:style-name="P488"><text:tab/>int left = 0;</text:p><text:p text:style-name="P488"><text:tab/>int right = rates.size()-1;</text:p><text:p text:style-name="P488"><text:tab/>int middle;</text:p><text:p text:style-name="P488"/><text:p text:style-name="P488"><text:tab/>/*</text:p><text:p text:style-name="P488"><text:tab/> * Binary search.</text:p><text:p text:style-name="P488"><text:tab/> */</text:p><text:p text:style-name="P488"><text:tab/>do {</text:p><text:p text:style-name="P488"><text:tab/><text:tab/>middle = (left + right) / 2;</text:p><text:p text:style-name="P488"><text:tab/><text:tab/>if (this-&gt;rates[middle].time == time) {</text:p><text:p text:style-name="P488"><text:tab/><text:tab/><text:tab/>return( true );</text:p><text:p text:style-name="P488"><text:tab/><text:tab/>} else if (left &gt;= right) {</text:p><text:p text:style-name="P488"><text:tab/><text:tab/><text:tab/>return( false );</text:p><text:p text:style-name="P488"><text:tab/><text:tab/>} else if (time &lt; this-&gt;rates[middle].time) {</text:p><text:p text:style-name="P488"><text:tab/><text:tab/><text:tab/>right = middle - 1;</text:p><text:p text:style-name="P488"><text:tab/><text:tab/>} else if (time &gt; this-&gt;rates[middle].time) {</text:p><text:p text:style-name="P488"><text:tab/><text:tab/><text:tab/>left = middle + 1;</text:p><text:p text:style-name="P488"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P488"><text:tab/>} while ( true );</text:p><text:p text:style-name="P488"/><text:p text:style-name="P488"><text:tab/>return( false );</text:p><text:p text:style-name="P488">}</text:p><text:p text:style-name="P488"/><text:p text:style-name="P488">void TrainingSet::splitData(int past, int future) {</text:p><text:p text:style-name="P488"><text:tab/>examples.resize( rates.size() );</text:p><text:p text:style-name="P488"/><text:p text:style-name="P488"><text:tab/>int j = 0;</text:p><text:p text:style-name="P488"><text:soft-page-break/><text:tab/>for (int i=future; i&lt;rates.size()-past; i++, j++) {</text:p><text:p text:style-name="P488"><text:tab/><text:tab/>examples[j].inputted = getBarsInPast(i,past);</text:p><text:p text:style-name="P488"><text:tab/><text:tab/>examples[j].expected = getBarsInFuture(i+1,future);</text:p><text:p text:style-name="P488"><text:tab/><text:tab/>examples[j].predicted = getBarsInFuture(i+1,future);</text:p><text:p text:style-name="P488"><text:tab/>}</text:p><text:p text:style-name="P488"/><text:p text:style-name="P488"><text:tab/>examples.resize(j);</text:p><text:p text:style-name="P488">}</text:p><text:p text:style-name="P488"/><text:p text:style-name="P488">TrainingSet::TrainingSet() {</text:p><text:p text:style-name="P488"><text:tab/>rates.clear();</text:p><text:p text:style-name="P488"><text:tab/>examples.clear();</text:p><text:p text:style-name="P488">}</text:p><text:p text:style-name="P488"/><text:p text:style-name="P488">TrainingSet::TrainingSet(const vector&lt;RateInfo&gt; &amp;rates, int size, int past, int future) {</text:p><text:p text:style-name="P488"><text:tab/>/*</text:p><text:p text:style-name="P488"><text:tab/> * It is not possible arrays size to be negative number.</text:p><text:p text:style-name="P488"><text:tab/> */</text:p><text:p text:style-name="P488"><text:tab/>if (size &lt; 0) {</text:p><text:p text:style-name="P488"><text:tab/><text:tab/>size = 0;</text:p><text:p text:style-name="P488"><text:tab/>}</text:p><text:p text:style-name="P488"><text:tab/>this-&gt;rates.clear();</text:p><text:p text:style-name="P488"><text:tab/>this-&gt;examples.clear();</text:p><text:p text:style-name="P488"/><text:p text:style-name="P488"><text:tab/>/*</text:p><text:p text:style-name="P488"><text:tab/> * Array revers because of MetaTrader 4 data presentation.</text:p><text:p text:style-name="P488"><text:tab/> */</text:p><text:p text:style-name="P488"><text:tab/>for (int i=0; i&lt;size; i++) {</text:p><text:p text:style-name="P488"><text:tab/><text:tab/>this-&gt;rates.push_back( rates[size-i-1] );</text:p><text:p text:style-name="P488"><text:tab/><text:tab/>this-&gt;examples.push_back( TrainingExample() );</text:p><text:p text:style-name="P488"><text:tab/>}</text:p><text:p text:style-name="P488"/><text:p text:style-name="P488"><text:tab/>splitData(past, future);</text:p><text:p text:style-name="P488">}</text:p><text:p text:style-name="P488"/><text:p text:style-name="P488">int TrainingSet::getSize() const {</text:p><text:p text:style-name="P488"><text:tab/>return( examples.size() );</text:p><text:p text:style-name="P488">}</text:p><text:p text:style-name="P488"/><text:p text:style-name="P488">vector&lt;RateInfo&gt;&amp; TrainingSet::getRates() {</text:p><text:p text:style-name="P488"><text:tab/>return( rates );</text:p><text:p text:style-name="P488">}</text:p><text:p text:style-name="P488"/><text:p text:style-name="P488">double TrainingSet::getOpen(int index) {</text:p><text:p text:style-name="P488"><text:tab/>if (index &gt;= 0 &amp;&amp; index &lt; rates.size()) {</text:p><text:p text:style-name="P488"><text:tab/><text:tab/>return( rates[index].open );</text:p><text:p text:style-name="P488"><text:tab/>} else {</text:p><text:p text:style-name="P488"><text:tab/><text:tab/>throw( &quot;TrainingSet00086&quot; );</text:p><text:p text:style-name="P488"><text:tab/><text:tab/>return( 0 );</text:p><text:p text:style-name="P488"><text:tab/>}</text:p><text:p text:style-name="P488">}</text:p><text:p text:style-name="P488"/><text:p text:style-name="P488">double TrainingSet::getClose(int index) {</text:p><text:p text:style-name="P488"><text:tab/>if (index &gt;= 0 &amp;&amp; index &lt; rates.size()) {</text:p><text:p text:style-name="P488"><text:tab/><text:tab/>return( rates[index].close );</text:p><text:p text:style-name="P488"><text:tab/>} else {</text:p><text:p text:style-name="P488"><text:tab/><text:tab/>throw( &quot;TrainingSet00087&quot; );</text:p><text:p text:style-name="P488"><text:tab/><text:tab/>return( 0 );</text:p><text:p text:style-name="P488"><text:tab/>}</text:p><text:p text:style-name="P488">}</text:p><text:p text:style-name="P488"/><text:p text:style-name="P488">double TrainingSet::getHigh(int index) {</text:p><text:p text:style-name="P488"><text:tab/>if (index &gt;= 0 &amp;&amp; index &lt; rates.size()) {</text:p><text:p text:style-name="P488"><text:tab/><text:tab/>return( rates[index].high );</text:p><text:p text:style-name="P488"><text:tab/>} else {</text:p><text:p text:style-name="P488"><text:tab/><text:tab/>throw( &quot;TrainingSet00088&quot; );</text:p><text:p text:style-name="P488"><text:tab/><text:tab/>return( 0 );</text:p><text:p text:style-name="P488"><text:tab/>}</text:p><text:p text:style-name="P488">}</text:p><text:p text:style-name="P488"/><text:p text:style-name="P488">double TrainingSet::getLow(int index) {</text:p><text:p text:style-name="P488"><text:tab/>if (index &gt;= 0 &amp;&amp; index &lt; rates.size()) {</text:p><text:p text:style-name="P488"><text:tab/><text:tab/>return( rates[index].low );</text:p><text:p text:style-name="P488"><text:tab/>} else {</text:p><text:p text:style-name="P488"><text:tab/><text:tab/>throw( &quot;TrainingSet00089&quot; );</text:p><text:p text:style-name="P488"><text:tab/><text:tab/>return( 0 );</text:p><text:p text:style-name="P488"><text:tab/>}</text:p><text:p text:style-name="P488">}</text:p><text:p text:style-name="P488"/><text:p text:style-name="P488">unsigned int TrainingSet::getTime(int index) {</text:p><text:p text:style-name="P488"><text:tab/>if (index &gt;= 0 &amp;&amp; index &lt; rates.size()) {</text:p><text:p text:style-name="P488"><text:tab/><text:tab/>return( rates[index].time );</text:p><text:p text:style-name="P488"><text:tab/>} else {</text:p><text:p text:style-name="P488"><text:tab/><text:tab/>throw( &quot;TrainingSet00090&quot; );</text:p><text:p text:style-name="P488"><text:tab/><text:tab/>return( 0 );</text:p><text:p text:style-name="P488"><text:tab/>}</text:p><text:p text:style-name="P488">}</text:p><text:p text:style-name="P488"/><text:p text:style-name="P488">ANNIO TrainingSet::getBarsInPast(int index, int amount) {</text:p><text:p text:style-name="P488"><text:tab/>ANNIO result(amount);</text:p><text:p text:style-name="P488"/><text:p text:style-name="P488"><text:tab/>if(index+amount &gt; rates.size()) {</text:p><text:p text:style-name="P488"><text:tab/><text:tab/>throw( &quot;TrainingSet00217&quot; );</text:p><text:p text:style-name="P488"><text:tab/><text:tab/>return result;</text:p><text:p text:style-name="P488"><text:tab/>}</text:p><text:p text:style-name="P488"/><text:p text:style-name="P488"><text:tab/>for(int i=0; i&lt;amount; i++) {</text:p><text:p text:style-name="P488"><text:tab/><text:tab/>//TODO Some mechanisum of changing predicted value should be implemented.</text:p><text:p text:style-name="P488"><text:tab/><text:tab/>result[i] = (rates[index+i].high + rates[index+i].low) / 2;</text:p><text:p text:style-name="P488"><text:tab/>}</text:p><text:p text:style-name="P488"/><text:p text:style-name="P488"><text:tab/>return result;</text:p><text:p text:style-name="P488">}</text:p><text:p text:style-name="P488"/><text:p text:style-name="P488">ANNIO TrainingSet::getBarsInFuture(int index, int amount) {</text:p><text:p text:style-name="P488"><text:tab/>ANNIO result(amount);</text:p><text:p text:style-name="P488"/><text:p text:style-name="P488"><text:tab/>if(index-amount &lt; 0) {</text:p><text:p text:style-name="P488"><text:tab/><text:tab/>throw( &quot;TrainingSet00218&quot; );</text:p><text:p text:style-name="P488"><text:tab/><text:tab/>return result;</text:p><text:p text:style-name="P488"><text:tab/>}</text:p><text:p text:style-name="P488"/><text:p text:style-name="P488"><text:tab/>for(int i=0; i&lt;amount; i++) {</text:p><text:p text:style-name="P488"><text:tab/><text:tab/>//TODO Some mechanisum of changing predicted value should be implemented.</text:p><text:p text:style-name="P488"><text:tab/><text:tab/>result[i] = (rates[index-i].high + rates[index-i].low) / 2;</text:p><text:p text:style-name="P488"><text:tab/>}</text:p><text:p text:style-name="P488"/><text:p text:style-name="P488"><text:tab/>return result;</text:p><text:p text:style-name="P488">}</text:p><text:p text:style-name="P488"/><text:p text:style-name="P488">ANNIO&amp; TrainingSet::getSplittedInputted(int index) {</text:p><text:p text:style-name="P488"><text:tab/>if (index &gt;= 0 &amp;&amp; index &lt; rates.size()) {</text:p><text:p text:style-name="P488"><text:tab/><text:tab/>return( examples[index].inputted );</text:p><text:p text:style-name="P488"><text:tab/>} else {</text:p><text:p text:style-name="P488"><text:tab/><text:tab/>throw( &quot;TrainingSet00125&quot; );</text:p><text:p text:style-name="P488"><text:soft-page-break/><text:tab/>}</text:p><text:p text:style-name="P488">}</text:p><text:p text:style-name="P488"/><text:p text:style-name="P488">ANNIO&amp; TrainingSet::getSplittedExpected(int index) {</text:p><text:p text:style-name="P488"><text:tab/>if (index &gt;= 0 &amp;&amp; index &lt; rates.size()) {</text:p><text:p text:style-name="P488"><text:tab/><text:tab/>return( examples[index].expected );</text:p><text:p text:style-name="P488"><text:tab/>} else {</text:p><text:p text:style-name="P488"><text:tab/><text:tab/>throw( &quot;TrainingSet00123&quot; );</text:p><text:p text:style-name="P488"><text:tab/>}</text:p><text:p text:style-name="P488">}</text:p><text:p text:style-name="P488"/><text:p text:style-name="P488">ANNIO&amp; TrainingSet::getSplittedPredicted(int index) {</text:p><text:p text:style-name="P488"><text:tab/>if (index &gt;= 0 &amp;&amp; index &lt; rates.size()) {</text:p><text:p text:style-name="P488"><text:tab/><text:tab/>return( examples[index].predicted );</text:p><text:p text:style-name="P488"><text:tab/>} else {</text:p><text:p text:style-name="P488"><text:tab/><text:tab/>throw( &quot;TrainingSet00124&quot; );</text:p><text:p text:style-name="P488"><text:tab/>}</text:p><text:p text:style-name="P488">}</text:p><text:p text:style-name="P488"/><text:p text:style-name="P488">int TrainingSet::getIndexAtTime(unsigned int atMoment) const {</text:p><text:p text:style-name="P488"><text:tab/>/*</text:p><text:p text:style-name="P488"><text:tab/> * Left side is the begining. Right side is the end.</text:p><text:p text:style-name="P488"><text:tab/> */</text:p><text:p text:style-name="P488"><text:tab/>int left = 0;</text:p><text:p text:style-name="P488"><text:tab/>int right = rates.size()-1;</text:p><text:p text:style-name="P488"><text:tab/>int middle;</text:p><text:p text:style-name="P488"/><text:p text:style-name="P488"><text:tab/>/*</text:p><text:p text:style-name="P488"><text:tab/> * Binary search.</text:p><text:p text:style-name="P488"><text:tab/> */</text:p><text:p text:style-name="P488"><text:tab/>do {</text:p><text:p text:style-name="P488"><text:tab/><text:tab/>middle = (left + right) / 2;</text:p><text:p text:style-name="P488"/><text:p text:style-name="P488"><text:tab/><text:tab/>if (this-&gt;rates[middle].time == atMoment) {</text:p><text:p text:style-name="P488"><text:tab/><text:tab/><text:tab/>return( middle );</text:p><text:p text:style-name="P488"><text:tab/><text:tab/>} else if (left &gt;= right) {</text:p><text:p text:style-name="P488"><text:tab/><text:tab/><text:tab/>return( -1 );</text:p><text:p text:style-name="P488"><text:tab/><text:tab/>} else if (atMoment &lt; this-&gt;rates[middle].time) {</text:p><text:p text:style-name="P488"><text:tab/><text:tab/><text:tab/>right = middle - 1;</text:p><text:p text:style-name="P488"><text:tab/><text:tab/>} else if (atMoment &gt; this-&gt;rates[middle].time) {</text:p><text:p text:style-name="P488"><text:tab/><text:tab/><text:tab/>left = middle + 1;</text:p><text:p text:style-name="P488"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P488"><text:tab/>} while ( true );</text:p><text:p text:style-name="P488"/><text:p text:style-name="P488"><text:tab/>return( -1 );</text:p><text:p text:style-name="P488">}</text:p><text:p text:style-name="P488"/><text:p text:style-name="P488">double TrainingSet::getOpen(unsigned int atMoment) {</text:p><text:p text:style-name="P488"><text:tab/>int index = getIndexAtTime( atMoment );</text:p><text:p text:style-name="P488"/><text:p text:style-name="P488"><text:tab/>if (index &gt;= 0) {</text:p><text:p text:style-name="P488"><text:tab/><text:tab/>return( rates[index].open );</text:p><text:p text:style-name="P488"><text:tab/>} else {</text:p><text:p text:style-name="P488"><text:tab/><text:tab/>throw( &quot;TrainingSet00091&quot; );</text:p><text:p text:style-name="P488"><text:tab/><text:tab/>return( 0 );</text:p><text:p text:style-name="P488"><text:tab/>}</text:p><text:p text:style-name="P488">}</text:p><text:p text:style-name="P488"/><text:p text:style-name="P488">double TrainingSet::getClose(unsigned int atMoment) {</text:p><text:p text:style-name="P488"><text:tab/>int index = getIndexAtTime( atMoment );</text:p><text:p text:style-name="P488"/><text:p text:style-name="P488"><text:tab/>if (index &gt;= 0) {</text:p><text:p text:style-name="P488"><text:tab/><text:tab/>return( rates[index].close );</text:p><text:p text:style-name="P488"><text:tab/>} else {</text:p><text:p text:style-name="P488"><text:tab/><text:tab/>throw( &quot;TrainingSet00092&quot; );</text:p><text:p text:style-name="P488"><text:tab/><text:tab/>return( 0 );</text:p><text:p text:style-name="P488"><text:tab/>}</text:p><text:p text:style-name="P488">}</text:p><text:p text:style-name="P488"/><text:p text:style-name="P488">double TrainingSet::getHigh(unsigned int atMoment) {</text:p><text:p text:style-name="P488"><text:tab/>int index = getIndexAtTime( atMoment );</text:p><text:p text:style-name="P488"/><text:p text:style-name="P488"><text:tab/>if (index &gt;= 0) {</text:p><text:p text:style-name="P488"><text:tab/><text:tab/>return( rates[index].high );</text:p><text:p text:style-name="P488"><text:tab/>} else {</text:p><text:p text:style-name="P488"><text:tab/><text:tab/>throw( &quot;TrainingSet00093&quot; );</text:p><text:p text:style-name="P488"><text:tab/><text:tab/>return( 0 );</text:p><text:p text:style-name="P488"><text:tab/>}</text:p><text:p text:style-name="P488">}</text:p><text:p text:style-name="P488"/><text:p text:style-name="P488">double TrainingSet::getLow(unsigned int atMoment) {</text:p><text:p text:style-name="P488"><text:tab/>int index = getIndexAtTime( atMoment );</text:p><text:p text:style-name="P488"/><text:p text:style-name="P488"><text:tab/>if ( index &gt;= 0 ) {</text:p><text:p text:style-name="P488"><text:tab/><text:tab/>return( rates[index].low );</text:p><text:p text:style-name="P488"><text:tab/>} else {</text:p><text:p text:style-name="P488"><text:tab/><text:tab/>throw( &quot;TrainingSet00094&quot; );</text:p><text:p text:style-name="P488"><text:tab/><text:tab/>return( 0 );</text:p><text:p text:style-name="P488"><text:tab/>}</text:p><text:p text:style-name="P488">}</text:p><text:p text:style-name="P488"/><text:p text:style-name="P488">TrainingSet::~TrainingSet() {</text:p><text:p text:style-name="P488"><text:tab/>rates.clear();</text:p><text:p text:style-name="P488"><text:tab/>examples.clear();</text:p><text:p text:style-name="P488">}</text:p><text:p text:style-name="P488"/><text:p text:style-name="P488">ostream&amp; operator&lt;&lt;(ostream &amp;out, TrainingSet &amp;ts) {</text:p><text:p text:style-name="P488"><text:tab/>out &lt;&lt; fixed;</text:p><text:p text:style-name="P488"/><text:p text:style-name="P488"><text:tab/>out &lt;&lt; ts.rates.size();</text:p><text:p text:style-name="P488"><text:tab/>out &lt;&lt; endl;</text:p><text:p text:style-name="P488"/><text:p text:style-name="P488"><text:tab/>for (vector&lt;RateInfo&gt;::iterator r=ts.rates.begin(); r!=ts.rates.end(); r++) {</text:p><text:p text:style-name="P488"><text:tab/><text:tab/>out &lt;&lt; (*r).open;</text:p><text:p text:style-name="P488"><text:tab/><text:tab/>if ((r+1)!=ts.rates.end()) {</text:p><text:p text:style-name="P488"><text:tab/><text:tab/><text:tab/>out &lt;&lt; &quot; &quot;;</text:p><text:p text:style-name="P488"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P488"><text:tab/>}</text:p><text:p text:style-name="P488"><text:tab/>out &lt;&lt; endl;</text:p><text:p text:style-name="P488"/><text:p text:style-name="P488"><text:tab/>for (vector&lt;RateInfo&gt;::iterator r=ts.rates.begin(); r!=ts.rates.end(); r++) {</text:p><text:p text:style-name="P488"><text:tab/><text:tab/>out &lt;&lt; (*r).close;</text:p><text:p text:style-name="P488"><text:tab/><text:tab/>if ((r+1)!=ts.rates.end()) {</text:p><text:p text:style-name="P488"><text:tab/><text:tab/><text:tab/>out &lt;&lt; &quot; &quot;;</text:p><text:p text:style-name="P488"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P488"><text:tab/>}</text:p><text:p text:style-name="P488"><text:tab/>out &lt;&lt; endl;</text:p><text:p text:style-name="P488"/><text:p text:style-name="P488"><text:tab/>for (vector&lt;RateInfo&gt;::iterator r=ts.rates.begin(); r!=ts.rates.end(); r++) {</text:p><text:p text:style-name="P488"><text:tab/><text:tab/>out &lt;&lt; (*r).high;</text:p><text:p text:style-name="P488"><text:tab/><text:tab/>if ((r+1)!=ts.rates.end()) {</text:p><text:p text:style-name="P488"><text:tab/><text:tab/><text:tab/>out &lt;&lt; &quot; &quot;;</text:p><text:p text:style-name="P488"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P488"><text:tab/>}</text:p><text:p text:style-name="P488"><text:tab/>out &lt;&lt; endl;</text:p><text:p text:style-name="P488"><text:soft-page-break/></text:p><text:p text:style-name="P488"><text:tab/>for (vector&lt;RateInfo&gt;::iterator r=ts.rates.begin(); r!=ts.rates.end(); r++) {</text:p><text:p text:style-name="P488"><text:tab/><text:tab/>out &lt;&lt; (*r).low;</text:p><text:p text:style-name="P488"><text:tab/><text:tab/>if ((r+1)!=ts.rates.end()) {</text:p><text:p text:style-name="P488"><text:tab/><text:tab/><text:tab/>out &lt;&lt; &quot; &quot;;</text:p><text:p text:style-name="P488"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P488"><text:tab/>}</text:p><text:p text:style-name="P488"><text:tab/>out &lt;&lt; endl;</text:p><text:p text:style-name="P488"/><text:p text:style-name="P488"><text:tab/>for (vector&lt;RateInfo&gt;::iterator r=ts.rates.begin(); r!=ts.rates.end(); r++) {</text:p><text:p text:style-name="P488"><text:tab/><text:tab/>out &lt;&lt; (*r).time;</text:p><text:p text:style-name="P488"><text:tab/><text:tab/>if ((r+1)!=ts.rates.end()) {</text:p><text:p text:style-name="P488"><text:tab/><text:tab/><text:tab/>out &lt;&lt; &quot; &quot;;</text:p><text:p text:style-name="P488"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P488"><text:tab/>}</text:p><text:p text:style-name="P488"><text:tab/>out &lt;&lt; endl;</text:p><text:p text:style-name="P488"/><text:p text:style-name="P488"><text:tab/>vector&lt;RateInfo&gt;::iterator r=ts.rates.begin();</text:p><text:p text:style-name="P488"><text:tab/>vector&lt;TrainingExample&gt;::iterator e=ts.examples.begin();</text:p><text:p text:style-name="P488"><text:tab/>for (; r!=ts.rates.end()&amp;&amp;e!=ts.examples.end(); r++, e++) {</text:p><text:p text:style-name="P488"><text:tab/><text:tab/>out &lt;&lt; (*r).time;</text:p><text:p text:style-name="P488"><text:tab/><text:tab/>out &lt;&lt; &quot;\t&quot;;</text:p><text:p text:style-name="P488"><text:tab/><text:tab/>out &lt;&lt; TrainingSet::mergeDigits((*e).expected);</text:p><text:p text:style-name="P488"><text:tab/><text:tab/>out &lt;&lt; &quot;\t&quot;;</text:p><text:p text:style-name="P488"><text:tab/><text:tab/>out &lt;&lt; TrainingSet::mergeDigits((*e).predicted);</text:p><text:p text:style-name="P488"><text:tab/><text:tab/>if ((r+1)!=ts.rates.end() &amp;&amp; (e+1)!=ts.examples.end()) {</text:p><text:p text:style-name="P488"><text:tab/><text:tab/><text:tab/>out &lt;&lt; endl;</text:p><text:p text:style-name="P488"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P488"><text:tab/>}</text:p><text:p text:style-name="P488"><text:tab/>out &lt;&lt; endl;</text:p><text:p text:style-name="P488"/><text:p text:style-name="P488"><text:tab/>return( out );</text:p><text:p text:style-name="P488">}</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5848_1486593966"/><text:s text:c="4"/>TrainingSet.h<text:bookmark-end text:name="__RefHeading___Toc5848_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P489">/*******************************************************************************</text:p><text:p text:style-name="P489"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P489"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P489"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P489"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P489"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P489"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P489"><text:s/>* Copyright (C) 2008-2011 by Todor Balabanov <text:s/>( todor.balabanov@gmail.com ) <text:s text:c="2"/>*</text:p><text:p text:style-name="P489"><text:s/>* <text:s text:c="22"/>Iliyan Zankinski <text:s text:c="2"/>( iliyan_mf@abv.bg ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P489"><text:s/>* <text:s text:c="22"/>Momchil Anachkov <text:s text:c="2"/>( mZer0000@gmail.com ) <text:s text:c="12"/>*</text:p><text:p text:style-name="P489"><text:s/>* <text:s text:c="22"/>Daniel Chutrov <text:s text:c="4"/>( d.chutrov@gmail.com ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P489"><text:s/>* <text:s text:c="22"/>Nikola Simeonov <text:s text:c="3"/>( n.simeonow@gmail.com ) <text:s text:c="10"/>*</text:p><text:p text:style-name="P489"><text:s/>* <text:s text:c="22"/>Galq Cirkalova <text:s text:c="4"/>( galq_cirkalova@abv.bg ) <text:s text:c="9"/>*</text:p><text:p text:style-name="P489"><text:s/>* <text:s text:c="22"/>Ivan Grozev <text:s text:c="7"/>( ivan.iliev.grozev@gmail.com ) <text:s text:c="3"/>*</text:p><text:p text:style-name="P489"><text:s/>* <text:s text:c="22"/>Elisaveta Hristova ( elisaveta.s.hristova@gmail.com ) *</text:p><text:p text:style-name="P489"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P489"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P489"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P489"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P489"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P489"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P489"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P489"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P489"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P489"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P489"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P489"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P489"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P489"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P489"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P489"/><text:p text:style-name="P489">#ifndef TRAINING_SET_H</text:p><text:p text:style-name="P489">#define TRAINING_SET_H</text:p><text:p text:style-name="P489"/><text:p text:style-name="P489">#include &lt;vector&gt;</text:p><text:p text:style-name="P489">#include &lt;iostream&gt;</text:p><text:p text:style-name="P489"/><text:p text:style-name="P489">#include &quot;RateInfo.h&quot;</text:p><text:p text:style-name="P489">#include &quot;TrainingExample.h&quot;</text:p><text:p text:style-name="P489"/><text:p text:style-name="P489">/**</text:p><text:p text:style-name="P489"><text:s/>* Artificial neural network training set.</text:p><text:p text:style-name="P489"><text:s/>*</text:p><text:p text:style-name="P489"><text:s/>* @author Todor Balabanov</text:p><text:p text:style-name="P489"><text:s/>*</text:p><text:p text:style-name="P489"><text:s/>* @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P489"><text:s/>*</text:p><text:p text:style-name="P489"><text:s/>* @date 31 Mar 2009</text:p><text:p text:style-name="P489"><text:s/>*/</text:p><text:p text:style-name="P489">class TrainingSet {</text:p><text:p text:style-name="P489">public:</text:p><text:p text:style-name="P489"/><text:p text:style-name="P489"><text:tab/>/**</text:p><text:p text:style-name="P489"><text:tab/> * Floating point factor to convert from floating point to integer.</text:p><text:p text:style-name="P489"><text:tab/> */</text:p><text:p text:style-name="P489"><text:tab/>static const double FLOATING_POINT_FACTOR;</text:p><text:p text:style-name="P489"/><text:p text:style-name="P489">public:</text:p><text:p text:style-name="P489"/><text:p text:style-name="P489"><text:tab/>/**</text:p><text:p text:style-name="P489"><text:tab/> * Split number digits in separate double values. Devide each double value by 10.</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @param values Output values array.</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @param number Number to be split.</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @author Iliyan Zankinski</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @email iliyan_mf@abv.bg</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @date 27 May 2009</text:p><text:p text:style-name="P489"><text:tab/> */</text:p><text:p text:style-name="P489"><text:tab/>static void splitDigits(ANNIO &amp;values, unsigned long number);</text:p><text:p text:style-name="P489"/><text:p text:style-name="P489"><text:tab/>/**</text:p><text:p text:style-name="P489"><text:tab/> * Merge number digits in sigle number value. Multiply each double value by 10.</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @param values Input values array.</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @return Merged number.</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @author Yasen Ivanov</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:soft-page-break/><text:tab/> * @email jassen@mbox.contact.bg</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @date 07 Jun 2009</text:p><text:p text:style-name="P489"><text:tab/> */</text:p><text:p text:style-name="P489"><text:tab/>static double mergeDigits(ANNIO &amp;values);</text:p><text:p text:style-name="P489"/><text:p text:style-name="P489">private:</text:p><text:p text:style-name="P489"/><text:p text:style-name="P489"><text:tab/>/**</text:p><text:p text:style-name="P489"><text:tab/> * Array with rates.</text:p><text:p text:style-name="P489"><text:tab/> */</text:p><text:p text:style-name="P489"><text:tab/>std::vector&lt;RateInfo&gt; rates;</text:p><text:p text:style-name="P489"/><text:p text:style-name="P489"><text:tab/>/**</text:p><text:p text:style-name="P489"><text:tab/> * Array with training examples.</text:p><text:p text:style-name="P489"><text:tab/> */</text:p><text:p text:style-name="P489"><text:tab/>std::vector&lt;TrainingExample&gt; examples;</text:p><text:p text:style-name="P489"/><text:p text:style-name="P489">private:</text:p><text:p text:style-name="P489"/><text:p text:style-name="P489"><text:tab/>/**</text:p><text:p text:style-name="P489"><text:tab/> * Check for specific time record.</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @return True if time record is found, false otherwise.</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @author Ivan Grozev</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @email Ivan.Iliev.Grozev@gmail.com</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @date 22 May 2009</text:p><text:p text:style-name="P489"><text:tab/> */</text:p><text:p text:style-name="P489"><text:tab/>bool isTimeFound(unsigned int time) const;</text:p><text:p text:style-name="P489"/><text:p text:style-name="P489"><text:tab/>/**</text:p><text:p text:style-name="P489"><text:tab/> * Load splitted digits.</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @param past How many bars in the past.</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @param future How many bars in the future.</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @date 12 Aug 2015</text:p><text:p text:style-name="P489"><text:tab/> */</text:p><text:p text:style-name="P489"><text:tab/>void splitData(int past, int future);</text:p><text:p text:style-name="P489"/><text:p text:style-name="P489">public:</text:p><text:p text:style-name="P489"/><text:p text:style-name="P489"><text:tab/>/**</text:p><text:p text:style-name="P489"><text:tab/> * Constructor for initial creation.</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @date 20 Oct 2011</text:p><text:p text:style-name="P489"><text:tab/> */</text:p><text:p text:style-name="P489"><text:tab/>TrainingSet();</text:p><text:p text:style-name="P489"/><text:p text:style-name="P489"><text:tab/>/**</text:p><text:p text:style-name="P489"><text:tab/> * Constructor for initial creation.</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @param rates Array with rates values.</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @param size Size of all parallel arrays.</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @param past How many bars in the past.</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @param future How many bars in the future.</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @author Iliyan Zankinski</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @email iliyan_mf@abv.bg</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @date 06 Apr 2009</text:p><text:p text:style-name="P489"><text:tab/> */</text:p><text:p text:style-name="P489"><text:tab/>TrainingSet(const std::vector&lt;RateInfo&gt; &amp;rates, int size, int past, int future);</text:p><text:p text:style-name="P489"/><text:p text:style-name="P489"><text:tab/>/**</text:p><text:p text:style-name="P489"><text:tab/> * Parallel arrays size getter.</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @return Arrays size.</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @author Galq Cirkalova</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @email galq_cirkalova@abv.bg</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @date 06 Apr 2009</text:p><text:p text:style-name="P489"><text:tab/> */</text:p><text:p text:style-name="P489"><text:tab/>int getSize() const;</text:p><text:p text:style-name="P489"/><text:p text:style-name="P489"><text:tab/>/**</text:p><text:p text:style-name="P489"><text:tab/> * Rates pointer getter.</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @return Rates pointer.</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @date 23 Sep 2009</text:p><text:p text:style-name="P489"><text:tab/> */</text:p><text:p text:style-name="P489"><text:tab/>std::vector&lt;RateInfo&gt;&amp; getRates();</text:p><text:p text:style-name="P489"/><text:p text:style-name="P489"><text:tab/>/**</text:p><text:p text:style-name="P489"><text:tab/> * Open price at index getter.</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @return Open price at index.</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @author Galq Cirkalova</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @email galq_cirkalova@abv.bg</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @date 06 Apr 2009</text:p><text:p text:style-name="P489"><text:tab/> */</text:p><text:p text:style-name="P489"><text:tab/>double getOpen(int index);</text:p><text:p text:style-name="P489"/><text:p text:style-name="P489"><text:tab/>/**</text:p><text:p text:style-name="P489"><text:tab/> * Close price at index getter.</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @return Close price at index.</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @author Galq Cirkalova</text:p><text:p text:style-name="P489"><text:soft-page-break/><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @email galq_cirkalova@abv.bg</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @date 06 Apr 2009</text:p><text:p text:style-name="P489"><text:tab/> */</text:p><text:p text:style-name="P489"><text:tab/>double getClose(int index);</text:p><text:p text:style-name="P489"/><text:p text:style-name="P489"><text:tab/>/**</text:p><text:p text:style-name="P489"><text:tab/> * Highest price at index getter.</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @return Highest price at index.</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @author Galq Cirkalova</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @email galq_cirkalova@abv.bg</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @date 08 Apr 2009</text:p><text:p text:style-name="P489"><text:tab/> */</text:p><text:p text:style-name="P489"><text:tab/>double getHigh(int index);</text:p><text:p text:style-name="P489"/><text:p text:style-name="P489"><text:tab/>/**</text:p><text:p text:style-name="P489"><text:tab/> * Lowest price at index getter.</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @return Lowest price at index.</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @author Galq Cirkalova</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @email galq_cirkalova@abv.bg</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @date 08 Apr 2009</text:p><text:p text:style-name="P489"><text:tab/> */</text:p><text:p text:style-name="P489"><text:tab/>double getLow(int index);</text:p><text:p text:style-name="P489"/><text:p text:style-name="P489"><text:tab/>/**</text:p><text:p text:style-name="P489"><text:tab/> * UNIX time at index getter.</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @return UNIX time at index.</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @author Galq Cirkalova</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @email galq_cirkalova@abv.bg</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @date 08 Apr 2009</text:p><text:p text:style-name="P489"><text:tab/> */</text:p><text:p text:style-name="P489"><text:tab/>unsigned int getTime(int index);</text:p><text:p text:style-name="P489"/><text:p text:style-name="P489"><text:tab/>/**</text:p><text:p text:style-name="P489"><text:tab/> * Amount bars in the past from the index.</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @param index Starting point.</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @param amount How many bars in the past.</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @return Values of bars.</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @email todor.balabanov@gmial.com</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @date 12 Aug 2015</text:p><text:p text:style-name="P489"><text:tab/> */</text:p><text:p text:style-name="P489"><text:tab/>ANNIO getBarsInPast(int index, int amount);</text:p><text:p text:style-name="P489"/><text:p text:style-name="P489"><text:tab/>/**</text:p><text:p text:style-name="P489"><text:tab/> * Amount bars in the future from the index.</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @param index Starting point.</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @param amount How many bars in the future.</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @return Values of bars.</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @email todor.balabanov@gmial.com</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @date 12 Aug 2015</text:p><text:p text:style-name="P489"><text:tab/> */</text:p><text:p text:style-name="P489"><text:tab/>ANNIO getBarsInFuture(int index, int amount);</text:p><text:p text:style-name="P489"/><text:p text:style-name="P489"><text:tab/>/**</text:p><text:p text:style-name="P489"><text:tab/> * UNIX time at index pointer getter.</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @return UNIX time at index pointer.</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @date 09 Sep 2009</text:p><text:p text:style-name="P489"><text:tab/> */</text:p><text:p text:style-name="P489"><text:tab/>ANNIO&amp; getSplittedInputted(int index);</text:p><text:p text:style-name="P489"/><text:p text:style-name="P489"><text:tab/>/**</text:p><text:p text:style-name="P489"><text:tab/> * Expected value at index pointer getter.</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @return Expected value at index pointer.</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @date 09 Sep 2009</text:p><text:p text:style-name="P489"><text:tab/> */</text:p><text:p text:style-name="P489"><text:tab/>ANNIO&amp; getSplittedExpected(int index);</text:p><text:p text:style-name="P489"/><text:p text:style-name="P489"><text:tab/>/**</text:p><text:p text:style-name="P489"><text:tab/> * Predicted value at index pointer getter.</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @return Predicted value at index pointer.</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @date 09 Sep 2009</text:p><text:p text:style-name="P489"><text:tab/> */</text:p><text:p text:style-name="P489"><text:tab/>ANNIO&amp; getSplittedPredicted(int index);</text:p><text:p text:style-name="P489"/><text:p text:style-name="P489"><text:tab/>/**</text:p><text:p text:style-name="P489"><text:tab/> * Array index at moment in time getter.</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @param atMoment UNIX timestamp value.</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @return Array index at specific time moment.</text:p><text:p text:style-name="P489"><text:soft-page-break/><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @author Galq Cirkalova</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @email galq_cirkalova@abv.bg</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @date 09 Apr 2009</text:p><text:p text:style-name="P489"><text:tab/> */</text:p><text:p text:style-name="P489"><text:tab/>int getIndexAtTime(unsigned int atMoment) const;</text:p><text:p text:style-name="P489"/><text:p text:style-name="P489"><text:tab/>/**</text:p><text:p text:style-name="P489"><text:tab/> * Open price at moment in time getter.</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @return Open price at moment in time.</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @author Galq Cirkalova</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @email galq_cirkalova@abv.bg</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @date 09 Apr 2009</text:p><text:p text:style-name="P489"><text:tab/> */</text:p><text:p text:style-name="P489"><text:tab/>double getOpen(unsigned int atMoment);</text:p><text:p text:style-name="P489"/><text:p text:style-name="P489"><text:tab/>/**</text:p><text:p text:style-name="P489"><text:tab/> * Close price at moment in time getter.</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @return Close price at moment in time.</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @author Galq Cirkalova</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @email galq_cirkalova@abv.bg</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @date 09 Apr 2009</text:p><text:p text:style-name="P489"><text:tab/> */</text:p><text:p text:style-name="P489"><text:tab/>double getClose(unsigned int atMoment);</text:p><text:p text:style-name="P489"/><text:p text:style-name="P489"><text:tab/>/**</text:p><text:p text:style-name="P489"><text:tab/> * Highest price at moment in time getter.</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @return Highest price at moment in time.</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @author Galq Cirkalova</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @email galq_cirkalova@abv.bg</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @date 21 Apr 2009</text:p><text:p text:style-name="P489"><text:tab/> */</text:p><text:p text:style-name="P489"><text:tab/>double getHigh(unsigned int atMoment);</text:p><text:p text:style-name="P489"/><text:p text:style-name="P489"><text:tab/>/**</text:p><text:p text:style-name="P489"><text:tab/> * Lowest price at moment in time getter.</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @return Lowest price at moment in time.</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @author Galq Cirkalova</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @email galq_cirkalova@abv.bg</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @date 21 Apr 2009</text:p><text:p text:style-name="P489"><text:tab/> */</text:p><text:p text:style-name="P489"><text:tab/>double getLow(unsigned int atMoment);</text:p><text:p text:style-name="P489"/><text:p text:style-name="P489"><text:tab/>/**</text:p><text:p text:style-name="P489"><text:tab/> * Destructor. Free memory.</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @author Iliyan Zankinski</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @email iliyan_mf@abv.bg</text:p><text:p text:style-name="P489"><text:tab/> *</text:p><text:p text:style-name="P489"><text:tab/> * @date 27 Apr 2009</text:p><text:p text:style-name="P489"><text:tab/> */</text:p><text:p text:style-name="P489"><text:tab/>virtual ~TrainingSet();</text:p><text:p text:style-name="P489"/><text:p text:style-name="P489"><text:tab/>friend std::ostream&amp; operator&lt;&lt;(std::ostream &amp;out, TrainingSet &amp;ts);</text:p><text:p text:style-name="P489">};</text:p><text:p text:style-name="P489"/><text:p text:style-name="P489">/**</text:p><text:p text:style-name="P489"><text:s/>* Output operator redefinition.</text:p><text:p text:style-name="P489"><text:s/>*</text:p><text:p text:style-name="P489"><text:s/>* @param out Output stream.</text:p><text:p text:style-name="P489"><text:s/>*</text:p><text:p text:style-name="P489"><text:s/>* @param ts Training set instance.</text:p><text:p text:style-name="P489"><text:s/>*</text:p><text:p text:style-name="P489"><text:s/>* @return Output stream.</text:p><text:p text:style-name="P489"><text:s/>*</text:p><text:p text:style-name="P489"><text:s/>* @author Iliyan Zankinski</text:p><text:p text:style-name="P489"><text:s/>*</text:p><text:p text:style-name="P489"><text:s/>* @email iliyan_mf@abv.bg</text:p><text:p text:style-name="P489"><text:s/>*</text:p><text:p text:style-name="P489"><text:s/>* @date 23 Aug 2009</text:p><text:p text:style-name="P489"><text:s/>*/</text:p><text:p text:style-name="P489">std::ostream&amp; operator&lt;&lt;(std::ostream &amp;out, TrainingSet &amp;ts);</text:p><text:p text:style-name="P489"/><text:p text:style-name="P489">#endif</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5850_1486593966"/><text:s text:c="4"/>WeightsMatrix.cpp<text:bookmark-end text:name="__RefHeading___Toc5850_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P490">/*******************************************************************************</text:p><text:p text:style-name="P490"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P490"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P490"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P490"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P490"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P490"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P490"><text:s/>* Copyright (C) 2008-2011 by Todor Balabanov <text:s/>( todor.balabanov@gmail.com ) <text:s text:c="2"/>*</text:p><text:p text:style-name="P490"><text:s/>* <text:s text:c="22"/>Iliyan Zankinski <text:s text:c="2"/>( iliyan_mf@abv.bg ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P490"><text:s/>* <text:s text:c="22"/>Momchil Anachkov <text:s text:c="2"/>( mZer0000@gmail.com ) <text:s text:c="12"/>*</text:p><text:p text:style-name="P490"><text:s/>* <text:s text:c="22"/>Daniel Chutrov <text:s text:c="4"/>( d.chutrov@gmail.com ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P490"><text:s/>* <text:s text:c="22"/>Nikola Simeonov <text:s text:c="3"/>( n.simeonow@gmail.com ) <text:s text:c="10"/>*</text:p><text:p text:style-name="P490"><text:s/>* <text:s text:c="22"/>Galq Cirkalova <text:s text:c="4"/>( galq_cirkalova@abv.bg ) <text:s text:c="9"/>*</text:p><text:p text:style-name="P490"><text:s/>* <text:s text:c="22"/>Ivan Grozev <text:s text:c="7"/>( ivan.iliev.grozev@gmail.com ) <text:s text:c="3"/>*</text:p><text:p text:style-name="P490"><text:s/>* <text:s text:c="22"/>Elisaveta Hristova ( elisaveta.s.hristova@gmail.com ) *</text:p><text:p text:style-name="P490"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P490"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P490"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P490"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P490"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P490"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P490"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P490"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P490"><text:soft-page-break/><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P490"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P490"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P490"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P490"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P490"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P490"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P490"/><text:p text:style-name="P490">#include &quot;WeightsMatrix.h&quot;</text:p><text:p text:style-name="P490"/><text:p text:style-name="P490">WeightsMatrix::WeightsMatrix() : GraphMatrix() {</text:p><text:p text:style-name="P490">}</text:p><text:p text:style-name="P490"/><text:p text:style-name="P490">WeightsMatrix::WeightsMatrix(int size) : GraphMatrix(size) {</text:p><text:p text:style-name="P490">}</text:p><text:p text:style-name="P490"/><text:p text:style-name="P490">WeightsMatrix::WeightsMatrix(const WeightsMatrix &amp;weights) : GraphMatrix(weights) {</text:p><text:p text:style-name="P490">}</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5852_1486593966"/><text:s text:c="4"/>WeightsMatrix.h<text:bookmark-end text:name="__RefHeading___Toc5852_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P491">/*******************************************************************************</text:p><text:p text:style-name="P491"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P491"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P491"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P491"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P491"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P491"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P491"><text:s/>* Copyright (C) 2008-2011 by Todor Balabanov <text:s/>( todor.balabanov@gmail.com ) <text:s text:c="2"/>*</text:p><text:p text:style-name="P491"><text:s/>* <text:s text:c="22"/>Iliyan Zankinski <text:s text:c="2"/>( iliyan_mf@abv.bg ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P491"><text:s/>* <text:s text:c="22"/>Momchil Anachkov <text:s text:c="2"/>( mZer0000@gmail.com ) <text:s text:c="12"/>*</text:p><text:p text:style-name="P491"><text:s/>* <text:s text:c="22"/>Daniel Chutrov <text:s text:c="4"/>( d.chutrov@gmail.com ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P491"><text:s/>* <text:s text:c="22"/>Nikola Simeonov <text:s text:c="3"/>( n.simeonow@gmail.com ) <text:s text:c="10"/>*</text:p><text:p text:style-name="P491"><text:s/>* <text:s text:c="22"/>Galq Cirkalova <text:s text:c="4"/>( galq_cirkalova@abv.bg ) <text:s text:c="9"/>*</text:p><text:p text:style-name="P491"><text:s/>* <text:s text:c="22"/>Ivan Grozev <text:s text:c="7"/>( ivan.iliev.grozev@gmail.com ) <text:s text:c="3"/>*</text:p><text:p text:style-name="P491"><text:s/>* <text:s text:c="22"/>Elisaveta Hristova ( elisaveta.s.hristova@gmail.com ) *</text:p><text:p text:style-name="P491"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P491"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P491"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P491"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P491"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P491"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P491"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P491"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P491"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P491"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P491"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P491"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P491"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P491"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P491"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P491"/><text:p text:style-name="P491">#ifndef WEIGHTS_MATRIX_H</text:p><text:p text:style-name="P491">#define WEIGHTS_MATRIX_H</text:p><text:p text:style-name="P491"/><text:p text:style-name="P491">#include &quot;GraphMatrix.h&quot;</text:p><text:p text:style-name="P491"/><text:p text:style-name="P491">/**</text:p><text:p text:style-name="P491"><text:s/>* ANN typology graph adjacency matrix class.</text:p><text:p text:style-name="P491"><text:s/>*</text:p><text:p text:style-name="P491"><text:s/>* @author Todor Balabanov</text:p><text:p text:style-name="P491"><text:s/>*</text:p><text:p text:style-name="P491"><text:s/>* @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P491"><text:s/>*</text:p><text:p text:style-name="P491"><text:s/>* @date 03 Aug 2011</text:p><text:p text:style-name="P491"><text:s/>*/</text:p><text:p text:style-name="P491">class WeightsMatrix : public GraphMatrix {</text:p><text:p text:style-name="P491"/><text:p text:style-name="P491">public:</text:p><text:p text:style-name="P491"/><text:p text:style-name="P491"><text:tab/>/**</text:p><text:p text:style-name="P491"><text:tab/> * Constructor without parameters.</text:p><text:p text:style-name="P491"><text:tab/> *</text:p><text:p text:style-name="P491"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P491"><text:tab/> *</text:p><text:p text:style-name="P491"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P491"><text:tab/> *</text:p><text:p text:style-name="P491"><text:tab/> * @date 03 Aug 2011</text:p><text:p text:style-name="P491"><text:tab/> */</text:p><text:p text:style-name="P491"><text:tab/>WeightsMatrix();</text:p><text:p text:style-name="P491"/><text:p text:style-name="P491"><text:tab/>/**</text:p><text:p text:style-name="P491"><text:tab/> * Class constructor. Memory allocation and internal variables initializaton.</text:p><text:p text:style-name="P491"><text:tab/> *</text:p><text:p text:style-name="P491"><text:tab/> * @param size Size of the matrix.</text:p><text:p text:style-name="P491"><text:tab/> *</text:p><text:p text:style-name="P491"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P491"><text:tab/> *</text:p><text:p text:style-name="P491"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P491"><text:tab/> *</text:p><text:p text:style-name="P491"><text:tab/> * @date 03 Aug 2011</text:p><text:p text:style-name="P491"><text:tab/> */</text:p><text:p text:style-name="P491"><text:tab/>WeightsMatrix(int size);</text:p><text:p text:style-name="P491"/><text:p text:style-name="P491"><text:tab/>/**</text:p><text:p text:style-name="P491"><text:tab/> * Copy constructor.</text:p><text:p text:style-name="P491"><text:tab/> *</text:p><text:p text:style-name="P491"><text:tab/> * @param graph Instance to be copied.</text:p><text:p text:style-name="P491"><text:tab/> *</text:p><text:p text:style-name="P491"><text:tab/> * @author Todor Balabanov</text:p><text:p text:style-name="P491"><text:tab/> *</text:p><text:p text:style-name="P491"><text:tab/> * @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P491"><text:tab/> *</text:p><text:p text:style-name="P491"><text:tab/> * @date 03 Aug 2011</text:p><text:p text:style-name="P491"><text:tab/> */</text:p><text:p text:style-name="P491"><text:tab/>WeightsMatrix(const WeightsMatrix &amp;weights);</text:p><text:p text:style-name="P491">};</text:p><text:p text:style-name="P491"/><text:p text:style-name="P491">#endif</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5854_1486593966"/><text:s text:c="4"/>build.bat<text:bookmark-end text:name="__RefHeading___Toc5854_1486593966"/></text:p><text:p text:style-name="P492"/><text:p text:style-name="P493"><text:soft-page-break/>@echo off</text:p><text:p text:style-name="P493"/><text:p text:style-name="P493">rem ###############################################################################</text:p><text:p text:style-name="P493">rem # <text:s text:c="76"/>#</text:p><text:p text:style-name="P493">rem # VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>#</text:p><text:p text:style-name="P493">rem # Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>#</text:p><text:p text:style-name="P493">rem # Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>#</text:p><text:p text:style-name="P493">rem # the capital of Bulgaria. <text:s text:c="51"/>#</text:p><text:p text:style-name="P493">rem # <text:s text:c="76"/>#</text:p><text:p text:style-name="P493">rem # Copyright (C) 2008-2009 by Todor Balabanov <text:s/>( tdb@tbsoft.eu ) <text:s text:c="14"/>#</text:p><text:p text:style-name="P493">rem # <text:s text:c="27"/>Iliyan Zankinski ( iliyan_mf@abv.bg ) <text:s text:c="11"/>#</text:p><text:p text:style-name="P493">rem # <text:s text:c="27"/>Galq Cirkalova <text:s text:c="2"/>( galq_cirkalova@abv.bg ) <text:s text:c="6"/>#</text:p><text:p text:style-name="P493">rem # <text:s text:c="27"/>Ivan Grozev <text:s text:c="5"/>( ivan.iliev.grozev@gmail.com ) #</text:p><text:p text:style-name="P493">rem # <text:s text:c="76"/>#</text:p><text:p text:style-name="P493">rem # This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>#</text:p><text:p text:style-name="P493">rem # it under the terms of the GNU General Public License as published by <text:s text:c="7"/>#</text:p><text:p text:style-name="P493">rem # the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>#</text:p><text:p text:style-name="P493">rem # (at your option) any later version. <text:s text:c="40"/>#</text:p><text:p text:style-name="P493">rem # <text:s text:c="76"/>#</text:p><text:p text:style-name="P493">rem # This program is distributed in the hope that it will be useful, <text:s text:c="12"/>#</text:p><text:p text:style-name="P493">rem # but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>#</text:p><text:p text:style-name="P493">rem # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>#</text:p><text:p text:style-name="P493">rem # GNU General Public License for more details. <text:s text:c="31"/>#</text:p><text:p text:style-name="P493">rem # <text:s text:c="76"/>#</text:p><text:p text:style-name="P493">rem # You should have received a copy of the GNU General Public License <text:s text:c="10"/>#</text:p><text:p text:style-name="P493">rem # along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>#</text:p><text:p text:style-name="P493">rem # <text:s text:c="76"/>#</text:p><text:p text:style-name="P493">rem ###############################################################################</text:p><text:p text:style-name="P493"/><text:p text:style-name="P493">rem ############################################################################</text:p><text:p text:style-name="P493">rem # Check input parameters. <text:s text:c="49"/>#</text:p><text:p text:style-name="P493">rem ############################################################################</text:p><text:p text:style-name="P493">if &quot;%~1&quot;==&quot;&quot; goto end</text:p><text:p text:style-name="P493">if &quot;%~2&quot;==&quot;&quot; goto end</text:p><text:p text:style-name="P493"/><text:p text:style-name="P493">rem ############################################################################</text:p><text:p text:style-name="P493">rem # Go to start build directory. <text:s text:c="44"/>#</text:p><text:p text:style-name="P493">rem ############################################################################</text:p><text:p text:style-name="P493">rem %~d3</text:p><text:p text:style-name="P493">rem cd %~dp3</text:p><text:p text:style-name="P493"/><text:p text:style-name="P493">rem ############################################################################</text:p><text:p text:style-name="P493">rem # Create web root directories. <text:s text:c="44"/>#</text:p><text:p text:style-name="P493">rem ############################################################################</text:p><text:p text:style-name="P493">md &quot;%~dp2common\&quot;</text:p><text:p text:style-name="P493">md &quot;%~dp2logic\&quot;</text:p><text:p text:style-name="P493">md &quot;%~dp2images\&quot;</text:p><text:p text:style-name="P493">md &quot;%~dp2ajax\&quot;</text:p><text:p text:style-name="P493">md &quot;%~dp2ajax\images\&quot;</text:p><text:p text:style-name="P493">md &quot;%~dp2backend\&quot;</text:p><text:p text:style-name="P493"/><text:p text:style-name="P493">rem ############################################################################</text:p><text:p text:style-name="P493">rem # Deploy server side scripts. The parameter %2 PHP Apache htdocs folder. <text:s text:c="2"/>#</text:p><text:p text:style-name="P493">rem ############################################################################</text:p><text:p text:style-name="P493">del &quot;%~dp2common\*.php&quot;</text:p><text:p text:style-name="P493">del &quot;%~dp2logic\*.php&quot;</text:p><text:p text:style-name="P493">copy ..\server\common\*.php &quot;%~dp2common\&quot;</text:p><text:p text:style-name="P493">copy ..\server\logic\*.php &quot;%~dp2logic\&quot;</text:p><text:p text:style-name="P493"/><text:p text:style-name="P493">rem ############################################################################</text:p><text:p text:style-name="P493">rem # Deploy website scripts. The parameter %2 PHP Apache htdocs folder. <text:s text:c="6"/>#</text:p><text:p text:style-name="P493">rem ############################################################################</text:p><text:p text:style-name="P493">del &quot;%~dp2images\*.jpg&quot;</text:p><text:p text:style-name="P493">del &quot;%~dp2images\*.png&quot;</text:p><text:p text:style-name="P493">del &quot;%~dp2\*.php&quot;</text:p><text:p text:style-name="P493">del &quot;%~dp2\*.php3&quot;</text:p><text:p text:style-name="P493">del &quot;%~dp2\*.css&quot;</text:p><text:p text:style-name="P493">copy ..\website\images\*.jpg &quot;%~dp2images\&quot;</text:p><text:p text:style-name="P493">copy ..\website\images\*.png &quot;%~dp2images\&quot;</text:p><text:p text:style-name="P493">copy ..\website\*.php3 &quot;%~dp2&quot;</text:p><text:p text:style-name="P493">copy ..\website\*.css &quot;%~dp2&quot;</text:p><text:p text:style-name="P493">rename &quot;%~dp2\*.php3&quot; *.php</text:p><text:p text:style-name="P493">del &quot;%~dp2\*.php3&quot;</text:p><text:p text:style-name="P493"/><text:p text:style-name="P493">rem ############################################################################</text:p><text:p text:style-name="P493">rem # Deploy AJAX client scripts. The parameter %2 PHP Apache htdocs folder. <text:s text:c="2"/>#</text:p><text:p text:style-name="P493">rem ############################################################################</text:p><text:p text:style-name="P493">rem del &quot;%~dp2ajax\*.js&quot;</text:p><text:p text:style-name="P493">rem del &quot;%~dp2ajax\*.html&quot;</text:p><text:p text:style-name="P493">rem del &quot;%~dp2ajax\*.css&quot;</text:p><text:p text:style-name="P493">rem del &quot;%~dp2ajax\images\*.jpg&quot;</text:p><text:p text:style-name="P493">rem del &quot;%~dp2ajax\images\*.gif&quot;</text:p><text:p text:style-name="P493">rem copy ..\ajax\source\images\*.jpg &quot;%~dp2ajax\images\&quot;</text:p><text:p text:style-name="P493">rem copy ..\ajax\source\images\*.gif &quot;%~dp2ajax\images\&quot;</text:p><text:p text:style-name="P493">rem copy ..\ajax\source\*.js &quot;%~dp2ajax\&quot;</text:p><text:p text:style-name="P493">rem copy ..\ajax\source\*.html &quot;%~dp2ajax\&quot;</text:p><text:p text:style-name="P493">rem copy ..\ajax\source\*.css &quot;%~dp2ajax\&quot;</text:p><text:p text:style-name="P493"/><text:p text:style-name="P493">rem ############################################################################</text:p><text:p text:style-name="P493">rem # Change working directory to binaries. <text:s text:c="35"/>#</text:p><text:p text:style-name="P493">rem ############################################################################</text:p><text:p text:style-name="P493">md binaries</text:p><text:p text:style-name="P493">cd binaries</text:p><text:p text:style-name="P493"/><text:p text:style-name="P493">rem ############################################################################</text:p><text:p text:style-name="P493">rem # Clean to binaries directory. <text:s text:c="44"/>#</text:p><text:p text:style-name="P493">rem ############################################################################</text:p><text:p text:style-name="P493">del *.o</text:p><text:p text:style-name="P493">del *.a</text:p><text:p text:style-name="P493">del *.def</text:p><text:p text:style-name="P493">del VitoshaTrade.exe</text:p><text:p text:style-name="P493"/><text:p text:style-name="P493">rem ############################################################################</text:p><text:p text:style-name="P493">rem # Compiling. <text:s text:c="62"/>#</text:p><text:p text:style-name="P493">rem ############################################################################</text:p><text:p text:style-name="P493">SET INCLUDES = -I../../client/source/</text:p><text:p text:style-name="P493">rem g++ %INCLUDES% -D NDEBUG -c ../../client/source/libjson/_internal/Source/*.cpp -DBUILDING_DLL=1 1&gt;nul 2&gt;nul</text:p><text:p text:style-name="P493">g++ %INCLUDES% -D NDEBUG -c -w ../../client/source/*.cpp -DBUILDING_DLL=1</text:p><text:p text:style-name="P493">g++ %INCLUDES% -D NDEBUG -c -w ../source/*.cpp -DBUILDING_DLL=1</text:p><text:p text:style-name="P493"/><text:p text:style-name="P493">rem ############################################################################</text:p><text:p text:style-name="P493">rem # Linking. <text:s text:c="64"/>#</text:p><text:p text:style-name="P493">rem ############################################################################</text:p><text:p text:style-name="P493">g++ -o VitoshaTrade.exe *.o ../libraries/libcurldll.a ../libraries/libws2_32.a ../libraries/libpdh.a ../libraries/libjson.a -lstdc++</text:p><text:p text:style-name="P493"/><text:p text:style-name="P493">rem ############################################################################</text:p><text:p text:style-name="P493">rem # Deploy binaries. The parameter %~dp1 is MT4 install folder. <text:s text:c="13"/>#</text:p><text:p text:style-name="P493">rem ############################################################################</text:p><text:p text:style-name="P493">md &quot;%~dp1MQL4\Indicators\VitoshaTrade&quot;</text:p><text:p text:style-name="P493">copy *.exe &quot;%~dp1MQL4\Indicators\VitoshaTrade\&quot;</text:p><text:p text:style-name="P493">copy ..\libraries\libcurl.dll &quot;%~dp1MQL4\Indicators\VitoshaTrade\&quot;</text:p><text:p text:style-name="P493">copy ..\source\*.mq4 &quot;%~dp1MQL4\Indicators\VitoshaTrade\&quot;</text:p><text:p text:style-name="P493"/><text:p text:style-name="P493">rem ############################################################################</text:p><text:p text:style-name="P493">rem # Clean to binaries directory. <text:s text:c="44"/>#</text:p><text:p text:style-name="P493"><text:soft-page-break/>rem ############################################################################</text:p><text:p text:style-name="P493">del *.o</text:p><text:p text:style-name="P493">del *.a</text:p><text:p text:style-name="P493">del *.def</text:p><text:p text:style-name="P493">del VitoshaTrade.exe</text:p><text:p text:style-name="P493"/><text:p text:style-name="P493">rem ############################################################################</text:p><text:p text:style-name="P493">rem # Compile Java based back end system. <text:s text:c="37"/>#</text:p><text:p text:style-name="P493">rem ############################################################################</text:p><text:p text:style-name="P493">md ..\..\backend\binaries</text:p><text:p text:style-name="P493">cd ..\..\backend\binaries\</text:p><text:p text:style-name="P493">javac -d .\ ..\source\*.java</text:p><text:p text:style-name="P493">jar cvf VitoshaTradeUnsigned.jar *.class</text:p><text:p text:style-name="P493">jarsigner -keystore ..\keys\VitoshaTrade -storepass VitoshaTrade -keypass VitoshaTrade -signedjar VitoshaTrade.jar VitoshaTradeUnsigned.jar VitoshaTrade</text:p><text:p text:style-name="P493"/><text:p text:style-name="P493">rem ############################################################################</text:p><text:p text:style-name="P493">rem # Depoly Java based back end system. <text:s text:c="38"/>#</text:p><text:p text:style-name="P493">rem ############################################################################</text:p><text:p text:style-name="P493">del &quot;%~dp2\backend\*.jar&quot;</text:p><text:p text:style-name="P493">del &quot;%~dp2\backend\*.cer&quot;</text:p><text:p text:style-name="P493">del &quot;%~dp2\backend\*.html&quot;</text:p><text:p text:style-name="P493">copy .\VitoshaTrade.jar &quot;%~dp2\backend\&quot;</text:p><text:p text:style-name="P493">copy ..\keys\VitoshaTrade.cer &quot;%~dp2\backend\&quot;</text:p><text:p text:style-name="P493">copy ..\source\*.html &quot;%~dp2\backend\&quot;</text:p><text:p text:style-name="P493"/><text:p text:style-name="P493">rem ############################################################################</text:p><text:p text:style-name="P493">rem # Clean to binaries directory. <text:s text:c="44"/>#</text:p><text:p text:style-name="P493">rem ############################################################################</text:p><text:p text:style-name="P493">del *.class</text:p><text:p text:style-name="P493">del *.jar</text:p><text:p text:style-name="P493"/><text:p text:style-name="P493">rem ############################################################################</text:p><text:p text:style-name="P493">rem # Build indicator. The parameter %~d1 is MT4 install drive. <text:s text:c="15"/>#</text:p><text:p text:style-name="P493">rem ############################################################################</text:p><text:p text:style-name="P493">%~d1</text:p><text:p text:style-name="P493">cd &quot;%~dp1MQL4\Indicators\VitoshaTrade\&quot;</text:p><text:p text:style-name="P493">rem &quot;%~dp1mql.exe&quot; VitoshaTrade.mq4</text:p><text:p text:style-name="P493">&quot;%~dp1mql64.exe&quot; VitoshaTrade.mq4</text:p><text:p text:style-name="P493"/><text:p text:style-name="P493">rem ############################################################################</text:p><text:p text:style-name="P493">rem # End of the srcipt if there are no input parameters. <text:s text:c="21"/>#</text:p><text:p text:style-name="P493">rem ############################################################################</text:p><text:p text:style-name="P493">:end</text:p><text:p text:style-name="P493"/><text:p text:style-name="P493">rem ############################################################################</text:p><text:p text:style-name="P493">rem # Stop screen. <text:s text:c="60"/>#</text:p><text:p text:style-name="P493">rem ############################################################################</text:p><text:p text:style-name="P493">pause</text:p><text:p text:style-name="P493"/><text:p text:style-name="P493">@echo on</text:p><text:p text:style-name="P492"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5856_1486593966"/><text:s text:c="4"/>vt.bat<text:bookmark-end text:name="__RefHeading___Toc5856_1486593966"/></text:p><text:p text:style-name="P492"/><text:p text:style-name="P494">C:</text:p><text:p text:style-name="P494">cd C:\Users\todor\Desktop\VT\mql4\</text:p><text:p text:style-name="P494">build.bat C:\Programs\MetaTrader_Admiral_Markets_AS\ C:\Programs\XAMPP\xampp\htdocs\</text:p><text:p text:style-name="P494">pause</text:p><text:p text:style-name="P492"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5858_1486593966"/><text:s text:c="4"/>VitoshaTrade.cpp<text:bookmark-end text:name="__RefHeading___Toc5858_1486593966"/></text:p><text:p text:style-name="P492"/><text:p text:style-name="P494">/*******************************************************************************</text:p><text:p text:style-name="P494"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P494"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P494"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P494"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P494"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P494"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P494"><text:s/>* Copyright (C) 2008-2011 by Todor Balabanov <text:s/>( tdb@tbsoft.eu ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P494"><text:s/>* <text:s text:c="22"/>Iliyan Zankinski <text:s text:c="2"/>( iliyan_mf@abv.bg ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P494"><text:s/>* <text:s text:c="22"/>Momchil Anachkov <text:s text:c="2"/>( mZer0000@gmail.com ) <text:s text:c="12"/>*</text:p><text:p text:style-name="P494"><text:s/>* <text:s text:c="22"/>Daniel Chutrov <text:s text:c="4"/>( d.chutrov@gmail.com ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P494"><text:s/>* <text:s text:c="22"/>Nikola Simeonov <text:s text:c="3"/>( n.simeonow@gmail.com ) <text:s text:c="10"/>*</text:p><text:p text:style-name="P494"><text:s/>* <text:s text:c="22"/>Galq Cirkalova <text:s text:c="4"/>( galq_cirkalova@abv.bg ) <text:s text:c="9"/>*</text:p><text:p text:style-name="P494"><text:s/>* <text:s text:c="22"/>Ivan Grozev <text:s text:c="7"/>( ivan.iliev.grozev@gmail.com ) <text:s text:c="3"/>*</text:p><text:p text:style-name="P494"><text:s/>* <text:s text:c="22"/>Elisaveta Hristova ( elisaveta.s.hristova@gmail.com ) *</text:p><text:p text:style-name="P494"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P494"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P494"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P494"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P494"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P494"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P494"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P494"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P494"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P494"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P494"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P494"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P494"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P494"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P494"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494">/**</text:p><text:p text:style-name="P494"><text:s/>* Exclude rarely-used parts from Windows headers.</text:p><text:p text:style-name="P494"><text:s/>*/</text:p><text:p text:style-name="P494">#define VC_EXTRALEAN</text:p><text:p text:style-name="P494">#define WIN32_LEAN_AND_MEAN</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494">#include &lt;windows.h&gt;</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494">#include &lt;vector&gt;</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494">#include &lt;time.h&gt;</text:p><text:p text:style-name="P494">#include &lt;stdio.h&gt;</text:p><text:p text:style-name="P494">#include &lt;stdlib.h&gt;</text:p><text:p text:style-name="P494">#include &lt;string.h&gt;</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494">#include &quot;../../client/source/Trainer.h&quot;</text:p><text:p text:style-name="P494">#include &quot;../../client/source/RateInfo.h&quot;</text:p><text:p text:style-name="P494">#include &quot;../../client/source/ModelParameters.h&quot;</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494">#include &quot;pdh.h&quot;</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494"><text:soft-page-break/>using namespace std;</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494">/**</text:p><text:p text:style-name="P494"><text:s/>* DLL functions prototype style.</text:p><text:p text:style-name="P494"><text:s/>*/</text:p><text:p text:style-name="P494">#define MT4_EXPFUNC __declspec(dllexport)</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494">/**</text:p><text:p text:style-name="P494"><text:s/>* Control running of the thread.</text:p><text:p text:style-name="P494"><text:s/>*/</text:p><text:p text:style-name="P494">bool isRunning = false;</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494">/**</text:p><text:p text:style-name="P494"><text:s/>* Trainer instance.</text:p><text:p text:style-name="P494"><text:s/>*/</text:p><text:p text:style-name="P494">static Trainer *trainer = NULL;</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494">/**</text:p><text:p text:style-name="P494"><text:s/>* Trainer instance.</text:p><text:p text:style-name="P494"><text:s/>*/</text:p><text:p text:style-name="P494">static double predictedValue = 0.0;</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494">/**</text:p><text:p text:style-name="P494"><text:s/>* Calculating model initial parameters.</text:p><text:p text:style-name="P494"><text:s/>*/</text:p><text:p text:style-name="P494">static ModelParameters init;</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494">/**</text:p><text:p text:style-name="P494"><text:s/>* Update training set helper function.</text:p><text:p text:style-name="P494"><text:s/>*</text:p><text:p text:style-name="P494"><text:s/>* @param values Rates vector.</text:p><text:p text:style-name="P494"><text:s/>*</text:p><text:p text:style-name="P494"><text:s/>* @author Todor Balabanov</text:p><text:p text:style-name="P494"><text:s/>*</text:p><text:p text:style-name="P494"><text:s/>* @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P494"><text:s/>*</text:p><text:p text:style-name="P494"><text:s/>* @date 11 Aug 2015</text:p><text:p text:style-name="P494"><text:s/>*/</text:p><text:p text:style-name="P494">void updateTrainingSet(std::vector&lt;RateInfo&gt; &amp;values) {</text:p><text:p text:style-name="P494"><text:tab/>static bool firstTime = true;</text:p><text:p text:style-name="P494"><text:tab/>if (firstTime == true) {</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>try {</text:p><text:p text:style-name="P494"><text:tab/><text:tab/><text:tab/>if (trainer != NULL) {</text:p><text:p text:style-name="P494"><text:tab/><text:tab/><text:tab/><text:tab/>trainer-&gt;updateTrainingSet(values, values.size());</text:p><text:p text:style-name="P494"><text:tab/><text:tab/><text:tab/>} else {</text:p><text:p text:style-name="P494"><text:tab/><text:tab/><text:tab/><text:tab/>isRunning = false;</text:p><text:p text:style-name="P494"><text:tab/><text:tab/><text:tab/><text:tab/>fprintf(stderr, &quot;%s %s\n&quot;, &quot; <text:s text:c="13"/>VitoshaTrade00187&quot;, &quot;Calculation process stopped.&quot;);</text:p><text:p text:style-name="P494"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>} catch (const char* message) {</text:p><text:p text:style-name="P494"><text:tab/><text:tab/><text:tab/>isRunning = false;</text:p><text:p text:style-name="P494"><text:tab/><text:tab/><text:tab/>fprintf(stderr, &quot;%s %s\n&quot;, &quot; <text:s text:c="13"/>VitoshaTrade00188&quot;, message);</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>} catch (...) {</text:p><text:p text:style-name="P494"><text:tab/><text:tab/><text:tab/>isRunning = false;</text:p><text:p text:style-name="P494"><text:tab/><text:tab/><text:tab/>fprintf(stderr, &quot;%s %s\n&quot;, &quot; <text:s text:c="13"/>VitoshaTrade00189&quot;, &quot;Calculation process stopped.&quot;);</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494"><text:tab/><text:tab/>firstTime = false;</text:p><text:p text:style-name="P494"><text:tab/>} else {</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>try {</text:p><text:p text:style-name="P494"><text:tab/><text:tab/><text:tab/>if (trainer != NULL) {</text:p><text:p text:style-name="P494"><text:tab/><text:tab/><text:tab/><text:tab/>trainer-&gt;updateTrainingSet(values, values.size());</text:p><text:p text:style-name="P494"><text:tab/><text:tab/><text:tab/>} else {</text:p><text:p text:style-name="P494"><text:tab/><text:tab/><text:tab/><text:tab/>isRunning = false;</text:p><text:p text:style-name="P494"><text:tab/><text:tab/><text:tab/><text:tab/>fprintf(stderr, &quot;%s %s\n&quot;, &quot; <text:s text:c="13"/>VitoshaTrade00190&quot;, &quot;Calculation process stopped.&quot;);</text:p><text:p text:style-name="P494"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>} catch (const char* message) {</text:p><text:p text:style-name="P494"><text:tab/><text:tab/><text:tab/>isRunning = false;</text:p><text:p text:style-name="P494"><text:tab/><text:tab/><text:tab/>fprintf(stderr, &quot;%s %s\n&quot;, &quot; <text:s text:c="13"/>VitoshaTrade00191&quot;, message);</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>} catch (...) {</text:p><text:p text:style-name="P494"><text:tab/><text:tab/><text:tab/>isRunning = false;</text:p><text:p text:style-name="P494"><text:tab/><text:tab/><text:tab/>fprintf(stderr, &quot;%s %s\n&quot;, &quot; <text:s text:c="13"/>VitoshaTrade00192&quot;, &quot;Calculation process stopped.&quot;);</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P494"><text:tab/>}</text:p><text:p text:style-name="P494">}</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494">/**</text:p><text:p text:style-name="P494"><text:s/>* Read from file the rates.</text:p><text:p text:style-name="P494"><text:s/>*</text:p><text:p text:style-name="P494"><text:s/>* @author Todor Balabanov</text:p><text:p text:style-name="P494"><text:s/>*</text:p><text:p text:style-name="P494"><text:s/>* @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P494"><text:s/>*</text:p><text:p text:style-name="P494"><text:s/>* @date 11 Aug 2015</text:p><text:p text:style-name="P494"><text:s/>*/</text:p><text:p text:style-name="P494">void checkRates() {</text:p><text:p text:style-name="P494"><text:tab/>FILE *file = fopen(&quot;rates.txt&quot;, &quot;rt&quot;);</text:p><text:p text:style-name="P494"><text:tab/>if(file == NULL) {</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>isRunning = false;</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>return;</text:p><text:p text:style-name="P494"><text:tab/>}</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494"><text:tab/>static double value;</text:p><text:p text:style-name="P494"><text:tab/>static int size;</text:p><text:p text:style-name="P494"><text:tab/>fscanf(file, &quot;%d&quot;, &amp;size);</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494"><text:tab/>/*</text:p><text:p text:style-name="P494"><text:tab/> * 0 - time</text:p><text:p text:style-name="P494"><text:tab/> * 1 - open</text:p><text:p text:style-name="P494"><text:tab/> * 2 - low</text:p><text:p text:style-name="P494"><text:tab/> * 3 - high</text:p><text:p text:style-name="P494"><text:tab/> * 4 - close</text:p><text:p text:style-name="P494"><text:tab/> * 5 - volume</text:p><text:p text:style-name="P494"><text:tab/> */</text:p><text:p text:style-name="P494"><text:tab/>std::vector&lt;RateInfo&gt; values( size );</text:p><text:p text:style-name="P494"><text:tab/>for(int i=0; i&lt;size; i++) {</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>fscanf(file, &quot;%lf&quot;, &amp;value);</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>values[i].time = value;</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>fscanf(file, &quot;%lf&quot;, &amp;value);</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>values[i].open = value;</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>fscanf(file, &quot;%lf&quot;, &amp;value);</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>values[i].low = value;</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>fscanf(file, &quot;%lf&quot;, &amp;value);</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>values[i].high = value;</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>fscanf(file, &quot;%lf&quot;, &amp;value);</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>values[i].close = value;</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>fscanf(file, &quot;%lf&quot;, &amp;value);</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>values[i].volume = value;</text:p><text:p text:style-name="P494"><text:tab/>}</text:p><text:p text:style-name="P494"><text:tab/>fclose(file);</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494"><text:tab/>updateTrainingSet(values);</text:p><text:p text:style-name="P494">}</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494">/**</text:p><text:p text:style-name="P494"><text:s/>* Write to file the prediction.</text:p><text:p text:style-name="P494"><text:soft-page-break/><text:s/>*</text:p><text:p text:style-name="P494"><text:s/>* @author Todor Balabanov</text:p><text:p text:style-name="P494"><text:s/>*</text:p><text:p text:style-name="P494"><text:s/>* @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P494"><text:s/>*</text:p><text:p text:style-name="P494"><text:s/>* @date 10 Aug 2015</text:p><text:p text:style-name="P494"><text:s/>*/</text:p><text:p text:style-name="P494">void checkPrediction() {</text:p><text:p text:style-name="P494"><text:tab/>FILE *file = fopen(&quot;prediction.txt&quot;, &quot;wt&quot;);</text:p><text:p text:style-name="P494"><text:tab/>if(file == NULL) {</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>return;</text:p><text:p text:style-name="P494"><text:tab/>}</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494"><text:tab/>fprintf(file, &quot;%lf&quot;, predictedValue);</text:p><text:p text:style-name="P494"><text:tab/>fclose(file);</text:p><text:p text:style-name="P494">}</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494">/**</text:p><text:p text:style-name="P494"><text:s/>* Read from file initial parameters.</text:p><text:p text:style-name="P494"><text:s/>*</text:p><text:p text:style-name="P494"><text:s/>* @author Todor Balabanov</text:p><text:p text:style-name="P494"><text:s/>*</text:p><text:p text:style-name="P494"><text:s/>* @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P494"><text:s/>*</text:p><text:p text:style-name="P494"><text:s/>* @date 10 Aug 2015</text:p><text:p text:style-name="P494"><text:s/>*/</text:p><text:p text:style-name="P494">void checkInit() {</text:p><text:p text:style-name="P494"><text:tab/>FILE *file = fopen(&quot;start.txt&quot;, &quot;rt&quot;);</text:p><text:p text:style-name="P494"><text:tab/>if(file == NULL) {</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>isRunning = false;</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>return;</text:p><text:p text:style-name="P494"><text:tab/>}</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494"><text:tab/>static int period;</text:p><text:p text:style-name="P494"><text:tab/>fscanf(file, &quot;%d&quot;, &amp;init.dbId);</text:p><text:p text:style-name="P494"><text:tab/>fscanf(file, &quot;%s&quot;, init.symbol);</text:p><text:p text:style-name="P494"><text:tab/>fscanf(file, &quot;%d&quot;, &amp;period);</text:p><text:p text:style-name="P494"><text:tab/>fscanf(file, &quot;%d&quot;, &amp;init.neuronsAmount);</text:p><text:p text:style-name="P494"><text:tab/>fscanf(file, &quot;%d&quot;, &amp;init.populationSize);</text:p><text:p text:style-name="P494"><text:tab/>fscanf(file, &quot;%d&quot;, &amp;init.learn);</text:p><text:p text:style-name="P494"><text:tab/>fscanf(file, &quot;%d&quot;, &amp;init.forecast);</text:p><text:p text:style-name="P494"><text:tab/>fclose(file);</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494"><text:tab/>init.inputSize = init.learn;</text:p><text:p text:style-name="P494"><text:tab/>init.outputSize = init.forecast;</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494"><text:tab/>switch( period ) {</text:p><text:p text:style-name="P494"><text:tab/>case M1:</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>init.period = M1;</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P494"><text:tab/>case M5:</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>init.period = M5;</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P494"><text:tab/>case M15:</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>init.period = M15;</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P494"><text:tab/>case M30:</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>init.period = M30;</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P494"><text:tab/>case H1:</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>init.period = H1;</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P494"><text:tab/>case H4:</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>init.period = H4;</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P494"><text:tab/>case D1:</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>init.period = D1;</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P494"><text:tab/>case W1:</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>init.period = W1;</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P494"><text:tab/>case MN1:</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>init.period = MN1;</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P494"><text:tab/>default:</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>init.period = NO;</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P494"><text:tab/>}</text:p><text:p text:style-name="P494">}</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494">/**</text:p><text:p text:style-name="P494"><text:s/>* Read from file is running state.</text:p><text:p text:style-name="P494"><text:s/>*</text:p><text:p text:style-name="P494"><text:s/>* @author Todor Balabanov</text:p><text:p text:style-name="P494"><text:s/>*</text:p><text:p text:style-name="P494"><text:s/>* @email todor.balabanov@gmail.com</text:p><text:p text:style-name="P494"><text:s/>*</text:p><text:p text:style-name="P494"><text:s/>* @date 10 Aug 2015</text:p><text:p text:style-name="P494"><text:s/>*/</text:p><text:p text:style-name="P494">void checkIsRunning() {</text:p><text:p text:style-name="P494"><text:tab/>FILE *file = fopen(&quot;running.txt&quot;, &quot;rt&quot;);</text:p><text:p text:style-name="P494"><text:tab/>if(file == NULL) {</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>isRunning = false;</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>return;</text:p><text:p text:style-name="P494"><text:tab/>}</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494"><text:tab/>static char line[256];</text:p><text:p text:style-name="P494"><text:tab/>fscanf(file, &quot;%s&quot;, line);</text:p><text:p text:style-name="P494"><text:tab/>if(strcmp(line,&quot;true&quot;) == 0) {</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>isRunning = true;</text:p><text:p text:style-name="P494"><text:tab/>} else if(strcmp(line,&quot;false&quot;) == 0) {</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>isRunning = false;</text:p><text:p text:style-name="P494"><text:tab/>} else {</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>isRunning = false;</text:p><text:p text:style-name="P494"><text:tab/>}</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494"><text:tab/>fclose(file);</text:p><text:p text:style-name="P494">}</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494">/**</text:p><text:p text:style-name="P494"><text:s/>* Measure CPU overload by using Microsoft performance data helper.</text:p><text:p text:style-name="P494"><text:s/>*</text:p><text:p text:style-name="P494"><text:s/>* @return CPU overload in percent.</text:p><text:p text:style-name="P494"><text:s/>*</text:p><text:p text:style-name="P494"><text:s/>* @author Todor Balabanov</text:p><text:p text:style-name="P494"><text:s/>*</text:p><text:p text:style-name="P494"><text:s/>* @email tdb@tbsoft.eu</text:p><text:p text:style-name="P494"><text:s/>*</text:p><text:p text:style-name="P494"><text:s/>* @date 24 Aug 2009</text:p><text:p text:style-name="P494"><text:s/>*/</text:p><text:p text:style-name="P494">double cpuOverload() {</text:p><text:p text:style-name="P494"><text:tab/>//TODO Platform specific problems should be solved.</text:p><text:p text:style-name="P494"><text:tab/>return(50.0);</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494"><text:tab/>static HCOUNTER counterHandle;</text:p><text:p text:style-name="P494"><text:soft-page-break/><text:tab/>static PDH_FMT_COUNTERVALUE formatValue;</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494"><text:tab/>/*</text:p><text:p text:style-name="P494"><text:tab/> * Microsoft PDH query.</text:p><text:p text:style-name="P494"><text:tab/> */</text:p><text:p text:style-name="P494"><text:tab/>static HQUERY queryHandle;</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494"><text:tab/>/*</text:p><text:p text:style-name="P494"><text:tab/> * Open Microsoft PDH query.</text:p><text:p text:style-name="P494"><text:tab/> */</text:p><text:p text:style-name="P494"><text:tab/>PdhOpenQuery(NULL, 0, &amp;queryHandle);</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494"><text:tab/>PdhCollectQueryData( queryHandle );</text:p><text:p text:style-name="P494"><text:tab/>PdhAddCounter(queryHandle, &quot;\\Processor(_Total)\\% Processor Time&quot;, 0, &amp;counterHandle);</text:p><text:p text:style-name="P494"><text:tab/>PdhGetFormattedCounterValue(counterHandle, PDH_FMT_DOUBLE, NULL, &amp;formatValue);</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494"><text:tab/>/*</text:p><text:p text:style-name="P494"><text:tab/> * Close Microsoft PDH query.</text:p><text:p text:style-name="P494"><text:tab/> */</text:p><text:p text:style-name="P494"><text:tab/>PdhCloseQuery( queryHandle );</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494"><text:tab/>if (formatValue.doubleValue &lt; 0.0) {</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>return( 50.0 );</text:p><text:p text:style-name="P494"><text:tab/>} else if (formatValue.doubleValue &gt; 100.0) {</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>return( 50.0 );</text:p><text:p text:style-name="P494"><text:tab/>} else {</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>return( formatValue.doubleValue );</text:p><text:p text:style-name="P494"><text:tab/>}</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494"><text:tab/>return(0.0);</text:p><text:p text:style-name="P494">}</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494">/**</text:p><text:p text:style-name="P494"><text:s/>* Platform independent sleep.</text:p><text:p text:style-name="P494"><text:s/>*</text:p><text:p text:style-name="P494"><text:s/>* @author Todor Balabanov</text:p><text:p text:style-name="P494"><text:s/>*</text:p><text:p text:style-name="P494"><text:s/>* @email tdb@tbsoft.eu</text:p><text:p text:style-name="P494"><text:s/>*</text:p><text:p text:style-name="P494"><text:s/>* @date 21 Aug 2009</text:p><text:p text:style-name="P494"><text:s/>*/</text:p><text:p text:style-name="P494">void sleep() {</text:p><text:p text:style-name="P494"><text:tab/>/*</text:p><text:p text:style-name="P494"><text:tab/> * Number of clock ticks elapsed since the program was launched in</text:p><text:p text:style-name="P494"><text:tab/> * milliseconds. Constant should not be zero, because it is used as divisor.</text:p><text:p text:style-name="P494"><text:tab/> */</text:p><text:p text:style-name="P494"><text:tab/>static const unsigned long CLOCKS_PER_MSEC = CLOCKS_PER_SEC/1000==0?1:CLOCKS_PER_SEC/1000;</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494"><text:tab/>/*</text:p><text:p text:style-name="P494"><text:tab/> * Minimum time after which thread will go in sleep mode in milliseconds.</text:p><text:p text:style-name="P494"><text:tab/> */</text:p><text:p text:style-name="P494"><text:tab/>static const unsigned long DO_NOT_SLEEP_FOR_LESS_THAN = 100;</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494"><text:tab/>/*</text:p><text:p text:style-name="P494"><text:tab/> * Minimum time for thread to sleep in milliseconds.</text:p><text:p text:style-name="P494"><text:tab/> */</text:p><text:p text:style-name="P494"><text:tab/>static const unsigned long MIN_TIME_FOR_SLEEP = 0;</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494"><text:tab/>/*</text:p><text:p text:style-name="P494"><text:tab/> * Maximum time for thread to sleep in milliseconds.</text:p><text:p text:style-name="P494"><text:tab/> */</text:p><text:p text:style-name="P494"><text:tab/>static const unsigned long MAX_TIME_FOR_SLEEP = 1000;</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494"><text:tab/>/*</text:p><text:p text:style-name="P494"><text:tab/> * Last moment in time when thread slept.</text:p><text:p text:style-name="P494"><text:tab/> */</text:p><text:p text:style-name="P494"><text:tab/>static unsigned long lastSleepTime = 0;</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494"><text:tab/>/*</text:p><text:p text:style-name="P494"><text:tab/> * Execute sleep only if fixed amount of time was spend.</text:p><text:p text:style-name="P494"><text:tab/> */</text:p><text:p text:style-name="P494"><text:tab/>if ((clock()-lastSleepTime)/CLOCKS_PER_MSEC &lt; DO_NOT_SLEEP_FOR_LESS_THAN) {</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>return;</text:p><text:p text:style-name="P494"><text:tab/>} else {</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>unsigned long time = (unsigned long)(cpuOverload()/100.0*(MAX_TIME_FOR_SLEEP-MIN_TIME_FOR_SLEEP) + MIN_TIME_FOR_SLEEP);</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>Sleep( time );</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494"><text:tab/><text:tab/>lastSleepTime = clock() / CLOCKS_PER_MSEC;</text:p><text:p text:style-name="P494"><text:tab/>}</text:p><text:p text:style-name="P494">}</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494">/**</text:p><text:p text:style-name="P494"><text:s/>* Thread run/loop function.</text:p><text:p text:style-name="P494"><text:s/>*</text:p><text:p text:style-name="P494"><text:s/>* @param arg Thread function parameter.</text:p><text:p text:style-name="P494"><text:s/>*</text:p><text:p text:style-name="P494"><text:s/>* @return</text:p><text:p text:style-name="P494"><text:s/>*</text:p><text:p text:style-name="P494"><text:s/>* @author Todor Balabanov</text:p><text:p text:style-name="P494"><text:s/>*</text:p><text:p text:style-name="P494"><text:s/>* @email tdb@tbsoft.eu</text:p><text:p text:style-name="P494"><text:s/>*</text:p><text:p text:style-name="P494"><text:s/>* @date 04 May 2009</text:p><text:p text:style-name="P494"><text:s/>*/</text:p><text:p text:style-name="P494">DWORD WINAPI run(void *arg) {</text:p><text:p text:style-name="P494"><text:tab/>/*</text:p><text:p text:style-name="P494"><text:tab/> * Prediction.</text:p><text:p text:style-name="P494"><text:tab/> */</text:p><text:p text:style-name="P494"><text:tab/>try {</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>if (trainer != NULL) {</text:p><text:p text:style-name="P494"><text:tab/><text:tab/><text:tab/>predictedValue = trainer-&gt;predict();</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>} else {</text:p><text:p text:style-name="P494"><text:tab/><text:tab/><text:tab/>isRunning = false;</text:p><text:p text:style-name="P494"><text:tab/><text:tab/><text:tab/>fprintf(stderr, &quot;%s %s\n&quot;, &quot; <text:s text:c="13"/>VitoshaTrade00181&quot;, &quot;Calculation process stopped.&quot;);</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P494"><text:tab/>} catch (const char* message) {</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>isRunning = false;</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>fprintf(stderr, &quot;%s %s\n&quot;, &quot; <text:s text:c="13"/>VitoshaTrade00182&quot;, message);</text:p><text:p text:style-name="P494"><text:tab/>} catch (...) {</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>isRunning = false;</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>fprintf(stderr, &quot;%s %s\n&quot;, &quot; <text:s text:c="13"/>VitoshaTrade00183&quot;, &quot;Calculation process stopped.&quot;);</text:p><text:p text:style-name="P494"><text:tab/>}</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494"><text:tab/>/*</text:p><text:p text:style-name="P494"><text:tab/> * Training.</text:p><text:p text:style-name="P494"><text:tab/> */</text:p><text:p text:style-name="P494"><text:tab/>try {</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>if (trainer != NULL) {</text:p><text:p text:style-name="P494"><text:tab/><text:tab/><text:tab/>trainer-&gt;train();</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>} else {</text:p><text:p text:style-name="P494"><text:tab/><text:tab/><text:tab/>isRunning = false;</text:p><text:p text:style-name="P494"><text:tab/><text:tab/><text:tab/>fprintf(stderr, &quot;%s %s\n&quot;, &quot; <text:s text:c="13"/>VitoshaTrade00178&quot;, &quot;Calculation process stopped.&quot;);</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P494"><text:tab/>} catch (const char* message) {</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>isRunning = false;</text:p><text:p text:style-name="P494"><text:soft-page-break/><text:tab/><text:tab/>fprintf(stderr, &quot;%s %s\n&quot;, &quot; <text:s text:c="13"/>VitoshaTrade00179&quot;, message);</text:p><text:p text:style-name="P494"><text:tab/>} catch (...) {</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>isRunning = false;</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>fprintf(stderr, &quot;%s %s\n&quot;, &quot; <text:s text:c="13"/>VitoshaTrade00180&quot;, &quot;Calculation process stopped.&quot;);</text:p><text:p text:style-name="P494"><text:tab/>}</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494"><text:tab/>sleep();</text:p><text:p text:style-name="P494">}</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494">/**</text:p><text:p text:style-name="P494"><text:s/>* Show about message dialog.</text:p><text:p text:style-name="P494"><text:s/>*</text:p><text:p text:style-name="P494"><text:s/>* @author Todor Balabanov</text:p><text:p text:style-name="P494"><text:s/>*</text:p><text:p text:style-name="P494"><text:s/>* @email tdb@tbsoft.eu</text:p><text:p text:style-name="P494"><text:s/>*</text:p><text:p text:style-name="P494"><text:s/>* @date 07 Apr 2009</text:p><text:p text:style-name="P494"><text:s/>*/</text:p><text:p text:style-name="P494">MT4_EXPFUNC void about() {</text:p><text:p text:style-name="P494"><text:tab/>//MessageBox(NULL, &quot;Forex forecasting.&quot;, &quot;About VitoshaTrade&quot;, 0);</text:p><text:p text:style-name="P494">}</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494">/**</text:p><text:p text:style-name="P494"><text:s/>* Start predictor instance and calculation loop of it.</text:p><text:p text:style-name="P494"><text:s/>*</text:p><text:p text:style-name="P494"><text:s/>* @param dbId Database identifier of specific record.</text:p><text:p text:style-name="P494"><text:s/>*</text:p><text:p text:style-name="P494"><text:s/>* @param symbol Forex symbol for trading.</text:p><text:p text:style-name="P494"><text:s/>*</text:p><text:p text:style-name="P494"><text:s/>* @param period Chart period value.</text:p><text:p text:style-name="P494"><text:s/>*</text:p><text:p text:style-name="P494"><text:s/>* @param neuronsAmount Neurons amout to be used if predictor will not be loaded from database.</text:p><text:p text:style-name="P494"><text:s/>*</text:p><text:p text:style-name="P494"><text:s/>* @param populationSize Population size to be used if predictor will not be loaded from database.</text:p><text:p text:style-name="P494"><text:s/>*</text:p><text:p text:style-name="P494"><text:s/>* @param learn Learning bars interval.</text:p><text:p text:style-name="P494"><text:s/>*</text:p><text:p text:style-name="P494"><text:s/>* @param forecast Prediction bars interval.</text:p><text:p text:style-name="P494"><text:s/>*</text:p><text:p text:style-name="P494"><text:s/>* @author Todor Balabanov</text:p><text:p text:style-name="P494"><text:s/>*</text:p><text:p text:style-name="P494"><text:s/>* @email tdb@tbsoft.eu</text:p><text:p text:style-name="P494"><text:s/>*</text:p><text:p text:style-name="P494"><text:s/>* @date 07 Apr 2009</text:p><text:p text:style-name="P494"><text:s/>*/</text:p><text:p text:style-name="P494">MT4_EXPFUNC void startPredictor(const int dbId, const char *symbol, const int period, const int neuronsAmount, const int populationSize, const int learn, const int forecast) {</text:p><text:p text:style-name="P494"><text:tab/>/*</text:p><text:p text:style-name="P494"><text:tab/> * Fill init trainer structure.</text:p><text:p text:style-name="P494"><text:tab/> */</text:p><text:p text:style-name="P494"><text:tab/>init.dbId = dbId;</text:p><text:p text:style-name="P494"><text:tab/>strcpy(init.symbol, symbol);</text:p><text:p text:style-name="P494"><text:tab/>switch( period ) {</text:p><text:p text:style-name="P494"><text:tab/>case M1:</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>init.period = M1;</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P494"><text:tab/>case M5:</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>init.period = M5;</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P494"><text:tab/>case M15:</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>init.period = M15;</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P494"><text:tab/>case M30:</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>init.period = M30;</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P494"><text:tab/>case H1:</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>init.period = H1;</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P494"><text:tab/>case H4:</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>init.period = H4;</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P494"><text:tab/>case D1:</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>init.period = D1;</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P494"><text:tab/>case W1:</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>init.period = W1;</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P494"><text:tab/>case MN1:</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>init.period = MN1;</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P494"><text:tab/>default:</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>init.period = NO;</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P494"><text:tab/>}</text:p><text:p text:style-name="P494"><text:tab/>init.neuronsAmount = neuronsAmount;</text:p><text:p text:style-name="P494"><text:tab/>init.populationSize = populationSize;</text:p><text:p text:style-name="P494"><text:tab/>init.learn = learn;</text:p><text:p text:style-name="P494"><text:tab/>init.forecast = forecast;</text:p><text:p text:style-name="P494"><text:tab/>init.inputSize = learn;</text:p><text:p text:style-name="P494"><text:tab/>init.outputSize = forecast;</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494"><text:tab/>char netType[ 100 ] = &quot;&quot;;</text:p><text:p text:style-name="P494"><text:tab/>sprintf(netType, &quot;%s%d&quot;, symbol, period);</text:p><text:p text:style-name="P494"><text:tab/>//MessageBox(NULL, netType, &quot;Network type:&quot;, 0);</text:p><text:p text:style-name="P494">}</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494">/**</text:p><text:p text:style-name="P494"><text:s/>* Stop predictor and its loop.</text:p><text:p text:style-name="P494"><text:s/>*</text:p><text:p text:style-name="P494"><text:s/>* @author Todor Balabanov</text:p><text:p text:style-name="P494"><text:s/>*</text:p><text:p text:style-name="P494"><text:s/>* @email tdb@tbsoft.eu</text:p><text:p text:style-name="P494"><text:s/>*</text:p><text:p text:style-name="P494"><text:s/>* @date 07 Apr 2009</text:p><text:p text:style-name="P494"><text:s/>*/</text:p><text:p text:style-name="P494">MT4_EXPFUNC void stopPredictor() {</text:p><text:p text:style-name="P494"><text:tab/>/*</text:p><text:p text:style-name="P494"><text:tab/> * Deactivate calculation thread.</text:p><text:p text:style-name="P494"><text:tab/> */</text:p><text:p text:style-name="P494"><text:tab/>isRunning = false;</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494"><text:tab/>//MessageBox(NULL, &quot;Indicator stop!&quot;, &quot;Closing...&quot;, 0);</text:p><text:p text:style-name="P494">}</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494">/**</text:p><text:p text:style-name="P494"><text:s/>* Load chart historical data.</text:p><text:p text:style-name="P494"><text:s/>*</text:p><text:p text:style-name="P494"><text:s/>* @param rates Chart time series.</text:p><text:p text:style-name="P494"><text:s/>*</text:p><text:p text:style-name="P494"><text:s/>* @param size Size of the time series.</text:p><text:p text:style-name="P494"><text:s/>*</text:p><text:p text:style-name="P494"><text:s/>* @author Todor Balabanov</text:p><text:p text:style-name="P494"><text:s/>*</text:p><text:p text:style-name="P494"><text:s/>* @email tdb@tbsoft.eu</text:p><text:p text:style-name="P494"><text:s/>*</text:p><text:p text:style-name="P494"><text:s/>* @date 11 Aug 2009</text:p><text:p text:style-name="P494"><text:soft-page-break/><text:s/>*/</text:p><text:p text:style-name="P494">MT4_EXPFUNC void loadChartData(double rates[][6], int size) {</text:p><text:p text:style-name="P494"><text:tab/>/*</text:p><text:p text:style-name="P494"><text:tab/> * Return if there is no conditions to update.</text:p><text:p text:style-name="P494"><text:tab/> */</text:p><text:p text:style-name="P494"><text:tab/>if (size&lt;=0 || isRunning==false || trainer==NULL || rates==NULL) {</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>return;</text:p><text:p text:style-name="P494"><text:tab/>}</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494"><text:tab/>/*</text:p><text:p text:style-name="P494"><text:tab/> * 0 - time</text:p><text:p text:style-name="P494"><text:tab/> * 1 - open</text:p><text:p text:style-name="P494"><text:tab/> * 2 - low</text:p><text:p text:style-name="P494"><text:tab/> * 3 - high</text:p><text:p text:style-name="P494"><text:tab/> * 4 - close</text:p><text:p text:style-name="P494"><text:tab/> * 5 - volume</text:p><text:p text:style-name="P494"><text:tab/> */</text:p><text:p text:style-name="P494"><text:tab/>std::vector&lt;RateInfo&gt; values( size );</text:p><text:p text:style-name="P494"><text:tab/>for(int i=0; i&lt;size; i++) {</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>values[i].time = rates[i][0];</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>values[i].open = rates[i][1];</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>values[i].low = rates[i][2];</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>values[i].high = rates[i][3];</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>values[i].close = rates[i][4];</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>values[i].volume = rates[i][5];</text:p><text:p text:style-name="P494"><text:tab/>}</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494"><text:tab/>updateTrainingSet(values);</text:p><text:p text:style-name="P494">}</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494">/**</text:p><text:p text:style-name="P494"><text:s/>* Load historical data into predictig module.</text:p><text:p text:style-name="P494"><text:s/>*</text:p><text:p text:style-name="P494"><text:s/>* @return Prediction price value.</text:p><text:p text:style-name="P494"><text:s/>*</text:p><text:p text:style-name="P494"><text:s/>* @author Iliyan Zankinski</text:p><text:p text:style-name="P494"><text:s/>*</text:p><text:p text:style-name="P494"><text:s/>* @email iliyan_mf@abv.bg</text:p><text:p text:style-name="P494"><text:s/>*</text:p><text:p text:style-name="P494"><text:s/>* @date 26 Jul 2009</text:p><text:p text:style-name="P494"><text:s/>*/</text:p><text:p text:style-name="P494">MT4_EXPFUNC double prediction() {</text:p><text:p text:style-name="P494"><text:tab/>return( predictedValue );</text:p><text:p text:style-name="P494">}</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494">int WINAPI WinMain(HINSTANCE hInstance, <text:s text:c="8"/>HINSTANCE hPrevInstance, <text:s text:c="18"/>LPSTR lpCmdLine,<text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>int nCmdShow) {</text:p><text:p text:style-name="P494"><text:tab/>/*</text:p><text:p text:style-name="P494"><text:tab/> * Initialize pseudo-random number generator.</text:p><text:p text:style-name="P494"><text:tab/> */</text:p><text:p text:style-name="P494"><text:tab/>srand( time(NULL) );</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494"><text:tab/>/*</text:p><text:p text:style-name="P494"><text:tab/> * Initial check of the state.</text:p><text:p text:style-name="P494"><text:tab/> */</text:p><text:p text:style-name="P494"><text:tab/>checkIsRunning();</text:p><text:p text:style-name="P494"><text:tab/>checkInit();</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494"><text:tab/>//TODO Make training set available.</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494"><text:tab/>/*</text:p><text:p text:style-name="P494"><text:tab/> * Allocate memory for trainer object.</text:p><text:p text:style-name="P494"><text:tab/> */</text:p><text:p text:style-name="P494"><text:tab/>try {</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>trainer = new Trainer();</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>if (trainer == NULL) {</text:p><text:p text:style-name="P494"><text:tab/><text:tab/><text:tab/>isRunning = false;</text:p><text:p text:style-name="P494"><text:tab/><text:tab/><text:tab/>fprintf(stderr, &quot;%s %s\n&quot;, &quot; <text:s text:c="13"/>VitoshaTrade00175&quot;, &quot;Calculation process stopped.&quot;);</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>} else {</text:p><text:p text:style-name="P494"><text:tab/><text:tab/><text:tab/>//TODO Fix commucation problems.</text:p><text:p text:style-name="P494"><text:tab/><text:tab/><text:tab/>trainer-&gt;setup( init );</text:p><text:p text:style-name="P494"><text:tab/><text:tab/><text:tab/>isRunning = true;</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P494"><text:tab/>} catch (const char* message) {</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>isRunning = false;</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>fprintf(stderr, &quot;%s %s\n&quot;, &quot; <text:s text:c="13"/>VitoshaTrade00176&quot;, message);</text:p><text:p text:style-name="P494"><text:tab/>} catch (...) {</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>isRunning = false;</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>fprintf(stderr, &quot;%s %s\n&quot;, &quot; <text:s text:c="13"/>VitoshaTrade00177&quot;, &quot;Calculation process stopped.&quot;);</text:p><text:p text:style-name="P494"><text:tab/>}</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494"><text:tab/>/*</text:p><text:p text:style-name="P494"><text:tab/> * Application loop.</text:p><text:p text:style-name="P494"><text:tab/> */</text:p><text:p text:style-name="P494"><text:tab/>while (isRunning == true) {</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>checkIsRunning();</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>checkRates();</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>run(NULL);</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>checkPrediction();</text:p><text:p text:style-name="P494"><text:tab/>}</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494"><text:tab/>/*</text:p><text:p text:style-name="P494"><text:tab/> * Free memory of trainer object before thread stop.</text:p><text:p text:style-name="P494"><text:tab/> */</text:p><text:p text:style-name="P494"><text:tab/>try {</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>isRunning = false;</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>delete(trainer);</text:p><text:p text:style-name="P494"><text:tab/>} catch (const char* message) {</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>fprintf(stderr, &quot;%s %s\n&quot;, &quot; <text:s text:c="13"/>VitoshaTrade00184&quot;, message);</text:p><text:p text:style-name="P494"><text:tab/>} catch (...) {</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>fprintf(stderr, &quot;%s %s\n&quot;, &quot; <text:s text:c="13"/>VitoshaTrade00185&quot;, &quot;Calculation process stopped.&quot;);</text:p><text:p text:style-name="P494"><text:tab/>}</text:p><text:p text:style-name="P494"><text:tab/>trainer = NULL;</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494"><text:tab/>return (int) 0;</text:p><text:p text:style-name="P494">}</text:p><text:p text:style-name="P492"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5860_1486593966"/><text:s text:c="4"/>VitoshaTrade.mq4<text:bookmark-end text:name="__RefHeading___Toc5860_1486593966"/></text:p><text:p text:style-name="P492"/><text:p text:style-name="P494">/*******************************************************************************</text:p><text:p text:style-name="P494"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P494"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P494"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P494"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P494"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P494"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P494"><text:s/>* Copyright (C) 2008-2011 by Todor Balabanov <text:s/>( tdb@tbsoft.eu ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P494"><text:s/>* <text:s text:c="22"/>Iliyan Zankinski <text:s text:c="2"/>( iliyan_mf@abv.bg ) <text:s text:c="14"/>*</text:p><text:p text:style-name="P494"><text:s/>* <text:s text:c="22"/>Momchil Anachkov <text:s text:c="2"/>( mZer0000@gmail.com ) <text:s text:c="12"/>*</text:p><text:p text:style-name="P494"><text:soft-page-break/><text:s/>* <text:s text:c="22"/>Daniel Chutrov <text:s text:c="4"/>( d.chutrov@gmail.com ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P494"><text:s/>* <text:s text:c="22"/>Nikola Simeonov <text:s text:c="3"/>( n.simeonow@gmail.com ) <text:s text:c="10"/>*</text:p><text:p text:style-name="P494"><text:s/>* <text:s text:c="22"/>Galq Cirkalova <text:s text:c="4"/>( galq_cirkalova@abv.bg ) <text:s text:c="9"/>*</text:p><text:p text:style-name="P494"><text:s/>* <text:s text:c="22"/>Ivan Grozev <text:s text:c="7"/>( ivan.iliev.grozev@gmail.com ) <text:s text:c="3"/>*</text:p><text:p text:style-name="P494"><text:s/>* <text:s text:c="22"/>Elisaveta Hristova ( elisaveta.s.hristova@gmail.com ) *</text:p><text:p text:style-name="P494"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P494"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P494"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P494"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P494"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P494"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P494"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P494"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P494"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P494"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P494"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P494"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P494"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P494"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P494"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494">#property copyright &quot;Copyright � 2008-2015, Todor Balabanov&quot;</text:p><text:p text:style-name="P494">#property link &quot;http://vitoshatrade.veldsoft.eu/&quot;</text:p><text:p text:style-name="P494">#property version &quot;1.001&quot;</text:p><text:p text:style-name="P494">#property strict</text:p><text:p text:style-name="P494">#property indicator_chart_window</text:p><text:p text:style-name="P494">#property indicator_buffers 0</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494">#import &quot;shell32.dll&quot;</text:p><text:p text:style-name="P494">int ShellExecuteW(int hwnd,string Operation,string File,string Parameters,string Directory,int ShowCmd);</text:p><text:p text:style-name="P494">#import</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494">/**</text:p><text:p text:style-name="P494"><text:s/>* Right arrow symbol.</text:p><text:p text:style-name="P494"><text:s/>*/</text:p><text:p text:style-name="P494">#define SYMBOL_ARROWRIGHT 240</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494">/**</text:p><text:p text:style-name="P494"><text:s/>* MQL4 maximum random value available.</text:p><text:p text:style-name="P494"><text:s/>*/</text:p><text:p text:style-name="P494">#define RAND_MAX 32767.0</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494">/**</text:p><text:p text:style-name="P494"><text:s/>* Color to be used for text messages.</text:p><text:p text:style-name="P494"><text:s/>*/</text:p><text:p text:style-name="P494">extern color TEXT_COLOR = Red;</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494">/**</text:p><text:p text:style-name="P494"><text:s/>* Color to be used for up price.</text:p><text:p text:style-name="P494"><text:s/>*/</text:p><text:p text:style-name="P494">extern color UP_COLOR = Cyan;</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494">/**</text:p><text:p text:style-name="P494"><text:s/>* Color to be used for down price.</text:p><text:p text:style-name="P494"><text:s/>*/</text:p><text:p text:style-name="P494">extern color DOWN_COLOR = Orange;</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494">/**</text:p><text:p text:style-name="P494"><text:s/>* ANN neurons amout input parameter.</text:p><text:p text:style-name="P494"><text:s/>*/</text:p><text:p text:style-name="P494">extern int NEURONS_AMOUNT = 37;</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494">/**</text:p><text:p text:style-name="P494"><text:s/>* DE population size indicator input parameter.</text:p><text:p text:style-name="P494"><text:s/>*/</text:p><text:p text:style-name="P494">extern int POPULATION_SIZE = 45;</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494">/**</text:p><text:p text:style-name="P494"><text:s/>* Number of bars to be used for trainign.</text:p><text:p text:style-name="P494"><text:s/>*/</text:p><text:p text:style-name="P494">extern int TRAINING_BARS = 250;</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494">/**</text:p><text:p text:style-name="P494"><text:s/>* Inspect interval in bars (number of past bars window).</text:p><text:p text:style-name="P494"><text:s/>*/</text:p><text:p text:style-name="P494">extern int INSPECT_BARS = 25;</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494">/**</text:p><text:p text:style-name="P494"><text:s/>* Predict interval in bars (number of future bars window).</text:p><text:p text:style-name="P494"><text:s/>*/</text:p><text:p text:style-name="P494">extern int PREDICT_BARS = 1;</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494">/**</text:p><text:p text:style-name="P494"><text:s/>* Predictor database id.</text:p><text:p text:style-name="P494"><text:s/>*</text:p><text:p text:style-name="P494"><text:s/>* Value 0 is used for no existing database record.</text:p><text:p text:style-name="P494"><text:s/>*/</text:p><text:p text:style-name="P494">extern int PREDICTOR_ID = 0;</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494">/**</text:p><text:p text:style-name="P494"><text:s/>* Send historical data to software module.</text:p><text:p text:style-name="P494"><text:s/>*</text:p><text:p text:style-name="P494"><text:s/>* @author Todor Balabanov</text:p><text:p text:style-name="P494"><text:s/>*</text:p><text:p text:style-name="P494"><text:s/>* @email tdb@tbsoft-bg.com</text:p><text:p text:style-name="P494"><text:s/>*</text:p><text:p text:style-name="P494"><text:s/>* @date 07 Apr 2009</text:p><text:p text:style-name="P494"><text:s/>*/</text:p><text:p text:style-name="P494">void sendDataToPredictor() {</text:p><text:p text:style-name="P494"><text:tab/>double rates[][6];</text:p><text:p text:style-name="P494"><text:tab/>int size = ArrayCopyRates( rates );</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494"><text:tab/>/*</text:p><text:p text:style-name="P494"><text:tab/> * Do nothing if there is no enough data.</text:p><text:p text:style-name="P494"><text:tab/> */</text:p><text:p text:style-name="P494"><text:tab/>if(size &lt; TRAINING_BARS) {</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>return;</text:p><text:p text:style-name="P494"><text:tab/>} else {</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>//TODO Check for bars order.</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>size = TRAINING_BARS;</text:p><text:p text:style-name="P494"><text:tab/>}</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494"><text:tab/>/*</text:p><text:p text:style-name="P494"><text:tab/> * Normalize values between zero and one.</text:p><text:p text:style-name="P494"><text:tab/> * Time should not be normalized. It should be on index 0.</text:p><text:p text:style-name="P494"><text:tab/> */</text:p><text:p text:style-name="P494"><text:tab/>for(int r=1; r&lt;6; r++) {</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>double min = rates[0][r];</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>double max = rates[0][r];</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>for(int i=0; i&lt;size; i++) {</text:p><text:p text:style-name="P494"><text:tab/><text:tab/><text:tab/>if(rates[i][r] &lt; min) {</text:p><text:p text:style-name="P494"><text:tab/><text:tab/><text:tab/><text:tab/>min = rates[i][r];</text:p><text:p text:style-name="P494"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P494"><text:tab/><text:tab/><text:tab/>if(rates[i][r] &gt; max) {</text:p><text:p text:style-name="P494"><text:tab/><text:tab/><text:tab/><text:tab/>max = rates[i][r];</text:p><text:p text:style-name="P494"><text:soft-page-break/><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494"><text:tab/><text:tab/>for(int i=0; i&lt;size; i++) {</text:p><text:p text:style-name="P494"><text:tab/><text:tab/><text:tab/>rates[i][r] = (rates[i][r]-min) / (max - min);</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P494"><text:tab/>}</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494"><text:tab/>/*</text:p><text:p text:style-name="P494"><text:tab/> * Send rates to the predictor.</text:p><text:p text:style-name="P494"><text:tab/> */{</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>int file = FileOpen(&quot;rates.txt&quot;, FILE_CSV|FILE_WRITE, &apos; &apos;);</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>FileWrite(file, size);</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>for(int i=0; i&lt;size; i++) {</text:p><text:p text:style-name="P494"><text:tab/><text:tab/><text:tab/>for(int r=0; r&lt;6; r++) {</text:p><text:p text:style-name="P494"><text:tab/><text:tab/><text:tab/><text:tab/>FileWrite(file, rates[i][r]);</text:p><text:p text:style-name="P494"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>FileClose(file);</text:p><text:p text:style-name="P494"><text:tab/>}</text:p><text:p text:style-name="P494">}</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494">/**</text:p><text:p text:style-name="P494"><text:s/>* Indicator initialization function.</text:p><text:p text:style-name="P494"><text:s/>*</text:p><text:p text:style-name="P494"><text:s/>* @return Execution error code.</text:p><text:p text:style-name="P494"><text:s/>*</text:p><text:p text:style-name="P494"><text:s/>* @author Todor Balabanov</text:p><text:p text:style-name="P494"><text:s/>*</text:p><text:p text:style-name="P494"><text:s/>* @email tdb@tbsoft-bg.com</text:p><text:p text:style-name="P494"><text:s/>*</text:p><text:p text:style-name="P494"><text:s/>* @date 01 Aug 2014</text:p><text:p text:style-name="P494"><text:s/>*/</text:p><text:p text:style-name="P494">int OnInit() {</text:p><text:p text:style-name="P494"><text:tab/>/*</text:p><text:p text:style-name="P494"><text:tab/> * Validate input data.</text:p><text:p text:style-name="P494"><text:tab/> */</text:p><text:p text:style-name="P494"><text:tab/>if (NEURONS_AMOUNT &lt; 0) {</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>NEURONS_AMOUNT = 0;</text:p><text:p text:style-name="P494"><text:tab/>}</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494"><text:tab/>if (POPULATION_SIZE &lt; 0) {</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>POPULATION_SIZE = 0;</text:p><text:p text:style-name="P494"><text:tab/>}</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494"><text:tab/>if (TRAINING_BARS &lt; 0) {</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>TRAINING_BARS = 0;</text:p><text:p text:style-name="P494"><text:tab/>}</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494"><text:tab/>if (TRAINING_BARS &gt; Bars) {</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>TRAINING_BARS = Bars;</text:p><text:p text:style-name="P494"><text:tab/>}</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494"><text:tab/>if (INSPECT_BARS &lt; 0) {</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>INSPECT_BARS = 0;</text:p><text:p text:style-name="P494"><text:tab/>}</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494"><text:tab/>if (PREDICT_BARS &lt; 0) {</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>PREDICT_BARS = 0;</text:p><text:p text:style-name="P494"><text:tab/>}</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494"><text:tab/>/*</text:p><text:p text:style-name="P494"><text:tab/> * Seed PRNG.</text:p><text:p text:style-name="P494"><text:tab/> */</text:p><text:p text:style-name="P494"><text:tab/>MathSrand( GetTickCount() );</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494"><text:tab/>/*</text:p><text:p text:style-name="P494"><text:tab/> * Initialize predictor.</text:p><text:p text:style-name="P494"><text:tab/> */</text:p><text:p text:style-name="P494"><text:tab/>{</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>int file = FileOpen(&quot;start.txt&quot;, FILE_CSV|FILE_WRITE, &apos; &apos;);</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>FileWrite(file, PREDICTOR_ID, Symbol(), Period(), NEURONS_AMOUNT, POPULATION_SIZE, INSPECT_BARS, PREDICT_BARS);</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>FileClose(file);</text:p><text:p text:style-name="P494"><text:tab/>}</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494"><text:tab/>/*</text:p><text:p text:style-name="P494"><text:tab/> * Run predictor.</text:p><text:p text:style-name="P494"><text:tab/> */{</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>int file = FileOpen(&quot;running.txt&quot;, FILE_CSV|FILE_WRITE, &apos; &apos;);</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>FileWrite(file, &quot;true&quot;);</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>FileClose(file);</text:p><text:p text:style-name="P494"><text:tab/>}</text:p><text:p text:style-name="P494"><text:tab/>ShellExecuteW(0, &quot;Open&quot;, TerminalPath()+&quot;/MQL4/Indicators/VitoshaTrade/VitoshaTrade.exe&quot;, &quot;&quot;, TerminalPath()+&quot;/MQL4/Files&quot;, 1);</text:p><text:p text:style-name="P494"><text:tab/>Sleep(500);</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494"><text:tab/>return( 0 );</text:p><text:p text:style-name="P494">}</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494">/**</text:p><text:p text:style-name="P494"><text:s/>* Indicator deinitialization function.</text:p><text:p text:style-name="P494"><text:s/>*</text:p><text:p text:style-name="P494"><text:s/>* @return Execution error code.</text:p><text:p text:style-name="P494"><text:s/>*</text:p><text:p text:style-name="P494"><text:s/>* @author Todor Balabanov</text:p><text:p text:style-name="P494"><text:s/>*</text:p><text:p text:style-name="P494"><text:s/>* @email tdb@tbsoft-bg.com</text:p><text:p text:style-name="P494"><text:s/>*</text:p><text:p text:style-name="P494"><text:s/>* @date 01 Aug 2014</text:p><text:p text:style-name="P494"><text:s/>*/</text:p><text:p text:style-name="P494">void OnDeinit(const int reason) {</text:p><text:p text:style-name="P494"><text:tab/>if (ObjectFind(&quot;arrow&quot;) == 0) {</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>ObjectDelete( &quot;arrow&quot; );</text:p><text:p text:style-name="P494"><text:tab/>}</text:p><text:p text:style-name="P494"><text:tab/>if (ObjectFind(&quot;text&quot;) == 0) {</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>ObjectDelete( &quot;text&quot; );</text:p><text:p text:style-name="P494"><text:tab/>}</text:p><text:p text:style-name="P494"><text:tab/>if (ObjectFind(&quot;line&quot;) == 0) {</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>ObjectDelete( &quot;line&quot; );</text:p><text:p text:style-name="P494"><text:tab/>}</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494"><text:tab/>/*</text:p><text:p text:style-name="P494"><text:tab/> * Stop and destroy predictor.</text:p><text:p text:style-name="P494"><text:tab/> */{</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>int file = FileOpen(&quot;running.txt&quot;, FILE_CSV|FILE_WRITE, &apos; &apos;);</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>FileWrite(file, &quot;false&quot;);</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>FileClose(file);</text:p><text:p text:style-name="P494"><text:tab/>}</text:p><text:p text:style-name="P494">}</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494">/**</text:p><text:p text:style-name="P494"><text:s/>* Indicator iteration function.</text:p><text:p text:style-name="P494"><text:s/>*</text:p><text:p text:style-name="P494"><text:s/>* @return Execution error code.</text:p><text:p text:style-name="P494"><text:s/>*</text:p><text:p text:style-name="P494"><text:s/>* @author Todor Balabanov</text:p><text:p text:style-name="P494"><text:soft-page-break/><text:s/>*</text:p><text:p text:style-name="P494"><text:s/>* @email tdb@tbsoft-bg.com</text:p><text:p text:style-name="P494"><text:s/>*</text:p><text:p text:style-name="P494"><text:s/>* @date 01 Aug 2014</text:p><text:p text:style-name="P494"><text:s/>*/</text:p><text:p text:style-name="P494">int OnCalculate(const int rates_total,</text:p><text:p text:style-name="P494"><text:tab/><text:tab/><text:tab/><text:tab/>const int prev_calculated,</text:p><text:p text:style-name="P494"><text:tab/><text:tab/><text:tab/><text:tab/>const datetime&amp; time[],</text:p><text:p text:style-name="P494"><text:tab/><text:tab/><text:tab/><text:tab/>const double&amp; open[],</text:p><text:p text:style-name="P494"><text:tab/><text:tab/><text:tab/><text:tab/>const double&amp; high[],</text:p><text:p text:style-name="P494"><text:tab/><text:tab/><text:tab/><text:tab/>const double&amp; low[],</text:p><text:p text:style-name="P494"><text:tab/><text:tab/><text:tab/><text:tab/>const double&amp; close[],</text:p><text:p text:style-name="P494"><text:tab/><text:tab/><text:tab/><text:tab/>const long&amp; tick_volume[],</text:p><text:p text:style-name="P494"><text:tab/><text:tab/><text:tab/><text:tab/>const long&amp; volume[],</text:p><text:p text:style-name="P494"><text:tab/><text:tab/><text:tab/><text:tab/>const int&amp; spread[]) {</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494"><text:tab/>/*</text:p><text:p text:style-name="P494"><text:tab/> * Send historical data to predicting module.</text:p><text:p text:style-name="P494"><text:tab/> */</text:p><text:p text:style-name="P494"><text:tab/>sendDataToPredictor();</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494"><text:tab/>/*</text:p><text:p text:style-name="P494"><text:tab/> * Clear visual objects from previous call.</text:p><text:p text:style-name="P494"><text:tab/> */</text:p><text:p text:style-name="P494"><text:tab/>if (ObjectFind(&quot;arrow&quot;) == 0) {</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>ObjectDelete( &quot;arrow&quot; );</text:p><text:p text:style-name="P494"><text:tab/>}</text:p><text:p text:style-name="P494"><text:tab/>if (ObjectFind(&quot;text&quot;) == 0) {</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>ObjectDelete( &quot;text&quot; );</text:p><text:p text:style-name="P494"><text:tab/>}</text:p><text:p text:style-name="P494"><text:tab/>if (ObjectFind(&quot;line&quot;) == 0) {</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>ObjectDelete( &quot;line&quot; );</text:p><text:p text:style-name="P494"><text:tab/>}</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494"><text:tab/>/*</text:p><text:p text:style-name="P494"><text:tab/> * Create text object.</text:p><text:p text:style-name="P494"><text:tab/> */</text:p><text:p text:style-name="P494"><text:tab/>ObjectCreate(&quot;text&quot;, OBJ_LABEL, 0, 0, 0);</text:p><text:p text:style-name="P494"><text:tab/>ObjectSet(&quot;text&quot;, OBJPROP_CORNER, 2);</text:p><text:p text:style-name="P494"><text:tab/>ObjectSet(&quot;text&quot;, OBJPROP_XDISTANCE, 5);</text:p><text:p text:style-name="P494"><text:tab/>ObjectSet(&quot;text&quot;, OBJPROP_YDISTANCE, 5);</text:p><text:p text:style-name="P494"><text:tab/>ObjectSet(&quot;text&quot;, OBJPROP_BACK, true);</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494"><text:tab/>/*</text:p><text:p text:style-name="P494"><text:tab/> * Ask for prediction.</text:p><text:p text:style-name="P494"><text:tab/> */</text:p><text:p text:style-name="P494"><text:tab/>static double lastValue = 0.0;</text:p><text:p text:style-name="P494"><text:tab/>double value = 0.0;</text:p><text:p text:style-name="P494"><text:tab/>bool successful = false;</text:p><text:p text:style-name="P494"><text:tab/>/*</text:p><text:p text:style-name="P494"><text:tab/> * Run predictor.</text:p><text:p text:style-name="P494"><text:tab/> */</text:p><text:p text:style-name="P494"><text:tab/>{</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>int file = FileOpen(&quot;prediction.txt&quot;, FILE_CSV|FILE_READ, &apos; &apos;);</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>if(file != INVALID_HANDLE) {</text:p><text:p text:style-name="P494"><text:tab/><text:tab/><text:tab/>value = FileReadNumber(file);</text:p><text:p text:style-name="P494"><text:tab/><text:tab/><text:tab/>FileClose(file);</text:p><text:p text:style-name="P494"><text:tab/><text:tab/><text:tab/>successful = true;</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P494"><text:tab/>}</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494"><text:tab/>/*</text:p><text:p text:style-name="P494"><text:tab/> * Denormalize prediction.</text:p><text:p text:style-name="P494"><text:tab/> */</text:p><text:p text:style-name="P494"><text:tab/>double min = low[0];</text:p><text:p text:style-name="P494"><text:tab/>double max = high[0];</text:p><text:p text:style-name="P494"><text:tab/>for(int i=0; i&lt;rates_total; i++) {</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>if(low[i] &lt; min) {</text:p><text:p text:style-name="P494"><text:tab/><text:tab/><text:tab/>min = low[ i ];</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>if(high[i] &gt; max) {</text:p><text:p text:style-name="P494"><text:tab/><text:tab/><text:tab/>max = high[ i ];</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P494"><text:tab/>}</text:p><text:p text:style-name="P494"><text:tab/>value = min + value*(max-min);</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494"><text:tab/>/*</text:p><text:p text:style-name="P494"><text:tab/> * When there is no prediction put the average between ask and bid level.</text:p><text:p text:style-name="P494"><text:tab/> */</text:p><text:p text:style-name="P494"><text:tab/>if(successful == false) {</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>value = (Ask + Bid) / 2.0;</text:p><text:p text:style-name="P494"><text:tab/>}</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494"><text:tab/>/*</text:p><text:p text:style-name="P494"><text:tab/> * Display prediction.</text:p><text:p text:style-name="P494"><text:tab/> */</text:p><text:p text:style-name="P494"><text:tab/>if (lastValue == 0.0) {</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>ObjectSetText(&quot;text&quot;, &quot;Calculating ...&quot;, 8, &quot;Arial&quot;, TEXT_COLOR);</text:p><text:p text:style-name="P494"><text:tab/>} else {</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>ObjectCreate(&quot;arrow&quot;, OBJ_ARROW, 0, Time[0], WindowPriceMax());</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>ObjectSet(&quot;arrow&quot;, OBJPROP_STYLE, STYLE_SOLID);</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494"><text:tab/><text:tab/>ObjectCreate(&quot;line&quot;, OBJ_HLINE, 0, Time[0], lastValue, 0, 0);</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>ObjectSet(&quot;line&quot;, OBJPROP_STYLE, STYLE_SOLID);</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494"><text:tab/><text:tab/>if (lastValue &gt; (Ask+Bid)/2.0) {</text:p><text:p text:style-name="P494"><text:tab/><text:tab/><text:tab/>ObjectSet(&quot;arrow&quot;, OBJPROP_ARROWCODE, SYMBOL_ARROWUP);</text:p><text:p text:style-name="P494"><text:tab/><text:tab/><text:tab/>ObjectSet(&quot;arrow&quot;, OBJPROP_COLOR, UP_COLOR);</text:p><text:p text:style-name="P494"><text:tab/><text:tab/><text:tab/>ObjectSet(&quot;line&quot;, OBJPROP_COLOR, UP_COLOR);</text:p><text:p text:style-name="P494"><text:tab/><text:tab/><text:tab/>ObjectSetText(&quot;text&quot;, &quot;&quot;+DoubleToString(lastValue)+&quot; ~ &quot;+DoubleToString(PREDICT_BARS)+&quot; bar(s).&quot;, 8, &quot;Arial&quot;, UP_COLOR);</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>} else if (lastValue &lt; (Ask+Bid)/2.0) {</text:p><text:p text:style-name="P494"><text:tab/><text:tab/><text:tab/>ObjectSet(&quot;arrow&quot;, OBJPROP_ARROWCODE, SYMBOL_ARROWDOWN);</text:p><text:p text:style-name="P494"><text:tab/><text:tab/><text:tab/>ObjectSet(&quot;arrow&quot;, OBJPROP_COLOR, DOWN_COLOR);</text:p><text:p text:style-name="P494"><text:tab/><text:tab/><text:tab/>ObjectSet(&quot;line&quot;, OBJPROP_COLOR, DOWN_COLOR);</text:p><text:p text:style-name="P494"><text:tab/><text:tab/><text:tab/>ObjectSetText(&quot;text&quot;, &quot;&quot;+DoubleToString(lastValue)+&quot; ~ &quot;+DoubleToString(PREDICT_BARS)+&quot; bar(s).&quot;, 8, &quot;Arial&quot;, DOWN_COLOR);</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>} else if (lastValue == (Ask+Bid)/2.0) {</text:p><text:p text:style-name="P494"><text:tab/><text:tab/><text:tab/>ObjectSet(&quot;arrow&quot;, OBJPROP_ARROWCODE, SYMBOL_ARROWRIGHT);</text:p><text:p text:style-name="P494"><text:tab/><text:tab/><text:tab/>ObjectSet(&quot;arrow&quot;, OBJPROP_COLOR, TEXT_COLOR);</text:p><text:p text:style-name="P494"><text:tab/><text:tab/><text:tab/>ObjectSet(&quot;line&quot;, OBJPROP_COLOR, TEXT_COLOR);</text:p><text:p text:style-name="P494"><text:tab/><text:tab/><text:tab/>ObjectSetText(&quot;text&quot;, &quot;No change.&quot;, 8, &quot;Arial&quot;, TEXT_COLOR);</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P494"><text:tab/>}</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494"><text:tab/>/*</text:p><text:p text:style-name="P494"><text:tab/> * Redraw chart.</text:p><text:p text:style-name="P494"><text:tab/> */</text:p><text:p text:style-name="P494"><text:tab/>WindowRedraw();</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494"><text:tab/>/*</text:p><text:p text:style-name="P494"><text:tab/> * Keep value predicted on the previous call.</text:p><text:p text:style-name="P494"><text:tab/> */</text:p><text:p text:style-name="P494"><text:tab/>if (successful == true) {</text:p><text:p text:style-name="P494"><text:tab/><text:tab/>lastValue = value;</text:p><text:p text:style-name="P494"><text:tab/>}</text:p><text:p text:style-name="P494"/><text:p text:style-name="P494"><text:soft-page-break/><text:tab/>return( 0 );</text:p><text:p text:style-name="P494">}</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5862_1486593966"/><text:s text:c="4"/>vitoshatrade.sql<text:bookmark-end text:name="__RefHeading___Toc5862_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P495">-- phpMyAdmin SQL Dump</text:p><text:p text:style-name="P495">-- version 3.2.4</text:p><text:p text:style-name="P495">-- http://www.phpmyadmin.net</text:p><text:p text:style-name="P495">--</text:p><text:p text:style-name="P495">-- Host: localhost</text:p><text:p text:style-name="P495">-- Generation Time: Sep 07, 2015 at 08:03 </text:p><text:p text:style-name="P495">-- Server version: 5.1.41</text:p><text:p text:style-name="P495">-- PHP Version: 5.3.1</text:p><text:p text:style-name="P495"/><text:p text:style-name="P495">SET SQL_MODE=&quot;NO_AUTO_VALUE_ON_ZERO&quot;;</text:p><text:p text:style-name="P495"/><text:p text:style-name="P495"/><text:p text:style-name="P495">/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;</text:p><text:p text:style-name="P495">/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;</text:p><text:p text:style-name="P495">/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;</text:p><text:p text:style-name="P495">/*!40101 SET NAMES utf8 */;</text:p><text:p text:style-name="P495"/><text:p text:style-name="P495">--</text:p><text:p text:style-name="P495">-- Database: `veldsoft_vitoshatrade`</text:p><text:p text:style-name="P495">--</text:p><text:p text:style-name="P495"/><text:p text:style-name="P495">DELIMITER $$</text:p><text:p text:style-name="P495">--</text:p><text:p text:style-name="P495">-- Procedures</text:p><text:p text:style-name="P495">--</text:p><text:p text:style-name="P495">CREATE DEFINER=`root`@`localhost` PROCEDURE `insertCurrencyPair`(IN `symbol` VARCHAR(255), IN `period` INT(10))</text:p><text:p text:style-name="P495"><text:s text:c="4"/>MODIFIES SQL DATA</text:p><text:p text:style-name="P495"><text:s text:c="4"/>COMMENT &apos;Insert currency pair with currency symbol and minutes period.&apos;</text:p><text:p text:style-name="P495">begin</text:p><text:p text:style-name="P495"><text:tab/>declare period_id int;</text:p><text:p text:style-name="P495"><text:s text:c="8"/></text:p><text:p text:style-name="P495"><text:s text:c="8"/>select id into period_id from time_periods where time_periods.minutes=period;</text:p><text:p text:style-name="P495"><text:s text:c="8"/></text:p><text:p text:style-name="P495"><text:tab/>insert into currency_pairs (symbol, period_id, description) values (symbol, period_id, &quot;&quot;);</text:p><text:p text:style-name="P495">end$$</text:p><text:p text:style-name="P495"/><text:p text:style-name="P495">CREATE DEFINER=`root`@`localhost` PROCEDURE `saveAnn`(IN `symbol` VARCHAR(255), IN `period` INT(10), IN `number_of_neurons` INT(10), IN `flags` TEXT, IN `activities` TEXT, IN `fitness` DOUBLE, IN `weights` TEXT)</text:p><text:p text:style-name="P495"><text:s text:c="4"/>MODIFIES SQL DATA</text:p><text:p text:style-name="P495"><text:s text:c="4"/>COMMENT &apos;Save ANN information in many tables.&apos;</text:p><text:p text:style-name="P495">begin</text:p><text:p text:style-name="P495"><text:tab/>declare currency_pairs_id int;</text:p><text:p text:style-name="P495"><text:s text:c="8"/>declare ann_kind_id int;</text:p><text:p text:style-name="P495"><text:s text:c="8"/></text:p><text:p text:style-name="P495"><text:s text:c="8"/>set currency_pairs_id = checkCurrencyPairsId(symbol,period);</text:p><text:p text:style-name="P495"><text:tab/>if currency_pairs_id=0 then</text:p><text:p text:style-name="P495"><text:s text:c="8"/><text:tab/>call insertCurrencyPair(symbol, period);</text:p><text:p text:style-name="P495"><text:s text:c="8"/><text:tab/>set currency_pairs_id = checkCurrencyPairsId(symbol,period);</text:p><text:p text:style-name="P495"><text:s text:c="8"/>end if;</text:p><text:p text:style-name="P495"/><text:p text:style-name="P495"><text:tab/>set ann_kind_id = checkAnnKindId(symbol, period, number_of_neurons, flags, activities);</text:p><text:p text:style-name="P495"><text:s text:c="8"/>if ann_kind_id=0 then</text:p><text:p text:style-name="P495"><text:tab/><text:tab/>insert into ann_kind (currency_pairs_id, number_of_neurons, flags, activities) values (currency_pairs_id, number_of_neurons, flags, activities);</text:p><text:p text:style-name="P495"><text:s text:c="16"/>set ann_kind_id = checkAnnKindId(symbol, period, number_of_neurons, flags, activities);</text:p><text:p text:style-name="P495"><text:tab/>end if;</text:p><text:p text:style-name="P495"/><text:p text:style-name="P495"><text:tab/>insert into ann (ann_kind_id, fitness, weights) values (ann_kind_id, fitness, weights);</text:p><text:p text:style-name="P495"><text:s text:c="8"/></text:p><text:p text:style-name="P495">end$$</text:p><text:p text:style-name="P495"/><text:p text:style-name="P495">CREATE DEFINER=`root`@`localhost` PROCEDURE `saveTrainingSet`(IN `symbol` VARCHAR(255), IN `period` INT, IN `number_of_examples` INT, IN `time` TEXT, IN `open` TEXT, IN `low` TEXT, IN `high` TEXT, IN `close` TEXT, IN `volume` TEXT)</text:p><text:p text:style-name="P495"><text:s text:c="4"/>MODIFIES SQL DATA</text:p><text:p text:style-name="P495"><text:s text:c="4"/>COMMENT &apos;Save training set values.&apos;</text:p><text:p text:style-name="P495">begin</text:p><text:p text:style-name="P495"><text:tab/>declare currency_pairs_id int;</text:p><text:p text:style-name="P495"><text:tab/>declare id int;</text:p><text:p text:style-name="P495"><text:s text:c="8"/></text:p><text:p text:style-name="P495"><text:s text:c="8"/>set currency_pairs_id = checkCurrencyPairsId(symbol,period);</text:p><text:p text:style-name="P495"><text:tab/>if currency_pairs_id=0 then</text:p><text:p text:style-name="P495"><text:s text:c="8"/><text:tab/>call insertCurrencyPair(symbol, period);</text:p><text:p text:style-name="P495"><text:s text:c="8"/><text:tab/>set currency_pairs_id = checkCurrencyPairsId(symbol,period);</text:p><text:p text:style-name="P495"><text:s text:c="8"/>end if;</text:p><text:p text:style-name="P495"/><text:p text:style-name="P495"><text:tab/>-- Delete previous record, because information will be old.</text:p><text:p text:style-name="P495"><text:s text:c="8"/>select training_set.id into id from training_set, currency_pairs, time_periods where training_set.currency_pairs_id=currency_pairs.id and currency_pairs.period_id=time_periods.id and currency_pairs.symbol=symbol and time_periods.minutes=period;</text:p><text:p text:style-name="P495"><text:tab/>delete from training_set where training_set.id = id;</text:p><text:p text:style-name="P495"><text:s text:c="8"/></text:p><text:p text:style-name="P495"><text:s text:c="8"/>-- Insert new data for the same record.</text:p><text:p text:style-name="P495"><text:s text:c="8"/>insert into training_set (training_set.currency_pairs_id, training_set.number_of_examples, training_set.time, training_set.open, training_set.low, training_set.high, training_set.close, training_set.volume) values (currency_pairs_id, number_of_examples, time, open, low, high, close, volume);</text:p><text:p text:style-name="P495">end$$</text:p><text:p text:style-name="P495"/><text:p text:style-name="P495">--</text:p><text:p text:style-name="P495">-- Functions</text:p><text:p text:style-name="P495">--</text:p><text:p text:style-name="P495">CREATE DEFINER=`root`@`localhost` FUNCTION `checkAnnKindId`(`symbol` VARCHAR(255), `period` INT(10), `number_of_neurons` INT(10), `flags` TEXT, `activities` TEXT) RETURNS int(11)</text:p><text:p text:style-name="P495"><text:s text:c="4"/>READS SQL DATA</text:p><text:p text:style-name="P495"><text:s text:c="4"/>COMMENT &apos;Check for ANN kind id. Return 0 if it was not found.&apos;</text:p><text:p text:style-name="P495">begin</text:p><text:p text:style-name="P495"><text:tab/>declare id int;</text:p><text:p text:style-name="P495"/><text:p text:style-name="P495"><text:s text:c="8"/>select ann_kind.id into id from ann_kind, currency_pairs, time_periods where ann_kind.currency_pairs_id=currency_pairs.id and currency_pairs.period_id=time_periods.id and currency_pairs.symbol=symbol and time_periods.minutes=period and ann_kind.number_of_neurons=number_of_neurons and ann_kind.flags=flags and ann_kind.activities=activities;</text:p><text:p text:style-name="P495"><text:s text:c="8"/></text:p><text:p text:style-name="P495"><text:s text:c="8"/>if id is null then</text:p><text:p text:style-name="P495"><text:s text:c="8"/><text:tab/>set id = 0;</text:p><text:p text:style-name="P495"><text:s text:c="8"/>end if;</text:p><text:p text:style-name="P495"><text:s text:c="8"/></text:p><text:p text:style-name="P495"><text:tab/>return id;</text:p><text:p text:style-name="P495">end$$</text:p><text:p text:style-name="P495"/><text:p text:style-name="P495">CREATE DEFINER=`root`@`localhost` FUNCTION `checkCurrencyPairsId`(`symbol` VARCHAR(255), `period` INT(10)) RETURNS int(11)</text:p><text:p text:style-name="P495"><text:s text:c="4"/>READS SQL DATA</text:p><text:p text:style-name="P495"><text:s text:c="4"/>COMMENT &apos;Check for currency pair id. Return 0 if it was not found.&apos;</text:p><text:p text:style-name="P495">begin</text:p><text:p text:style-name="P495"/><text:p text:style-name="P495"><text:tab/>declare id int;</text:p><text:p text:style-name="P495"/><text:p text:style-name="P495"><text:s text:c="8"/>select currency_pairs.id into id from currency_pairs, time_periods where currency_pairs.period_id=time_periods.id and currency_pairs.symbol=symbol and time_periods.minutes=period;</text:p><text:p text:style-name="P495"><text:s text:c="8"/></text:p><text:p text:style-name="P495"><text:s text:c="8"/>if id is null then</text:p><text:p text:style-name="P495"><text:s text:c="8"/><text:tab/>set id = 0;</text:p><text:p text:style-name="P495"><text:s text:c="8"/>end if;</text:p><text:p text:style-name="P495"><text:soft-page-break/><text:s text:c="8"/></text:p><text:p text:style-name="P495"><text:tab/>return id;</text:p><text:p text:style-name="P495"/><text:p text:style-name="P495">end$$</text:p><text:p text:style-name="P495"/><text:p text:style-name="P495">CREATE DEFINER=`root`@`localhost` FUNCTION `listAnns`(`id` INT) RETURNS text CHARSET utf8 COLLATE utf8_general_ci</text:p><text:p text:style-name="P495"><text:s text:c="4"/>READS SQL DATA</text:p><text:p text:style-name="P495"><text:s text:c="4"/>COMMENT &apos;List ids of all ANN from particular type.&apos;</text:p><text:p text:style-name="P495">begin</text:p><text:p text:style-name="P495"><text:tab/>declare ids text;</text:p><text:p text:style-name="P495"><text:s text:c="8"/></text:p><text:p text:style-name="P495"><text:s text:c="8"/>-- TODO Implement list of ANNs.</text:p><text:p text:style-name="P495"><text:s text:c="8"/></text:p><text:p text:style-name="P495"><text:s text:c="8"/>return ids;</text:p><text:p text:style-name="P495">end$$</text:p><text:p text:style-name="P495"/><text:p text:style-name="P495">CREATE DEFINER=`root`@`localhost` FUNCTION `loadBestFitness`(`symbol` VARCHAR(255), `period` INT, `number_of_neurons` INT, `flags` TEXT, `activities` TEXT) RETURNS double</text:p><text:p text:style-name="P495"><text:s text:c="4"/>READS SQL DATA</text:p><text:p text:style-name="P495"><text:s text:c="4"/>COMMENT &apos;Load best fitness for particular ANN kind.&apos;</text:p><text:p text:style-name="P495">begin</text:p><text:p text:style-name="P495"><text:tab/>declare best double;</text:p><text:p text:style-name="P495"><text:s text:c="8"/>declare ann_kind_id int;</text:p><text:p text:style-name="P495"><text:s text:c="8"/></text:p><text:p text:style-name="P495"><text:tab/>select ann_kind.id into ann_kind_id from ann_kind, currency_pairs, time_periods where currency_pairs.symbol=symbol and time_periods.minutes=period and ann_kind.number_of_neurons=number_of_neurons and ann_kind.flags=flags and ann_kind.activities=activities and ann_kind.currency_pairs_id=currency_pairs.id and currency_pairs.period_id=time_periods.id;</text:p><text:p text:style-name="P495"/><text:p text:style-name="P495"><text:s text:c="8"/>select min(ann.fitness) into best from ann where ann.ann_kind_id=ann_kind_id;</text:p><text:p text:style-name="P495"/><text:p text:style-name="P495"><text:s text:c="8"/>-- TODO There is a bug in calling this procedure from phpMyAdmin and from calls.html.</text:p><text:p text:style-name="P495"/><text:p text:style-name="P495"><text:s text:c="8"/>if best is null then</text:p><text:p text:style-name="P495"><text:s text:c="8"/><text:tab/>set best = 10000;</text:p><text:p text:style-name="P495"><text:s text:c="8"/>end if;</text:p><text:p text:style-name="P495"><text:s text:c="8"/></text:p><text:p text:style-name="P495"><text:tab/>return best;</text:p><text:p text:style-name="P495">end$$</text:p><text:p text:style-name="P495"/><text:p text:style-name="P495">CREATE DEFINER=`root`@`localhost` FUNCTION `loadNeuronsAmount`(`id` INT) RETURNS int(11)</text:p><text:p text:style-name="P495"><text:s text:c="4"/>READS SQL DATA</text:p><text:p text:style-name="P495"><text:s text:c="4"/>COMMENT &apos;Check neurons amount in particular ANN.&apos;</text:p><text:p text:style-name="P495">begin</text:p><text:p text:style-name="P495"><text:tab/>declare amount int;</text:p><text:p text:style-name="P495"/><text:p text:style-name="P495"><text:tab/>select ann_kind.number_of_neurons into amount from ann, ann_kind where ann.id=id and ann.ann_kind_id=ann_kind.id;</text:p><text:p text:style-name="P495"><text:s text:c="8"/></text:p><text:p text:style-name="P495"><text:s text:c="8"/>if amount is null then</text:p><text:p text:style-name="P495"><text:s text:c="8"/><text:tab/>set amount = 0;</text:p><text:p text:style-name="P495"><text:s text:c="8"/>end if;</text:p><text:p text:style-name="P495"><text:s text:c="8"/></text:p><text:p text:style-name="P495"><text:s text:c="8"/>return amount;</text:p><text:p text:style-name="P495">end$$</text:p><text:p text:style-name="P495"/><text:p text:style-name="P495">DELIMITER ;</text:p><text:p text:style-name="P495"/><text:p text:style-name="P495">-- --------------------------------------------------------</text:p><text:p text:style-name="P495"/><text:p text:style-name="P495">--</text:p><text:p text:style-name="P495">-- Table structure for table `ann`</text:p><text:p text:style-name="P495">--</text:p><text:p text:style-name="P495"/><text:p text:style-name="P495">CREATE TABLE IF NOT EXISTS `ann` (</text:p><text:p text:style-name="P495"><text:s text:c="2"/>`id` int(11) NOT NULL AUTO_INCREMENT COMMENT &apos;Artificial neural network unique identifier.&apos;,</text:p><text:p text:style-name="P495"><text:s text:c="2"/>`ann_kind_id` int(11) NOT NULL COMMENT &apos;Artificial neural network kind foreign key.&apos;,</text:p><text:p text:style-name="P495"><text:s text:c="2"/>`fitness` double unsigned NOT NULL COMMENT &apos;Artificial neural network weights fitness.&apos;,</text:p><text:p text:style-name="P495"><text:s text:c="2"/>`weights` longtext NOT NULL COMMENT &apos;Artificial neural network weights.&apos;,</text:p><text:p text:style-name="P495"><text:s text:c="2"/>`happened` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT &apos;The moment in time when the record was created.&apos;,</text:p><text:p text:style-name="P495"><text:s text:c="2"/>PRIMARY KEY (`id`),</text:p><text:p text:style-name="P495"><text:s text:c="2"/>KEY `ann_kind_id` (`ann_kind_id`,`fitness`)</text:p><text:p text:style-name="P495">) ENGINE=MyISAM <text:s/>DEFAULT CHARSET=utf8 COMMENT=&apos;Artificial neural network.&apos; AUTO_INCREMENT=7 ;</text:p><text:p text:style-name="P495"/><text:p text:style-name="P495">--</text:p><text:p text:style-name="P495">-- Dumping data for table `ann`</text:p><text:p text:style-name="P495">--</text:p><text:p text:style-name="P495"/><text:p text:style-name="P495">INSERT INTO `ann` (`id`, `ann_kind_id`, `fitness`, `weights`, `happened`) VALUES</text:p><text:p text:style-name="P495">(1, 1, 0.002106, &apos;-0.502408 1.37402 1.969859 0.341332 0.38023 0.326395 -0.245521 0.257562 -0.170019 0.751908 -0.55504 0.655173 1.316117 1.839001 1.1408 2.446533 -0.557909 -2.524426 -0.644276 -0.148185 1.193451 -0.2313 1.726936 1.580218 0.111734 0.099643 -0.503822 -1.534017 -1.190642 0.266579 -0.175838 0.381451 1.041053 -0.197185 -0.390675 -0.537615 0.817804\r\n-0.84051 1.859976 -0.255394 -0.185764 0.068941 -0.190771 -0.166881 -1.433464 0.915319 0.644939 -0.105103 0.50968 -0.928554 1.086544 0.49001 0.475204 1.416046 0.779778 0.488839 -0.472518 -0.353618 0.340051 0.414045 -0.483614 0.433088 -0.016083 0.693121 -0.267556 -1.275826 2.208924 -0.171098 1.455215 -0.630609 0.461218 0.568773 1.002801 0.810663\r\n-0.113854 0.229577 1.511346 0.570727 -1.204953 -0.024759 0.628637 -0.149801 0.76104 -0.476669 -0.334598 -0.270171 -0.716519 0.74476 -0.330424 -0.606038 1.709916 0.482875 0.078707 0.196705 1.682813 0.338969 -0.848872 1.494231 -1.056266 -0.322855 -0.556078 0.735624 1.082486 0.09488 -0.490931 0.505112 -0.664415 0.075816 -0.351421 0.532151 1.170488\r\n0.644463 -0.120776 0.110272 -0.975863 0.445877 -1.394793 -0.607384 -0.109836 -0.155919 0.25995 0.433821 -0.118259 1.112411 -0.264504 1.675417 -0.547227 0.905698 0.51838 -0.05859 -1.403706 1.094819 -0.447697 -0.005881 -0.284256 0.422055 -0.091403 -0.731832 0.873226 -0.041352 0.371014 -0.509349 0.39671 -2.202984 0.290994 1.185415 -1.33009 0.795353\r\n0.18717 -2.798574 -0.501093 -1.710115 0.82925 -1.068975 -0.135838 -0.78842 -0.050302 0.945677 0.513108 -0.489591 -0.897641 -0.513596 -1.401768 -0.624473 -1.041074 -0.777215 -0.771783 -0.03237 -0.576449 0.941588 -2.396949 0.665029 1.54664 -0.325375 -0.13655 -1.593821 -0.788324 1.170227 0.798517 0.675213 1.579493 -0.836468 -1.062848 2.134044 1.528402\r\n-1.771119 0.2705 -0.617278 2.604684 0.020873 2.481952 1.048504 0.656617 1.052967 -1.145498 1.195956 0.104716 0.592062 0.71514 0.912473 -0.961486 -1.652671 0.138522 1.014786 1.929172 0.004681 1.636388 0.105109 0.386161 0.371014 -0.42204 -0.911252 -0.719337 -0.01883 0.520615 0.823351 1.218587 0.618987 -0.003824 0.509869 0.030305 -0.275063\r\n1.156423 1.200071 0.257826 -1.246733 1.532118 0.565844 0.842768 0.472836 -0.583911 0.229447 -0.573678 -0.596088 0.850641 0.968057 -1.030076 1.208957 1.777645 -0.273876 0.176632 -0.22516 -0.501556 1.141132 -0.380047 -3.111661 0.540202 0.902824 0.01761 -1.866675 -2.756264 -0.918428 -1.549836 -0.337495 -0.988708 -0.798366 0.233192 -0.51968 -0.008942\r\n-0.515209 -1.761181 -3.163036 -2.25172 0.376311 0.430481 0.312904 -1.129272 0.583911 0.258805 -1.541618 0.511529 0.092222 -0.649776 1.913971 0.240259 1.887165 -0.703055 0.163488 0.184179 -1.170457 1.313039 -0.789865 1.589201 1.780175 -0.895138 0.552721 -0.806748 -1.35384 0.556518 -0.237424 -0.73986 -0.271958 0.380779 0.653554 0.906402 0.187902\r\n-0.135696 -0.329863 -0.662465 0.414106 -0.678823 0.93229 0.010895 0.621509 -0.71919 1.136969 0.400218 -0.71514 0.994385 -0.644331 -1.776417 0.41557 -0.452504 0.772098 0.449019 2.162377 -1.575198 0.653595 0.71236 -0.349773 -0.733313 -0.093966 -0.614124 0.160192 -0.723258 -1.094442 0.488766 0.6339 -0.878437 -0.66686 -0.291604 0.451094 -0.582141\r\n-2.154858 -0.664724 0.631122 -1.225661 0.378172 0.158666 0.425459 0.558397 -1.095595 0.086208 -0.395489 0.810724 -0.064413 -0.659841 -0.500839 -0.738173 0.9953 -0.1938 1.545008 2.185461 -0.488205 0.43456 -0.165057 0.880339 -0.638772 -0.159588 0.511765 -0.958809 1.242594 -0.646107 0.730461 0.955937 -0.970458 1.476586 -0.091877 0.231095 -1.062478\r\n0.176744 0.167277 0.302158 -0.897652 -0.016083 -0.061276 -0.722442 -1.083392 -0.254279 -0.176733 -0.604724 -0.181745 0.402936 2.964502 -0.249123 -0.525071 -0.823151 1.910771 -0.176794 1.685299 -0.060701 1.399797 -0.173334 0.301553 -0.101786 0.195907 0.330221 0.830821 0.03652 -0.462785 1.483313 -0.220382 -0.510915 -0.795123 -0.30593 -0.525815 -0.451277\r\n-0.596217 -0.593393 0.334819 2.016267 0.739508 -0.530394 1.400114 0.780206 -0.845271 0.428632 1.127326 0.716483 0.440238 -1.614294 1.806349 -0.726127 -0.06198 -0.696095 -1.11422 0.069602 -0.27842 -0.966369 -2.022787 0.59566 1.469952 0.166784 0.568221 -0.706709 0.268752 1.478015 -0.512619 -2.044863 0.30227 -1.680132 -0.937742 0.828832 -0.316141\r\n-1.0879 0.048582 -0.336668 -0.633952 -0.240211 -0.899655 1.833012 -0.199072 0.452909 0.144625 -0.718253 -1.211325 -0.53387 0.719862 -1.303892 -0.087051 0.407819 -0.477629 1.23465 0.031098 0.091769 -1.64646 -1.091309 0.587264 -0.396184 0.432571 0.601245 0.145726 -0.521447 0.668623 -2.312664 0.276451 -0.541551 -1.837048 -0.954388 0.20719 0.175695\r\n0.381825 0.940045 -0.27995 -0.934629 0.588366 0.609973 0.46025 -1.867185 -0.234596 -0.170868 -0.077364 -1.821299 -0.094796 0.533006 -0.9763 0.403546 0.485752 0.606465 -1.604242 0.700925 -0.920835 -0.617115 0.660314 1.573057 -0.993516 0.649281 0.169469 -1.166347 0.94595 0.033906 2.792102 -0.203894 0.161168 -0.004541 -0.416002 -0.49265 0.202063\r\n0.241652 -0.929197 1.502195 0.170812 0.499861 2.808171 1.170774 0.364229 -0.936644 -0.39964 -0.980148 -0.598437 1.223487 -0.348663 0.402997 0.021385 -1.014246 1.689698 -1.326363 -1.340388 0.146397 0.614534 0.721675 3.395437 -1.017854 -0.882809 -0.545215 0.715384 -0.685781 -0.225379 -1.317139 -0.009166 -0.701343 0.530259 1.218645 -0.444797 0.745221\r\n0.86877 0.039644 -0.736991 -0.292459 -1.022303 0.853633 -0.807489 1.103035 -2.404765 0.123371 -1.855559 -1.919207 0.435542 -0.730766 0.272631 1.617549 0.065157 -1.662288 -0.13187 0.267115 0.691819 -0.332209 -0.963805 -0.947752 -1.633086 -0.951781 0.264992 0.423139 -0.664968 -2.006875 -0.629285 -0.309915 0.093112 0.980346 -0.490596 1.73482 0.550796\r\n-0.965194 -0.113631 -0.699863 -0.228682 0.436445 0.774468 -0.674306 0.387548 -1.567391 -0.694635 0.314973 -1.619283 -0.752434 0.382274 0.822626 0.706551 0.01767 0.7022 -0.7257 -0.304544 0.975463 0.971004 -0.392224 -0.705679 0.13016 1.064783 0.832462 -0.904965 0.179407 -0.807794 0.811147 0.702872 -0.838305 0.747307 -0.684215 0.599083 -0.808954\r\n2.288126 -0.848056 0.952378 0.593605 0.733024 0.329371 -0.327169 -0.538179 0.878422 0.310404 -0.690785 1.77028 -1.363384 1.102141 -0.335641 -0.361996 0.397849 1.222722 -1.05107 0.296793 -0.357036 0.529464 0.72277 0.221351 -0.013893 1.333483 0.973022 -0.767022 -2.300088 -1.18148 0.799921 1.155969 0.889852 1.657288 1.828041 -0.081844 -0.688916\r\n0.600024 0.324808 -1.012767 0.254616 0.41081 -0.033906 0.6482 -0.622961 -1.688579 -0.255091 0.049304 2.034809 -0.570394 0.475082 1.151933 0.913572 0.051341 0.136753 0.188178 -0.661663 0.1489 0.030737 0.646754 -0.989609 2.05183 -1.539299 0.53209 0.446861 0.501694 -2.134767 1.324397 -0.170995 -0.206746 1.247466 0.528378 3.497142 -0.932371\r\n-0.035878 -0.604876 0.744804 2.298999 1.814237 -0.802923 -0.284707 0.544791 1.055456 0.082125 0.764271 2.01371 0.810358 0.291665 -0.567186 1.901717 -0.528428 1.109367 -1.041259 -0.12753 1.198924 -0.85463 0.087226 0.398372 0.410033 0.85699 0.286575 -1.033435 0.493332 -0.704947 -1.061186 -0.212622 2.332226 1.118028 -0.172399 -1.432152 0.497421\r\n0.497421 0.21369 -0.74946 1.926064 0.229176 1.17206 1.822657 0.529038 0.505273 2.571598 -0.012493 -0.410278 0.053743 0.317693 0.421674 0.792657 1.097157 -0.391102 -0.017885 0.427765 0.068586 0.617664 2.432439 -1.149185 1.152158 0.217811 -0.361309 0.58461 -0.900571 -0.663869 0.905008 -0.050325 -1.272261 -0.514573 0.162755 -1.154581 -0.222957\r\n2.006031 0.264376 -0.89219 0.695018 -0.551555 -0.457668 -0.024751 0.136387 0.547591 -0.210608 -0.54555 -0.648782 -0.808832 1.012292 1.026072 0.781487 -0.247094 0.077059 2.019845 -0.848018 0.093971 -0.746941 -0.630562 -1.258519 -0.275918 0.438887 1.237956 -1.114954 -0.906896 0.026948 0.919626 3.276273 -0.851026 -0.339457 0.495351 1.207411 0.695738\r\n-0.325496 -0.326395 0.837418 0.478927 0.484319 -2.610691 0.950589 0.734506 0.038336 -0.578539 -1.780465 -0.147069 -0.803217 0.452071 -0.950483 -0.720338 0.824274 -0.376385 -0.909207 -0.742607 0.695486 0.640126 -0.591642 -0.397881 -0.434899 0.818231 -2.410795 -0.731391 -0.499802 0.500046 -0.501938 0.175642 -0.559156 -1.711813 -0.107294 -2.39488 0.544163\r\n-0.301932 1.283794 0.206829 -0.825739 1.437085 -0.099827 -0.571642 -0.299006 0.403466 1.378612 0.638112 -0.07846 -0.295601 -0.110263 -2.214044 -1.010331 -1.129318 -2.176775 -0.553697 -1.310945 0.157325 0.221778 1.657471 -0.65511 0.451418 0.301614 -0.729789 0.621907 0.794919 -2.394637 -0.158483 -0.141453 -0.001437 -1.053384 0.267129 -1.306957 -0.15421\r\n1.99041 -0.555374 -0.759316 0.175634 0.205632 0.362957 0.425153 -0.191321 0.044465 -0.57223 -0.056498 -1.190123 0.082213 0.572985 0.141636 -0.935179 -0.064972 -0.479232 0.030078 -1.185837 -0.336969 -0.428388 -1.186415 0.702528 0.132201 -0.572345 -0.82805 -0.123994 0.006221 -0.83615 -0.197641 0.150948 -0.983587 0.113494 1.063977 0.338481 -0.314559\r\n-2.65436 0.830224 -0.943724 2.027598 1.583024 0.418256 0.327593 1.195165 -0.08652 0.885556 1.547961 -0.45939 1.927965 0.47698 1.796749 0.381146 -0.16076 -0.684927 -0.183017 -1.045809 0.670474 -1.014861 0.637318 2.663282 0.066894 0.747307 0.789422 -1.307797 -0.079067 1.316631 -1.7364 0.127061 1.433873 -0.38294 0.861141 0.689932 -0.120286\r\n-0.726005 -0.90233 -2.076838 -0.236356 0.094551 -0.154734 -0.195532 0.208624 0.707146 -0.183908 -0.437446 0.349392 -1.147423 1.922769 0.845943 0.744743 -2.206327 0.020087 0.431241 1.197696 -0.889157 -0.997986 0.767205 0.647267 -0.382232 0.350566 1.489769 -0.154515 0.192724 0.349558 -0.767632 0.423876 0.508575 0.426984 -0.929606 -0.657962 -0.784533\r\n1.235002 -1.307799 1.323514 -0.875534 -0.693411 -0.828635 0.855586 2.066441 -0.991577 0.090368 -0.981506 -0.687231 -1.756006 0.319803 -0.500412 0.805719 0.208588 0.433071 1.068924 0.600217 -1.211277 -0.493553 1.066249 -0.924192 -0.621387 -0.606677 -0.300203 1.648567 0.829744 -0.325098 -1.429073 1.408242 0.627785 -0.959593 -1.168165 0.771437 -0.771822\r\n-0.609729 -2.258458 0.715941 -0.031652 -0.219084 1.121687 -1.295736 1.178728 -1.659439</text:p><text:p text:style-name="P495"><text:s/>-0.100797 -0.282869 -0.727505 0.773309 -0.392777 -0.273293 -0.963622 -0.17783 -0.566088 -2.536862 2.404757 0.354961 -0.957457 -1.353782 0.275597 -0.62035 -1.453265 -0.737344 1.802558 1.347738 -0.726798 0.716355 -2.041527 0.962443 -0.232765 0.678761 -0.287759 -0.749293\r\n0.09067 0.2125 -0.101718 -0.475121 0.758291 -1.021449 -0.875179 -0.125504 -1.41115 0.31275 0.213294 1.088339 -2.117917 0.839173 -0.138448 -0.193058 0.819758 -1.303533 -0.390606 0.402532 1.253501 1.114069 -0.354656 -0.875915 -1.525879 0.388653 0.613596 0.854687 -1.584944 -1.452364 -0.662553 1.3353 1.404649 -0.568957 -0.381311 -1.595198 -0.087387\r\n-0.402692 -0.921823 0.25486 0.707327 -0.222505 -0.998978 0.550218 -0.566027 0.568635 -0.986145 -1.693986 -0.204233 0.457503 0.343447 0.931445 -0.518865 0.701956 -0.68649 -0.504257 0.183264 -0.216247 -0.787347 0.995241 -0.486557 -0.803631 0.958251 0.392063 -1.230239 0.321929 0.330227 -0.895322 0.369182 -0.733593 -0.537889 0.441816 -0.884823 0.886485\r\n-0.868038 -0.388915 -0.697749 -0.002899 -0.049122 0.802362 1.325214 -0.113193 1.855223 -0.695329 -0.363666 0.393597 -1.502999 0.939004 -1.668661 -0.537132 -1.109814 -0.251673 -0.077416 -2.429476 0.572863 0.949461 -0.904416 1.634722 -1.271468 -1.107269 -2.890122 -1.629588 -0.993981 -0.206091 -0.022807 0.323794 1.138398 -0.247375 0.412275 -0.364626 0.274131\r\n-1.718273 0.146092 -0.257546 -0.045991 -0.922375 -0.416364 0.951476 -0.310324 1.101083 -0.843928 0.155156 -0.835438 1.20596 -2.08654 0.061238 -1.64322 0.631031 -0.153294 0.402509 0.141911 0.161657 0.794687 -0.01813 1.266883 0.132508 1.204058 0.26635 -0.310606 -0.746086 0.553998 -0.014432 1.291023 0.430681 0.953701 0.359826 -0.739189 -1.827527\r\n0.65461 1.765657 -0.913164 -0.123617 0.346568 0.916757 -0.157409 0.288222 2.861028 -0.949292 0.846553 0.295838 0.023068 0.594288 -1.240893 -0.705496 -0.701984 0.039888 1.907027 1.786893 -1.618723 -0.546678 -2.164384 -0.80633 -0.065035 0.479146 0.323081 -0.987976 0.130788 -1.847196 1.087423 -0.170995 0.408612 0.890568 -0.531917 -0.53972 0.695669\r\n-0.058782 1.072133 0.694714 0.48829 -1.120477 -0.53264 1.894305 -1.785967 -0.07651 -2.897316 0.021027 0.897339 0.289009 -0.707247 -1.147299 -0.00499 -0.548448 0.434759 -1.050739 -1.396757 -0.697976 0.134106 -0.072298 0.765599 -0.803095 -0.758526 0.125559 0.34611 -0.936505 -0.36961 -0.833125 0.831965 -0.086187 0.007721 -0.511277 -0.081603 -0.911378\r\n-0.093539 0.529803 1.419954 0.065666 -0.887753 0.062349 -1.62913 -0.736355 0.541784 0.372784 -1.9271 0.345317 -0.779229 -0.923186 0.696052 0.280923 -1.17813 -0.007893 0.920896 0.861564 -0.986155 -0.901692 -0.807201 1.286283 -0.623666 -0.443754 0.305826 -1.141541 -0.889672 -0.010712 0.923582 -0.052461 0.858298 -0.081851 0.277871 2.148505 0.677144\r\n0.409976 0.592517 0.368694 -0.176366 -1.918678 0.020517 0.445601 -0.401227 -0.431318 0.647491 0.525071 1.267225 -0.863069 -0.026948 0.912351 -1.001169 -1.929618 -0.342146 -0.470467 0.550967 1.146603 0.162084 -0.194407 -0.723443 0.399579 0.791501 -0.65569 -0.998068 0.435556 -0.989563 0.003869 -0.188488 0.925716 -0.052476 -0.155187 1.042015 -0.418277&apos;, &apos;0000-00-00 00:00:00&apos;),</text:p><text:p text:style-name="P495">(2, 1, 0.001391, &apos;0.903378 -0.49559 -0.07651 0.279397 0.531724 0.337321 0.665151 -0.849849 0.183081 -0.060091 0.14481 -0.022187 -0.486557 -0.331217 0.317057 -0.174474 -0.447066 0.775018 -0.59331 -0.913999 0.921384 -0.994751 0.353679 -0.602405 0.32963 0.349101 -0.176183 6.043501 0.178564 -0.508591 -0.90112 -0.378521 -0.931944 -0.464034 -0.84228 -0.128819 0.028718\r\n0.560167 -0.738395 -0.65276 0.288553 -0.435835 -0.644337 0.375225 -0.612354 -0.621937 -0.400372 -0.472335 -0.547105 -0.912717 -0.66039 -0.041292 0.444929 -0.45909 0.834101 -0.52385 0.191137 0.504257 0.045686 -0.584826 0.015229 -0.981628 -0.186926 0.374615 -0.221961 -0.470443 -0.287149 -0.12064 -0.859981 -0.649953 -0.073702 0.031037 0.859798 0.013947\r\n-0.577868 0.209571 0.93939 0.090121 -0.231544 0.88757 -0.569506 0.014252 0.885739 -0.379009 0.713004 0.50322 0.053804 -0.722037 -0.941404 -0.886044 0.485824 -0.431684 0.292276 0.509384 0.780023 -0.063936 -0.63628 0.993591 -0.436079 0.878536 0.641652 0.879452 0.642201 -0.24723 0.742973 -0.749382 0.960082 0.133641 0.710074 0.680471 0.697073\r\n0.784478 -0.652455 0.470443 -0.198828 -0.696219 0.532701 -0.029145 0.277139 0.510605 0.30961 0.546007 0.541063 0.62981 0.582568 -0.254006 -0.845698 -0.658498 -0.781732 0.248634 0.248573 0.755913 -0.628224 -0.866878 -0.045442 -0.623768 -0.153294 0.048067 0.147496 0.112888 -0.696402 -0.16306 0.821528 0.410443 0.128513 0.182836 -0.595019 -0.449324\r\n0.773614 -0.165014 0.330607 -0.806024 0.384014 -0.019501 -0.829096 0.221229 0.521165 0.32255 0.653432 -0.060945 -0.202795 0.428205 0.866939 0.711234 0.231483 -0.091525 0.971496 0.07767 -0.857723 -0.007233 0.725333 -0.574999 -0.613269 0.060213 -0.859798 -0.730277 -0.240028 -0.309 0.578478 0.217505 0.367901 -0.200903 -0.396527 -0.339335 0.784234\r\n-0.589892 0.897458 -0.72338 -0.194006 -0.354228 -0.442915 -0.610645 0.618641 -0.521958 0.081454 -0.743339 0.183996 0.815485 -0.636769 -0.654103 0.663442 -0.516404 -0.003327 0.660451 -0.311686 -0.336772 -0.785638 -0.820673 -0.708548 0.347026 -0.234596 0.472762 0.31016 -0.620594 0.047395 0.555712 0.075167 -0.359905 -0.194983 0.042756 0.19718 0.934935\r\n0.707572 -0.334391 0.2631 0.156468 0.117344 0.216956 0.255287 -0.723746 -0.637257 0.982177 -0.49382 -0.267922 0.827326 -0.278054 0.999939 0.771416 -0.832636 0.268654 0.834651 0.31547 0.972167 0.797418 -0.342448 -0.095492 0.176428 0.836665 -0.115574 0.288003 -0.459273 0.078524 -0.482406 -0.778375 -0.490341 -0.946593 0.373638 0.034211 0.762261\r\n0.729301 -0.466292 0.525925 -0.234474 -0.899838 -0.17069 0.762078 -0.354595 -0.175085 0.175451 -0.677236 -0.314615 0.979553 -0.436079 0.573412 -0.232398 0.984924 -0.470321 0.515549 -0.932676 -0.226661 0.901852 -0.215918 -0.686087 0.255654 -0.347575 -0.649709 -0.069308 0.150914 -0.344157 -0.505417 -0.6339 -0.756645 -0.82989 -0.388348 -0.070589 0.126316\r\n0.85406 -0.590075 0.441755 -0.502853 0.131504 -0.932127 0.016816 0.066317 -0.283914 0.910276 -0.71691 0.141148 -0.891293 0.166051 0.359294 0.948546 0.879818 -0.628956 -0.103305 0.75811 0.549425 -0.022431 0.500351 -0.131199 -0.122227 -0.266518 0.841731 -0.478561 0.377972 -0.606555 -0.225196 0.799249 0.864071 -0.675344 0.769524 0.578967 -0.152989\r\n-0.430403 -0.027192 0.595996 0.590442 -0.07181 0.2125 0.684744 -0.360759 -0.37785 0.253883 0.257118 0.633351 -0.896054 -0.376629 -0.9176 0.218848 -0.427351 0.311014 -0.569872 -0.129978 0.759148 -0.336039 0.638234 0.433027 0.543626 -0.215369 0.170324 -0.794549 0.967772 -0.255593 0.223182 0.363567 0.203528 -0.073153 -0.052034 0.548875 -0.958312\r\n0.812128 0.346477 0.428449 -0.537523 -0.484725 -0.093417 0.039827 -0.149388 0.391095 0.037873 0.733512 0.417402 -0.982604 0.370647 -0.47441 -0.607715 -0.129368 0.980895 0.673757 -0.453047 -0.995727 -0.396771 0.287088 <text:soft-page-break/>-0.387005 0.04471 0.895199 0.785089 0.157567 0.814997 -0.18601 -0.984497 0.477889 0.900876 0.169897 0.845943 0.078219 -0.529832\r\n0.417035 0.039277 -0.708914 -0.3408 -0.254128 0.228553 0.605884 0.836909 0.538438 -0.199866 -0.733634 -0.938292 0.249062 0.500961 0.700919 -0.958312 0.774346 -0.420026 -0.653066 -0.0889 0.372784 0.278115 0.432295 0.135716 0.198645 0.477401 -0.723746 -0.140049 0.510971 0.323771 -0.327128 0.007782 0.62096 0.634144 -0.08182 0.44969 -0.359355\r\n0.901852 0.045015 0.549181 0.09415 0.711722 0.827082 0.399823 -0.544969 -0.621937 0.115329 0.067293 -0.327677 -0.382061 -0.931639 -0.853206 -0.2537 0.071688 -0.159398 -0.049898 -0.581286 0.483749 -0.711112 0.633351 -0.961974 0.35667 0.262673 -0.420392 -0.33665 0.889279 -0.963073 -0.652944 0.468673 -0.986511 0.453902 -0.503464 -0.48912 -0.65923\r\n-0.667226 0.610096 0.923582 0.83105 -0.287454 0.81402 0.598498 -0.002838 0.488876 -0.882382 -0.581469 -0.542772 -0.992004 0.88171 0.10361 -0.353618 -0.819636 -0.272622 0.732292 0.501694 -0.323954 -0.800104 -0.998291 0.932188 0.76513 0.498337 0.289041 0.886471 -0.63567 -0.416181 -0.425642 -0.169469 0.854244 -0.019929 0.291787 0.448103 -0.772515\r\n0.577136 0.166662 -0.623768 0.132298 0.751701 -0.895077 -0.211219 0.372539 0.116489 -0.804804 -0.360393 0.427656 -0.789178 -0.113071 0.378521 -0.445723 0.445418 0.406232 -0.047273 0.032868 -0.387127 0.473312 0.905881 0.120579 -0.721732 -0.617298 -0.613575 0.274758 0.359905 0.509445 -0.119846 0.207434 -0.785333 -0.697012 -0.523606 -0.664968 0.539781\r\n-0.166784 0.482955 0.184668 -0.596973 -0.052034 -0.799799 -0.679678 0.71514 0.108066 -0.33079 -0.649037 -0.544908 -0.040803 0.203467 0.582812 -0.037263 -0.294351 -0.480575 -0.120701 -0.390301 0.346599 0.27665 -0.709891 -0.837886 -0.161351 0.840693 0.012299 -0.853023 -0.753655 -0.918577 0.246071 0.53502 -0.056246 -0.981445 0.50737 -0.94763 -0.071261\r\n0.127598 0.96057 -0.565905 0.314127 0.118503 0.332133 0.930784 0.055757 0.999329 0.970275 0.382366 -0.017426 -0.762566 -0.390179 0.170385 0.189123 -0.168371 0.408734 -0.638112 -0.145787 -0.894528 -0.185522 -0.642994 -0.45201 0.037385 -0.173254 0.353252 -0.910703 0.937254 -0.783868 -0.061861 -1.763249 -0.716483 -0.737358 0.124119 0.736015 -0.466597\r\n-0.423566 0.13657 -0.596606 0.717643 0.562731 -0.731315 0.613208 0.63274 0.093844 -0.884884 0.945982 0.444563 0.951231 -0.50322 -0.556627 0.512986 0.598743 -0.60979 0.071688 -0.746941 -0.148961 -0.827448 0.235389 -0.157079 -0.001068 -0.50383 -0.59563 0.592334 0.953917 -0.896115 0.917295 -0.216285 -0.024934 0.899167 -0.977844 0.798395 -0.459517\r\n0.581286 0.219092 0.340495 -0.074374 -0.838862 0.965209 -0.429121 -0.948973 -0.33311 0.805719 0.964049 -0.837519 -0.645558 0.993713 0.699637 0.905454 -0.266152 -0.340373 -0.597888 0.356304 -0.27488 -0.404462 -0.959227 -0.426313 0.254982 -0.286233 0.801386 0.231483 -0.392438 0.244545 -0.255959 0.896237 -0.157933 0.734367 -0.941588 -0.488205 -0.411664\r\n0.907529 -0.271218 -0.34611 -0.465133 -0.546495 0.42204 0.115635 -0.079928 0.802728 -0.589343 0.388836 0.340251 0.952513 -0.656117 -0.398785 -0.813959 0.407392 0.678274 -0.525803 -0.978942 -0.705985 0.581103 0.861934 -0.78637 0.715567 -0.880428 0.435041 0.135472 -0.594531 -0.453108 -0.928282 0.238868 -0.253945 0.498825 0.518174 0.325724 0.211524\r\n0.912839 -0.11948 0.320109 0.300089 -0.517502 0.512558 0.857479 -0.983276 -0.540269 0.859127 -0.99762 0.969115 0.616565 -0.18009 0.408612 -0.861019 -0.820002 0.194983 -0.768548 0.392743 -0.447615 0.774712 0.108493 0.791742 0.628651 0.637196 -0.482406 0.766533 0.523972 0.214576 0.827082 -0.783197 0.524766 0.692007 0.349895 0.599597 0.073763\r\n0.300638 0.713736 0.067782 -0.396405 -0.932005 0.860347 0.72277 -0.970092 0.587878 0.986389 0.042146 0.717765 0.371685 -0.262307 -0.453902 0.732475 -0.654714 -0.029328 0.764519 -0.811213 0.052217 0.391766 -0.433088 -0.490158 0.126438 -0.61095 -0.080782 -0.591235 0.5974 0.367351 -0.872555 -0.594287 -0.410566 0.899777 -0.366619 -0.307962 0.978515\r\n-0.99176 -0.577319 -0.844722 0.567675 0.885739 0.109348 -0.623585 -0.654286 -0.628529 0.758232 -0.587817 0.389569 -0.506149 0.507981 0.175207 0.973754 0.391217 0.058077 0.224525 0.449629 -0.075777 -0.919126 -0.221717 -0.543382 -0.707144 -0.377544 0.761956 -0.972045 -0.03122 0.55388 -0.295999 -0.846675 0.257241 -0.864254 -0.70806 -0.638783 -0.199499\r\n0.759209 -0.599292 0.883236 -0.665517 0.924009 -0.593493 0.962706 0.012665 0.518723 0.598132 0.870907 -0.391827 0.462996 0.498581 0.192358 -0.092257 0.776605 -0.090915 0.942015 0.609424 0.13596 0.488754 0.077548 0.036531 0.982116 -0.318949 -0.03177 -0.019135 0.241432 0.801691 -0.616688 0.987121 0.722526 -0.902341 0.562792 -0.609119 -0.748955\r\n-0.407147 0.93231 0.423933 0.605762 -0.46971 -0.974548 0.697501 -0.682669 -0.775018 -0.82458 0.377178 0.393414 0.139622 0.538499 0.362346 -0.968444 -0.005341 -0.987793 0.781243 0.383404 -0.272805 -0.388958 0.115146 -0.568468 0.108798 -0.139195 -0.73571 0.042817 0.83697 -0.224586 -0.132664 -0.740654 -0.088778 0.978576 -0.812799 -0.109226 0.106967\r\n0.531724 0.876339 -0.530686 0.359478 0.032258 -0.067476 0.631214 0.870724 -0.456709 -0.840449 0.985717 -0.248939 0.918332 -0.556444 -0.4644 0.008881 0.082369 -0.841426 -0.289468 0.700125 0.833369 -0.986511 0.076083 -0.949339 -0.275124 -0.347026 0.781487 -0.635975 0.594226 0.324503 0.807794 -0.474105 0.296304 -0.075411 0.079562 0.920042 0.208472\r\n0.736564 -0.497971 0.565783 -0.933592 0.171545 0.98706 -0.708487 -0.305216 0.826838 0.529099 0.755119 -0.804926 0.172277 0.395245 -0.875057 -0.847102 0.178564 -0.509323 0.233558 -0.572741 0.199499 -0.037629 0.016205 0.084384 -0.579821 -0.896664 -0.952696 -0.961486 0.184545 0.621143 0.987182 -0.037446 0.514267 0.330729 -0.249306 0.030183 -0.868831\r\n0.336894 -0.787774 0.053072 -0.703299 0.766594 0.257424 0.574755 0.779717 -0.884884 0.995178 0.484115 0.265847 0.267739 0.942625 -0.288858 -0.478927 -0.740471 0.995239 0.566759 -0.378704 -0.163366 -0.005951 -0.709952 0.560961 0.879757 -0.295999 0.365154 0.55327 -0.245582 -0.986206 -0.830622 0.333842 0.648976 -0.828059 -0.482955 0.781426 0.9635\r\n0.869869 -0.340739 -0.833125 -0.187963 0.985046 -0.696036 0.344096 -0.299478</text:p><text:p text:style-name="P495"><text:s/>-0.20249 -0.782403 0.194311 -0.556871 0.490951 -0.028535 -0.362712 -0.620838 -0.248695 -0.604785 0.521165 0.953551 -0.72393 -0.700369 -0.296365 -0.2772 -0.994018 -0.968505 0.63744 -0.150426 -0.108127 0.423261 0.771722 -0.852351 -0.991211 -0.30076 0.08243 0.74041 0.831416\r\n0.902097 -0.95526 0.395123 -0.519578 0.400311 -0.641652 -0.404462 -0.244118 -0.958739 -0.259865 -0.585009 -0.233192 -0.489242 0.094821 -0.746879 0.971557 -0.538194 0.378033 -0.501816 0.440718 -0.023652 -0.537584 0.177587 -0.844417 -0.079501 0.320719 0.659352 -0.846614 -0.242409 0.837336 0.467086 -0.666494 -0.619617 0.561632 0.269936 0.735954 -0.474654\r\n0.715018 -0.88818 -0.895077 -0.668691 -0.235694 0.940794 -0.449202 -0.394147 -0.125706 0.501755 -0.879208 0.360027 0.5515 -0.344829 0.093783 0.176244 0.791681 0.184057 -0.190588 -0.029756 0.044282 0.151463 -0.154942 0.709891 -0.694876 -0.128574 0.353252 -0.346416 0.651112 0.555956 0.371136 0.671377 0.528245 -0.300455 -0.084384 -0.790704 -0.893246\r\n0.265603 0.676138 -0.537767 -0.985656 -0.265053 -0.882931 0.314982 -0.23838 0.081027 0.803583 -0.383892 -0.829402 0.732963 -0.238075 -0.653554 0.120518 -0.410688 -0.312174 -0.756096 -0.078158 0.145482 0.814936 -0.551378 0.632008 -0.203467 -0.744316 -0.270608 -0.375164 -0.621387 0.627857 -0.144627 0.727042 -0.989135 0.778008 0.674184 -0.767632 0.300882\r\n-0.584155 0.460005 -0.891476 -0.024567 -0.529038 0.093295 -0.292825 -0.999573 -0.015595 -0.364483 0.290262 0.25071 -0.651784 -0.139622 -0.314005 0.793512 0.705374 -0.694937 -0.614429 -0.152257 0.321818 0.40318 -0.606067 0.481735 0.744011 -0.737846 -0.853023 0.110935 -0.445906 0.648427 0.808039 -0.139805 -0.464766 0.740898 -0.745109 -0.149388 -0.940611\r\n-0.782403 0.071688 0.475326 0.510483 -0.763665 -0.143345 0.726005 -0.444807 0.87225 0.158727 -0.367595 -0.926145 0.57506 -0.644154 -0.121982 0.564013 0.208655 -0.212867 -0.346294 0.829096 0.234901 0.451277 -0.18778 0.764824 0.604175 0.583666 0.38609 0.055818 -0.084017 0.425703 -0.468795 0.594714 0.411542 0.497177 0.958861 0.436384 -0.639637\r\n-0.314554 0.918027 -0.899777 0.404828 -0.536607 0.791681 0.032197 -0.577074 0.54912 0.368328 -0.96057 0.474654 -0.681326 -0.147801 0.510483 0.391278 0.28666 -0.326212 0.232765 -0.426862 -0.036042 0.164159 0.620594 -0.443953 0.408551 0.154576 -0.834834 0.909848 -0.221046 0.564806 -0.079196 0.031587 0.204871 0.042085 0.837519 0.396283 0.286233\r\n0.713126 0.754814 0.826044 0.534165 -0.887936 0.867794 0.342082 -0.934812 0.347209 0.478195 0.161412 -0.137303 0.567309 -0.156713 0.399701 0.916379 -0.207495 -0.064852 0.044404 0.553636 0.170263 -0.078158 -0.24015 -0.725028 -0.280557 0.184912 0.086398 -0.594409 0.626026 -0.316752 0.597095 -0.124363 0.151097 -0.521653 0.573656 0.442366 -0.784722\r\n-0.768914 0.764702 0.665883 0.721244 0.484603 0.788018 -0.048555 0.676809 -0.455855 -0.25956 -0.02945 0.181921 -0.232459 0.576891 -0.2266 -0.659474 0.078036 -0.178503 0.905698 -0.838435 -0.487594 -0.826411 0.840938 0.510239 0.616749 0.570116 0.042634 0.172582 -0.497787 -0.732047 0.967589 -0.903684 -0.625965 0.50853 0.322306 0.869259 -0.655324&apos;, &apos;0000-00-00 00:00:00&apos;),</text:p><text:p text:style-name="P495">(3, 1, 0.000881, &apos;0.099973 3.638611 2.407306 -4.202576 0.280697 -0.128758 -0.39256 -0.153749 -0.975158 0.024934 -0.881104 -1.536778 -0.954563 -0.841856 1.499443 -0.041409 0.853897 -1.914373 1.061818 -2.625697 -0.495712 0.203955 -1.979844 0.239357 -0.522076 0.656991 -0.140483 -1.250884 -0.170263 -0.893002 0.097128 -0.911415 -1.11794 0.932162 0.173236 0.045529 -3.022805\r\n-0.535142 1.115075 -0.578273 0.116794 2.538244 0.234157 0.286671 -0.922399 -0.109775 0.468917 0.11001 -0.762261 0.802057 0.965392 -0.160497 -0.060821 -1.941904 -0.204868 -0.038362 0.245299 0.85478 -2.448707 -0.241432 0.477889 -0.95996 -0.022471 3.074584 -0.289246 -0.704619 0.246438 0.330268 0.06473 0.815485 3.852909 -0.924752 0.531724 -0.570253\r\n-5.494031 -0.49827 -0.708487 -0.536851 0.670596 -0.255423 0.636647 -0.064155 0.420392 0.286172 0.33256 -0.469283 0.118259 -0.030966 0.038362 -0.054109 -1.211425 3.471647 -1.366554 -0.117588 0.35989 0.919797 -3.532012 0.382173 -0.001007 2.413891 -0.298929 0.925474 0.464235 0.143101 0.703604 -0.196075 -1.927838 -1.252395 -0.452742 0.08713 -0.003876\r\n-0.532563 4.362218 -2.287842 -0.481307 -2.136228 0.403815 -0.45909 2.157053 2.033116 -1.409745 0.42744 -0.946194 1.939465 0.732597 0.150808 2.282495 1.13394 -0.777825 1.015757 1.794174 0.118193 2.858761 -0.737921 0.847473 -2.676826 0.37907 1.510349 0.337979 -4.852519 -1.178 0.636153 -0.549975 0.480575 -0.742919 0.623085 -0.817377 -0.568468\r\n-0.947457 0.625336 -0.440352 -1.819922 -0.305604 -0.084811 -0.734489 -0.28489 -0.466347 1.124009 -0.404584 -1.284548 1.432107 -1.192115 -0.614429 -1.942112 -0.672085 2.064952 -0.465343 -3.053002 4.826965 1.276009 0.814168 -0.523165 0.013459 -1.390858 -2.488006 1.363131 0.455884 -0.507431 0.48223 -0.191483 -0.717829 2.617065 0.864498 -2.689777 0.307841\r\n-0.561987 -3.041279 -0.217017 -2.995612 0.393086 0.037385 0.776727 -0.653697 -0.754938 0.279763 0.265725 -0.114497 -0.225929 0.607585 0.220111 -0.210364 -1.025863 -0.582385 0.81658 0.107822 -0.75224 0.265969 -0.062532 -0.377178 -0.535037 0.95941 0.611682 0.086766 -0.86692 0.231906 1.121971 -2.019469 2.726081 -0.702914 2.131602 -0.247039 -0.762282\r\n0.925558 -0.026695 -0.077486 2.201332 -0.024873 -1.285198 0.222205 0.292072 0.759331 -0.531175 -0.56532 -0.001413 0.484066 0.153722 0.531679 1.334053 -0.262307 -0.316874 1.729353 -5.28423 -0.0206 0.211097 -0.341777 -0.368009 0.324564 0.491379 -0.000946 -0.962001 -0.857295 -0.641662 -3.331932 -4.474576 -0.58097 -1.733869 4.792372 -0.696951 0.737907\r\n0.335246 -0.725934 3.69229 -0.297281 -0.191275 1.56034 -1.188192 0.683491 0.176428 -3.099393 0.980407 -4.331937 -0.447066 -0.747612 -0.631172 -1.171064 0.740056 -2.413588 0.962648 -1.188244 0.297443 -2.470512 0.444258 0.429657 0.713187 0.662381 -0.833613 -0.036691 -0.765007 -0.094394 -0.982604 0.646596 0.860408 -0.070284 -0.454573 -0.641041 2.279208\r\n0.315714 -1.683996 0.085093 0.184668 -0.299295 1.299944 0.272627 1.288601 0.523682 -0.901242 -0.855464 -0.211152 -0.057894 0.954772 -0.869969 -0.378765 0.259086 -0.701921 -1.170796 -0.489425 -0.644154 1.130109 -0.915159 -0.150304 0.24485 -0.346343 -0.149851 -0.642464 0.36584 0.289895 -1.380674 -0.060645 0.223498 -0.816706 1.475786 -2.570208 0.787164\r\n0.522084 -0.585437 0.457557 -0.230079 0.282815 -0.928098 0.906155 -2.668881 -1.633044 -0.937986 3.181312 0.792535 -1.775204 -0.287589 -0.726956 0.586901 0.447071 -3.797422 -0.137852 0.598689 0.386152 -0.782694 -0.975158 0.815424 0.063265 0.343486 0.811953 2.214398 -0.113095 0.8905 -0.410382 1.505107 -0.289773 0.386139 -0.904843 -0.863847 0.098343\r\n0.771477 -0.547319 -0.087008 -4.600239 -0.283446 -1.386307 1.332734 -0.295318 2.878644 -0.016205 0.202543 -0.360088 0.665883 0.110772 0.898679 -0.802423 -3.12978 -1.859172 1.597812 -1.078253 1.847442 1.815825 0.58452 -0.734184 0.265175 0.842735 3.369075 0.623304 -0.385296 -1.88542 1.481604 0.905135 -0.334452 0.710163 -1.577671 -0.471864 1.997514\r\n0.86877 -0.090705 0.204827 -0.731749 -0.655873 -1.534108 -0.789519 -5.756881 0.392286 3.056484 1.041399 0.750664 1.49396 0.789422 -2.46013 0.904233 -0.369366 2.751285 1.684496 -0.2219 0.856929 0.961974 0.590612 -1.083433 -5.396746 2.798357 -0.723197 0.989074 0.939402 0.73101 0.24247 0.402606 0.263134 0.911069 0.675893 -0.454939 0.835022\r\n-1.115568 -0.052217 -0.964049 6.568177 -1.013147 0.284585 0.655507 0.931067 1.17446 0.51915 -2.97557 -0.003265 0.516831 1.14016 -4.698411 -0.197546 -0.411848 -0.949522 -1.121917 2.29762 -1.882116 -0.94995 -0.21073 0.944578 -0.562609 0.851314 -1.140941 0.168981 -0.154311 -0.555467 -0.513404 -0.257363 -1.670455 0.422346 0.285812 0.192126 -0.968261\r\n0.119888 0.941099 0.394513 0.756319 0.682791 -0.767449 -0.499557 -1.462717 -0.623768 0.408307 -0.525254 -1.432328 0.446455 -2.217681 0.1489 -0.184301 -0.152135 0.926145 0.985502 0.382361 0.148534 1.225382 -0.151464 0.888974 -0.07419 1.571958 0.165514 0.756096 -0.17777 -0.614026 -0.886959 -2.047717 -0.397862 -1.163172 1.475015 0.64922 -0.897518\r\n-0.332654 3.457889 -0.916868 -0.46202 0.79338 3.147641 0.789727 0.815729 0.313379 -0.385174 0.126438 0.946043 -0.928037 0.997253 -3.097301 2.187482 -1.721554 0.469955 -0.889342 -2.056608 0.745412 -0.485763 0.073458 2.281775 -0.850337 -1.200089 0.124973 3.468742 0.602455 -0.01517 0.643117 1.585772 0.520066 -1.229247 0.431806 -2.276998 2.322539\r\n0.791883 0.078463 -1.060973 -0.152208 -0.706717 -0.821406 -1.178237 0.711722 -0.06711 -1.489586 -0.744621 0.318372 -3.802822 1.868717 0.457817 0.394771 -0.299661 -0.829402 -0.85355 -0.084384 -3.111655 1.132488 0.773186 -0.448592 -1.246087 0.067888 0.401877 -0.799615 -0.445672 -0.451399 -1.957652 0.402692 -1.450544 2.0969 -1.402153 -0.484603 0.670239\r\n0.672109 -0.540513 1.649531 0.764397 0.487436 0.945006 4.078904 -1.986783 0.635792 0.372906 -0.496297 -0.102817 3.130538 0.504501 -0.565722 0.985885 -1.799602 2.133049 0.007324 -0.093295 -0.54934 1.206713 5.389047 -0.502518 -0.505015 -0.583422 0.137764 -0.284524 -2.562749 -0.507848 -3.077274 -0.749504 1.087753 -0.131784 -0.525315 1.396685 -2.228875\r\n-0.917417 0.921021 0.33079 0.69158 0.744743 0.295083 0.165807 4.49009 -0.804681 -0.442061 -0.266457 -1.716304 -0.411237 1.066864 -1.502181 -3.025883 -2.389968 -0.634369 0.365311 -0.23082 -0.166845 -4.696269 0.656178 0.177541 -0.173986 0.670633 -0.044564 0.343913 0.063759 -0.16141 -1.970019 -0.606173 -0.735343 0.644337 -0.222755 -1.235766 -1.25847\r\n-1.858851 -0.870296 0.747185 0.519549 0.824092 -3.361842 0.474166 -0.934019 -0.387005 -0.500473 0.771966 -0.936951 -0.262246 0.518906 1.33664 -2.598232 -2.010197 -0.685171 -0.668508 1.069576 0.772088 0.005445 0.320594 3.27101 0.11865 -0.014119 0.677419 0.149754 -0.105197 0.215186 3.186729 -0.522263 0.029389 3.199023 1.945083 0.290078 -1.82366\r\n0.379681 2.350299 0.72808 3.024673 0.062471 -1.833857 5.123265 -0.192175 4.839602 -0.303017 -0.805597 -0.959105 0.331246 0.81634 -0.214388 -0.469893 -0.436567 0.989563 -0.832698 1.566543 -3.550332 -0.380963 -0.362329 -0.831066 4.844845 0.567585 -0.075613 -0.538797 0.450179 0.44438 -0.20188 0.26603 -0.012862 1.695767 0.257241 -2.1237 -0.371981\r\n0.61938 0.804315 -0.929139 0.747246 4.15268 0.972228 -0.567858 0.533885 0.647324 1.353661 0.982341 5.275095 0.215517 -0.657216 -0.784342 -0.98822 1.332394 -0.043231 3.279576 -0.510004 -0.225806 -1.0561 -0.070894 0.866268 1.344145 0.876034 -0.420392 -0.015961 0.44261 -0.656002 0.005074 -1.76336 -2.044798 0.113926 0.413306 -0.959044 -0.433699\r\n3.909049 0.575131 -2.90002 3.709193 1.561912 3.10199 0.274697 -0.955605 -1.659091 -0.628834 1.889444 0.0778 0.067149 1.420159 0.196936 0.632378 -0.201636 -1.236258 0.096774 0.428571 1.801249 2.836675 -3.325822 0.755339 2.029258 4.910113 2.828511 4.057281 -0.972663 0.088595 -0.079461 2.438712 -0.726737 3.083749 0.913083 -1.00856 0.924558\r\n0.562975 2.700619 0.407608 -0.195593 -0.083163 0.858882 -1.614765 -0.918271 1.646982 -0.867367 -0.397748 0.818772 -3.344236 -2.591525 1.50948 -0.180743 4.714957 0.878211 -0.785089 -0.194372 1.84862 0.567492 -0.743774 -0.950072 -2.233722 2.184351 -0.345996 0.556615 -3.814175 0.306778 -3.400706 0.029498 -1.674467 -1.732961 -0.407025 -0.170202 0.396732\r\n0.242103 0.916562 0.549913 0.503243 -0.942828 -1.346706 0.81048 -0.519944 -0.692129 1.534043 -0.540574 1.082832 -0.412519 0.869564 0.874264 0.065819 0.98413 -0.465987 0.618885 -0.581365 -1.786353 0.919553 0.699271 1.025862 0.60752 0.707389 2.20821 -0.560265 1.740611 0.106662 0.315226 -0.226558 -0.695059 -0.370403 0.985717 2.499906 -0.968438\r\n-0.081759 -0.281462 0.240272 0.38896 -2.809637 0.14559 0.021312 0.699326 -0.863134 3.184388 -0.363872 0.302713 -1.142987 0.673847 1.321482 -0.428083 -0.971843 -0.882504 0.482424 0.157262 -0.116236 -1.19068 0.081231 0.973479 0.246071 2.126061 0.326456 -0.23578 0.008279 0.485397 0.653934 -0.610626 0.628523 -0.772393 -1.144465 1.626997 -0.601184\r\n-0.835688 -0.33433 -0.596545 -2.058728 2.138184 0.222694 -0.56694 0.980346 -0.486501 2.429786 -0.057008 -0.511997 -0.917905 -0.381226 1.52248 -0.727342 -2.257072 -0.229896 0.310118 0.322695 1.377862 -1.380179 -0.875253 0.842584 0.207678 -1.072395 0.962848 5.276164 -0.518967 1.253388 -1.522211 0.447741 -0.204207 2.863111 -0.445418 0.865719 -1.759764\r\n-0.08804 0.707327 -3.43683 -0.467466 0.860923 2.327609 0.691763 -5.129658 -0.030366 -1.153711 0.240906 1.985245 1.952318 -0.695486 -0.736442 -1.547881 -0.668386 -0.973268 -0.551683 6.82412 2.080115 -0.636708 -0.885434 -0.099831 2.60147 -2.803252 2.160487 0.644826 -1.463134 -1.330333 0.113488 -0.791355 1.515401 1.046605 -0.55094 0.350953 0.464034\r\n-1.328439 -1.00043 -0.746086 1.760011 -2.643545 -1.031144 -0.062181 -1.135187 2.196905 0.497232 0.312662 -0.02219 -0.552293 0.639332 0.267129 0.091482 0.660761 2.623595 -0.34019 -0.740349 -0.549615 0.618091 0.556932 -0.707375 -1.778775 2.39672 1.001821 0.515366 0.423505 0.863644 0.038398 1.072265 1.578606 0.685476 -0.580798 -0.5562 -0.219031\r\n-0.450524 -2.262305 0.307352 0.782464 -0.50676 0.736564 0.527085 0.652089</text:p><text:p text:style-name="P495"><text:s/>0.614368 0.234291 0.981059 0.270018 -2.148868 -2.04905 0.292947 -0.220499 0.525061 -0.250455 -0.358318 -0.755852 -2.782796 -3.131413 -0.953934 0.841755 -0.377728 0.453683 0.314615 -2.503424 -1.731721 -0.953246 -0.362896 -3.135271 0.164483 -1.115602 -1.476366 -1.173566 -1.128983\r\n0.713309 -2.659095 -0.629078 -0.262856 -0.3611 -1.418699 -2.464626 0.520798 -0.186852 0.294778 0.393109 -0.954493 -0.465865 -1.026002 -1.696163 0.958296 -2.523912 0.362144 -0.420348 0.305867 2.393876 -2.214772 0.634205 5.369471 -0.686453 1.682034 2.287171 0.288842 -0.17307 -0.193335 -0.921018 1.809602 0.643727 1.841236 0.212317 0.684072 -0.913327\r\n3.845262 0.95493 -1.903969 -0.283144 0.270188 -0.437361 -1.87963 -1.436694 -0.358257 0.870479 1.257349 -0.678149 0.727042 -0.19352 -0.52004 0.530772 0.846919 -0.403613 -0.049043 -0.316199 0.407208 -2.303197 -1.342798 -2.925463 0.398602 0.261025 -3.88511 1.210565 0.232398 2.248757 0.570532 -0.023103 -0.753462 1.359006 0.515366 0.506467 -1.44061\r\n2.099108 -0.743613 -0.741056 1.687718 -1.443028 -4.954993 -5.267325 -0.595419 0.049366 4.585438 0.14011 -0.391827 0.162267 -0.063387 0.368877 3.026365 -0.213883 4.850003 0.130589 0.581562 -0.755119 0.249388 0.281716 -1.124244 0.654082 0.233422 4.549977 0.220253 0.033305 -2.025163 1.842695 -0.820795 0.170324 0.330973 0.184606 -0.594958 -0.964904\r\n-0.258578 0.719012 0.576709 0.275735 -0.998315 0.773553 0.276232 2.126269 -0.167216 -0.176489 -1.950627 -0.502988 -0.665883 0.490158 0.558458 -0.681814 -0.347349 -0.896481 -0.407514 0.797341 -0.386304 -0.333842 0.117466 -0.268777 0.861141 -0.179992 -0.730835 -0.582018 -0.428571 -0.831294 -2.329303 -1.467214 -4.503601 0.791228 0.967545 -0.682734 -0.729484\r\n1.167797 -1.20059 1.752768 0.916781 -0.562208 -0.690237 -1.381859 -1.455379 0.908078 -2.602794 -0.668996 0.817066 -0.550059 1.235455 0.647694 -0.824641 0.84521 -1.116794 -1.779278 0.024384 -0.237709 0.287393 0.394585 -1.367503 0.212439 -1.576088 0.038911 0.06595 -0.492172 0.197851 -4.1076 -0.562074 0.952452 -0.604211 1.181343 -0.587817 -1.396432\r\n0.307718 2.714606 1.571147 -1.481851 -0.779229 -0.304056 2.820986 3.127501 0.213418 1.359234 0.041684 3.340702 0.906919 -0.162758 0.530869 -0.419523 0.438727 -0.456282 -0.889523 3.355244 -0.100131 -2.285359 -0.498093 0.550808 0.379785 -0.72189 -0.451434 0.948736 -0.22346 -0.965819 0.073934 0.538705 -0.249646 -2.821398 -0.467818 0.418987 0.487716\r\n0.708296 0.48619 -0.740256 4.120161 5.225422 -0.082675 0.5717 -0.514451 -1.554525 -0.410334 -0.402651 -0.155858 -0.393597 0.855342 -1.285667 -0.422591 -3.614866 0.545978 0.734794 -0.289712 1.525008 0.388165 -0.657094 -1.116802 -0.331587 -0.007285 0.068636 0.099983 0.076446 -0.511338 -2.840048 -3.417601 1.486863 0.624521 -0.340556 0.240822 0.719291\r\n0.818415 3.650287 0.28135 2.387475 2.133441 -0.777032 0.652483 -0.603931 0.607984 -3.042524 -0.013092 0.674368 -0.209675 -3.844833 0.790482 0.051482 0.552293 -0.047321 2.7306 -4.346378 -1.538159 -0.339541 0.246965 0.281536 -2.437877 0.462447 0.497116 1.410266 -0.601519 2.229589 0.369976 -0.075106 0.20365 -0.74975 0.880551 1.159992 0.303321&apos;, &apos;0000-00-00 00:00:00&apos;);</text:p><text:p text:style-name="P495">INSERT INTO `ann` (`id`, `ann_kind_id`, `fitness`, `weights`, `happened`) VALUES</text:p><text:p text:style-name="P495">(4, 1, 8.8e-005, &apos;-0.73509 12.231882 1.329696 -1.015897 -6.707821 -0.865842 -3.599329 -0.663938 0.386197 1.559932 0.306468 -2.452293 2.026519 -0.787413 13.607589 -0.664862 1.591329 -0.508011 0.009043 0.178391 -3.396075 -1.01475 4.836731 -1.363403 -2.220776 0.964117 -11.465342 -4.968549 1.192833 0.802452 1.94199 -0.954616 -0.945087 -1.614378 6.442087 12.289596 -3.212714\r\n1.415116 1.471875 1.315808 0.781514 0.353769 0.725863 -3.212847 -0.582024 3.955251 -1.199239 0.867021 5.617696 6.226959 2.911537 -1.451963 -0.155898 1.777027 -0.094159 0.21031 1.281542 13.6616 -3.693338 0.543053 -0.705219 -0.491371 -0.264169 -1.466767 1.088436 1.096543 -0.577929 -3.706806 -11.736771 1.422876 3.134553 0.204516 0.965894 -0.706981\r\n1.216527 -0.443106 -5.630099 -0.136341 0.103271 -0.051762 1.80512 -6.926968 3.783194 0.137296 1.242429 -8.918532 -3.60844 -0.503175 -2.988069 -0.475459 5.000207 1.027389 -2.068112 3.344675 -1.385849 -0.578185 -8.376267 -3.725282 1.013271 0.534174 0.911471 -0.294254 0.038558 0.01761 3.662178 -0.078989 0.065405 2.486075 0.034313 -0.692156 0.200545\r\n-0.054419 0.825706 0.70031 -2.879975 0.084752 1.793699 -5.265785 0.909954 -0.60181 0.590435 0.192583 -1.4873 -3.526656 3.227244 -0.188369 -0.583804 2.938147 6.057747 0.084382 2.102327 -0.248279 -6.070189 -11.041435 3.827445 3.717872 3.082442 1.920865 6.311011 -0.597088 -1.069573 -0.27467 -2.02346 -0.767838 -0.402957 2.940928 -1.046186 -2.243866\r\n-0.517044 -0.486266 -0.150853 -0.033703 7.421685 -1.935084 7.542263 -0.176868 2.947777 -0.867421 1.052855 0.344079 0.834152 1.789971 -7.145108 -3.590927 2.725119 3.729873 -0.26185 0.559938 7.009408 0.975698 4.538898 -2.267461 0.302225 -1.805752 4.511014 6.627038 -0.70817 1.360777 -0.504514 0.246717 -0.778346 0.332589 1.939302 -11.369041 -0.626034\r\n-2.783674 -8.411692 0.105801 -0.472887 -2.518611 -2.477467 -0.70645 1.550331 0.777458 -0.312225 -1.202687 -1.940889 10.694479 -0.439965 -19.037662 -0.526696 -0.593533 4.683476 -1.092885 -1.091029 -1.725829 -0.035534 -0.145433 0.776175 -0.727749 -1.072397 0.553887 0.358177 0.682544 0.178515 4.043452 -0.265169 0.403718 2.463499 3.583012 0.325609 -5.923157\r\n-4.452271 -6.306397 0.436912 3.755569 -4.414997 0.269526 -5.64397 0.12588 -0.222197 0.780911 0.101056 -7.506463 -4.501006 0.994684 -2.447452 -0.684523 -5.952438 0.526183 -1.508527 0.315517 -0.084133 1.484392 0.012253 0.110031 -1.274933 -0.747329 0.493696 2.499151 1.530582 0.805641 -1.799208 1.008444 1.229096 0.947188 -0.277911 -1.225533 -0.644026\r\n0.792608 -0.433991 0.445487 2.625669 0.085593 2.157707 -1.085424 1.934491 2.778922 -0.273426 -1.835493 -1.839026 -2.280342 0.959097 3.011318 0.956753 -0.349176 -3.188272 1.614979 -7.377027 -0.042703 -0.26143 -3.233847 0.551156 0.165115 0.639135 0.03207 -0.775209 -0.017103 -4.264135 -6.239048 -4.337859 -1.611924 0.559753 0.774412 0.291971 0.439174\r\n-0.125889 6.662012 -3.666422 0.454293 0.049775 -0.721102 -0.247053 -0.404792 3.747547 -0.347934 1.936114 -0.058651 -1.082271 0.75129 -0.679855 0.045432 -0.008901 -0.528904 -0.019443 -0.201911 -0.019846 0.402741 1.743892 1.115444 1.153273 -0.431338 -1.163146 -0.630899 2.47492 1.000708 -0.079591 -0.304749 6.273457 0.344308 -0.105399 -6.978572 0.772724\r\n-2.331788 -0.077769 0.741362 -1.225742 0.742172 0.371924 -0.854572 1.060385 0.32117 0.627302 1.56371 -1.170364 3.429719 0.3575 -0.913184 0.904756 0.724292 -5.78673 -7.413537 -0.814698 -0.324044 -1.76281 3.467595 0.821302 4.327199 -0.439456 0.269478 0.522616 0.443313 1.29346 -0.645862 -4.992581 1.00153 -0.596521 -2.662569 1.234888 1.090092\r\n-10.29294 -2.596929 0.915395 -1.394127 0.876717 1.281637 -2.57657 0.264643 1.538036 -2.708931 0.584455 -0.491294 -14.527656 0.923294 1.03727 1.50866 -0.36016 0.093964 -0.790497 4.296408 -1.020923 -6.755372 0.625115 -7.462736 -0.938762 0.691618 -0.98617 -0.2458 0.605746 -4.119173 4.470383 4.162074 1.145147 0.294327 0.671107 -0.809401 -0.610616\r\n-2.547849 -0.500341 -1.479874 0.797808 -0.309193 1.755942 -0.940054 -4.159926 6.990231 2.295517 -0.575308 -0.762663 0.480101 -0.025618 -1.374284 -5.631329 0.734423 0.213542 -0.27542 0.312 10.162732 -1.11863 -19.607605 3.634871 0.442426 1.016448 1.974693 -0.768523 1.002381 -0.086247 0.140956 0.484464 -1.064612 0.986175 10.650967 3.247941 -2.411675\r\n-0.635318 -0.309027 0.975222 0.542242 -0.829894 -0.466444 0.130822 4.993852 0.687841 9.077303 -1.795054 -0.79991 -0.731458 -0.522552 -5.80999 -2.07322 -0.266337 -4.808924 0.20696 0.336812 -5.864529 2.096709 3.419956 -0.150813 -1.128874 -2.608025 -3.898516 -7.215545 -0.076467 -0.631582 -3.04471 -2.805898 -1.795851 0.791919 0.665445 4.486841 -0.271027\r\n0.583135 0.21908 0.898679 -6.962359 0.629019 3.906049 0.30486 0.751133 -0.253617 -5.73658 0.317967 0.598621 -3.391327 -0.492648 -0.242232 0.778199 -0.066581 0.901822 -0.617424 -10.458794 -1.944527 -0.923589 -1.739218 0.548189 6.526911 4.316123 3.240913 -1.654877 -0.198803 0.785232 2.786922 0.6872 1.18895 -0.245224 0.203672 -0.133783 0.268877\r\n-5.842357 1.967646 0.224943 0.484303 0.5234 0.340067 0.883822 1.304107 1.178567 0.252517 -7.336821 -0.50813 0.679337 4.994544 0.139982 2.138567 0.426382 -0.442358 0.791294 6.146351 -1.443887 -2.470263 -1.556866 0.413588 1.159323 -0.540218 -0.734053 -0.820992 -2.235744 0.83303 0.64868 4.310574 1.540316 -0.181494 4.038373 0.523155 -0.385388\r\n-1.560886 2.399612 -2.867247 2.826306 8.852895 -0.387976 -4.089866 -0.642526 10.75674 0.901193 -0.253489 -1.912065 -1.339199 0.732621 1.517922 -0.100977 -2.492191 -1.101362 0.476372 0.368666 -10.922568 1.217139 0.953962 -0.906478 -0.775709 -0.508452 -1.19576 -1.871519 5.436321 0.176467 -4.290163 8.968181 0.26624 4.03011 -7.581853 -1.727187 -0.279877\r\n-0.482238 -1.095357 -3.370105 -3.207668 0.936509 -0.490635 8.438203 0.696557 -0.085845 -1.089496 1.004188 0.164671 -0.33647 2.819843 -0.06896 -5.598782 9.696724 1.879814 -8.110454 -0.143808 -0.993656 0.519761 -0.208064 -2.829378 -0.373528 0.059909 0.603997 -6.284697 -1.081478 0.794202 0.888896 5.3644 0.984293 -1.684279 1.051695 -0.611923 -0.670806\r\n-5.30514 0.181709 -1.058966 -2.148119 7.113228 -4.369013 0.255387 0.602874 1.309303 -3.517639 0.110302 0.738124 -0.671104 3.203474 -0.836677 1.754494 6.822726 -2.225745 -0.818333 -0.859663 -1.270185 0.761874 2.287807 -1.501536 -13.054366 4.026246 0.961768 0.718368 0.764066 2.550657 0.571452 -1.184307 1.113427 0.731765 0.841927 4.994259 2.064363\r\n-0.810804 2.796216 0.447067 1.601047 0.976622 -11.490255 1.144378 -1.265909 0.354106 0.876459 12.703995 -1.308972 1.371343 -3.230444 0.777045 1.255335 0.295731 7.556674 1.57395 3.376572 4.171929 8.695788 -0.27411 2.063514 0.173522 -3.686111 13.346819 0.755801 1.809504 -1.166822 5.095554 -4.02048 0.037299 0.863522 0.262197 0.068141 -1.1643\r\n0.71703 2.249057 3.335137 -0.6373 1.378897 -1.255045 -0.687105 0.847077 1.086516 1.968001 -2.709033 -1.769921 2.999733 -12.855617 8.299635 -1.508481 -1.361221 1.936198 0.285808 7.038262 -1.620646 1.341761 0.290062 -4.577878 7.620469 2.353487 0.41809 -0.959654 0.606512 -0.585722 0.12828 1.389134 -1.935314 0.535472 -0.747802 -0.194366 -3.576633\r\n-3.249317 1.283267 1.357069 0.890561 1.725228 -1.124941 2.312364 4.701566 1.51141 0.159672 3.851586 -0.397772 0.450971 0.1303 0.347679 -1.230646 3.533948 0.532974 0.201021 0.988744 0.540485 1.031462 0.160349 -0.146664 0.250431 -4.077589 -1.094386 0.415401 -0.484292 -1.864407 -1.844889 0.700017 -0.482262 -3.644374 -8.796632 9.253485 1.356594\r\n-0.336421 1.8278 -6.979892 1.059023 -0.718139 -0.57506 0.984132 1.127434 1.92944 -0.918665 0.442319 -0.416597 0.408362 4.674619 4.92229 0.203049 1.703145 3.892787 2.638669 1.039874 -1.721883 12.606841 -1.796251 -1.402234 0.450539 12.289225 9.880633 7.823212 -4.193006 1.018256 1.958883 5.479599 -0.805784 0.772101 0.469624 -3.385164 0.254222\r\n-0.863023 -12.24068 0.043906 -0.361501 -8.660976 -0.828174 2.060059 -2.371014 5.537758 0.456944 0.818762 1.258153 -0.505768 -9.606435 11.844604 -6.491029 13.229323 0.321933 -4.105478 0.82306 -1.427798 2.2643 -1.343984 1.17747 1.012764 0.229896 -0.901396 0.353941 2.438173 -0.586499 0.038111 0.045333 -0.40423 1.5759 -0.492027 -1.531855 -1.185656\r\n0.897755 5.77148 0.412546 2.188316 -0.473635 8.204998 4.060464 3.806531 -1.02488 0.619806 -0.182291 -7.141297 -2.178102 0.210162 -1.244432 -0.918715 0.708307 1.061575 -15.024525 -8.010041 -0.268753 -0.159544 0.157512 12.708141 -1.045344 -3.142725 0.722708 0.251589 0.443878 -2.459608 -0.901434 -2.773411 -0.882677 0.055006 2.448987 -1.211841 -0.93283\r\n-0.459393 -0.400006 2.621021 -0.49632 -0.794362 -2.76152 0.611442 -1.120661 -1.821447 7.800245 -1.496129 -4.295179 -0.175802 1.775435 1.226062 0.481459 -1.045513 1.610718 -0.197689 2.943892 -0.209772 -7.325078 -0.082933 1.471704 3.817842 7.996665 2.344556 1.172691 1.545099 1.060547 0.025886 1.595727 1.388052 0.940704 -5.641129 0.054252 1.227434\r\n-6.668298 -3.094017 -2.853852 -7.656731 -1.08215 0.615443 4.658922 -5.825756 -1.453878 -1.07107 -0.202324 0.272531 3.987828 0.682758 -1.870944 -1.642011 -9.407382 0.056375 0.375466 0.76425 3.813419 7.142316 -0.179614 -12.860112 10.875722 0.745912 -0.189126 0.091085 2.302389 -0.61752 -0.042981 1.002966 -1.24905 -1.732149 0.152272 -1.354604 0.56745\r\n0.042022 -0.702206 7.351064 -0.380477 4.231149 -0.876252 0.724228 -7.588221 -0.319186 -0.203373 -0.486132 0.729911 0.132792 -0.660425 -1.040676 0.638155 7.473519 -0.383051 -0.261539 5.789038 -1.244557 -1.830385 3.253584 0.707308 6.424589 -4.2629 7.067785 -0.858902 7.936551 0.337344 0.83101 1.097282 8.936634 1.032838 -0.28866 -0.80139 0.595362\r\n5.256635 0.876307 1.541133 1.242111 0.241512 -0.892405 0.216679 -2.158622 1.086838 -1.353873 2.135908 2.204676 -2.915644 -0.944549 0.871687 -10.047662 -7.086518 2.158429 -0.491035 3.649304 0.978778 6.021704 0.318949 0.100981 -0.836829 -0.885315 -1.337918 0.738305 -0.757216 0.017143 2.266382 -0.478982 -0.709596 -7.646206 -1.233824 -0.346118 1.207945\r\n0.183498 0.284047 -1.617898 -15.090779 -2.838067 -0.479234 5.161912</text:p><text:p text:style-name="P495"><text:s/>-0.805191 0.154204 -0.899997 4.79547 0.80036 0.262378 0.046671 -1.346538 -3.279075 -0.585525 0.507354 -0.147635 -3.745769 0.611118 0.183075 -1.007349 -0.735277 1.849721 -0.286469 1.019981 -1.230711 0.045507 1.021616 0.733851 -1.171966 -0.271199 -0.874504 0.397674 -1.819882 -2.773028\r\n1.166448 -1.38077 -0.131302 -0.915486 1.476666 0.061531 0.790175 -0.731846 -1.092178 -1.752646 0.645189 -1.755054 -2.923149 0.564515 -3.96324 2.163363 -0.830772 -0.606816 -0.725291 -4.267467 8.547793 0.155502 -0.375345 10.505675 0.017888 1.195926 -0.095167 -0.634056 0.843997 0.26867 5.314285 -0.60511 1.422382 1.180266 -2.873646 -0.524771 0.015379\r\n0.453041 -0.358 -2.250586 1.652231 16.57212 -7.212607 -0.99118 -2.183404 5.306915 -6.562197 0.33836 -0.353458 -0.667836 0.42321 1.604305 -3.772276 6.858908 -1.291151 -2.326721 1.049484 -0.846233 -0.832085 -0.555227 -2.144132 -3.395842 1.277251 -0.753508 0.474242 -0.459277 5.373867 5.318837 -0.934113 -1.010153 -4.916541 4.499173 0.29476 -1.084238\r\n1.317333 0.056092 1.517647 3.511827 0.025994 -9.548806 -0.893987 -2.018398 0.15219 0.269578 0.692955 0.189992 -0.355258 0.373159 2.770131 2.718955 -0.816515 4.70883 1.509497 0.596255 0.481478 -0.070341 -1.092652 -4.083872 6.500371 2.206575 5.136393 1.09463 0.574016 -6.377616 1.512505 0.97015 0.478578 0.961118 -1.604209 10.814521 -1.166413\r\n-0.401274 0.292926 -0.076169 4.284649 0.881449 -0.937714 -0.836265 -0.500441 -0.20976 -0.274159 -6.649684 0.982326 0.261403 0.231438 -0.456327 3.81859 0.78145 -0.245734 2.353982 -0.725534 1.13076 2.203347 0.396893 -1.085537 1.766191 -0.304024 1.008201 0.727106 0.600358 -0.856583 2.317776 9.329099 -8.101566 -1.186468 -0.966526 2.322485 0.416014\r\n-0.609942 -0.603162 0.924383 1.154905 -2.131511 1.77947 -2.407869 -1.08983 -1.545172 -0.561743 -2.077271 -0.298336 -2.628321 1.322186 2.46787 -4.784723 0.696174 0.153526 2.817881 -0.917481 0.385897 -0.059387 14.380209 2.232559 -6.660897 -0.788332 0.393733 -3.930633 -0.931423 -0.358458 -6.971938 -9.268798 0.775499 -0.93148 0.448093 -1.089612 2.641056\r\n-0.830871 3.619205 -0.561538 -0.30602 0.956562 -0.732099 -4.510851 0.222674 1.272231 -2.190245 -5.140724 15.105102 -1.465405 0.404599 1.828431 -1.25827 -1.039556 -0.584876 -0.914262 4.112128 -1.133216 -2.716481 0.518243 0.333441 0.942642 -0.336316 -10.132336 0.298909 -0.072182 -3.203951 -1.155932 0.452475 2.109114 1.008432 -2.591759 0.966124 0.470633\r\n4.936085 1.027026 0.983813 -1.132536 -0.992478 2.149928 0.392082 -1.080645 0.025276 -0.667657 -0.652257 -4.582711 -0.972228 -0.06034 2.998824 -1.018651 5.296786 -0.825348 3.916906 0.451258 1.961258 5.595482 -0.076264 -1.501021 5.997455 -1.917398 -2.314341 2.264781 -0.687908 0.093134 0.561409 -3.505603 -0.419919 -3.287438 -0.153134 3.333072 -1.065671\r\n0.420648 -0.959297 1.136302 -0.109761 -1.083707 -3.676424 1.941555 0.773644 -0.264609 0.766719 -0.852818 -1.060278 -1.05528 0.72196 0.640327 -3.050579 -1.501673 -3.765462 -6.370669 4.208755 -2.614717 4.242144 2.712739 0.33066 -0.715833 -9.966035 1.453591 0.078087 -1.545291 1.371137 -0.829335 -5.394045 -2.201921 -0.481828 -2.252297 1.442348 -1.06172&apos;, &apos;0000-00-00 00:00:00&apos;),</text:p><text:p text:style-name="P495">(5, 1, 8.8e-005, &apos;-0.73509 12.231882 1.329696 -1.015897 -6.707821 -0.865842 -3.599329 -0.663938 0.386197 1.559932 0.306468 -2.452293 2.026519 -0.787413 13.607589 -0.664862 1.591329 -0.508011 0.009043 0.178391 -3.396075 -1.01475 4.836731 -1.363403 -2.220776 0.964117 -11.465342 -4.968549 1.192833 0.802452 1.94199 -0.954616 -0.945087 -1.614378 6.442087 12.289596 -3.212714\r\n1.415116 1.471875 1.315808 0.781514 0.353769 0.725863 -3.212847 -0.582024 3.955251 -1.199239 0.867021 5.617696 6.226959 2.911537 -1.451963 -0.155898 1.777027 -0.094159 0.21031 1.281542 13.6616 -3.693338 0.543053 -0.705219 -0.491371 -0.264169 -1.466767 1.088436 1.096543 -0.577929 -3.706806 -11.736771 1.422876 3.134553 0.204516 0.965894 -0.706981\r\n1.216527 -0.443106 -5.630099 -0.136341 0.103271 -0.051762 1.80512 -6.926968 3.783194 0.137296 1.242429 -8.918532 -3.60844 -0.503175 -2.988069 -0.475459 5.000207 1.027389 -2.068112 3.344675 -1.385849 -0.578185 -8.376267 -3.725282 1.013271 0.534174 0.911471 -0.294254 0.038558 0.01761 3.662178 -0.078989 0.065405 2.486075 0.034313 -0.692156 0.200545\r\n-0.054419 0.825706 0.70031 -2.879975 0.084752 1.793699 -5.265785 0.909954 -0.60181 0.590435 0.192583 -1.4873 -3.526656 3.227244 -0.188369 -0.583804 2.938147 6.057747 0.084382 2.102327 -0.248279 -6.070189 -11.041435 3.827445 3.717872 3.082442 1.920865 6.311011 -0.597088 -1.069573 -0.27467 -2.02346 -0.767838 -0.402957 2.940928 -1.046186 -2.243866\r\n-0.517044 -0.486266 -0.150853 -0.033703 7.421685 -1.935084 7.542263 -0.176868 2.947777 -0.867421 1.052855 0.344079 0.834152 1.789971 -7.145108 -3.590927 2.725119 3.729873 -0.26185 0.559938 7.009408 0.975698 4.538898 -2.267461 0.302225 -1.805752 4.511014 6.627038 -0.70817 1.360777 -0.504514 0.246717 -0.778346 0.332589 1.939302 -11.369041 -0.626034\r\n-2.783674 -8.411692 0.105801 -0.472887 -2.518611 -2.477467 -0.70645 1.550331 0.777458 -0.312225 -1.202687 -1.940889 10.694479 -0.439965 -19.037662 -0.526696 -0.593533 4.683476 -1.092885 -1.091029 -1.725829 -0.035534 -0.145433 0.776175 -0.727749 -1.072397 0.553887 0.358177 0.682544 0.178515 4.043452 -0.265169 0.403718 2.463499 3.583012 0.325609 -5.923157\r\n-4.452271 -6.306397 0.436912 3.755569 -4.414997 0.269526 -5.64397 0.12588 -0.222197 0.780911 0.101056 -7.506463 -4.501006 0.994684 -2.447452 -0.684523 -5.952438 0.526183 -1.508527 0.315517 -0.084133 1.484392 0.012253 0.110031 -1.274933 -0.747329 0.493696 2.499151 1.530582 0.805641 -1.799208 1.008444 1.229096 0.947188 -0.277911 -1.225533 -0.644026\r\n0.792608 -0.433991 0.445487 2.625669 0.085593 2.157707 -1.085424 1.934491 2.778922 -0.273426 -1.835493 -1.839026 -2.280342 0.959097 3.011318 0.956753 -0.349176 -3.188272 1.614979 -7.377027 -0.042703 -0.26143 -3.233847 0.551156 0.165115 0.639135 0.03207 -0.775209 -0.017103 -4.264135 -6.239048 -4.337859 -1.611924 0.559753 0.774412 0.291971 0.439174\r\n-0.125889 6.662012 -3.666422 0.454293 0.049775 -0.721102 -0.247053 -0.404792 3.747547 -0.347934 1.936114 -0.058651 -1.082271 0.75129 -0.679855 0.045432 -0.008901 -0.528904 -0.019443 -0.201911 -0.019846 0.402741 1.743892 1.115444 1.153273 -0.431338 -1.163146 -0.630899 2.47492 1.000708 -0.079591 -0.304749 6.273457 0.344308 -0.105399 -6.978572 0.772724\r\n-2.331788 -0.077769 0.741362 -1.225742 0.742172 0.371924 -0.854572 1.060385 0.32117 0.627302 1.56371 -1.170364 3.429719 0.3575 -0.913184 0.904756 0.724292 -5.78673 -7.413537 -0.814698 -0.324044 -1.76281 3.467595 0.821302 4.327199 -0.439456 0.269478 0.522616 0.443313 1.29346 -0.645862 -4.992581 1.00153 -0.596521 -2.662569 1.234888 1.090092\r\n-10.29294 -2.596929 0.915395 -1.394127 0.876717 1.281637 -2.57657 0.264643 1.538036 -2.708931 0.584455 -0.491294 -14.527656 0.923294 1.03727 1.50866 -0.36016 0.093964 -0.790497 4.296408 -1.020923 -6.755372 0.625115 -7.462736 -0.938762 0.691618 -0.98617 -0.2458 0.605746 -4.119173 4.470383 4.162074 1.145147 0.294327 0.671107 -0.809401 -0.610616\r\n-2.547849 -0.500341 -1.479874 0.797808 -0.309193 1.755942 -0.940054 -4.159926 6.990231 2.295517 -0.575308 -0.762663 0.480101 -0.025618 -1.374284 -5.631329 0.734423 0.213542 -0.27542 0.312 10.162732 -1.11863 -19.607605 3.634871 0.442426 1.016448 1.974693 -0.768523 1.002381 -0.086247 0.140956 0.484464 -1.064612 0.986175 10.650967 3.247941 -2.411675\r\n-0.635318 -0.309027 0.975222 0.542242 -0.829894 -0.466444 0.130822 4.993852 0.687841 9.077303 -1.795054 -0.79991 -0.731458 -0.522552 -5.80999 -2.07322 -0.266337 -4.808924 0.20696 0.336812 -5.864529 2.096709 3.419956 -0.150813 -1.128874 -2.608025 -3.898516 -7.215545 -0.076467 -0.631582 -3.04471 -2.805898 -1.795851 0.791919 0.665445 4.486841 -0.271027\r\n0.583135 0.21908 0.898679 -6.962359 0.629019 3.906049 0.30486 0.751133 -0.253617 -5.73658 0.317967 0.598621 -3.391327 -0.492648 -0.242232 0.778199 -0.066581 0.901822 -0.617424 -10.458794 -1.944527 -0.923589 -1.739218 0.548189 6.526911 4.316123 3.240913 -1.654877 -0.198803 0.785232 2.786922 0.6872 1.18895 -0.245224 0.203672 -0.133783 0.268877\r\n-5.842357 1.967646 0.224943 0.484303 0.5234 0.340067 0.883822 1.304107 1.178567 0.252517 -7.336821 -0.50813 0.679337 4.994544 0.139982 2.138567 0.426382 -0.442358 0.791294 6.146351 -1.443887 -2.470263 -1.556866 0.413588 1.159323 -0.540218 -0.734053 -0.820992 -2.235744 0.83303 0.64868 4.310574 1.540316 -0.181494 4.038373 0.523155 -0.385388\r\n-1.560886 2.399612 -2.867247 2.826306 8.852895 -0.387976 -4.089866 -0.642526 10.75674 0.901193 -0.253489 -1.912065 -1.339199 0.732621 1.517922 -0.100977 -2.492191 -1.101362 0.476372 0.368666 -10.922568 1.217139 0.953962 -0.906478 -0.775709 -0.508452 -1.19576 -1.871519 5.436321 0.176467 -4.290163 8.968181 0.26624 4.03011 -7.581853 -1.727187 -0.279877\r\n-<text:soft-page-break/>0.482238 -1.095357 -3.370105 -3.207668 0.936509 -0.490635 8.438203 0.696557 -0.085845 -1.089496 1.004188 0.164671 -0.33647 2.819843 -0.06896 -5.598782 9.696724 1.879814 -8.110454 -0.143808 -0.993656 0.519761 -0.208064 -2.829378 -0.373528 0.059909 0.603997 -6.284697 -1.081478 0.794202 0.888896 5.3644 0.984293 -1.684279 1.051695 -0.611923 -0.670806\r\n-5.30514 0.181709 -1.058966 -2.148119 7.113228 -4.369013 0.255387 0.602874 1.309303 -3.517639 0.110302 0.738124 -0.671104 3.203474 -0.836677 1.754494 6.822726 -2.225745 -0.818333 -0.859663 -1.270185 0.761874 2.287807 -1.501536 -13.054366 4.026246 0.961768 0.718368 0.764066 2.550657 0.571452 -1.184307 1.113427 0.731765 0.841927 4.994259 2.064363\r\n-0.810804 2.796216 0.447067 1.601047 0.976622 -11.490255 1.144378 -1.265909 0.354106 0.876459 12.703995 -1.308972 1.371343 -3.230444 0.777045 1.255335 0.295731 7.556674 1.57395 3.376572 4.171929 8.695788 -0.27411 2.063514 0.173522 -3.686111 13.346819 0.755801 1.809504 -1.166822 5.095554 -4.02048 0.037299 0.863522 0.262197 0.068141 -1.1643\r\n0.71703 2.249057 3.335137 -0.6373 1.378897 -1.255045 -0.687105 0.847077 1.086516 1.968001 -2.709033 -1.769921 2.999733 -12.855617 8.299635 -1.508481 -1.361221 1.936198 0.285808 7.038262 -1.620646 1.341761 0.290062 -4.577878 7.620469 2.353487 0.41809 -0.959654 0.606512 -0.585722 0.12828 1.389134 -1.935314 0.535472 -0.747802 -0.194366 -3.576633\r\n-3.249317 1.283267 1.357069 0.890561 1.725228 -1.124941 2.312364 4.701566 1.51141 0.159672 3.851586 -0.397772 0.450971 0.1303 0.347679 -1.230646 3.533948 0.532974 0.201021 0.988744 0.540485 1.031462 0.160349 -0.146664 0.250431 -4.077589 -1.094386 0.415401 -0.484292 -1.864407 -1.844889 0.700017 -0.482262 -3.644374 -8.796632 9.253485 1.356594\r\n-0.336421 1.8278 -6.979892 1.059023 -0.718139 -0.57506 0.984132 1.127434 1.92944 -0.918665 0.442319 -0.416597 0.408362 4.674619 4.92229 0.203049 1.703145 3.892787 2.638669 1.039874 -1.721883 12.606841 -1.796251 -1.402234 0.450539 12.289225 9.880633 7.823212 -4.193006 1.018256 1.958883 5.479599 -0.805784 0.772101 0.469624 -3.385164 0.254222\r\n-0.863023 -12.24068 0.043906 -0.361501 -8.660976 -0.828174 2.060059 -2.371014 5.537758 0.456944 0.818762 1.258153 -0.505768 -9.606435 11.844604 -6.491029 13.229323 0.321933 -4.105478 0.82306 -1.427798 2.2643 -1.343984 1.17747 1.012764 0.229896 -0.901396 0.353941 2.438173 -0.586499 0.038111 0.045333 -0.40423 1.5759 -0.492027 -1.531855 -1.185656\r\n0.897755 5.77148 0.412546 2.188316 -0.473635 8.204998 4.060464 3.806531 -1.02488 0.619806 -0.182291 -7.141297 -2.178102 0.210162 -1.244432 -0.918715 0.708307 1.061575 -15.024525 -8.010041 -0.268753 -0.159544 0.157512 12.708141 -1.045344 -3.142725 0.722708 0.251589 0.443878 -2.459608 -0.901434 -2.773411 -0.882677 0.055006 2.448987 -1.211841 -0.93283\r\n-0.459393 -0.400006 2.621021 -0.49632 -0.794362 -2.76152 0.611442 -1.120661 -1.821447 7.800245 -1.496129 -4.295179 -0.175802 1.775435 1.226062 0.481459 -1.045513 1.610718 -0.197689 2.943892 -0.209772 -7.325078 -0.082933 1.471704 3.817842 7.996665 2.344556 1.172691 1.545099 1.060547 0.025886 1.595727 1.388052 0.940704 -5.641129 0.054252 1.227434\r\n-6.668298 -3.094017 -2.853852 -7.656731 -1.08215 0.615443 4.658922 -5.825756 -1.453878 -1.07107 -0.202324 0.272531 3.987828 0.682758 -1.870944 -1.642011 -9.407382 0.056375 0.375466 0.76425 3.813419 7.142316 -0.179614 -12.860112 10.875722 0.745912 -0.189126 0.091085 2.302389 -0.61752 -0.042981 1.002966 -1.24905 -1.732149 0.152272 -1.354604 0.56745\r\n0.042022 -0.702206 7.351064 -0.380477 4.231149 -0.876252 0.724228 -7.588221 -0.319186 -0.203373 -0.486132 0.729911 0.132792 -0.660425 -1.040676 0.638155 7.473519 -0.383051 -0.261539 5.789038 -1.244557 -1.830385 3.253584 0.707308 6.424589 -4.2629 7.067785 -0.858902 7.936551 0.337344 0.83101 1.097282 8.936634 1.032838 -0.28866 -0.80139 0.595362\r\n5.256635 0.876307 1.541133 1.242111 0.241512 -0.892405 0.216679 -2.158622 1.086838 -1.353873 2.135908 2.204676 -2.915644 -0.944549 0.871687 -10.047662 -7.086518 2.158429 -0.491035 3.649304 0.978778 6.021704 0.318949 0.100981 -0.836829 -0.885315 -1.337918 0.738305 -0.757216 0.017143 2.266382 -0.478982 -0.709596 -7.646206 -1.233824 -0.346118 1.207945\r\n0.183498 0.284047 -1.617898 -15.090779 -2.838067 -0.479234 5.161912</text:p><text:p text:style-name="P495"><text:s/>-0.805191 0.154204 -0.899997 4.79547 0.80036 0.262378 0.046671 -1.346538 -3.279075 -0.585525 0.507354 -0.147635 -3.745769 0.611118 0.183075 -1.007349 -0.735277 1.849721 -0.286469 1.019981 -1.230711 0.045507 1.021616 0.733851 -1.171966 -0.271199 -0.874504 0.397674 -1.819882 -2.773028\r\n1.166448 -1.38077 -0.131302 -0.915486 1.476666 0.061531 0.790175 -0.731846 -1.092178 -1.752646 0.645189 -1.755054 -2.923149 0.564515 -3.96324 2.163363 -0.830772 -0.606816 -0.725291 -4.267467 8.547793 0.155502 -0.375345 10.505675 0.017888 1.195926 -0.095167 -0.634056 0.843997 0.26867 5.314285 -0.60511 1.422382 1.180266 -2.873646 -0.524771 0.015379\r\n0.453041 -0.358 -2.250586 1.652231 16.57212 -7.212607 -0.99118 -2.183404 5.306915 -6.562197 0.33836 -0.353458 -0.667836 0.42321 1.604305 -3.772276 6.858908 -1.291151 -2.326721 1.049484 -0.846233 -0.832085 -0.555227 -2.144132 -3.395842 1.277251 -0.753508 0.474242 -0.459277 5.373867 5.318837 -0.934113 -1.010153 -4.916541 4.499173 0.29476 -1.084238\r\n1.317333 0.056092 1.517647 3.511827 0.025994 -9.548806 -0.893987 -2.018398 0.15219 0.269578 0.692955 0.189992 -0.355258 0.373159 2.770131 2.718955 -0.816515 4.70883 1.509497 0.596255 0.481478 -0.070341 -1.092652 -4.083872 6.500371 2.206575 5.136393 1.09463 0.574016 -6.377616 1.512505 0.97015 0.478578 0.961118 -1.604209 10.814521 -1.166413\r\n-0.401274 0.292926 -0.076169 4.284649 0.881449 -0.937714 -0.836265 -0.500441 -0.20976 -0.274159 -6.649684 0.982326 0.261403 0.231438 -0.456327 3.81859 0.78145 -0.245734 2.353982 -0.725534 1.13076 2.203347 0.396893 -1.085537 1.766191 -0.304024 1.008201 0.727106 0.600358 -0.856583 2.317776 9.329099 -8.101566 -1.186468 -0.966526 2.322485 0.416014\r\n-0.609942 -0.603162 0.924383 1.154905 -2.131511 1.77947 -2.407869 -1.08983 -1.545172 -0.561743 -2.077271 -0.298336 -2.628321 1.322186 2.46787 -4.784723 0.696174 0.153526 2.817881 -0.917481 0.385897 -0.059387 14.380209 2.232559 -6.660897 -0.788332 0.393733 -3.930633 -0.931423 -0.358458 -6.971938 -9.268798 0.775499 -0.93148 0.448093 -1.089612 2.641056\r\n-0.830871 3.619205 -0.561538 -0.30602 0.956562 -0.732099 -4.510851 0.222674 1.272231 -2.190245 -5.140724 15.105102 -1.465405 0.404599 1.828431 -1.25827 -1.039556 -0.584876 -0.914262 4.112128 -1.133216 -2.716481 0.518243 0.333441 0.942642 -0.336316 -10.132336 0.298909 -0.072182 -3.203951 -1.155932 0.452475 2.109114 1.008432 -2.591759 0.966124 0.470633\r\n4.936085 1.027026 0.983813 -1.132536 -0.992478 2.149928 0.392082 -1.080645 0.025276 -0.667657 -0.652257 -4.582711 -0.972228 -0.06034 2.998824 -1.018651 5.296786 -0.825348 3.916906 0.451258 1.961258 5.595482 -0.076264 -1.501021 5.997455 -1.917398 -2.314341 2.264781 -0.687908 0.093134 0.561409 -3.505603 -0.419919 -3.287438 -0.153134 3.333072 -1.065671\r\n0.420648 -0.959297 1.136302 -0.109761 -1.083707 -3.676424 1.941555 0.773644 -0.264609 0.766719 -0.852818 -1.060278 -1.05528 0.72196 0.640327 -3.050579 -1.501673 -3.765462 -6.370669 4.208755 -2.614717 4.242144 2.712739 0.33066 -0.715833 -9.966035 1.453591 0.078087 -1.545291 1.371137 -0.829335 -5.394045 -2.201921 -0.481828 -2.252297 1.442348 -1.06172&apos;, &apos;0000-00-00 00:00:00&apos;),</text:p><text:p text:style-name="P495">(6, 1, 3.8e-005, &apos;-0.263018 12.231882 1.329696 -1.015897 -6.707821 -0.865842 -3.599329 -0.663938 0.386197 1.559932 0.306468 -2.452293 2.026519 -0.787413 13.607589 -0.814709 1.591329 -0.508011 0.009043 0.178391 -3.396075 -0.677513 4.836731 -1.363403 -2.220776 0.964117 -11.465342 -4.968549 1.192833 0.802452 1.94199 -0.954616 -0.945087 -1.614378 6.442087 12.289596 -3.212714\r\n1.415116 1.471875 1.315808 0.781514 0.26119 0.725863 -3.203089 -0.827185 3.955251 -1.199239 0.867021 5.617696 6.226959 2.911537 -1.451963 -0.155898 1.777027 -0.094159 0.21031 1.281542 13.6616 -3.693338 0.543053 -0.705219 -0.491371 -0.264169 -1.466767 1.088436 1.096543 0.228006 -3.706806 -11.736771 1.422876 3.134553 2.475694 0.965894 -0.706981\r\n1.216527 -0.443106 -5.630099 -0.136341 0.103271 -0.051762 1.80512 -6.926968 3.783194 0.137296 1.270063 -8.918532 -3.60844 -0.503175 -0.199196 -0.475459 5.000207 1.027389 -2.263392 3.344675 -1.385849 -0.578185 -8.376267 -3.725282 1.013271 0.534174 0.911471 1.327071 0.038558 0.01761 3.662178 -0.761591 0.065405 1.963819 0.034313 -0.692156 0.200545\r\n-0.054419 -0.353485 0.70031 -2.879975 0.084752 1.793699 -5.265785 0.909954 -0.60181 0.590435 0.192583 -1.4873 -3.526656 3.227244 -0.188369 -1.437614 2.938147 6.057747 0.084382 2.102327 -0.248279 -6.070189 -11.041435 3.827445 1.830149 3.082442 1.920865 6.311011 -0.597088 -1.069573 -0.27467 -2.181054 -0.767838 -0.402957 2.940928 -1.046186 -2.240543\r\n-0.396357 -0.486266 -0.150853 -0.033703 7.421685 -1.935084 7.277773 -0.176868 4.562124 -0.867421 1.052855 0.344079 0.834152 1.789971 -6.817823 -3.590927 2.327963 3.729873 -0.26185 0.559938 7.009408 0.975698 4.538898 -2.267461 0.302225 -1.805752 4.511014 6.627038 -0.70817 1.360777 -0.504514 0.3096 -0.618573 0.332589 1.939302 -11.369041 -0.626034\r\n-2.783674 -8.411692 0.105801 -0.472887 -2.518611 -2.477467 -0.70645 1.454329 0.777458 -0.312225 -1.202687 -1.940889 11.316502 -0.439965 -19.037662 -0.526696 -0.593533 4.683476 -1.092885 -1.091029 -1.725829 -0.035534 -0.145433 0.776175 -0.727749 -1.255174 0.553887 0.358177 0.682544 0.178515 4.198295 -0.265169 0.086144 2.463499 3.583012 -0.040391 -5.923157\r\n-4.452271 -6.306397 0.436912 3.02947 -4.414997 0.269526 -5.64397 0.12588 0.281169 0.780911 0.101056 -7.506463 -4.501006 0.994684 -2.447452 -0.684523 -5.952438 0.526183 -1.508527 1.778677 -0.084133 1.495349 0.280913 0.110031 -1.274933 -0.747329 0.459241 2.499151 1.530582 0.805641 -1.799208 1.008444 1.229096 0.947188 -0.277911 -1.225533 -0.447354\r\n0.792608 -0.433991 0.445487 3.561435 0.085593 2.157707 -1.085424 1.934491 2.778922 -0.273426 0.574894 -1.602759 -2.280342 0.959097 3.011318 0.956753 -0.349176 -3.188272 1.614979 -8.469443 0.767453 -0.26143 -3.233847 0.551156 0.165115 0.527872 0.03207 -0.775209 -2.727985 -4.264135 -6.239048 -4.337859 -1.438255 0.559753 0.774412 0.291971 0.439174\r\n-0.125889 6.662012 -3.666422 0.454293 0.049775 -0.721102 -0.247053 -0.404792 3.747547 -0.347934 1.936114 -0.058651 -1.082271 0.75129 -0.679855 0.045432 -0.94213 -0.528904 0.370114 -0.201911 -0.019846 0.402741 1.743892 1.115444 1.153273 -0.431338 -1.117196 -0.630899 2.47492 1.000708 -0.079591 -0.304749 6.273457 0.603587 -0.105399 -6.978572 1.417846\r\n-2.331788 -0.077769 0.741362 -1.225742 -0.79269 0.371924 -0.854572 1.060385 0.225834 0.627302 1.56371 -1.170364 3.429719 0.3575 -0.913184 0.904756 0.724292 -5.78673 -7.413537 -0.814698 -0.324044 -1.76281 3.467595 1.347823 4.327199 -0.439456 0.269478 0.522616 0.721121 1.29346 -0.645862 -4.992581 1.00153 -0.596521 -3.058146 1.234888 1.090092\r\n-10.29294 -2.596929 0.915395 -1.938857 -0.401612 1.102969 -2.57657 0.264643 1.538036 -2.708931 0.584455 -0.491294 -14.527656 0.977756 1.03727 1.50866 -0.664539 0.093964 -0.790497 4.296408 -0.592214 -6.755372 0.625115 -7.462736 -0.938762 0.691618 -0.98617 -0.352375 0.268991 -4.885913 4.470383 4.162074 1.145147 0.294327 0.671107 -0.809401 -0.610616\r\n-2.547849 -0.500341 -1.479874 0.797808 -0.309193 1.755942 -0.940054 -4.159926 6.990231 2.295517 -0.575308 -0.762663 0.480101 -0.025618 -1.374284 -5.631329 0.734423 0.213542 -0.27542 0.312 10.162732 -1.11863 -19.607605 3.634871 2.160753 1.016448 1.974693 -0.768523 1.002381 -0.086247 0.140956 0.484464 -1.064612 0.986175 10.650967 3.247941 -2.411675\r\n-0.635318 -0.309027 0.975222 0.542242 -0.829894 -0.466444 0.130822 4.993852 0.687841 10.021269 -1.795054 -0.79991 -0.731458 -0.522552 -5.80999 -2.07322 -0.266337 -4.808924 0.20696 -0.452355 -5.864529 2.112005 3.419956 -0.150813 -1.128874 -2.608025 -3.898516 -7.215545 -0.076467 -1.046852 -3.04471 -2.805898 -1.795851 0.791919 0.665445 4.486841 -0.271027\r\n0.583135 0.21908 0.898679 -6.962359 0.629019 4.258361 0.30486 0.751133 -0.253617 -5.73658 0.317967 0.598621 -3.391327 -2.510489 -0.242232 0.778199 -0.066581 0.901822 -0.617424 -10.458794 -1.944527 -0.923589 -1.739218 0.548189 6.526911 4.316123 3.240913 -1.654877 -0.198803 0.785232 2.786922 0.6872 1.18895 -0.245224 0.203672 -0.133783 0.268877\r\n-5.842357 3.020968 0.224943 0.484303 0.5234 0.340067 0.883822 1.304107 1.65386 0.252517 -7.336821 -0.50813 0.679337 4.994544 0.139982 2.942756 0.426382 -0.442358 0.791294 6.146351 -1.443887 -2.470263 -0.987818 0.413588 1.159323 -0.540218 -0.734053 -0.820992 -2.235744 0.632177 0.64868 4.310574 0.478635 -2.984224 4.038373 0.523155 -0.649633\r\n-1.560886 2.399612 -2.867247 2.826306 8.852895 -0.387976 -4.089866 -0.642526 10.75674 0.901193 -0.253489 -2.09862 -1.339199 0.732621 1.517922 -0.100977 -2.492191 -1.101362 0.476372 0.368666 -10.922568 1.217139 0.953962 -0.906478 -0.775709 0.139722 -1.19576 -1.871519 5.436321 0.360937 -4.290163 8.968181 0.26624 4.03011 -7.581853 -1.727187 -0.279877\r\n-0.482238 -1.095357 -3.370105 -3.207668 0.936509 -0.490635 8.438203 0.696557 -0.085845 -1.089496 1.004188 0.164671 0.032905 2.819843 -0.06896 -5.598782 9.696724 1.879814 -8.110454 -0.143808 -0.993656 0.519761 -0.208064 -3.150232 -0.373528 -0.437807 0.603997 -6.284697 -1.081478 0.794202 0.888896 5.3644 0.984293 -1.684279 1.051695 -0.611923 -0.094819\r\n-5.30514 0.181709 -0.672429 -2.148119 7.113228 -4.539906 0.006678 0.602874 1.309303 -3.517639 0.110302 0.738124 -0.946063 3.203474 -0.836677 1.754494 6.822726 -2.225745 -0.818333 -0.859663 -1.270185 0.761874 1.671412 -1.501536 -13.13772 4.026246 0.961768 0.718368 0.764066 2.550657 0.571452 -0.692954 1.113427 0.731765 0.841927 4.994259 2.064363\r\n-0.810804 2.796216 0.447067 1.601047 3.75339 -11.490255 1.144378 -1.329863 0.354106 0.876459 12.96091 -1.308972 1.371343 -3.230444 0.777045 0.915208 0.295731 7.556674 1.57395 3.376572 4.171929 8.695788 0.041202 2.063514 0.182615 -3.686111 13.346819 0.755801 1.809504 -1.873959 5.095554 -4.02048 0.037299 0.721337 -0.104559 1.088278 -1.1643\r\n0.71703 2.249057 3.335137 -0.6373 1.378897 -1.255045 -0.687105 0.847077 1.086516 1.968001 -2.709033 -1.769921 2.999733 -12.855617 8.299635 -1.508481 -1.361221 1.936198 0.319179 7.669853 -1.620646 1.341761 0.290062 -4.577878 7.620469 2.353487 0.41809 -0.959654 0.606512 -0.585722 0.12828 1.389134 -1.935314 0.535472 -0.747802 -0.194366 -3.576633\r\n-3.249317 1.283267 1.357069 0.890561 1.725228 -1.124941 2.419895 4.701566 2.397737 0.159672 3.851586 -0.397772 0.450971 0.1303 0.347679 -1.230646 3.533948 0.532974 0.201021 0.988744 0.731078 1.031462 0.870318 -0.146664 0.250431 -4.218057 -1.251648 0.415401 -0.484292 -1.864407 -1.278625 0.700017 -0.482262 -3.644374 -8.796632 9.253485 1.356594\r\n-0.336421 1.8278 -6.979892 1.059023 -0.718139 -0.57506 0.984132 1.127434 1.92944 -0.918665 0.913558 -0.416597 0.408362 4.674619 4.92229 0.203049 1.703145 3.892787 2.638669 1.039874 -1.721883 12.606841 -1.796251 -1.402234 0.450539 12.289225 9.880633 7.823212 -4.193006 0.561271 2.091446 5.479599 -0.805784 0.772101 0.469624 -3.385164 0.254222\r\n-0.863023 -12.24068 0.043906 -0.493499 -8.660976 -0.828174 3.41878 -2.371014 5.537758 0.456944 0.818762 1.258153 -0.505768 -9.606435 11.844604 -5.944837 11.16349 0.321933 -4.105478 0.977543 -1.427798 2.2643 -1.343984 1.17747 1.012764 0.229896 -0.901396 0.353941 2.438173 -0.586499 0.038111 0.045333 -0.40423 1.5759 -0.492027 -2.482493 -1.185656\r\n0.897755 5.77148 0.412546 2.188316 -0.473635 8.204998 5.967282 3.806531 -1.02488 0.619806 -0.182291 -6.635942 -2.178102 -0.095148 -1.244432 -0.812928 0.708307 1.061575 -11.401887 -8.010041 -0.541581 -0.159544 0.157512 13.184968 -1.045344 -3.142725 0.722708 0.251589 0.443878 -2.459608 -0.901434 -2.773411 -0.882677 0.055006 2.448987 -1.211841 -0.93283\r\n-0.459393 -0.870746 2.621021 -0.49632 -0.794362 -2.76152 0.611442 -1.120661 -1.821447 7.800245 -1.496129 -4.295179 -0.175802 1.775435 1.226062 0.481459 -1.045513 1.610718 -0.197689 2.943892 -0.209772 -7.325078 -0.082933 1.471704 3.817842 7.996665 2.604243 1.172691 1.545099 1.060547 0.025886 1.595727 1.388052 0.940704 -6.22086 0.054252 -0.199221\r\n-6.812754 -3.094017 -2.853852 -10.524841 -1.08215 0.615443 4.658922 -5.825756 -1.453878 -1.07107 -0.202324 -1.543205 3.987828 0.682758 -2.566917 -1.642011 -9.407382 0.056375 0.375466 0.76425 6.012482 7.142316 -0.179614 -12.860112 10.875722 0.745912 -0.189126 0.091085 2.655395 -0.61752 -0.042981 1.002966 -1.24905 -0.87395 0.152272 -1.354604 0.56745\r\n0.042022 -0.702206 7.351064 1.60028 4.231149 -2.100948 0.491887 -6.944365 -0.319186 -0.203373 -0.486132 1.690892 0.132792 -0.660425 -1.040676 0.638155 7.473519 -0.383051 -0.261539 5.789038 -1.244557 -1.830385 3.253584 0.707308 6.424589 -4.2629 7.067785 -1.26836 7.936551 0.337344 0.83101 1.097282 8.936634 -2.270086 -0.28866 -0.80139 0.595362\r\n5.256635 0.876307 1.541133 1.242111 0.241512 -0.892405 0.216679 -2.158622 1.086838 -1.353873 2.135908 2.204676 -2.915644 -0.944549 0.871687 -10.047662 -7.086518 2.158429 -0.491035 3.40129 0.978778 6.021704 0.829677 0.100981 -0.836829 -0.885315 -1.337918 0.738305 -0.757216 -1.705918 2.236192 -0.478982 -0.709596 -7.646206 -1.233824 -0.346118 1.207945\r\n-0.20917 0.284047 -1.001944 -15.090779 -2.838067 -0.479234 5.161912 -0.805191</text:p><text:p text:style-name="P495"><text:s/>0.287854 -0.899997 4.79547 1.26406 0.262378 0.046671 -1.346538 -3.279075 -0.585525 0.507354 -0.147635 -3.745769 0.611118 0.183075 -1.007349 -0.735277 1.849721 -1.888645 1.019981 -1.230711 0.104633 1.021616 -1.944722 -1.171966 -0.271199 -0.874504 0.397674 -1.819882 -2.773028\r\n1.166448 -1.38077 0.270356 -0.915486 1.476666 0.061531 0.790175 -0.731846 -0.391899 -1.752646 0.645189 -1.755054 -2.923149 0.564515 -3.96324 2.163363 -0.830772 -0.606816 -0.725291 -4.267467 8.547793 0.155502 -0.375345 8.678685 0.017888 1.195926 -0.095167 -0.634056 0.843997 0.334222 5.314285 -0.60511 1.422382 1.180266 -2.873646 -0.524771 0.015379\r\n0.453041 -0.623895 -3.033046 1.692086 18.469379 -7.212607 -0.99118 -2.183404 5.306915 -6.562197 0.33836 -1.985731 -0.667836 0.42321 4.099566 -3.772276 6.858908 -0.539916 -1.046721 1.049484 -0.846233 -0.832085 -0.555227 -2.144132 -3.395842 1.277251 -0.753508 0.474242 -0.459277 5.373867 5.318837 -0.934113 -1.010153 -4.916541 4.499173 0.29476 -1.337242\r\n1.317333 0.056092 1.517647 3.785082 0.025994 -9.548806 -1.252592 -2.018398 0.15219 0.269578 0.692955 0.379984 -0.355258 0.373159 2.770131 2.718955 -0.895108 4.70883 1.509497 0.596255 0.481478 -0.070341 -1.092652 -4.083872 6.500371 2.206575 5.136393 1.09463 0.574016 -6.377616 1.512505 0.97015 0.478578 0.961118 -1.604209 10.814521 -1.166413\r\n-0.401274 0.292926 -0.076169 4.284649 0.881449 -0.937714 -0.836265 -0.500441 -0.20976 -0.274159 -6.649684 0.982326 0.261403 0.231438 -0.456327 3.81859 0.78145 -0.245734 2.353982 -0.725534 1.13076 2.203347 0.396893 -1.085537 1.766191 -0.304024 1.008201 1.119199 0.600358 -0.856583 2.317776 9.329099 -8.101566 -1.186468 -0.966526 2.322485 0.416014\r\n-0.609942 -0.603162 0.924383 1.016348 -1.900172 0.079178 -2.407869 -1.095572 -1.545172 -0.561743 -2.077271 -0.298336 -2.628321 1.322186 3.953791 -4.784723 0.696174 0.153526 2.817881 -0.917481 0.385897 -0.059387 14.380209 2.232559 -6.660897 -0.788332 0.393733 -3.930633 -0.374431 -0.358458 -6.971938 -9.268798 0.775499 -0.93148 0.448093 -1.089612 2.641056\r\n-0.830871 3.619205 -0.561538 -0.30602 0.956562 -0.732099 -4.510851 0.222674 1.272231 -2.190245 -5.140724 15.105102 -1.465405 0.404599 1.828431 -1.25827 -1.039556 -0.45256 -0.914262 4.112128 -1.133216 -2.716481 0.311681 0.333441 0.934273 -0.336316 -10.132336 0.298909 -0.072182 -3.203951 -1.155932 0.452475 2.129928 1.008432 -3.301156 1.136023 0.470633\r\n4.936085 1.027026 0.983813 -1.132536 -0.041108 2.149928 0.392082 -1.080645 0.025276 -0.091532 -0.652257 -4.582711 -0.972228 -0.322394 2.998824 -0.035572 5.296786 -0.825348 3.167297 0.451258 1.961258 5.595482 -0.132393 -1.501021 5.997455 -1.917398 -2.006814 2.264781 -0.687908 0.093134 0.561409 -3.505603 0.401624 -3.287438 -0.153134 3.333072 -1.065671\r\n2.64981 -0.959297 1.925765 -0.109761 -1.083707 -3.676424 1.941555 0.773644 -0.264609 0.766719 -0.852818 -1.060278 -1.05528 0.72196 -3.307853 -3.050579 -1.501673 -3.765462 -6.370669 4.208755 -2.614717 4.242144 1.357276 0.33066 -0.715833 -9.966035 1.613901 0.078087 -1.545291 1.371137 0.356428 -5.394045 -2.201921 -0.481828 -2.252297 1.442348 -1.123753&apos;, &apos;0000-00-00 00:00:00&apos;);</text:p><text:p text:style-name="P495"/><text:p text:style-name="P495">-- --------------------------------------------------------</text:p><text:p text:style-name="P495"/><text:p text:style-name="P495">--</text:p><text:p text:style-name="P495">-- Table structure for table `ann_kind`</text:p><text:p text:style-name="P495">--</text:p><text:p text:style-name="P495"/><text:p text:style-name="P495">CREATE TABLE IF NOT EXISTS `ann_kind` (</text:p><text:p text:style-name="P495"><text:s text:c="2"/>`id` int(11) NOT NULL AUTO_INCREMENT COMMENT &apos;Artificial neural network unique identifier.&apos;,</text:p><text:p text:style-name="P495"><text:s text:c="2"/>`currency_pairs_id` int(11) NOT NULL COMMENT &apos;MetaTrader 4 chart currency pair ID.&apos;,</text:p><text:p text:style-name="P495"><text:s text:c="2"/>`number_of_neurons` int(10) unsigned NOT NULL COMMENT &apos;Number of neurons used for artificial neural network.&apos;,</text:p><text:p text:style-name="P495"><text:s text:c="2"/>`flags` longtext NOT NULL COMMENT &apos;Neurons flags (bias, input, output).&apos;,</text:p><text:p text:style-name="P495"><text:s text:c="2"/>`activities` longtext NOT NULL COMMENT &apos;Artificial neural network weights activities.&apos;,</text:p><text:p text:style-name="P495"><text:s text:c="2"/>`happened` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT &apos;The moment in time when the record was created.&apos;,</text:p><text:p text:style-name="P495"><text:s text:c="2"/>PRIMARY KEY (`id`),</text:p><text:p text:style-name="P495"><text:s text:c="2"/>KEY `symbol` (`currency_pairs_id`,`number_of_neurons`)</text:p><text:p text:style-name="P495">) ENGINE=MyISAM <text:s/>DEFAULT CHARSET=utf8 COMMENT=&apos;Artificial neural network kind.&apos; AUTO_INCREMENT=2 ;</text:p><text:p text:style-name="P495"/><text:p text:style-name="P495">--</text:p><text:p text:style-name="P495">-- Dumping data for table `ann_kind`</text:p><text:p text:style-name="P495">--</text:p><text:p text:style-name="P495"/><text:p text:style-name="P495">INSERT INTO `ann_kind` (`id`, `currency_pairs_id`, `number_of_neurons`, `flags`, `activities`, `happened`) VALUES</text:p><text:p text:style-name="P495">(1, 1, 37, &apos;2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 0 0 0 0 0 0 0 0 0 1 4&apos;, &apos;0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 0\r\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 0\r\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 0\r\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 0\r\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 0\r\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 0\r\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 0\r\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 0\r\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 0\r\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 0\r\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 0\r\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 0\r\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 0\r\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 0\r\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 0\r\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 0\r\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 0\r\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 0\r\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 0\r\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 0\r\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 0\r\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 0\r\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 0\r\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 0\r\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 0\r\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 0\r\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1\r\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1\r\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1\r\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1\r\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1\r\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1\r\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1\r\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1\r\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1\r\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1\r\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0&apos;, &apos;0000-00-00 00:00:00&apos;);</text:p><text:p text:style-name="P495"/><text:p text:style-name="P495">-- --------------------------------------------------------</text:p><text:p text:style-name="P495"/><text:p text:style-name="P495">--</text:p><text:p text:style-name="P495">-- Table structure for table `currency_pairs`</text:p><text:p text:style-name="P495">--</text:p><text:p text:style-name="P495"/><text:p text:style-name="P495">CREATE TABLE IF NOT EXISTS `currency_pairs` (</text:p><text:p text:style-name="P495"><text:s text:c="2"/>`id` int(11) NOT NULL AUTO_INCREMENT COMMENT &apos;Currency pairs unique identifier.&apos;,</text:p><text:p text:style-name="P495"><text:s text:c="2"/>`symbol` varchar(255) NOT NULL COMMENT &apos;MetaTrader 4 chart symbol.&apos;,</text:p><text:p text:style-name="P495"><text:s text:c="2"/>`period_id` int(11) NOT NULL COMMENT &apos;Time period ID.&apos;,</text:p><text:p text:style-name="P495"><text:s text:c="2"/>`offset` decimal(10,0) NOT NULL COMMENT &apos;Chart offset to map in ANN with 0.0-1.0 interval.&apos;,</text:p><text:p text:style-name="P495"><text:s text:c="2"/>`scale` decimal(10,0) NOT NULL COMMENT &apos;Chart scaling to map in ANN with 0.0-1.0 interval.&apos;,</text:p><text:p text:style-name="P495"><text:s text:c="2"/>`description` varchar(255) NOT NULL COMMENT &apos;Describe what kind of currency pair.&apos;,</text:p><text:p text:style-name="P495"><text:s text:c="2"/>`happened` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT &apos;The moment in time when the record was created.&apos;,</text:p><text:p text:style-name="P495"><text:s text:c="2"/>PRIMARY KEY (`id`)</text:p><text:p text:style-name="P495">) ENGINE=MyISAM <text:s/>DEFAULT CHARSET=utf8 AUTO_INCREMENT=2 ;</text:p><text:p text:style-name="P495"/><text:p text:style-name="P495">--</text:p><text:p text:style-name="P495">-- Dumping data for table `currency_pairs`</text:p><text:p text:style-name="P495">--</text:p><text:p text:style-name="P495"/><text:p text:style-name="P495">INSERT INTO `currency_pairs` (`id`, `symbol`, `period_id`, `offset`, `scale`, `description`, `happened`) VALUES</text:p><text:p text:style-name="P495">(1, &apos;USDCHF&apos;, 5, &apos;0&apos;, &apos;0&apos;, &apos;&apos;, &apos;0000-00-00 00:00:00&apos;);</text:p><text:p text:style-name="P495"/><text:p text:style-name="P495">-- --------------------------------------------------------</text:p><text:p text:style-name="P495"/><text:p text:style-name="P495">--</text:p><text:p text:style-name="P495">-- Table structure for table `neurons_coordinates`</text:p><text:p text:style-name="P495">--</text:p><text:p text:style-name="P495"><text:soft-page-break/></text:p><text:p text:style-name="P495">CREATE TABLE IF NOT EXISTS `neurons_coordinates` (</text:p><text:p text:style-name="P495"><text:s text:c="2"/>`id` int(11) NOT NULL AUTO_INCREMENT COMMENT &apos;Unique identifier.&apos;,</text:p><text:p text:style-name="P495"><text:s text:c="2"/>`ann_id` int(11) NOT NULL COMMENT &apos;Link to ANN table.&apos;,</text:p><text:p text:style-name="P495"><text:s text:c="2"/>`coordinates` longtext NOT NULL COMMENT &apos;Neurons coordinates (x, y).&apos;,</text:p><text:p text:style-name="P495"><text:s text:c="2"/>`happened` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT &apos;The moment in time when the record was created.&apos;,</text:p><text:p text:style-name="P495"><text:s text:c="2"/>PRIMARY KEY (`id`),</text:p><text:p text:style-name="P495"><text:s text:c="2"/>UNIQUE KEY `ann_id` (`ann_id`)</text:p><text:p text:style-name="P495">) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT=&apos;Backend neurons visualisation information.&apos; AUTO_INCREMENT=1 ;</text:p><text:p text:style-name="P495"/><text:p text:style-name="P495">--</text:p><text:p text:style-name="P495">-- Dumping data for table `neurons_coordinates`</text:p><text:p text:style-name="P495">--</text:p><text:p text:style-name="P495"/><text:p text:style-name="P495"/><text:p text:style-name="P495">-- --------------------------------------------------------</text:p><text:p text:style-name="P495"/><text:p text:style-name="P495">--</text:p><text:p text:style-name="P495">-- Table structure for table `time_periods`</text:p><text:p text:style-name="P495">--</text:p><text:p text:style-name="P495"/><text:p text:style-name="P495">CREATE TABLE IF NOT EXISTS `time_periods` (</text:p><text:p text:style-name="P495"><text:s text:c="2"/>`id` int(11) NOT NULL AUTO_INCREMENT COMMENT &apos;Unique identifier.&apos;,</text:p><text:p text:style-name="P495"><text:s text:c="2"/>`minutes` int(11) NOT NULL COMMENT &apos;Number of minutes.&apos;,</text:p><text:p text:style-name="P495"><text:s text:c="2"/>`period` varchar(10) NOT NULL COMMENT &apos;Time period as symbols.&apos;,</text:p><text:p text:style-name="P495"><text:s text:c="2"/>PRIMARY KEY (`id`)</text:p><text:p text:style-name="P495">) ENGINE=MyISAM <text:s/>DEFAULT CHARSET=utf8 COMMENT=&apos;Time periods minutes to symbols mapping.&apos; AUTO_INCREMENT=10 ;</text:p><text:p text:style-name="P495"/><text:p text:style-name="P495">--</text:p><text:p text:style-name="P495">-- Dumping data for table `time_periods`</text:p><text:p text:style-name="P495">--</text:p><text:p text:style-name="P495"/><text:p text:style-name="P495">INSERT INTO `time_periods` (`id`, `minutes`, `period`) VALUES</text:p><text:p text:style-name="P495">(1, 1, &apos;M1&apos;),</text:p><text:p text:style-name="P495">(2, 5, &apos;M5&apos;),</text:p><text:p text:style-name="P495">(3, 15, &apos;M15&apos;),</text:p><text:p text:style-name="P495">(4, 30, &apos;M30&apos;),</text:p><text:p text:style-name="P495">(5, 60, &apos;H1&apos;),</text:p><text:p text:style-name="P495">(6, 240, &apos;H4&apos;),</text:p><text:p text:style-name="P495">(7, 1440, &apos;D1&apos;),</text:p><text:p text:style-name="P495">(8, 10080, &apos;W1&apos;),</text:p><text:p text:style-name="P495">(9, 43200, &apos;MN1&apos;);</text:p><text:p text:style-name="P495"/><text:p text:style-name="P495">-- --------------------------------------------------------</text:p><text:p text:style-name="P495"/><text:p text:style-name="P495">--</text:p><text:p text:style-name="P495">-- Table structure for table `training_options`</text:p><text:p text:style-name="P495">--</text:p><text:p text:style-name="P495"/><text:p text:style-name="P495">CREATE TABLE IF NOT EXISTS `training_options` (</text:p><text:p text:style-name="P495"><text:s text:c="2"/>`id` int(11) NOT NULL AUTO_INCREMENT COMMENT &apos;Training options unique identifier.&apos;,</text:p><text:p text:style-name="P495"><text:s text:c="2"/>`ann_id` int(11) NOT NULL COMMENT &apos;Link to ANN table.&apos;,</text:p><text:p text:style-name="P495"><text:s text:c="2"/>`de_population_size` int(10) unsigned NOT NULL COMMENT &apos;Differencial evolution population size.&apos;,</text:p><text:p text:style-name="P495"><text:s text:c="2"/>`number_of_training_bars` int(10) unsigned NOT NULL COMMENT &apos;Number of traning bars to be used for training process.&apos;,</text:p><text:p text:style-name="P495"><text:s text:c="2"/>`after_bars_prediction` int(10) NOT NULL COMMENT &apos;Prediction after number of bars (it can be negative).&apos;,</text:p><text:p text:style-name="P495"><text:s text:c="2"/>PRIMARY KEY (`id`),</text:p><text:p text:style-name="P495"><text:s text:c="2"/>UNIQUE KEY `ann_id` (`ann_id`)</text:p><text:p text:style-name="P495">) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT=&apos;Artificial neural network training options.&apos; AUTO_INCREMENT=1 ;</text:p><text:p text:style-name="P495"/><text:p text:style-name="P495">--</text:p><text:p text:style-name="P495">-- Dumping data for table `training_options`</text:p><text:p text:style-name="P495">--</text:p><text:p text:style-name="P495"/><text:p text:style-name="P495"/><text:p text:style-name="P495">-- --------------------------------------------------------</text:p><text:p text:style-name="P495"/><text:p text:style-name="P495">--</text:p><text:p text:style-name="P495">-- Table structure for table `training_set`</text:p><text:p text:style-name="P495">--</text:p><text:p text:style-name="P495"/><text:p text:style-name="P495">CREATE TABLE IF NOT EXISTS `training_set` (</text:p><text:p text:style-name="P495"><text:s text:c="2"/>`id` int(11) NOT NULL AUTO_INCREMENT COMMENT &apos;Unique identifier.&apos;,</text:p><text:p text:style-name="P495"><text:s text:c="2"/>`currency_pairs_id` int(11) NOT NULL COMMENT &apos;Currency pair ID.&apos;,</text:p><text:p text:style-name="P495"><text:s text:c="2"/>`number_of_examples` int(11) NOT NULL COMMENT &apos;Number of training examples.&apos;,</text:p><text:p text:style-name="P495"><text:s text:c="2"/>`time` longtext NOT NULL COMMENT &apos;Time values of the time series.&apos;,</text:p><text:p text:style-name="P495"><text:s text:c="2"/>`open` longtext NOT NULL COMMENT &apos;Open values of time series.&apos;,</text:p><text:p text:style-name="P495"><text:s text:c="2"/>`low` longtext NOT NULL COMMENT &apos;Low values of time series.&apos;,</text:p><text:p text:style-name="P495"><text:s text:c="2"/>`high` longtext NOT NULL COMMENT &apos;High values of time series.&apos;,</text:p><text:p text:style-name="P495"><text:s text:c="2"/>`close` longtext NOT NULL COMMENT &apos;Close values of time series.&apos;,</text:p><text:p text:style-name="P495"><text:s text:c="2"/>`volume` longtext NOT NULL COMMENT &apos;Volume values of time series.&apos;,</text:p><text:p text:style-name="P495"><text:s text:c="2"/>`happened` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT &apos;The moment in time when the record was created.&apos;,</text:p><text:p text:style-name="P495"><text:s text:c="2"/>PRIMARY KEY (`id`)</text:p><text:p text:style-name="P495">) ENGINE=MyISAM <text:s/>DEFAULT CHARSET=utf8 COMMENT=&apos;Training set examples table.&apos; AUTO_INCREMENT=7 ;</text:p><text:p text:style-name="P495"/><text:p text:style-name="P495">--</text:p><text:p text:style-name="P495">-- Dumping data for table `training_set`</text:p><text:p text:style-name="P495">--</text:p><text:p text:style-name="P495"/><text:p text:style-name="P495">INSERT INTO `training_set` (`id`, `currency_pairs_id`, `number_of_examples`, `time`, `open`, `low`, `high`, `close`, `volume`, `happened`) VALUES</text:p><text:p text:style-name="P495">(6, 1, 250, &apos;1438059600 1438063200 1438066800 1438070400 1438074000 1438077600 1438081200 1438084800 1438088400 1438092000 1438095600 1438099200 1438102800 1438106400 1438110000 1438113600 1438117200 1438120800 1438124400 1438128000 1438131600 1438135200 1438138800 1438142400 1438146000 1438149600 1438153200 1438156800 1438160400 1438164000 1438167600 1438171200 1438174800 1438178400 1438182000 1438185600 1438189200 1438192800 1438196400 1438200000 1438203600 1438207200 1438210800 1438214400 1438218000 1438221600 1438225200 1438228800 1438232400 1438236000 1438239600 1438243200 1438246800 1438250400 1438254000 1438257600 1438261200 1438264800 1438268400 1438272000 1438275600 1438279200 1438282800 1438286400 1438290000 1438293600 1438297200 1438300800 1438304400 1438308000 1438311600 1438315200 1438318800 1438322400 1438326000 1438329600 1438333200 1438336800 1438340400 1438344000 1438347600 1438351200 1438354800 1438358400 1438362000 1438365600 1438369200 1438372800 1438376400 1438380000 1438560000 1438563600 1438567200 1438570800 1438574400 1438578000 1438581600 1438585200 1438588800 1438592400 1438596000 1438599600 1438603200 1438606800 1438610400 1438614000 1438617600 1438621200 1438624800 1438628400 1438632000 1438635600 1438639200 1438642800 1438646400 1438650000 1438653600 1438657200 1438660800 1438664400 1438668000 1438671600 1438675200 1438678800 1438682400 1438686000 1438689600 1438693200 1438696800 1438700400 1438704000 1438707600 1438711200 1438714800 1438718400 1438722000 1438725600 1438729200 1438732800 1438736400 1438740000 1438743600 1438747200 1438750800 1438754400 1438758000 1438761600 1438765200 1438768800 1438772400 1438776000 1438779600 1438783200 1438786800 1438790400 1438794000 1438797600 1438801200 1438804800 1438808400 1438812000 1438815600 1438819200 1438822800 1438826400 1438830000 1438833600 1438837200 1438840800 1438844400 1438848000 1438851600 1438855200 1438858800 1438862400 1438866000 1438869600 1438873200 1438876800 1438880400 1438884000 1438887600 1438891200 1438894800 1438898400 1438902000 1438905600 1438909200 1438912800 1438916400 1438920000 1438923600 1438927200 1438930800 1438934400 1438938000 1438941600 1438945200 1438948800 1438952400 1438956000 1438959600 1438963200 1438966800 1438970400 1438974000 1438977600 1438981200 1438984800 1439164800 1439168400 1439172000 1439175600 1439179200 1439182800 1439186400 1439190000 1439193600 1439197200 1439200800 1439204400 1439208000 1439211600 1439215200 1439218800 1439222400 1439226000 1439229600 1439233200 1439236800 1439240400 1439244000 1439247600 1439251200 1439254800 1439258400 1439262000 1439265600 1439269200 1439272800 1439276400 1439280000 1439283600 1439287200 1439290800 1439294400 1439298000 1439301600 1439305200 1439308800&apos;, &apos;0.25 0.249 0.248 0.247 0.246 0.245 0.244 0.243 0.242 0.241 0.24 0.239 0.238 0.237 0.236 0.235 0.234 0.233 0.232 0.231 0.23 0.229 0.228 0.227 0.226 0.225 0.224 0.223 0.222 0.221 0.22 0.219 0.218 0.217 0.216 0.215 0.214 0.213 0.212 0.211 0.21 0.209 0.208 0.207 0.206 0.205 0.204 0.203 0.202 0.201 0.2 0.199 0.198 0.197 0.196 0.195 0.194 0.193 0.192 0.191 0.19 0.189 0.188 0.187 0.186 0.185 0.184 0.183 0.182 0.181 0.18 0.179 0.178 0.177 0.176 0.175 0.174 0.173 0.172 0.171 0.17 0.169 0.168 0.167 0.166 0.165 0.164 0.163 0.162 0.161 0.16 0.159 0.158 0.157 0.156 0.155 0.154 0.153 0.152 0.151 0.15 0.149 0.148 0.147 0.146 0.145 0.144 0.143 0.142 0.141 0.14 0.139 0.138 0.137 0.136 0.135 0.134 0.133 0.132 0.131 0.13 0.129 0.128 0.127 0.126 0.125 0.124 0.123 0.122 0.121 0.12 0.119 0.118 0.117 0.116 0.115 0.114 0.113 0.112 0.111 0.11 0.109 0.108 0.107 0.106 0.105 0.104 0.103 0.102 0.101 0.1 0.099 0.098 0.097 0.096 0.095 0.094 0.093 0.092 0.091 0.09 0.089 0.088 0.087 0.086 0.085 0.084 0.083 0.082 0.081 0.08 0.079 0.078 0.077 0.076 0.075 0.074 0.073 0.072 0.071 0.07 0.069 0.068 0.067 0.066 0.065 0.064 0.063 0.062 0.061 0.06 0.059 0.058 0.057 0.056 0.055 0.054 0.053 0.052 0.051 0.05 0.049 0.048 0.047 0.046 0.045 0.044 0.043 0.042 0.041 0.04 0.039 0.038 0.037 0.036 0.035 0.034 0.033 0.032 0.031 0.03 0.029 0.028 0.027 0.026 0.025 0.024 0.023 0.022 0.021 0.02 0.019 0.018 0.017 0.016 0.015 0.014 0.013 0.012 0.011 0.01 0.009 0.008 0.007 0.006 0.005 0.004 0.003 0.002 0.001&apos;, &apos;0.25 0.249 0.248 0.247 0.246 0.245 0.244 0.243 0.242 0.241 0.24 0.239 0.238 0.237 0.236 0.235 0.234 0.233 0.232 0.231 0.23 0.229 0.228 0.227 0.226 0.225 0.224 0.223 0.222 0.221 0.22 0.219 0.218 0.217 0.216 0.215 0.214 0.213 0.212 0.211 0.21 0.209 0.208 0.207 0.206 0.205 0.204 0.203 0.202 0.201 0.2 0.199 0.198 0.197 0.196 0.195 0.194 0.193 0.192 0.191 0.19 0.189 0.188 0.187 0.186 0.185 0.184 0.183 0.182 0.181 0.18 0.179 0.178 0.177 0.176 0.175 0.174 0.173 0.172 0.171 0.17 0.169 0.168 0.167 0.166 0.165 0.164 0.163 0.162 0.161 0.16 0.159 0.158 0.157 0.156 0.155 0.154 0.153 0.152 0.151 0.15 0.149 0.148 0.147 0.146 0.145 0.144 0.143 0.142 0.141 0.14 0.139 0.138 0.137 0.136 0.135 0.134 0.133 0.132 0.131 0.13 0.129 0.128 0.127 0.126 0.125 0.124 0.123 0.122 0.121 0.12 0.119 0.118 0.117 0.116 0.115 0.114 0.113 0.112 0.111 0.11 0.109 0.108 0.107 0.106 0.105 0.104 0.103 0.102 0.101 0.1 0.099 0.098 0.097 0.096 0.095 0.094 0.093 0.092 0.091 0.09 0.089 0.088 0.087 0.086 0.085 0.084 0.083 0.082 0.081 0.08 0.079 0.078 0.077 0.076 0.075 0.074 0.073 0.072 0.071 0.07 0.069 0.068 0.067 0.066 0.065 0.064 0.063 0.062 0.061 0.06 0.059 0.058 0.057 0.056 0.055 0.054 0.053 0.052 0.051 0.05 0.049 0.048 0.047 0.046 0.045 0.044 0.043 0.042 0.041 0.04 0.039 0.038 0.037 0.036 0.035 0.034 0.033 0.032 0.031 0.03 0.029 0.028 0.027 0.026 0.025 0.024 0.023 0.022 0.021 0.02 0.019 0.018 0.017 0.016 0.015 0.014 0.013 0.012 0.011 0.01 0.009 0.008 0.007 0.006 0.005 0.004 0.003 0.002 0.001&apos;, &apos;0.25 0.249 0.248 0.247 0.246 0.245 0.244 0.243 0.242 0.241 0.24 0.239 0.238 0.237 0.236 0.235 0.234 0.233 0.232 0.231 0.23 0.229 0.228 0.227 0.226 0.225 0.224 0.223 0.222 0.221 0.22 0.219 0.218 0.217 0.216 0.215 0.214 0.213 0.212 0.211 0.21 0.209 0.208 0.207 0.206 0.205 0.204 0.203 0.202 0.201 0.2 0.199 0.198 0.197 0.196 0.195 0.194 0.193 0.192 0.191 0.19 0.189 0.188 0.187 0.186 0.185 0.184 0.183 0.182 0.181 0.18 0.179 0.178 0.177 0.176 0.175 0.174 0.173 0.172 0.171 0.17 0.169 0.168 0.167 0.166 0.165 0.164 0.163 0.162 0.161 0.16 0.159 0.158 0.157 0.156 0.155 0.154 0.153 0.152 0.151 0.15 0.149 0.148 0.147 0.146 0.145 0.144 0.143 0.142 0.141 0.14 0.139 0.138 0.137 0.136 0.135 0.134 0.133 0.132 0.131 0.13 0.129 0.128 0.127 0.126 0.125 0.124 0.123 0.122 0.121 0.12 0.119 0.118 0.117 0.116 0.115 0.114 0.113 0.112 0.111 0.11 0.109 0.108 0.107 0.106 0.105 0.104 0.103 0.102 0.101 0.1 0.099 0.098 0.097 0.096 0.095 0.094 0.093 0.092 0.091 0.09 0.089 0.088 0.087 0.086 0.085 0.084 0.083 0.082 0.081 0.08 0.079 0.078 0.077 0.076 0.075 0.074 0.073 0.072 0.071 0.07 0.069 0.068 0.067 0.066 0.065 0.064 0.063 0.062 0.061 0.06 0.059 0.058 0.057 0.056 0.055 0.054 0.053 0.052 0.051 0.05 0.049 0.048 0.047 0.046 0.045 0.044 0.043 0.042 0.041 0.04 0.039 0.038 0.037 0.036 0.035 0.034 0.033 0.032 0.031 0.03 0.029 0.028 0.027 0.026 0.025 0.024 0.023 0.022 0.021 0.02 0.019 0.018 0.017 0.016 0.015 0.014 0.013 0.012 0.011 0.01 0.009 0.008 0.007 0.006 0.005 0.004 0.003 0.002 0.001&apos;, &apos;0.25 0.249 0.248 0.247 0.246 0.245 0.244 0.243 0.242 0.241 0.24 0.239 0.238 0.237 0.236 0.235 0.234 0.233 0.232 0.231 0.23 0.229 0.228 0.227 0.226 0.225 0.224 0.223 0.222 0.221 0.22 0.219 0.218 0.217 0.216 0.215 0.214 0.213 0.212 0.211 0.21 0.209 0.208 0.207 0.206 0.205 0.204 0.203 0.202 0.201 0.2 0.199 0.198 0.197 0.196 0.195 0.194 0.193 0.192 0.191 0.19 0.189 0.188 0.187 0.186 0.185 0.184 0.183 0.182 0.181 0.18 0.179 0.178 0.177 0.176 0.175 0.174 0.173 0.172 0.171 0.17 0.169 0.168 0.167 0.166 0.165 0.164 0.163 0.162 0.161 0.16 0.159 0.158 0.157 0.156 0.155 0.154 0.153 0.152 0.151 0.15 0.149 0.148 0.147 0.146 0.145 0.144 0.143 0.142 0.141 0.14 0.139 0.138 0.137 0.136 0.135 0.134 0.133 0.132 0.131 0.13 0.129 0.128 0.127 0.126 0.125 0.124 0.123 0.122 0.121 0.12 0.119 0.118 0.117 0.116 0.115 0.114 0.113 0.112 0.111 0.11 0.109 0.108 0.107 0.106 0.105 0.104 0.103 0.102 0.101 0.1 0.099 0.098 0.097 0.096 0.095 0.094 0.093 0.092 0.091 0.09 0.089 0.088 0.087 0.086 0.085 0.084 0.083 0.082 0.081 0.08 0.079 0.078 0.077 0.076 0.075 0.074 0.073 0.072 0.071 0.07 0.069 0.068 0.067 0.066 0.065 0.064 0.063 0.062 0.061 0.06 0.059 0.058 0.057 0.056 0.055 0.054 0.053 0.052 0.051 0.05 0.049 0.048 0.047 0.046 0.045 0.044 0.043 0.042 0.041 0.04 0.039 0.038 0.037 0.036 0.035 0.034 0.033 0.032 0.031 0.03 0.029 0.028 0.027 0.026 0.025 0.024 0.023 0.022 0.021 0.02 0.019 0.018 0.017 0.016 0.015 0.014 0.013 0.012 0.011 0.01 0.009 0.008 0.007 0.006 0.005 0.004 0.003 0.002 0.001&apos;, &apos;0.25 0.249 0.248 0.247 0.246 0.245 0.244 0.243 0.242 0.241 0.24 0.239 0.238 0.237 0.236 0.235 0.234 0.233 0.232 0.231 0.23 0.229 0.228 0.227 0.226 0.225 0.224 0.223 0.222 0.221 0.22 0.219 0.218 0.217 0.216 0.215 0.214 0.213 0.212 0.211 0.21 0.209 0.208 0.207 0.206 0.205 0.204 0.203 0.202 0.201 0.2 0.199 0.198 0.197 0.196 0.195 0.194 0.193 0.192 0.191 0.19 0.189 0.188 0.187 0.186 0.185 0.184 0.183 0.182 0.181 0.18 0.179 0.178 0.177 0.176 0.175 0.174 0.173 0.172 0.171 0.17 0.169 0.168 0.167 0.166 0.165 0.164 0.163 0.162 0.161 0.16 0.159 0.158 0.157 0.156 0.155 0.154 0.153 0.152 0.151 0.15 0.149 0.148 0.147 0.146 0.145 0.144 0.143 0.142 0.141 0.14 0.139 0.138 0.137 0.136 0.135 0.134 0.133 0.132 0.131 0.13 0.129 0.128 0.127 0.126 0.125 0.124 0.123 0.122 0.121 0.12 0.119 0.118 0.117 0.116 0.115 0.114 0.113 0.112 0.111 0.11 0.109 0.108 0.107 0.106 0.105 0.104 0.103 0.102 0.101 0.1 0.099 0.098 0.097 0.096 0.095 0.094 0.093 0.092 0.091 0.09 0.089 0.088 0.087 0.086 0.085 0.084 0.083 0.082 0.081 0.08 0.079 0.078 0.077 0.076 0.075 0.074 0.073 0.072 0.071 0.07 0.069 0.068 0.067 0.066 0.065 0.064 0.063 0.062 0.061 0.06 0.059 0.058 0.057 0.056 0.055 0.054 0.053 0.052 0.051 0.05 0.049 0.048 0.047 0.046 0.045 0.044 0.043 0.042</text:p><text:p text:style-name="P495"><text:s/>0.041 0.04 0.039 0.038 0.037 0.036 0.035 0.034 0.033 0.032 0.031 0.03 0.029 0.028 0.027 0.026 0.025 0.024 0.023 0.022 0.021 0.02 0.019 0.018 0.017 0.016 0.015 0.014 0.013 0.012 0.011 0.01 0.009 0.008 0.007 0.006 0.005 0.004 0.003 0.002 0.001&apos;, &apos;0000-00-00 00:00:00&apos;);</text:p><text:p text:style-name="P495"/><text:p text:style-name="P495">/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;</text:p><text:p text:style-name="P495">/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;</text:p><text:p text:style-name="P495">/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5864_1486593966"/><text:soft-page-break/><text:s text:c="4"/>db.php<text:bookmark-end text:name="__RefHeading___Toc5864_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P495">&lt;?php</text:p><text:p text:style-name="P495">/*******************************************************************************</text:p><text:p text:style-name="P495"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P495"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P495"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P495"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P495"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P495"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P495"><text:s/>* Copyright (C) 2008-2009 by Todor Balabanov <text:s/>( tdb@tbsoft-bg.com ) <text:s text:c="10"/>*</text:p><text:p text:style-name="P495"><text:s/>* <text:s text:c="27"/>Iliyan Zankinski ( iliyan_mf@abv.bg ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P495"><text:s/>* <text:s text:c="27"/>Galq Cirkalova <text:s text:c="2"/>( galq_cirkalova@abv.bg ) <text:s text:c="6"/>*</text:p><text:p text:style-name="P495"><text:s/>* <text:s text:c="27"/>Ivan Grozev <text:s text:c="5"/>( ivan.iliev.grozev@gmail.com ) *</text:p><text:p text:style-name="P495"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P495"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P495"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P495"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P495"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P495"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P495"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P495"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P495"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P495"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P495"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P495"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P495"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P495"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P495"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P495">?&gt;</text:p><text:p text:style-name="P495"/><text:p text:style-name="P495">&lt;?php</text:p><text:p text:style-name="P495">/**</text:p><text:p text:style-name="P495"><text:s/>* Host name.</text:p><text:p text:style-name="P495"><text:s/>*/</text:p><text:p text:style-name="P495">define(&quot;HOSTNAME&quot;, &quot;localhost&quot;);</text:p><text:p text:style-name="P495"/><text:p text:style-name="P495">/**</text:p><text:p text:style-name="P495"><text:s/>* Database username.</text:p><text:p text:style-name="P495"><text:s/>*/</text:p><text:p text:style-name="P495">define(&quot;USERNAME&quot;, &quot;root&quot;);</text:p><text:p text:style-name="P495"/><text:p text:style-name="P495">/**</text:p><text:p text:style-name="P495"><text:s/>* Database user password.</text:p><text:p text:style-name="P495"><text:s/>*/</text:p><text:p text:style-name="P495">define(&quot;PASSWORD&quot;, &quot;&quot;);</text:p><text:p text:style-name="P495"/><text:p text:style-name="P495">/**</text:p><text:p text:style-name="P495"><text:s/>* Database name.</text:p><text:p text:style-name="P495"><text:s/>*/</text:p><text:p text:style-name="P495">define(&quot;DBNAME&quot;, &quot;veldsoft_vitoshatrade&quot;);</text:p><text:p text:style-name="P495"/><text:p text:style-name="P495">/**</text:p><text:p text:style-name="P495"><text:s/>* Database link global variable.</text:p><text:p text:style-name="P495"><text:s/>*/</text:p><text:p text:style-name="P495">$GLOBALS[ &apos;link&apos; ] = null;</text:p><text:p text:style-name="P495"/><text:p text:style-name="P495">/**</text:p><text:p text:style-name="P495"><text:s/>* Open global database link.</text:p><text:p text:style-name="P495"><text:s/>*</text:p><text:p text:style-name="P495"><text:s/>* @author Todor Balabanov</text:p><text:p text:style-name="P495"><text:s/>*</text:p><text:p text:style-name="P495"><text:s/>* @email tdb@tbsoft-bg.com</text:p><text:p text:style-name="P495"><text:s/>*</text:p><text:p text:style-name="P495"><text:s/>* @date 27 Apr 2009</text:p><text:p text:style-name="P495"><text:s/>*/</text:p><text:p text:style-name="P495">function open_db() {</text:p><text:p text:style-name="P495"><text:tab/>$GLOBALS[ &apos;link&apos; ] = mysql_connect(HOSTNAME, USERNAME, PASSWORD);</text:p><text:p text:style-name="P495"><text:tab/>mysql_select_db( DBNAME );</text:p><text:p text:style-name="P495">}</text:p><text:p text:style-name="P495"/><text:p text:style-name="P495">/**</text:p><text:p text:style-name="P495"><text:s/>* Database query.</text:p><text:p text:style-name="P495"><text:s/>*</text:p><text:p text:style-name="P495"><text:s/>* @param $qrystr SQL query string.</text:p><text:p text:style-name="P495"><text:s/>*</text:p><text:p text:style-name="P495"><text:s/>* @return Array with SQL query result.</text:p><text:p text:style-name="P495"><text:s/>*</text:p><text:p text:style-name="P495"><text:s/>* @author Todor Balabanov</text:p><text:p text:style-name="P495"><text:s/>*</text:p><text:p text:style-name="P495"><text:s/>* @email tdb@tbsoft-bg.com</text:p><text:p text:style-name="P495"><text:s/>*</text:p><text:p text:style-name="P495"><text:s/>* @date 27 Apr 2009</text:p><text:p text:style-name="P495"><text:s/>*/</text:p><text:p text:style-name="P495">function query_db( $qrystr ) {</text:p><text:p text:style-name="P495"><text:tab/>$resstrs = false;</text:p><text:p text:style-name="P495"/><text:p text:style-name="P495"><text:tab/>if($qrystr[strlen($qrystr)-1] == &apos;,&apos;) {</text:p><text:p text:style-name="P495"><text:tab/><text:tab/>$qrystr[strlen($qrystr)-1] = &quot; &quot;;</text:p><text:p text:style-name="P495"><text:tab/>}</text:p><text:p text:style-name="P495"/><text:p text:style-name="P495"><text:tab/>if ( !$GLOBALS[&apos;link&apos;] ) {</text:p><text:p text:style-name="P495"><text:tab/><text:tab/>$resstrs = false;</text:p><text:p text:style-name="P495"><text:tab/>} else {</text:p><text:p text:style-name="P495"><text:tab/><text:tab/>$result = mysql_query($qrystr, $GLOBALS[&apos;link&apos;]);</text:p><text:p text:style-name="P495"/><text:p text:style-name="P495"><text:tab/><text:tab/>$j = 0;</text:p><text:p text:style-name="P495"><text:tab/><text:tab/>if ($result!=1 &amp;&amp; $result!=false) {</text:p><text:p text:style-name="P495"><text:tab/><text:tab/><text:tab/>while ($row = mysql_fetch_row($result)) {</text:p><text:p text:style-name="P495"><text:tab/><text:tab/><text:tab/><text:tab/>for ($i=0; $i&lt;mysql_num_fields($result); $i++) {</text:p><text:p text:style-name="P495"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>$resstrs[ $j ][ $i ] = $row[ $i ];</text:p><text:p text:style-name="P495"><text:tab/><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P495"/><text:p text:style-name="P495"><text:tab/><text:tab/><text:tab/><text:tab/>$j++;</text:p><text:p text:style-name="P495"><text:tab/><text:tab/><text:tab/>}</text:p><text:p text:style-name="P495"><text:tab/><text:tab/>} else {</text:p><text:p text:style-name="P495"><text:tab/><text:tab/><text:tab/>$resstrs = false;</text:p><text:p text:style-name="P495"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P495"><text:tab/>}</text:p><text:p text:style-name="P495"/><text:p text:style-name="P495"><text:tab/>return( $resstrs );</text:p><text:p text:style-name="P495">}</text:p><text:p text:style-name="P495"/><text:p text:style-name="P495">/**</text:p><text:p text:style-name="P495"><text:s/>* Close global database link.</text:p><text:p text:style-name="P495"><text:s/>*</text:p><text:p text:style-name="P495"><text:s/>* @author Todor Balabanov</text:p><text:p text:style-name="P495"><text:s/>*</text:p><text:p text:style-name="P495"><text:s/>* @email tdb@tbsoft-bg.com</text:p><text:p text:style-name="P495"><text:s/>*</text:p><text:p text:style-name="P495"><text:s/>* @date 27 Apr 2009</text:p><text:p text:style-name="P495"><text:soft-page-break/><text:s/>*/</text:p><text:p text:style-name="P495">function close_db() {</text:p><text:p text:style-name="P495"><text:tab/>if ( $GLOBALS[&apos;link&apos;] ) {</text:p><text:p text:style-name="P495"><text:tab/><text:tab/>mysql_close( $GLOBALS[&apos;link&apos;] );</text:p><text:p text:style-name="P495"><text:tab/>}</text:p><text:p text:style-name="P495">}</text:p><text:p text:style-name="P495">?&gt;</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5866_1486593966"/><text:s text:c="4"/>json_load_ann.php<text:bookmark-end text:name="__RefHeading___Toc5866_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P496">&lt;?php</text:p><text:p text:style-name="P496">/*******************************************************************************</text:p><text:p text:style-name="P496"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P496"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P496"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P496"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P496"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P496"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P496"><text:s/>* Copyright (C) 2008-2009 by Todor Balabanov <text:s/>( tdb@tbsoft-bg.com ) <text:s text:c="10"/>*</text:p><text:p text:style-name="P496"><text:s/>* <text:s text:c="27"/>Iliyan Zankinski ( iliyan_mf@abv.bg ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P496"><text:s/>* <text:s text:c="27"/>Galq Cirkalova <text:s text:c="2"/>( galq_cirkalova@abv.bg ) <text:s text:c="6"/>*</text:p><text:p text:style-name="P496"><text:s/>* <text:s text:c="27"/>Ivan Grozev <text:s text:c="5"/>( ivan.iliev.grozev@gmail.com ) *</text:p><text:p text:style-name="P496"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P496"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P496"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P496"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P496"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P496"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P496"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P496"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P496"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P496"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P496"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P496"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P496"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P496"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P496"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P496">?&gt;</text:p><text:p text:style-name="P496"/><text:p text:style-name="P496">&lt;?php</text:p><text:p text:style-name="P496">/*</text:p><text:p text:style-name="P496"><text:s/>* Include database functions.</text:p><text:p text:style-name="P496"><text:s/>*/</text:p><text:p text:style-name="P496">include &quot;../common/db.php&quot;;</text:p><text:p text:style-name="P496"/><text:p text:style-name="P496">header(&quot;access-control-allow-origin: *&quot;);</text:p><text:p text:style-name="P496"/><text:p text:style-name="P496">/*</text:p><text:p text:style-name="P496"><text:s/>* Response output variable.</text:p><text:p text:style-name="P496"><text:s/>*/</text:p><text:p text:style-name="P496">$response = &apos;&apos;;</text:p><text:p text:style-name="P496"/><text:p text:style-name="P496">/*</text:p><text:p text:style-name="P496"><text:s/>* Check input parameters.</text:p><text:p text:style-name="P496"><text:s/>*/</text:p><text:p text:style-name="P496">if ( !isset($_POST[&apos;annid&apos;]) ) {</text:p><text:p text:style-name="P496"><text:tab/>$annid = -1;</text:p><text:p text:style-name="P496">} else {</text:p><text:p text:style-name="P496"><text:tab/>$annid = intval($_POST[&apos;annid&apos;]);</text:p><text:p text:style-name="P496">}</text:p><text:p text:style-name="P496"/><text:p text:style-name="P496">/*</text:p><text:p text:style-name="P496"><text:s/>* Open database.</text:p><text:p text:style-name="P496"><text:s/>*/</text:p><text:p text:style-name="P496">open_db();</text:p><text:p text:style-name="P496"/><text:p text:style-name="P496">/*</text:p><text:p text:style-name="P496"><text:s/>* Prepare SQL query.</text:p><text:p text:style-name="P496"><text:s/>*/</text:p><text:p text:style-name="P496">$sql = &apos;select currency_pairs.symbol, time_periods.minutes, ann.fitness, ann_kind.number_of_neurons, ann_kind.flags, ann.weights, ann_kind.activities from ann, ann_kind, currency_pairs, time_periods where ann_kind.currency_pairs_id=currency_pairs.id and currency_pairs.period_id=time_periods.id and ann.id=&apos; . $annid . &apos; and ann.ann_kind_id=ann_kind.id;&apos;;</text:p><text:p text:style-name="P496"/><text:p text:style-name="P496">/*</text:p><text:p text:style-name="P496"><text:s/>* Run SQL query.</text:p><text:p text:style-name="P496"><text:s/>*/</text:p><text:p text:style-name="P496">$result = query_db( $sql );</text:p><text:p text:style-name="P496"/><text:p text:style-name="P496">/*</text:p><text:p text:style-name="P496"><text:s/>* Check SQL query result.</text:p><text:p text:style-name="P496"><text:s/>*/</text:p><text:p text:style-name="P496">$response .= &quot;{&quot;;</text:p><text:p text:style-name="P496">if ($result != false) {</text:p><text:p text:style-name="P496"><text:tab/>$response .= &quot;\n&quot;;</text:p><text:p text:style-name="P496"/><text:p text:style-name="P496"><text:tab/>/*</text:p><text:p text:style-name="P496"><text:tab/> * Response with artificial neural networks structure.</text:p><text:p text:style-name="P496"><text:tab/> */</text:p><text:p text:style-name="P496"><text:tab/>$response .= &apos;&quot;size&quot;:&quot;1&quot;,&apos;;</text:p><text:p text:style-name="P496"><text:tab/>$response .= &quot;\n&quot;;</text:p><text:p text:style-name="P496"/><text:p text:style-name="P496"><text:tab/>/*</text:p><text:p text:style-name="P496"><text:tab/> * MetaTrader 4 symbol.</text:p><text:p text:style-name="P496"><text:tab/> */</text:p><text:p text:style-name="P496"><text:tab/>$response .= &apos;&quot;symbol&quot;:&quot;&apos; . trim($result[0][0],&quot;\r\n&quot;) . &apos;&quot;,&apos;;</text:p><text:p text:style-name="P496"><text:tab/>$response .= &quot;\n&quot;;</text:p><text:p text:style-name="P496"/><text:p text:style-name="P496"><text:tab/>/*</text:p><text:p text:style-name="P496"><text:tab/> * MetaTrader 4 period.</text:p><text:p text:style-name="P496"><text:tab/> */</text:p><text:p text:style-name="P496"><text:tab/>$response .= &apos;&quot;period&quot;:&quot;&apos; . trim($result[0][1],&quot;\r\n&quot;) . &apos;&quot;,&apos;;</text:p><text:p text:style-name="P496"><text:tab/>$response .= &quot;\n&quot;;</text:p><text:p text:style-name="P496"/><text:p text:style-name="P496"><text:tab/>/*</text:p><text:p text:style-name="P496"><text:tab/> * Artificial neural network weights fintess.</text:p><text:p text:style-name="P496"><text:tab/> */</text:p><text:p text:style-name="P496"><text:tab/>$response .= &apos;&quot;fitness&quot;:&quot;&apos; . trim($result[0][2],&quot;\r\n&quot;) . &apos;&quot;,&apos;;</text:p><text:p text:style-name="P496"><text:tab/>$response .= &quot;\n&quot;;</text:p><text:p text:style-name="P496"/><text:p text:style-name="P496"><text:tab/>/*</text:p><text:p text:style-name="P496"><text:tab/> * Artificial neural network number of neurons.</text:p><text:p text:style-name="P496"><text:tab/> */</text:p><text:p text:style-name="P496"><text:tab/>$response .= &apos;&quot;numberOfNeurons&quot;:&quot;&apos; . trim($result[0][3],&quot;\r\n&quot;) . &apos;&quot;,&apos;;</text:p><text:p text:style-name="P496"><text:tab/>$response .= &quot;\n&quot;;</text:p><text:p text:style-name="P496"/><text:p text:style-name="P496"><text:tab/>/*</text:p><text:p text:style-name="P496"><text:tab/> * Artificial neural network neurons flags.</text:p><text:p text:style-name="P496"><text:tab/> */</text:p><text:p text:style-name="P496"><text:tab/>$response .= &apos;&quot;flags&quot;: [&apos;;</text:p><text:p text:style-name="P496"><text:tab/>$values = explode(&quot; &quot;, trim($result[0][4],&quot;\r\n&quot;));</text:p><text:p text:style-name="P496"><text:soft-page-break/><text:tab/>foreach($values as $value) {</text:p><text:p text:style-name="P496"><text:tab/><text:tab/>$response .= &apos;&quot;&apos;.$value.&apos;&quot;,&apos;;</text:p><text:p text:style-name="P496"><text:tab/>}</text:p><text:p text:style-name="P496"><text:tab/>$response = trim($response,&quot;,&quot;);</text:p><text:p text:style-name="P496"><text:tab/>$response .= <text:s/>&apos;],&apos;;</text:p><text:p text:style-name="P496"><text:tab/>$response .= &quot;\n&quot;;</text:p><text:p text:style-name="P496"/><text:p text:style-name="P496"><text:tab/>/*</text:p><text:p text:style-name="P496"><text:tab/> * Artificial neural network weights.</text:p><text:p text:style-name="P496"><text:tab/> */</text:p><text:p text:style-name="P496"><text:tab/>$response .= &apos;&quot;weights&quot;: [&apos;;</text:p><text:p text:style-name="P496"><text:tab/>$response .= &quot;\n&quot;;</text:p><text:p text:style-name="P496"><text:tab/>$lines = explode(&quot;\r\n&quot;, trim($result[0][5],&quot;\r\n&quot;));</text:p><text:p text:style-name="P496"><text:tab/>foreach($lines as $line) {</text:p><text:p text:style-name="P496"><text:tab/><text:tab/>$response .= &apos;[&apos;;</text:p><text:p text:style-name="P496"><text:tab/><text:tab/>$values = explode(&quot; &quot;, $line);</text:p><text:p text:style-name="P496"><text:tab/><text:tab/>foreach($values as $value) {</text:p><text:p text:style-name="P496"><text:tab/><text:tab/><text:tab/>$response .= &apos;&quot;&apos;.$value.&apos;&quot;,&apos;;</text:p><text:p text:style-name="P496"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P496"><text:tab/><text:tab/>$response = trim($response,&quot;,&quot;);</text:p><text:p text:style-name="P496"><text:tab/><text:tab/>$response .= <text:s/>&apos;],&apos;;</text:p><text:p text:style-name="P496"><text:tab/><text:tab/>$response .= &quot;\n&quot;;</text:p><text:p text:style-name="P496"><text:tab/>}</text:p><text:p text:style-name="P496"><text:tab/>$response = trim($response,&quot;\n,&quot;);</text:p><text:p text:style-name="P496"><text:tab/>$response .= &quot;\n&quot;;</text:p><text:p text:style-name="P496"><text:tab/>$response .= <text:s/>&apos;],&apos;;</text:p><text:p text:style-name="P496"><text:tab/>$response .= &quot;\n&quot;;</text:p><text:p text:style-name="P496"/><text:p text:style-name="P496"><text:tab/>/*</text:p><text:p text:style-name="P496"><text:tab/> * Artificial neural network weights activities.</text:p><text:p text:style-name="P496"><text:tab/> */</text:p><text:p text:style-name="P496"><text:tab/>$response .= &apos;&quot;activities&quot;: [&apos;;</text:p><text:p text:style-name="P496"><text:tab/>$response .= &quot;\n&quot;;</text:p><text:p text:style-name="P496"><text:tab/>$lines = explode(&quot;\r\n&quot;, trim($result[0][6],&quot;\r\n&quot;));</text:p><text:p text:style-name="P496"><text:tab/>foreach($lines as $line) {</text:p><text:p text:style-name="P496"><text:tab/><text:tab/>$response .= &apos;[&apos;;</text:p><text:p text:style-name="P496"><text:tab/><text:tab/>$values = explode(&quot; &quot;, $line);</text:p><text:p text:style-name="P496"><text:tab/><text:tab/>foreach($values as $value) {</text:p><text:p text:style-name="P496"><text:tab/><text:tab/><text:tab/>$response .= &apos;&quot;&apos;.$value.&apos;&quot;,&apos;;</text:p><text:p text:style-name="P496"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P496"><text:tab/><text:tab/>$response = trim($response,&quot;,&quot;);</text:p><text:p text:style-name="P496"><text:tab/><text:tab/>$response .= <text:s/>&apos;],&apos;;</text:p><text:p text:style-name="P496"><text:tab/><text:tab/>$response .= &quot;\n&quot;;</text:p><text:p text:style-name="P496"><text:tab/>}</text:p><text:p text:style-name="P496"><text:tab/>$response = trim($response,&quot;\n,&quot;);</text:p><text:p text:style-name="P496"><text:tab/>$response .= &quot;\n&quot;;</text:p><text:p text:style-name="P496"><text:tab/>$response .= <text:s/>&apos;]&apos;;</text:p><text:p text:style-name="P496"><text:tab/>$response .= &quot;\n&quot;;</text:p><text:p text:style-name="P496">} else {</text:p><text:p text:style-name="P496"><text:tab/>/*</text:p><text:p text:style-name="P496"><text:tab/> * Response with -1 flag that artificial neural networks can not be loaded.</text:p><text:p text:style-name="P496"><text:tab/> */</text:p><text:p text:style-name="P496"><text:tab/>$response .= &apos;&quot;size&quot;:&quot;0&quot;&apos;;</text:p><text:p text:style-name="P496"><text:tab/>$response .= &quot;\n&quot;;</text:p><text:p text:style-name="P496">}</text:p><text:p text:style-name="P496">$response .= &quot;}&quot;;</text:p><text:p text:style-name="P496"/><text:p text:style-name="P496">/*</text:p><text:p text:style-name="P496"><text:s/>* Close database.</text:p><text:p text:style-name="P496"><text:s/>*/</text:p><text:p text:style-name="P496">close_db();</text:p><text:p text:style-name="P496"/><text:p text:style-name="P496">/*</text:p><text:p text:style-name="P496"><text:s/>* Output response.</text:p><text:p text:style-name="P496"><text:s/>*/</text:p><text:p text:style-name="P496">echo( $response );</text:p><text:p text:style-name="P496">flush();</text:p><text:p text:style-name="P496">?&gt;</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5868_1486593966"/><text:s text:c="4"/>json_load_best_fitness.php<text:bookmark-end text:name="__RefHeading___Toc5868_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P496">&lt;?php</text:p><text:p text:style-name="P496">/*******************************************************************************</text:p><text:p text:style-name="P496"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P496"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P496"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P496"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P496"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P496"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P496"><text:s/>* Copyright (C) 2008-2009 by Todor Balabanov <text:s/>( tdb@tbsoft-bg.com ) <text:s text:c="10"/>*</text:p><text:p text:style-name="P496"><text:s/>* <text:s text:c="27"/>Iliyan Zankinski ( iliyan_mf@abv.bg ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P496"><text:s/>* <text:s text:c="27"/>Galq Cirkalova <text:s text:c="2"/>( galq_cirkalova@abv.bg ) <text:s text:c="6"/>*</text:p><text:p text:style-name="P496"><text:s/>* <text:s text:c="27"/>Ivan Grozev <text:s text:c="5"/>( ivan.iliev.grozev@gmail.com ) *</text:p><text:p text:style-name="P496"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P496"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P496"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P496"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P496"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P496"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P496"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P496"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P496"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P496"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P496"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P496"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P496"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P496"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P496"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P496">?&gt;</text:p><text:p text:style-name="P496"/><text:p text:style-name="P496">&lt;?php</text:p><text:p text:style-name="P496">/*</text:p><text:p text:style-name="P496"><text:s/>* Include database functions.</text:p><text:p text:style-name="P496"><text:s/>*/</text:p><text:p text:style-name="P496">include &quot;../common/db.php&quot;;</text:p><text:p text:style-name="P496"/><text:p text:style-name="P496">header(&quot;access-control-allow-origin: *&quot;);</text:p><text:p text:style-name="P496"/><text:p text:style-name="P496">/*</text:p><text:p text:style-name="P496"><text:s/>* Check input parameters.</text:p><text:p text:style-name="P496"><text:s/>*/</text:p><text:p text:style-name="P496">if ( !isset($_POST[&apos;symbol&apos;]) ) {</text:p><text:p text:style-name="P496"><text:tab/>$symbol = &quot;&quot;;</text:p><text:p text:style-name="P496">} else {</text:p><text:p text:style-name="P496"><text:tab/>$symbol = trim($_POST[&apos;symbol&apos;],&quot;\r\n&quot;);</text:p><text:p text:style-name="P496">}</text:p><text:p text:style-name="P496"/><text:p text:style-name="P496">if ( !isset($_POST[&apos;period&apos;]) ) {</text:p><text:p text:style-name="P496"><text:tab/>$period = 0;</text:p><text:p text:style-name="P496"><text:soft-page-break/>} else {</text:p><text:p text:style-name="P496"><text:tab/>$period = intval($_POST[&apos;period&apos;]);</text:p><text:p text:style-name="P496">}</text:p><text:p text:style-name="P496"/><text:p text:style-name="P496">if ( !isset($_POST[&apos;number_of_neurons&apos;]) ) {</text:p><text:p text:style-name="P496"><text:tab/>$number_of_neurons = 0;</text:p><text:p text:style-name="P496">} else {</text:p><text:p text:style-name="P496"><text:tab/>$number_of_neurons = intval($_POST[&apos;number_of_neurons&apos;]);</text:p><text:p text:style-name="P496">}</text:p><text:p text:style-name="P496"/><text:p text:style-name="P496">if ( !isset($_POST[&apos;flags&apos;]) ) {</text:p><text:p text:style-name="P496"><text:tab/>$flags = &quot;&quot;;</text:p><text:p text:style-name="P496">} else {</text:p><text:p text:style-name="P496"><text:tab/>$flags = trim($_POST[&apos;flags&apos;],&quot;\r\n&quot;);</text:p><text:p text:style-name="P496">}</text:p><text:p text:style-name="P496"/><text:p text:style-name="P496">if ( !isset($_POST[&apos;activities&apos;]) ) {</text:p><text:p text:style-name="P496"><text:tab/>$activities = &quot;&quot;;</text:p><text:p text:style-name="P496">} else {</text:p><text:p text:style-name="P496"><text:tab/>$activities = trim($_POST[&apos;activities&apos;],&quot;\r\n&quot;);</text:p><text:p text:style-name="P496">}</text:p><text:p text:style-name="P496"/><text:p text:style-name="P496">/*</text:p><text:p text:style-name="P496"><text:s/>* Validate flags array.</text:p><text:p text:style-name="P496"><text:s/>*/</text:p><text:p text:style-name="P496">$tok = strtok($flags, &quot; \r\n&quot;);</text:p><text:p text:style-name="P496">$buffer = &quot;&quot;;</text:p><text:p text:style-name="P496">for ($i=0; $i&lt;$number_of_neurons; $i++) {</text:p><text:p text:style-name="P496"><text:tab/>if ($tok != false) {</text:p><text:p text:style-name="P496"><text:tab/><text:tab/>$buffer .= (intval($tok) . &quot; &quot;);</text:p><text:p text:style-name="P496"><text:tab/>} else {</text:p><text:p text:style-name="P496"><text:tab/><text:tab/>$buffer .= &quot;0&quot; . &quot; &quot;;</text:p><text:p text:style-name="P496"><text:tab/>}</text:p><text:p text:style-name="P496"><text:tab/>$tok = strtok(&quot; \r\n&quot;);</text:p><text:p text:style-name="P496">}</text:p><text:p text:style-name="P496">$buffer = trim($buffer, &quot; \r\n&quot;);</text:p><text:p text:style-name="P496">$flags = $buffer;</text:p><text:p text:style-name="P496"/><text:p text:style-name="P496">/*</text:p><text:p text:style-name="P496"><text:s/>* Validate activities matrix.</text:p><text:p text:style-name="P496"><text:s/>*/</text:p><text:p text:style-name="P496">$tok = strtok($activities, &quot; \r\n&quot;);</text:p><text:p text:style-name="P496">$buffer = &quot;&quot;;</text:p><text:p text:style-name="P496">for ($j=0; $j&lt;$number_of_neurons; $j++) {</text:p><text:p text:style-name="P496"><text:tab/>for ($i=0; $i&lt;$number_of_neurons; $i++) {</text:p><text:p text:style-name="P496"><text:tab/><text:tab/>if ($tok != false) {</text:p><text:p text:style-name="P496"><text:tab/><text:tab/><text:tab/>$buffer .= (floatval($tok) . &quot; &quot;);</text:p><text:p text:style-name="P496"><text:tab/><text:tab/>} else {</text:p><text:p text:style-name="P496"><text:tab/><text:tab/><text:tab/>$buffer .= &quot;0&quot; . &quot; &quot;;</text:p><text:p text:style-name="P496"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P496"/><text:p text:style-name="P496"><text:tab/><text:tab/>$tok = strtok(&quot; \r\n&quot;);</text:p><text:p text:style-name="P496"><text:tab/>}</text:p><text:p text:style-name="P496"/><text:p text:style-name="P496"><text:tab/>$buffer = trim($buffer, &quot; \r\n&quot;);</text:p><text:p text:style-name="P496"><text:tab/>$buffer .= &quot;\n&quot;;</text:p><text:p text:style-name="P496">}</text:p><text:p text:style-name="P496">$buffer = trim($buffer, &quot; \r\n&quot;);</text:p><text:p text:style-name="P496">$activities = $buffer;</text:p><text:p text:style-name="P496"/><text:p text:style-name="P496">/*</text:p><text:p text:style-name="P496"><text:s/>* Response output variable.</text:p><text:p text:style-name="P496"><text:s/>*/</text:p><text:p text:style-name="P496">$response = &apos;{&apos;;</text:p><text:p text:style-name="P496">$response .= &quot;\n&quot;;</text:p><text:p text:style-name="P496"/><text:p text:style-name="P496">/*</text:p><text:p text:style-name="P496"><text:s/>* Open database.</text:p><text:p text:style-name="P496"><text:s/>*/</text:p><text:p text:style-name="P496">open_db();</text:p><text:p text:style-name="P496"/><text:p text:style-name="P496">/*</text:p><text:p text:style-name="P496"><text:s/>* Prepare SQL query to find ANN kind id.</text:p><text:p text:style-name="P496"><text:s/>*/</text:p><text:p text:style-name="P496">$sql = &quot;select loadBestFitness(&apos;&quot; . $symbol . &quot;&apos;, &quot; . $period . &quot;, &quot; . $number_of_neurons . &quot;, &apos;&quot; . $flags . &quot;&apos;, &apos;&quot; . $activities . &quot;&apos;);&quot;;</text:p><text:p text:style-name="P496">$result = query_db( $sql );</text:p><text:p text:style-name="P496"/><text:p text:style-name="P496">/*</text:p><text:p text:style-name="P496"><text:s/>* Close database.</text:p><text:p text:style-name="P496"><text:s/>*/</text:p><text:p text:style-name="P496">close_db();</text:p><text:p text:style-name="P496"/><text:p text:style-name="P496">/*</text:p><text:p text:style-name="P496"><text:s/>* Response with best fitness or very high unreal value.</text:p><text:p text:style-name="P496"><text:s/>*/</text:p><text:p text:style-name="P496">$response .= &apos;&quot;fitness&quot;:&quot;&apos; . trim($result[0][0],&quot;\r\n&quot;) . &apos;&quot;&apos;;</text:p><text:p text:style-name="P496">$response .= &quot;\n&quot;;</text:p><text:p text:style-name="P496">$response .= &quot;}&quot;;</text:p><text:p text:style-name="P496"/><text:p text:style-name="P496">/*</text:p><text:p text:style-name="P496"><text:s/>* Output response.</text:p><text:p text:style-name="P496"><text:s/>*/</text:p><text:p text:style-name="P496">echo( $response );</text:p><text:p text:style-name="P496">flush();</text:p><text:p text:style-name="P496">?&gt;</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5870_1486593966"/><text:s text:c="4"/>json_load_neurons_amount.php<text:bookmark-end text:name="__RefHeading___Toc5870_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P496">&lt;?php</text:p><text:p text:style-name="P496">/*******************************************************************************</text:p><text:p text:style-name="P496"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P496"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P496"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P496"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P496"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P496"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P496"><text:s/>* Copyright (C) 2008-2009 by Todor Balabanov <text:s/>( tdb@tbsoft-bg.com ) <text:s text:c="10"/>*</text:p><text:p text:style-name="P496"><text:s/>* <text:s text:c="27"/>Iliyan Zankinski ( iliyan_mf@abv.bg ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P496"><text:s/>* <text:s text:c="27"/>Galq Cirkalova <text:s text:c="2"/>( galq_cirkalova@abv.bg ) <text:s text:c="6"/>*</text:p><text:p text:style-name="P496"><text:s/>* <text:s text:c="27"/>Ivan Grozev <text:s text:c="5"/>( ivan.iliev.grozev@gmail.com ) *</text:p><text:p text:style-name="P496"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P496"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P496"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P496"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P496"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P496"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P496"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P496"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P496"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P496"><text:soft-page-break/><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P496"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P496"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P496"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P496"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P496"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P496">?&gt;</text:p><text:p text:style-name="P496"/><text:p text:style-name="P496">&lt;?php</text:p><text:p text:style-name="P496">/*</text:p><text:p text:style-name="P496"><text:s/>* Include database functions.</text:p><text:p text:style-name="P496"><text:s/>*/</text:p><text:p text:style-name="P496">include &quot;../common/db.php&quot;;</text:p><text:p text:style-name="P496"/><text:p text:style-name="P496">header(&quot;access-control-allow-origin: *&quot;);</text:p><text:p text:style-name="P496"/><text:p text:style-name="P496">/*</text:p><text:p text:style-name="P496"><text:s/>* Check input parameters.</text:p><text:p text:style-name="P496"><text:s/>*/</text:p><text:p text:style-name="P496">if ( !isset($_POST[&apos;annid&apos;]) ) {</text:p><text:p text:style-name="P496"><text:tab/>$annid = -1;</text:p><text:p text:style-name="P496">} else {</text:p><text:p text:style-name="P496"><text:tab/>$annid = intval($_POST[&apos;annid&apos;]);</text:p><text:p text:style-name="P496">}</text:p><text:p text:style-name="P496"/><text:p text:style-name="P496">/*</text:p><text:p text:style-name="P496"><text:s/>* Response output variable.</text:p><text:p text:style-name="P496"><text:s/>*/</text:p><text:p text:style-name="P496">$response = &apos;{&apos;;</text:p><text:p text:style-name="P496">$response .= &quot;\n&quot;;</text:p><text:p text:style-name="P496"/><text:p text:style-name="P496">/*</text:p><text:p text:style-name="P496"><text:s/>* Open database.</text:p><text:p text:style-name="P496"><text:s/>*/</text:p><text:p text:style-name="P496">open_db();</text:p><text:p text:style-name="P496"/><text:p text:style-name="P496">/*</text:p><text:p text:style-name="P496"><text:s/>* Prepare SQL query to find ANN kind id.</text:p><text:p text:style-name="P496"><text:s/>*/</text:p><text:p text:style-name="P496">$sql = &apos;select loadNeuronsAmount(&apos; . $annid . &apos;);&apos;;</text:p><text:p text:style-name="P496"/><text:p text:style-name="P496">/*</text:p><text:p text:style-name="P496"><text:s/>* Run SQL query.</text:p><text:p text:style-name="P496"><text:s/>*/</text:p><text:p text:style-name="P496">$result = query_db( $sql );</text:p><text:p text:style-name="P496"/><text:p text:style-name="P496"/><text:p text:style-name="P496">$response .= &apos;&quot;neuronsAmount&quot;:&quot;&apos; . trim($result[0][0],&quot;\r\n&quot;) . &apos;&quot;&apos;;</text:p><text:p text:style-name="P496">$response .= &quot;\n&quot;;</text:p><text:p text:style-name="P496">$response .= &quot;}&quot;;</text:p><text:p text:style-name="P496"/><text:p text:style-name="P496">/*</text:p><text:p text:style-name="P496"><text:s/>* Close database.</text:p><text:p text:style-name="P496"><text:s/>*/</text:p><text:p text:style-name="P496">close_db();</text:p><text:p text:style-name="P496"/><text:p text:style-name="P496">/*</text:p><text:p text:style-name="P496"><text:s/>* Output response.</text:p><text:p text:style-name="P496"><text:s/>*/</text:p><text:p text:style-name="P496">echo( $response );</text:p><text:p text:style-name="P496">flush();</text:p><text:p text:style-name="P496">?&gt;</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5872_1486593966"/><text:s text:c="4"/>json_load_training_set.php<text:bookmark-end text:name="__RefHeading___Toc5872_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P497">&lt;?php</text:p><text:p text:style-name="P497">/*******************************************************************************</text:p><text:p text:style-name="P497"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P497"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P497"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P497"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P497"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P497"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P497"><text:s/>* Copyright (C) 2008-2009 by Todor Balabanov <text:s/>( tdb@tbsoft-bg.com ) <text:s text:c="10"/>*</text:p><text:p text:style-name="P497"><text:s/>* <text:s text:c="27"/>Iliyan Zankinski ( iliyan_mf@abv.bg ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P497"><text:s/>* <text:s text:c="27"/>Galq Cirkalova <text:s text:c="2"/>( galq_cirkalova@abv.bg ) <text:s text:c="6"/>*</text:p><text:p text:style-name="P497"><text:s/>* <text:s text:c="27"/>Ivan Grozev <text:s text:c="5"/>( ivan.iliev.grozev@gmail.com ) *</text:p><text:p text:style-name="P497"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P497"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P497"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P497"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P497"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P497"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P497"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P497"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P497"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P497"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P497"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P497"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P497"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P497"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P497"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P497">?&gt;</text:p><text:p text:style-name="P497"/><text:p text:style-name="P497">&lt;?php</text:p><text:p text:style-name="P497">/*</text:p><text:p text:style-name="P497"><text:s/>* Include database functions.</text:p><text:p text:style-name="P497"><text:s/>*/</text:p><text:p text:style-name="P497">include &quot;../common/db.php&quot;;</text:p><text:p text:style-name="P497"/><text:p text:style-name="P497">header(&quot;access-control-allow-origin: *&quot;);</text:p><text:p text:style-name="P497"/><text:p text:style-name="P497">/*</text:p><text:p text:style-name="P497"><text:s/>* Response output variable.</text:p><text:p text:style-name="P497"><text:s/>*/</text:p><text:p text:style-name="P497">$response = &apos;{&apos;;</text:p><text:p text:style-name="P497">$response .= &quot;\n&quot;;</text:p><text:p text:style-name="P497"/><text:p text:style-name="P497">/*</text:p><text:p text:style-name="P497"><text:s/>* Check input parameters.</text:p><text:p text:style-name="P497"><text:s/>*/</text:p><text:p text:style-name="P497">if ( !isset($_POST[&apos;symbol&apos;]) ) {</text:p><text:p text:style-name="P497"><text:tab/>$symbol = &quot;&quot;;</text:p><text:p text:style-name="P497">} else {</text:p><text:p text:style-name="P497"><text:tab/>$symbol = trim($_POST[&apos;symbol&apos;],&quot;\r\n&quot;);</text:p><text:p text:style-name="P497">}</text:p><text:p text:style-name="P497"/><text:p text:style-name="P497">if ( !isset($_POST[&apos;period&apos;]) ) {</text:p><text:p text:style-name="P497"><text:tab/>$period = 0;</text:p><text:p text:style-name="P497"><text:soft-page-break/>} else {</text:p><text:p text:style-name="P497"><text:tab/>$period = intval($_POST[&apos;period&apos;]);</text:p><text:p text:style-name="P497">}</text:p><text:p text:style-name="P497"/><text:p text:style-name="P497">/*</text:p><text:p text:style-name="P497"><text:s/>* Open database.</text:p><text:p text:style-name="P497"><text:s/>*/</text:p><text:p text:style-name="P497">open_db();</text:p><text:p text:style-name="P497"/><text:p text:style-name="P497">/*</text:p><text:p text:style-name="P497"><text:s/>* Prepare SQL query.</text:p><text:p text:style-name="P497"><text:s/>*/</text:p><text:p text:style-name="P497">$sql = &quot;select training_set.number_of_examples, training_set.time, training_set.open, training_set.low, training_set.high, training_set.close, training_set.volume from training_set, currency_pairs, time_periods where training_set.currency_pairs_id=currency_pairs.id and currency_pairs.period_id=time_periods.id and currency_pairs.symbol=&apos;&quot; . $symbol . &quot;&apos; and time_periods.minutes=&quot; . $period . &quot;;&quot;;</text:p><text:p text:style-name="P497"/><text:p text:style-name="P497">/*</text:p><text:p text:style-name="P497"><text:s/>* Run SQL query.</text:p><text:p text:style-name="P497"><text:s/>*/</text:p><text:p text:style-name="P497">$result = query_db( $sql );</text:p><text:p text:style-name="P497"/><text:p text:style-name="P497">/*</text:p><text:p text:style-name="P497"><text:s/>* Close database.</text:p><text:p text:style-name="P497"><text:s/>*/</text:p><text:p text:style-name="P497">close_db();</text:p><text:p text:style-name="P497"/><text:p text:style-name="P497">/*</text:p><text:p text:style-name="P497"><text:s/>* Check SQL query result.</text:p><text:p text:style-name="P497"><text:s/>*/</text:p><text:p text:style-name="P497">if ($result != false) {</text:p><text:p text:style-name="P497"><text:tab/>/*</text:p><text:p text:style-name="P497"><text:tab/> * Response with number of training examples.</text:p><text:p text:style-name="P497"><text:tab/> */</text:p><text:p text:style-name="P497"><text:tab/>$response .= &apos;&quot;numberOfExamples&quot;:&quot;&apos; . trim($result[0][0],&quot;\r\n&quot;) . &apos;&quot;,&apos;;</text:p><text:p text:style-name="P497"><text:tab/>$response .= &quot;\n&quot;;</text:p><text:p text:style-name="P497"/><text:p text:style-name="P497"><text:tab/>/*</text:p><text:p text:style-name="P497"><text:tab/> * Time values of training examples.</text:p><text:p text:style-name="P497"><text:tab/> */</text:p><text:p text:style-name="P497"><text:tab/>$response .= &apos;&quot;time&quot;: [&apos;;</text:p><text:p text:style-name="P497"><text:tab/>$values = explode(&quot; &quot;, trim($result[0][1],&quot;\r\n&quot;));</text:p><text:p text:style-name="P497"><text:tab/>foreach($values as $value) {</text:p><text:p text:style-name="P497"><text:tab/><text:tab/>$response .= &apos;&quot;&apos;.$value.&apos;&quot;,&apos;;</text:p><text:p text:style-name="P497"><text:tab/>}</text:p><text:p text:style-name="P497"><text:tab/>$response = trim($response,&quot;,&quot;);</text:p><text:p text:style-name="P497"><text:tab/>$response .= <text:s/>&apos;],&apos;;</text:p><text:p text:style-name="P497"><text:tab/>$response .= &quot;\n&quot;;</text:p><text:p text:style-name="P497"/><text:p text:style-name="P497"><text:tab/>/*</text:p><text:p text:style-name="P497"><text:tab/> * Open values of training examples.</text:p><text:p text:style-name="P497"><text:tab/> */</text:p><text:p text:style-name="P497"><text:tab/>$response .= &apos;&quot;open&quot;: [&apos;;</text:p><text:p text:style-name="P497"><text:tab/>$values = explode(&quot; &quot;, trim($result[0][2],&quot;\r\n&quot;));</text:p><text:p text:style-name="P497"><text:tab/>foreach($values as $value) {</text:p><text:p text:style-name="P497"><text:tab/><text:tab/>$response .= &apos;&quot;&apos;.$value.&apos;&quot;,&apos;;</text:p><text:p text:style-name="P497"><text:tab/>}</text:p><text:p text:style-name="P497"><text:tab/>$response = trim($response,&quot;,&quot;);</text:p><text:p text:style-name="P497"><text:tab/>$response .= <text:s/>&apos;],&apos;;</text:p><text:p text:style-name="P497"><text:tab/>$response .= &quot;\n&quot;;</text:p><text:p text:style-name="P497"/><text:p text:style-name="P497"><text:tab/>/*</text:p><text:p text:style-name="P497"><text:tab/> * Low values of training examples.</text:p><text:p text:style-name="P497"><text:tab/> */</text:p><text:p text:style-name="P497"><text:tab/>$response .= &apos;&quot;low&quot;: [&apos;;</text:p><text:p text:style-name="P497"><text:tab/>$values = explode(&quot; &quot;, trim($result[0][3],&quot;\r\n&quot;));</text:p><text:p text:style-name="P497"><text:tab/>foreach($values as $value) {</text:p><text:p text:style-name="P497"><text:tab/><text:tab/>$response .= &apos;&quot;&apos;.$value.&apos;&quot;,&apos;;</text:p><text:p text:style-name="P497"><text:tab/>}</text:p><text:p text:style-name="P497"><text:tab/>$response = trim($response,&quot;,&quot;);</text:p><text:p text:style-name="P497"><text:tab/>$response .= <text:s/>&apos;],&apos;;</text:p><text:p text:style-name="P497"><text:tab/>$response .= &quot;\n&quot;;</text:p><text:p text:style-name="P497"/><text:p text:style-name="P497"><text:tab/>/*</text:p><text:p text:style-name="P497"><text:tab/> * High values of training examples.</text:p><text:p text:style-name="P497"><text:tab/> */</text:p><text:p text:style-name="P497"><text:tab/>$response .= &apos;&quot;high&quot;: [&apos;;</text:p><text:p text:style-name="P497"><text:tab/>$values = explode(&quot; &quot;, trim($result[0][4],&quot;\r\n&quot;));</text:p><text:p text:style-name="P497"><text:tab/>foreach($values as $value) {</text:p><text:p text:style-name="P497"><text:tab/><text:tab/>$response .= &apos;&quot;&apos;.$value.&apos;&quot;,&apos;;</text:p><text:p text:style-name="P497"><text:tab/>}</text:p><text:p text:style-name="P497"><text:tab/>$response = trim($response,&quot;,&quot;);</text:p><text:p text:style-name="P497"><text:tab/>$response .= <text:s/>&apos;],&apos;;</text:p><text:p text:style-name="P497"><text:tab/>$response .= &quot;\n&quot;;</text:p><text:p text:style-name="P497"/><text:p text:style-name="P497"><text:tab/>/*</text:p><text:p text:style-name="P497"><text:tab/> * Close values of training examples.</text:p><text:p text:style-name="P497"><text:tab/> */</text:p><text:p text:style-name="P497"><text:tab/>$response .= &apos;&quot;close&quot;: [&apos;;</text:p><text:p text:style-name="P497"><text:tab/>$values = explode(&quot; &quot;, trim($result[0][5],&quot;\r\n&quot;));</text:p><text:p text:style-name="P497"><text:tab/>foreach($values as $value) {</text:p><text:p text:style-name="P497"><text:tab/><text:tab/>$response .= &apos;&quot;&apos;.$value.&apos;&quot;,&apos;;</text:p><text:p text:style-name="P497"><text:tab/>}</text:p><text:p text:style-name="P497"><text:tab/>$response = trim($response,&quot;,&quot;);</text:p><text:p text:style-name="P497"><text:tab/>$response .= <text:s/>&apos;],&apos;;</text:p><text:p text:style-name="P497"><text:tab/>$response .= &quot;\n&quot;;</text:p><text:p text:style-name="P497"/><text:p text:style-name="P497"><text:tab/>/*</text:p><text:p text:style-name="P497"><text:tab/> * Volume values of training examples.</text:p><text:p text:style-name="P497"><text:tab/> */</text:p><text:p text:style-name="P497"><text:tab/>$response .= &apos;&quot;volume&quot;: [&apos;;</text:p><text:p text:style-name="P497"><text:tab/>$values = explode(&quot; &quot;, trim($result[0][6],&quot;\r\n&quot;));</text:p><text:p text:style-name="P497"><text:tab/>foreach($values as $value) {</text:p><text:p text:style-name="P497"><text:tab/><text:tab/>$response .= &apos;&quot;&apos;.$value.&apos;&quot;,&apos;;</text:p><text:p text:style-name="P497"><text:tab/>}</text:p><text:p text:style-name="P497"><text:tab/>$response = trim($response,&quot;,&quot;);</text:p><text:p text:style-name="P497"><text:tab/>$response .= <text:s/>&apos;]&apos;;</text:p><text:p text:style-name="P497"><text:tab/>$response .= &quot;\n&quot;;</text:p><text:p text:style-name="P497">} else {</text:p><text:p text:style-name="P497"><text:tab/>/*</text:p><text:p text:style-name="P497"><text:tab/> * Response with zero available training examples.</text:p><text:p text:style-name="P497"><text:tab/> */</text:p><text:p text:style-name="P497"><text:tab/>$response .= &apos;&quot;numberOfExamples&quot;:&quot;0&quot;&apos;;</text:p><text:p text:style-name="P497"><text:tab/>$response .= &quot;\n&quot;;</text:p><text:p text:style-name="P497">}</text:p><text:p text:style-name="P497"/><text:p text:style-name="P497">$response .= &quot;}&quot;;</text:p><text:p text:style-name="P497"/><text:p text:style-name="P497">/*</text:p><text:p text:style-name="P497"><text:s/>* Output response.</text:p><text:p text:style-name="P497"><text:s/>*/</text:p><text:p text:style-name="P497">echo( $response );</text:p><text:p text:style-name="P497">flush();</text:p><text:p text:style-name="P497">?&gt;</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5874_1486593966"/><text:soft-page-break/><text:s text:c="4"/>json_number_of_anns.php<text:bookmark-end text:name="__RefHeading___Toc5874_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P498">&lt;?php</text:p><text:p text:style-name="P498">/*******************************************************************************</text:p><text:p text:style-name="P498"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P498"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P498"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P498"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P498"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P498"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P498"><text:s/>* Copyright (C) 2008-2009 by Todor Balabanov <text:s/>( tdb@tbsoft-bg.com ) <text:s text:c="10"/>*</text:p><text:p text:style-name="P498"><text:s/>* <text:s text:c="27"/>Iliyan Zankinski ( iliyan_mf@abv.bg ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P498"><text:s/>* <text:s text:c="27"/>Galq Cirkalova <text:s text:c="2"/>( galq_cirkalova@abv.bg ) <text:s text:c="6"/>*</text:p><text:p text:style-name="P498"><text:s/>* <text:s text:c="27"/>Ivan Grozev <text:s text:c="5"/>( ivan.iliev.grozev@gmail.com ) *</text:p><text:p text:style-name="P498"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P498"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P498"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P498"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P498"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P498"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P498"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P498"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P498"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P498"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P498"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P498"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P498"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P498"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P498"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P498">?&gt;</text:p><text:p text:style-name="P498"/><text:p text:style-name="P498">&lt;?php</text:p><text:p text:style-name="P498">/*</text:p><text:p text:style-name="P498"><text:s/>* Include database functions.</text:p><text:p text:style-name="P498"><text:s/>*/</text:p><text:p text:style-name="P498">include &quot;../common/db.php&quot;;</text:p><text:p text:style-name="P498"/><text:p text:style-name="P498">header(&quot;access-control-allow-origin: *&quot;);</text:p><text:p text:style-name="P498"/><text:p text:style-name="P498">/*</text:p><text:p text:style-name="P498"><text:s/>* Check input parameters.</text:p><text:p text:style-name="P498"><text:s/>*/</text:p><text:p text:style-name="P498">if ( !isset($_POST[&apos;annid&apos;]) ) {</text:p><text:p text:style-name="P498"><text:tab/>$annid = -1;</text:p><text:p text:style-name="P498">} else {</text:p><text:p text:style-name="P498"><text:tab/>$annid = intval($_POST[&apos;annid&apos;]);</text:p><text:p text:style-name="P498">}</text:p><text:p text:style-name="P498"/><text:p text:style-name="P498">if ( !isset($_POST[&apos;symbol&apos;]) ) {</text:p><text:p text:style-name="P498"><text:tab/>$symbol = &quot;&quot;;</text:p><text:p text:style-name="P498">} else {</text:p><text:p text:style-name="P498"><text:tab/>$symbol = trim($_POST[&apos;symbol&apos;],&quot;\r\n&quot;);</text:p><text:p text:style-name="P498">}</text:p><text:p text:style-name="P498"/><text:p text:style-name="P498">if ( !isset($_POST[&apos;period&apos;]) ) {</text:p><text:p text:style-name="P498"><text:tab/>$period = 0;</text:p><text:p text:style-name="P498">} else {</text:p><text:p text:style-name="P498"><text:tab/>$period = intval($_POST[&apos;period&apos;]);</text:p><text:p text:style-name="P498">}</text:p><text:p text:style-name="P498"/><text:p text:style-name="P498">/*</text:p><text:p text:style-name="P498"><text:s/>* Open database.</text:p><text:p text:style-name="P498"><text:s/>*/</text:p><text:p text:style-name="P498">open_db();</text:p><text:p text:style-name="P498"/><text:p text:style-name="P498">/*</text:p><text:p text:style-name="P498"><text:s/>* Prepare SQL query by ANN id.</text:p><text:p text:style-name="P498"><text:s/>*/</text:p><text:p text:style-name="P498">$sql = &apos;select id from ann where ann.ann_kind_id=(select ann_kind_id from ann where id=&apos; . $annid . &apos;) order by fitness asc;&apos;;</text:p><text:p text:style-name="P498"/><text:p text:style-name="P498">/*</text:p><text:p text:style-name="P498"><text:s/>* Run SQL query.</text:p><text:p text:style-name="P498"><text:s/>*/</text:p><text:p text:style-name="P498">$result = query_db( $sql );</text:p><text:p text:style-name="P498"/><text:p text:style-name="P498">/*</text:p><text:p text:style-name="P498"><text:s/>* Count number of artificial neural networks available.</text:p><text:p text:style-name="P498"><text:s/>*/</text:p><text:p text:style-name="P498">$count = 0;</text:p><text:p text:style-name="P498"/><text:p text:style-name="P498">/*</text:p><text:p text:style-name="P498"><text:s/>* Response output variable.</text:p><text:p text:style-name="P498"><text:s/>*/</text:p><text:p text:style-name="P498">$response = &apos;&apos;;</text:p><text:p text:style-name="P498"/><text:p text:style-name="P498">/*</text:p><text:p text:style-name="P498"><text:s/>* Check SQL query result.</text:p><text:p text:style-name="P498"><text:s/>*/</text:p><text:p text:style-name="P498">if ($result != false) {</text:p><text:p text:style-name="P498"><text:tab/>/*</text:p><text:p text:style-name="P498"><text:tab/> * Response with all artificial neural networks identifiers available.</text:p><text:p text:style-name="P498"><text:tab/> */</text:p><text:p text:style-name="P498"><text:tab/>$response .= &apos;&quot;identifiers&quot;: [&apos;;</text:p><text:p text:style-name="P498"/><text:p text:style-name="P498"><text:tab/>for ($i=0; $i&lt;count($result); $i++) {</text:p><text:p text:style-name="P498"><text:tab/><text:tab/>$response .= &apos;&quot;&apos; . trim($result[$i][0],&quot;\r\n&quot;) . &apos;&quot;,&apos;;</text:p><text:p text:style-name="P498"><text:tab/><text:tab/>$count++;</text:p><text:p text:style-name="P498"><text:tab/>}</text:p><text:p text:style-name="P498"/><text:p text:style-name="P498"><text:tab/>$response = trim($response,&quot;\n,&quot;);</text:p><text:p text:style-name="P498"><text:tab/>$response .= &quot;]&quot;;</text:p><text:p text:style-name="P498"><text:tab/>$response .= &quot;\n&quot;;</text:p><text:p text:style-name="P498">}</text:p><text:p text:style-name="P498"/><text:p text:style-name="P498">/*</text:p><text:p text:style-name="P498"><text:s/>* Prepare SQL query by ANN symbol and period.</text:p><text:p text:style-name="P498"><text:s/>*/</text:p><text:p text:style-name="P498">$sql = &apos;select id, ann_kind_id from ann where ann.ann_kind_id=(select ann_kind_id from ann_kind, currency_pairs, time_periods where currency_pairs_id=currency_pairs.id and period_id=time_periods.id and symbol=&apos; . $symbol . &apos; and period=&apos; . $period . &apos;) order by fitness asc;&apos;;</text:p><text:p text:style-name="P498"/><text:p text:style-name="P498">/*</text:p><text:p text:style-name="P498"><text:s/>* Run SQL query.</text:p><text:p text:style-name="P498"><text:s/>*/</text:p><text:p text:style-name="P498">$result = query_db( $sql );</text:p><text:p text:style-name="P498"/><text:p text:style-name="P498">/*</text:p><text:p text:style-name="P498"><text:s/>* Check SQL query result if there is no list by ANN id.</text:p><text:p text:style-name="P498"><text:s/>*/</text:p><text:p text:style-name="P498">if ($count==0 &amp;&amp; $result!=false) {</text:p><text:p text:style-name="P498"><text:tab/>/*</text:p><text:p text:style-name="P498"><text:tab/> * Artificial neural networks should be from the same kind.</text:p><text:p text:style-name="P498"><text:soft-page-break/><text:tab/> */</text:p><text:p text:style-name="P498"><text:tab/>$ann_kind_id = $result[0][1];</text:p><text:p text:style-name="P498"/><text:p text:style-name="P498"><text:tab/>/*</text:p><text:p text:style-name="P498"><text:tab/> * Response with all artificial neural networks identifiers available.</text:p><text:p text:style-name="P498"><text:tab/> */</text:p><text:p text:style-name="P498"><text:tab/>$response .= &apos;&quot;identifiers&quot;: [&quot;&apos;;</text:p><text:p text:style-name="P498"/><text:p text:style-name="P498"><text:tab/>for ($i=0; $i&lt;count($result); $i++) {</text:p><text:p text:style-name="P498"><text:tab/><text:tab/>if ($result[$i][1] == $ann_kind_id) {</text:p><text:p text:style-name="P498"><text:tab/><text:tab/><text:tab/>$response .= &apos;&quot;&apos; . trim($result[$i][0],&quot;\r\n&quot;) . &apos;&quot;,&apos;;</text:p><text:p text:style-name="P498"><text:tab/><text:tab/><text:tab/>$count++;</text:p><text:p text:style-name="P498"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P498"><text:tab/>}</text:p><text:p text:style-name="P498"/><text:p text:style-name="P498"><text:tab/>$response = trim($response,&quot;\n,&quot;);</text:p><text:p text:style-name="P498"><text:tab/>$response .= &quot;]&quot;;</text:p><text:p text:style-name="P498"><text:tab/>$response .= &quot;\n&quot;;</text:p><text:p text:style-name="P498">}</text:p><text:p text:style-name="P498"/><text:p text:style-name="P498">/*</text:p><text:p text:style-name="P498"><text:s/>* Response with number of artificial neural networks available.</text:p><text:p text:style-name="P498"><text:s/>*/</text:p><text:p text:style-name="P498">$response = &apos;&quot;size&quot;:&quot;&apos; . $count . &apos;&quot;,&apos; . &quot;\n&quot; . $response;</text:p><text:p text:style-name="P498">$response = &quot;{\n&quot; . trim($response,&quot;\n,&quot;) . &quot;\n}&quot;;</text:p><text:p text:style-name="P498"/><text:p text:style-name="P498">/*</text:p><text:p text:style-name="P498"><text:s/>* Close database.</text:p><text:p text:style-name="P498"><text:s/>*/</text:p><text:p text:style-name="P498">close_db();</text:p><text:p text:style-name="P498"/><text:p text:style-name="P498">/*</text:p><text:p text:style-name="P498"><text:s/>* Output response.</text:p><text:p text:style-name="P498"><text:s/>*/</text:p><text:p text:style-name="P498">echo( trim($response,&quot;\r\n&quot;) );</text:p><text:p text:style-name="P498">flush();</text:p><text:p text:style-name="P498">?&gt;</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5876_1486593966"/><text:s text:c="4"/>json_training_set_size.php<text:bookmark-end text:name="__RefHeading___Toc5876_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P498">&lt;?php</text:p><text:p text:style-name="P498">/*******************************************************************************</text:p><text:p text:style-name="P498"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P498"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P498"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P498"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P498"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P498"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P498"><text:s/>* Copyright (C) 2008-2009 by Todor Balabanov <text:s/>( tdb@tbsoft-bg.com ) <text:s text:c="10"/>*</text:p><text:p text:style-name="P498"><text:s/>* <text:s text:c="27"/>Iliyan Zankinski ( iliyan_mf@abv.bg ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P498"><text:s/>* <text:s text:c="27"/>Galq Cirkalova <text:s text:c="2"/>( galq_cirkalova@abv.bg ) <text:s text:c="6"/>*</text:p><text:p text:style-name="P498"><text:s/>* <text:s text:c="27"/>Ivan Grozev <text:s text:c="5"/>( ivan.iliev.grozev@gmail.com ) *</text:p><text:p text:style-name="P498"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P498"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P498"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P498"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P498"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P498"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P498"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P498"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P498"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P498"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P498"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P498"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P498"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P498"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P498"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P498">?&gt;</text:p><text:p text:style-name="P498"/><text:p text:style-name="P498">&lt;?php</text:p><text:p text:style-name="P498">/*</text:p><text:p text:style-name="P498"><text:s/>* Include database functions.</text:p><text:p text:style-name="P498"><text:s/>*/</text:p><text:p text:style-name="P498">include &quot;../common/db.php&quot;;</text:p><text:p text:style-name="P498"/><text:p text:style-name="P498">header(&quot;access-control-allow-origin: *&quot;);</text:p><text:p text:style-name="P498"/><text:p text:style-name="P498">/*</text:p><text:p text:style-name="P498"><text:s/>* Response output variable.</text:p><text:p text:style-name="P498"><text:s/>*/</text:p><text:p text:style-name="P498">$response = &apos;{&apos;;</text:p><text:p text:style-name="P498">$response .= &quot;\n&quot;;</text:p><text:p text:style-name="P498"/><text:p text:style-name="P498">/*</text:p><text:p text:style-name="P498"><text:s/>* Check input parameters.</text:p><text:p text:style-name="P498"><text:s/>*/</text:p><text:p text:style-name="P498">if ( !isset($_POST[&apos;symbol&apos;]) ) {</text:p><text:p text:style-name="P498"><text:tab/>$symbol = &quot;&quot;;</text:p><text:p text:style-name="P498">} else {</text:p><text:p text:style-name="P498"><text:tab/>$symbol = trim($_POST[&apos;symbol&apos;],&quot;\r\n&quot;);</text:p><text:p text:style-name="P498">}</text:p><text:p text:style-name="P498"/><text:p text:style-name="P498">if ( !isset($_POST[&apos;period&apos;]) ) {</text:p><text:p text:style-name="P498"><text:tab/>$period = 0;</text:p><text:p text:style-name="P498">} else {</text:p><text:p text:style-name="P498"><text:tab/>$period = intval($_POST[&apos;period&apos;]);</text:p><text:p text:style-name="P498">}</text:p><text:p text:style-name="P498"/><text:p text:style-name="P498">/*</text:p><text:p text:style-name="P498"><text:s/>* Open database.</text:p><text:p text:style-name="P498"><text:s/>*/</text:p><text:p text:style-name="P498">open_db();</text:p><text:p text:style-name="P498"/><text:p text:style-name="P498">/*</text:p><text:p text:style-name="P498"><text:s/>* Prepare SQL query.</text:p><text:p text:style-name="P498"><text:s/>*/</text:p><text:p text:style-name="P498">$sql = &quot;select number_of_examples from training_set, currency_pairs, time_periods where training_set.currency_pairs_id=currency_pairs.id and currency_pairs.period_id=time_periods.id and currency_pairs.symbol=&apos;&quot; . $symbol . &quot;&apos; and time_periods.minutes=&quot; . $period . &quot;;&quot;;</text:p><text:p text:style-name="P498"/><text:p text:style-name="P498">/*</text:p><text:p text:style-name="P498"><text:s/>* Run SQL query.</text:p><text:p text:style-name="P498"><text:s/>*/</text:p><text:p text:style-name="P498">$result = query_db( $sql );</text:p><text:p text:style-name="P498"/><text:p text:style-name="P498">/*</text:p><text:p text:style-name="P498"><text:s/>* Check SQL query result.</text:p><text:p text:style-name="P498"><text:s/>*/</text:p><text:p text:style-name="P498">if ($result != false) {</text:p><text:p text:style-name="P498"><text:tab/>/*</text:p><text:p text:style-name="P498"><text:soft-page-break/><text:tab/> * Response with number of training examples.</text:p><text:p text:style-name="P498"><text:tab/> */</text:p><text:p text:style-name="P498"><text:tab/>$response .= &apos;&quot;numberOfExamples&quot;:&quot;&apos; . trim($result[0][0],&quot;\r\n&quot;) . &apos;&quot;&apos;;</text:p><text:p text:style-name="P498"><text:tab/>$response .= &quot;\n&quot;;</text:p><text:p text:style-name="P498">} else {</text:p><text:p text:style-name="P498"><text:tab/>/*</text:p><text:p text:style-name="P498"><text:tab/> * Response with zero available training examples.</text:p><text:p text:style-name="P498"><text:tab/> */</text:p><text:p text:style-name="P498"><text:tab/>$response .= &apos;&quot;numberOfExamples&quot;:&quot;0&quot;&apos;;</text:p><text:p text:style-name="P498"><text:tab/>$response .= &quot;\n&quot;;</text:p><text:p text:style-name="P498">}</text:p><text:p text:style-name="P498"/><text:p text:style-name="P498">$response .= &quot;}&quot;;</text:p><text:p text:style-name="P498"/><text:p text:style-name="P498">/*</text:p><text:p text:style-name="P498"><text:s/>* Close database.</text:p><text:p text:style-name="P498"><text:s/>*/</text:p><text:p text:style-name="P498">close_db();</text:p><text:p text:style-name="P498"/><text:p text:style-name="P498">/*</text:p><text:p text:style-name="P498"><text:s/>* Output response.</text:p><text:p text:style-name="P498"><text:s/>*/</text:p><text:p text:style-name="P498">echo( $response );</text:p><text:p text:style-name="P498">flush();</text:p><text:p text:style-name="P498">?&gt;</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5878_1486593966"/><text:s text:c="4"/>load_ann.php<text:bookmark-end text:name="__RefHeading___Toc5878_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P499">&lt;?php</text:p><text:p text:style-name="P499">/*******************************************************************************</text:p><text:p text:style-name="P499"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P499"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P499"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P499"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P499"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P499"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P499"><text:s/>* Copyright (C) 2008-2009 by Todor Balabanov <text:s/>( tdb@tbsoft-bg.com ) <text:s text:c="10"/>*</text:p><text:p text:style-name="P499"><text:s/>* <text:s text:c="27"/>Iliyan Zankinski ( iliyan_mf@abv.bg ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P499"><text:s/>* <text:s text:c="27"/>Galq Cirkalova <text:s text:c="2"/>( galq_cirkalova@abv.bg ) <text:s text:c="6"/>*</text:p><text:p text:style-name="P499"><text:s/>* <text:s text:c="27"/>Ivan Grozev <text:s text:c="5"/>( ivan.iliev.grozev@gmail.com ) *</text:p><text:p text:style-name="P499"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P499"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P499"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P499"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P499"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P499"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P499"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P499"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P499"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P499"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P499"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P499"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P499"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P499"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P499"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P499">?&gt;</text:p><text:p text:style-name="P499"/><text:p text:style-name="P499">&lt;?php</text:p><text:p text:style-name="P499">/*</text:p><text:p text:style-name="P499"><text:s/>* Include database functions.</text:p><text:p text:style-name="P499"><text:s/>*/</text:p><text:p text:style-name="P499">include &quot;../common/db.php&quot;;</text:p><text:p text:style-name="P499"/><text:p text:style-name="P499">header(&quot;access-control-allow-origin: *&quot;);</text:p><text:p text:style-name="P499"/><text:p text:style-name="P499">/*</text:p><text:p text:style-name="P499"><text:s/>* Response output variable.</text:p><text:p text:style-name="P499"><text:s/>*/</text:p><text:p text:style-name="P499">$response = &apos;&apos;;</text:p><text:p text:style-name="P499"/><text:p text:style-name="P499">/*</text:p><text:p text:style-name="P499"><text:s/>* Check input parameters.</text:p><text:p text:style-name="P499"><text:s/>*/</text:p><text:p text:style-name="P499">if ( !isset($_POST[&apos;annid&apos;]) ) {</text:p><text:p text:style-name="P499"><text:tab/>$annid = -1;</text:p><text:p text:style-name="P499">} else {</text:p><text:p text:style-name="P499"><text:tab/>$annid = intval($_POST[&apos;annid&apos;]);</text:p><text:p text:style-name="P499">}</text:p><text:p text:style-name="P499"/><text:p text:style-name="P499">/*</text:p><text:p text:style-name="P499"><text:s/>* Open database.</text:p><text:p text:style-name="P499"><text:s/>*/</text:p><text:p text:style-name="P499">open_db();</text:p><text:p text:style-name="P499"/><text:p text:style-name="P499">/*</text:p><text:p text:style-name="P499"><text:s/>* Prepare SQL query.</text:p><text:p text:style-name="P499"><text:s/>*/</text:p><text:p text:style-name="P499">$sql = &apos;select currency_pairs.symbol, time_periods.minutes, ann.fitness, ann_kind.number_of_neurons, ann_kind.flags, ann.weights, ann_kind.activities from ann, ann_kind, currency_pairs, time_periods where ann_kind.currency_pairs_id=currency_pairs.id and currency_pairs.period_id=time_periods.id and ann.id=&apos; . $annid . &apos; and ann.ann_kind_id=ann_kind.id;&apos;;</text:p><text:p text:style-name="P499"/><text:p text:style-name="P499">/*</text:p><text:p text:style-name="P499"><text:s/>* Run SQL query.</text:p><text:p text:style-name="P499"><text:s/>*/</text:p><text:p text:style-name="P499">$result = query_db( $sql );</text:p><text:p text:style-name="P499"/><text:p text:style-name="P499">/*</text:p><text:p text:style-name="P499"><text:s/>* Check SQL query result.</text:p><text:p text:style-name="P499"><text:s/>*/</text:p><text:p text:style-name="P499">if ($result != false) {</text:p><text:p text:style-name="P499"><text:tab/>/*</text:p><text:p text:style-name="P499"><text:tab/> * Response with artificial neural networks structure.</text:p><text:p text:style-name="P499"><text:tab/> */</text:p><text:p text:style-name="P499"><text:tab/>$response .= 1;</text:p><text:p text:style-name="P499"><text:tab/>$response .= &quot;\n&quot;;</text:p><text:p text:style-name="P499"/><text:p text:style-name="P499"><text:tab/>/*</text:p><text:p text:style-name="P499"><text:tab/> * MetaTrader 4 symbol.</text:p><text:p text:style-name="P499"><text:tab/> */</text:p><text:p text:style-name="P499"><text:tab/>$response .= trim($result[0][0],&quot;\r\n&quot;);</text:p><text:p text:style-name="P499"><text:tab/>$response .= &quot;\n&quot;;</text:p><text:p text:style-name="P499"/><text:p text:style-name="P499"><text:tab/>/*</text:p><text:p text:style-name="P499"><text:tab/> * MetaTrader 4 period.</text:p><text:p text:style-name="P499"><text:tab/> */</text:p><text:p text:style-name="P499"><text:tab/>$response .= trim($result[0][1],&quot;\r\n&quot;);</text:p><text:p text:style-name="P499"><text:tab/>$response .= &quot;\n&quot;;</text:p><text:p text:style-name="P499"/><text:p text:style-name="P499"><text:tab/>/*</text:p><text:p text:style-name="P499"><text:tab/> * Artificial neural network weights fintess.</text:p><text:p text:style-name="P499"><text:soft-page-break/><text:tab/> */</text:p><text:p text:style-name="P499"><text:tab/>$response .= trim($result[0][2],&quot;\r\n&quot;);</text:p><text:p text:style-name="P499"><text:tab/>$response .= &quot;\n&quot;;</text:p><text:p text:style-name="P499"/><text:p text:style-name="P499"><text:tab/>/*</text:p><text:p text:style-name="P499"><text:tab/> * Artificial neural network number of neurons.</text:p><text:p text:style-name="P499"><text:tab/> */</text:p><text:p text:style-name="P499"><text:tab/>$response .= trim($result[0][3],&quot;\r\n&quot;);</text:p><text:p text:style-name="P499"><text:tab/>$response .= &quot;\n&quot;;</text:p><text:p text:style-name="P499"/><text:p text:style-name="P499"><text:tab/>/*</text:p><text:p text:style-name="P499"><text:tab/> * Artificial neural network neurons flags.</text:p><text:p text:style-name="P499"><text:tab/> */</text:p><text:p text:style-name="P499"><text:tab/>$response .= trim($result[0][4],&quot;\r\n&quot;);</text:p><text:p text:style-name="P499"><text:tab/>$response .= &quot;\n&quot;;</text:p><text:p text:style-name="P499"/><text:p text:style-name="P499"><text:tab/>/*</text:p><text:p text:style-name="P499"><text:tab/> * Artificial neural network weights.</text:p><text:p text:style-name="P499"><text:tab/> */</text:p><text:p text:style-name="P499"><text:tab/>$response .= trim($result[0][5],&quot;\r\n&quot;);</text:p><text:p text:style-name="P499"><text:tab/>$response .= &quot;\n&quot;;</text:p><text:p text:style-name="P499"/><text:p text:style-name="P499"><text:tab/>/*</text:p><text:p text:style-name="P499"><text:tab/> * Artificial neural network weights activities.</text:p><text:p text:style-name="P499"><text:tab/> */</text:p><text:p text:style-name="P499"><text:tab/>$response .= trim($result[0][6],&quot;\r\n&quot;);</text:p><text:p text:style-name="P499"><text:tab/>$response .= &quot;\n&quot;;</text:p><text:p text:style-name="P499">} else {</text:p><text:p text:style-name="P499"><text:tab/>/*</text:p><text:p text:style-name="P499"><text:tab/> * Response with -1 flag that artificial neural networks can not be loaded.</text:p><text:p text:style-name="P499"><text:tab/> */</text:p><text:p text:style-name="P499"><text:tab/>$response .= 0;</text:p><text:p text:style-name="P499"><text:tab/>$response .= &quot;\n&quot;;</text:p><text:p text:style-name="P499">}</text:p><text:p text:style-name="P499"/><text:p text:style-name="P499">/*</text:p><text:p text:style-name="P499"><text:s/>* Close database.</text:p><text:p text:style-name="P499"><text:s/>*/</text:p><text:p text:style-name="P499">close_db();</text:p><text:p text:style-name="P499"/><text:p text:style-name="P499">/*</text:p><text:p text:style-name="P499"><text:s/>* Output response.</text:p><text:p text:style-name="P499"><text:s/>*/</text:p><text:p text:style-name="P499">echo( $response );</text:p><text:p text:style-name="P499">flush();</text:p><text:p text:style-name="P499">?&gt;</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5880_1486593966"/><text:s text:c="4"/>load_best_fitness.php<text:bookmark-end text:name="__RefHeading___Toc5880_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P499">&lt;?php</text:p><text:p text:style-name="P499">/*******************************************************************************</text:p><text:p text:style-name="P499"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P499"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P499"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P499"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P499"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P499"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P499"><text:s/>* Copyright (C) 2008-2009 by Todor Balabanov <text:s/>( tdb@tbsoft-bg.com ) <text:s text:c="10"/>*</text:p><text:p text:style-name="P499"><text:s/>* <text:s text:c="27"/>Iliyan Zankinski ( iliyan_mf@abv.bg ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P499"><text:s/>* <text:s text:c="27"/>Galq Cirkalova <text:s text:c="2"/>( galq_cirkalova@abv.bg ) <text:s text:c="6"/>*</text:p><text:p text:style-name="P499"><text:s/>* <text:s text:c="27"/>Ivan Grozev <text:s text:c="5"/>( ivan.iliev.grozev@gmail.com ) *</text:p><text:p text:style-name="P499"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P499"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P499"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P499"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P499"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P499"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P499"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P499"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P499"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P499"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P499"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P499"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P499"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P499"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P499"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P499">?&gt;</text:p><text:p text:style-name="P499"/><text:p text:style-name="P499">&lt;?php</text:p><text:p text:style-name="P499">/*</text:p><text:p text:style-name="P499"><text:s/>* Include database functions.</text:p><text:p text:style-name="P499"><text:s/>*/</text:p><text:p text:style-name="P499">include &quot;../common/db.php&quot;;</text:p><text:p text:style-name="P499"/><text:p text:style-name="P499">header(&quot;access-control-allow-origin: *&quot;);</text:p><text:p text:style-name="P499"/><text:p text:style-name="P499">/*</text:p><text:p text:style-name="P499"><text:s/>* Check input parameters.</text:p><text:p text:style-name="P499"><text:s/>*/</text:p><text:p text:style-name="P499">if ( !isset($_POST[&apos;symbol&apos;]) ) {</text:p><text:p text:style-name="P499"><text:tab/>$symbol = &quot;&quot;;</text:p><text:p text:style-name="P499">} else {</text:p><text:p text:style-name="P499"><text:tab/>$symbol = trim($_POST[&apos;symbol&apos;],&quot;\r\n&quot;);</text:p><text:p text:style-name="P499">}</text:p><text:p text:style-name="P499"/><text:p text:style-name="P499">if ( !isset($_POST[&apos;period&apos;]) ) {</text:p><text:p text:style-name="P499"><text:tab/>$period = 0;</text:p><text:p text:style-name="P499">} else {</text:p><text:p text:style-name="P499"><text:tab/>$period = intval($_POST[&apos;period&apos;]);</text:p><text:p text:style-name="P499">}</text:p><text:p text:style-name="P499"/><text:p text:style-name="P499">if ( !isset($_POST[&apos;number_of_neurons&apos;]) ) {</text:p><text:p text:style-name="P499"><text:tab/>$number_of_neurons = 0;</text:p><text:p text:style-name="P499">} else {</text:p><text:p text:style-name="P499"><text:tab/>$number_of_neurons = intval($_POST[&apos;number_of_neurons&apos;]);</text:p><text:p text:style-name="P499">}</text:p><text:p text:style-name="P499"/><text:p text:style-name="P499">if ( !isset($_POST[&apos;flags&apos;]) ) {</text:p><text:p text:style-name="P499"><text:tab/>$flags = &quot;&quot;;</text:p><text:p text:style-name="P499">} else {</text:p><text:p text:style-name="P499"><text:tab/>$flags = trim($_POST[&apos;flags&apos;],&quot;\r\n&quot;);</text:p><text:p text:style-name="P499">}</text:p><text:p text:style-name="P499"/><text:p text:style-name="P499">if ( !isset($_POST[&apos;activities&apos;]) ) {</text:p><text:p text:style-name="P499"><text:tab/>$activities = &quot;&quot;;</text:p><text:p text:style-name="P499">} else {</text:p><text:p text:style-name="P499"><text:tab/>$activities = trim($_POST[&apos;activities&apos;],&quot;\r\n&quot;);</text:p><text:p text:style-name="P499">}</text:p><text:p text:style-name="P499"/><text:p text:style-name="P499"><text:soft-page-break/>/*</text:p><text:p text:style-name="P499"><text:s/>* Validate flags array.</text:p><text:p text:style-name="P499"><text:s/>*/</text:p><text:p text:style-name="P499">$tok = strtok($flags, &quot; \r\n&quot;);</text:p><text:p text:style-name="P499">$buffer = &quot;&quot;;</text:p><text:p text:style-name="P499">for ($i=0; $i&lt;$number_of_neurons; $i++) {</text:p><text:p text:style-name="P499"><text:tab/>if ($tok != false) {</text:p><text:p text:style-name="P499"><text:tab/><text:tab/>$buffer .= (intval($tok) . &quot; &quot;);</text:p><text:p text:style-name="P499"><text:tab/>} else {</text:p><text:p text:style-name="P499"><text:tab/><text:tab/>$buffer .= &quot;0&quot; . &quot; &quot;;</text:p><text:p text:style-name="P499"><text:tab/>}</text:p><text:p text:style-name="P499"><text:tab/>$tok = strtok(&quot; \r\n&quot;);</text:p><text:p text:style-name="P499">}</text:p><text:p text:style-name="P499">$buffer = trim($buffer, &quot; \r\n&quot;);</text:p><text:p text:style-name="P499">$flags = $buffer;</text:p><text:p text:style-name="P499"/><text:p text:style-name="P499">/*</text:p><text:p text:style-name="P499"><text:s/>* Validate activities matrix.</text:p><text:p text:style-name="P499"><text:s/>*/</text:p><text:p text:style-name="P499">$tok = strtok($activities, &quot; \r\n&quot;);</text:p><text:p text:style-name="P499">$buffer = &quot;&quot;;</text:p><text:p text:style-name="P499">for ($j=0; $j&lt;$number_of_neurons; $j++) {</text:p><text:p text:style-name="P499"><text:tab/>for ($i=0; $i&lt;$number_of_neurons; $i++) {</text:p><text:p text:style-name="P499"><text:tab/><text:tab/>if ($tok != false) {</text:p><text:p text:style-name="P499"><text:tab/><text:tab/><text:tab/>$buffer .= (floatval($tok) . &quot; &quot;);</text:p><text:p text:style-name="P499"><text:tab/><text:tab/>} else {</text:p><text:p text:style-name="P499"><text:tab/><text:tab/><text:tab/>$buffer .= &quot;0&quot; . &quot; &quot;;</text:p><text:p text:style-name="P499"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P499"/><text:p text:style-name="P499"><text:tab/><text:tab/>$tok = strtok(&quot; \r\n&quot;);</text:p><text:p text:style-name="P499"><text:tab/>}</text:p><text:p text:style-name="P499"/><text:p text:style-name="P499"><text:tab/>$buffer = trim($buffer, &quot; \r\n&quot;);</text:p><text:p text:style-name="P499"><text:tab/>$buffer .= &quot;\n&quot;;</text:p><text:p text:style-name="P499">}</text:p><text:p text:style-name="P499">$buffer = trim($buffer, &quot; \r\n&quot;);</text:p><text:p text:style-name="P499">$activities = $buffer;</text:p><text:p text:style-name="P499"/><text:p text:style-name="P499">/*</text:p><text:p text:style-name="P499"><text:s/>* Response output variable.</text:p><text:p text:style-name="P499"><text:s/>*/</text:p><text:p text:style-name="P499">$response = &apos;&apos;;</text:p><text:p text:style-name="P499"/><text:p text:style-name="P499">/*</text:p><text:p text:style-name="P499"><text:s/>* Open database.</text:p><text:p text:style-name="P499"><text:s/>*/</text:p><text:p text:style-name="P499">open_db();</text:p><text:p text:style-name="P499"/><text:p text:style-name="P499">/*</text:p><text:p text:style-name="P499"><text:s/>* Prepare SQL query to find ANN kind id.</text:p><text:p text:style-name="P499"><text:s/>*/</text:p><text:p text:style-name="P499">$sql = &quot;select loadBestFitness(&apos;&quot; . $symbol . &quot;&apos;, &quot; . $period . &quot;, &quot; . $number_of_neurons . &quot;, &apos;&quot; . $flags . &quot;&apos;, &apos;&quot; . $activities . &quot;&apos;);&quot;;</text:p><text:p text:style-name="P499">$result = query_db( $sql );</text:p><text:p text:style-name="P499"/><text:p text:style-name="P499">/*</text:p><text:p text:style-name="P499"><text:s/>* Response with best fitness or very high unreal value.</text:p><text:p text:style-name="P499"><text:s/>*/</text:p><text:p text:style-name="P499">$response .= trim($result[0][0],&quot;\r\n&quot;);</text:p><text:p text:style-name="P499">$response .= &quot;\n&quot;;</text:p><text:p text:style-name="P499"/><text:p text:style-name="P499">/*</text:p><text:p text:style-name="P499"><text:s/>* Close database.</text:p><text:p text:style-name="P499"><text:s/>*/</text:p><text:p text:style-name="P499">close_db();</text:p><text:p text:style-name="P499"/><text:p text:style-name="P499">/*</text:p><text:p text:style-name="P499"><text:s/>* Output response.</text:p><text:p text:style-name="P499"><text:s/>*/</text:p><text:p text:style-name="P499">echo( $response );</text:p><text:p text:style-name="P499">flush();</text:p><text:p text:style-name="P499">?&gt;</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5882_1486593966"/><text:s text:c="4"/>load_neurons_amount.php<text:bookmark-end text:name="__RefHeading___Toc5882_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P500">&lt;?php</text:p><text:p text:style-name="P500">/*******************************************************************************</text:p><text:p text:style-name="P500"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P500"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P500"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P500"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P500"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P500"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P500"><text:s/>* Copyright (C) 2008-2009 by Todor Balabanov <text:s/>( tdb@tbsoft-bg.com ) <text:s text:c="10"/>*</text:p><text:p text:style-name="P500"><text:s/>* <text:s text:c="27"/>Iliyan Zankinski ( iliyan_mf@abv.bg ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P500"><text:s/>* <text:s text:c="27"/>Galq Cirkalova <text:s text:c="2"/>( galq_cirkalova@abv.bg ) <text:s text:c="6"/>*</text:p><text:p text:style-name="P500"><text:s/>* <text:s text:c="27"/>Ivan Grozev <text:s text:c="5"/>( ivan.iliev.grozev@gmail.com ) *</text:p><text:p text:style-name="P500"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P500"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P500"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P500"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P500"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P500"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P500"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P500"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P500"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P500"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P500"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P500"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P500"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P500"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P500"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P500">?&gt;</text:p><text:p text:style-name="P500"/><text:p text:style-name="P500">&lt;?php</text:p><text:p text:style-name="P500">/*</text:p><text:p text:style-name="P500"><text:s/>* Include database functions.</text:p><text:p text:style-name="P500"><text:s/>*/</text:p><text:p text:style-name="P500">include &quot;../common/db.php&quot;;</text:p><text:p text:style-name="P500"/><text:p text:style-name="P500">header(&quot;access-control-allow-origin: *&quot;);</text:p><text:p text:style-name="P500"/><text:p text:style-name="P500">/*</text:p><text:p text:style-name="P500"><text:s/>* Check input parameters.</text:p><text:p text:style-name="P500"><text:s/>*/</text:p><text:p text:style-name="P500">if ( !isset($_POST[&apos;annid&apos;]) ) {</text:p><text:p text:style-name="P500"><text:tab/>$annid = -1;</text:p><text:p text:style-name="P500">} else {</text:p><text:p text:style-name="P500"><text:tab/>$annid = intval($_POST[&apos;annid&apos;]);</text:p><text:p text:style-name="P500">}</text:p><text:p text:style-name="P500"><text:soft-page-break/></text:p><text:p text:style-name="P500">/*</text:p><text:p text:style-name="P500"><text:s/>* Response output variable.</text:p><text:p text:style-name="P500"><text:s/>*/</text:p><text:p text:style-name="P500">$response = &apos;&apos;;</text:p><text:p text:style-name="P500"/><text:p text:style-name="P500">/*</text:p><text:p text:style-name="P500"><text:s/>* Open database.</text:p><text:p text:style-name="P500"><text:s/>*/</text:p><text:p text:style-name="P500">open_db();</text:p><text:p text:style-name="P500"/><text:p text:style-name="P500">/*</text:p><text:p text:style-name="P500"><text:s/>* Prepare SQL query to find ANN kind id.</text:p><text:p text:style-name="P500"><text:s/>*/</text:p><text:p text:style-name="P500">$sql = &apos;select loadNeuronsAmount(&apos; . $annid . &apos;);&apos;;</text:p><text:p text:style-name="P500"/><text:p text:style-name="P500">/*</text:p><text:p text:style-name="P500"><text:s/>* Run SQL query.</text:p><text:p text:style-name="P500"><text:s/>*/</text:p><text:p text:style-name="P500">$result = query_db( $sql );</text:p><text:p text:style-name="P500">$response .= trim($result[0][0],&quot;\r\n&quot;);</text:p><text:p text:style-name="P500">$response .= &quot;\n&quot;;</text:p><text:p text:style-name="P500"/><text:p text:style-name="P500">/*</text:p><text:p text:style-name="P500"><text:s/>* Close database.</text:p><text:p text:style-name="P500"><text:s/>*/</text:p><text:p text:style-name="P500">close_db();</text:p><text:p text:style-name="P500"/><text:p text:style-name="P500">/*</text:p><text:p text:style-name="P500"><text:s/>* Output response.</text:p><text:p text:style-name="P500"><text:s/>*/</text:p><text:p text:style-name="P500">echo( $response );</text:p><text:p text:style-name="P500">flush();</text:p><text:p text:style-name="P500">?&gt;</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5884_1486593966"/><text:s text:c="4"/>load_training_set.php<text:bookmark-end text:name="__RefHeading___Toc5884_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P501">&lt;?php</text:p><text:p text:style-name="P501">/*******************************************************************************</text:p><text:p text:style-name="P501"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P501"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P501"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P501"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P501"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P501"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P501"><text:s/>* Copyright (C) 2008-2009 by Todor Balabanov <text:s/>( tdb@tbsoft-bg.com ) <text:s text:c="10"/>*</text:p><text:p text:style-name="P501"><text:s/>* <text:s text:c="27"/>Iliyan Zankinski ( iliyan_mf@abv.bg ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P501"><text:s/>* <text:s text:c="27"/>Galq Cirkalova <text:s text:c="2"/>( galq_cirkalova@abv.bg ) <text:s text:c="6"/>*</text:p><text:p text:style-name="P501"><text:s/>* <text:s text:c="27"/>Ivan Grozev <text:s text:c="5"/>( ivan.iliev.grozev@gmail.com ) *</text:p><text:p text:style-name="P501"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P501"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P501"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P501"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P501"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P501"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P501"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P501"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P501"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P501"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P501"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P501"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P501"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P501"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P501"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P501">?&gt;</text:p><text:p text:style-name="P501"/><text:p text:style-name="P501">&lt;?php</text:p><text:p text:style-name="P501">/*</text:p><text:p text:style-name="P501"><text:s/>* Include database functions.</text:p><text:p text:style-name="P501"><text:s/>*/</text:p><text:p text:style-name="P501">include &quot;../common/db.php&quot;;</text:p><text:p text:style-name="P501"/><text:p text:style-name="P501">header(&quot;access-control-allow-origin: *&quot;);</text:p><text:p text:style-name="P501"/><text:p text:style-name="P501">/*</text:p><text:p text:style-name="P501"><text:s/>* Response output variable.</text:p><text:p text:style-name="P501"><text:s/>*/</text:p><text:p text:style-name="P501">$response = &apos;&apos;;</text:p><text:p text:style-name="P501"/><text:p text:style-name="P501">/*</text:p><text:p text:style-name="P501"><text:s/>* Check input parameters.</text:p><text:p text:style-name="P501"><text:s/>*/</text:p><text:p text:style-name="P501">if ( !isset($_POST[&apos;symbol&apos;]) ) {</text:p><text:p text:style-name="P501"><text:tab/>$symbol = &quot;&quot;;</text:p><text:p text:style-name="P501">} else {</text:p><text:p text:style-name="P501"><text:tab/>$symbol = trim($_POST[&apos;symbol&apos;],&quot;\r\n&quot;);</text:p><text:p text:style-name="P501">}</text:p><text:p text:style-name="P501"/><text:p text:style-name="P501">if ( !isset($_POST[&apos;period&apos;]) ) {</text:p><text:p text:style-name="P501"><text:tab/>$period = 0;</text:p><text:p text:style-name="P501">} else {</text:p><text:p text:style-name="P501"><text:tab/>$period = intval($_POST[&apos;period&apos;]);</text:p><text:p text:style-name="P501">}</text:p><text:p text:style-name="P501"/><text:p text:style-name="P501">/*</text:p><text:p text:style-name="P501"><text:s/>* Open database.</text:p><text:p text:style-name="P501"><text:s/>*/</text:p><text:p text:style-name="P501">open_db();</text:p><text:p text:style-name="P501"/><text:p text:style-name="P501">/*</text:p><text:p text:style-name="P501"><text:s/>* Prepare SQL query.</text:p><text:p text:style-name="P501"><text:s/>*/</text:p><text:p text:style-name="P501">$sql = &quot;select training_set.number_of_examples, training_set.time, training_set.open, training_set.low, training_set.high, training_set.close, training_set.volume from training_set, currency_pairs, time_periods where training_set.currency_pairs_id=currency_pairs.id and currency_pairs.period_id=time_periods.id and currency_pairs.symbol=&apos;&quot; . $symbol . &quot;&apos; and time_periods.minutes=&quot; . $period . &quot;;&quot;;</text:p><text:p text:style-name="P501"/><text:p text:style-name="P501">/*</text:p><text:p text:style-name="P501"><text:s/>* Run SQL query.</text:p><text:p text:style-name="P501"><text:s/>*/</text:p><text:p text:style-name="P501">$result = query_db( $sql );</text:p><text:p text:style-name="P501"/><text:p text:style-name="P501">/*</text:p><text:p text:style-name="P501"><text:s/>* Check SQL query result.</text:p><text:p text:style-name="P501"><text:s/>*/</text:p><text:p text:style-name="P501">if ($result != false) {</text:p><text:p text:style-name="P501"><text:tab/>/*</text:p><text:p text:style-name="P501"><text:tab/> * Response with number of training examples.</text:p><text:p text:style-name="P501"><text:tab/> */</text:p><text:p text:style-name="P501"><text:tab/>$response .= trim($result[0][0],&quot;\r\n&quot;);</text:p><text:p text:style-name="P501"><text:tab/>$response .= &quot;\n&quot;;</text:p><text:p text:style-name="P501"><text:soft-page-break/></text:p><text:p text:style-name="P501"><text:tab/>/*</text:p><text:p text:style-name="P501"><text:tab/> * Time values of training examples.</text:p><text:p text:style-name="P501"><text:tab/> */</text:p><text:p text:style-name="P501"><text:tab/>$response .= trim($result[0][1],&quot;\r\n&quot;);</text:p><text:p text:style-name="P501"><text:tab/>$response .= &quot;\n&quot;;</text:p><text:p text:style-name="P501"/><text:p text:style-name="P501"><text:tab/>/*</text:p><text:p text:style-name="P501"><text:tab/> * Open values of training examples.</text:p><text:p text:style-name="P501"><text:tab/> */</text:p><text:p text:style-name="P501"><text:tab/>$response .= trim($result[0][2],&quot;\r\n&quot;);</text:p><text:p text:style-name="P501"><text:tab/>$response .= &quot;\n&quot;;</text:p><text:p text:style-name="P501"/><text:p text:style-name="P501"><text:tab/>/*</text:p><text:p text:style-name="P501"><text:tab/> * Low values of training examples.</text:p><text:p text:style-name="P501"><text:tab/> */</text:p><text:p text:style-name="P501"><text:tab/>$response .= trim($result[0][3],&quot;\r\n&quot;);</text:p><text:p text:style-name="P501"><text:tab/>$response .= &quot;\n&quot;;</text:p><text:p text:style-name="P501"/><text:p text:style-name="P501"><text:tab/>/*</text:p><text:p text:style-name="P501"><text:tab/> * High values of training examples.</text:p><text:p text:style-name="P501"><text:tab/> */</text:p><text:p text:style-name="P501"><text:tab/>$response .= trim($result[0][4],&quot;\r\n&quot;);</text:p><text:p text:style-name="P501"><text:tab/>$response .= &quot;\n&quot;;</text:p><text:p text:style-name="P501"/><text:p text:style-name="P501"><text:tab/>/*</text:p><text:p text:style-name="P501"><text:tab/> * Close values of training examples.</text:p><text:p text:style-name="P501"><text:tab/> */</text:p><text:p text:style-name="P501"><text:tab/>$response .= trim($result[0][5],&quot;\r\n&quot;);</text:p><text:p text:style-name="P501"><text:tab/>$response .= &quot;\n&quot;;</text:p><text:p text:style-name="P501"/><text:p text:style-name="P501"><text:tab/>/*</text:p><text:p text:style-name="P501"><text:tab/> * Volume values of training examples.</text:p><text:p text:style-name="P501"><text:tab/> */</text:p><text:p text:style-name="P501"><text:tab/>$response .= trim($result[0][6],&quot;\r\n&quot;);</text:p><text:p text:style-name="P501"><text:tab/>$response .= &quot;\n&quot;;</text:p><text:p text:style-name="P501">} else {</text:p><text:p text:style-name="P501"><text:tab/>/*</text:p><text:p text:style-name="P501"><text:tab/> * Response with zeor available training examples.</text:p><text:p text:style-name="P501"><text:tab/> */</text:p><text:p text:style-name="P501"><text:tab/>$response .= 0;</text:p><text:p text:style-name="P501"><text:tab/>$response .= &quot;\n&quot;;</text:p><text:p text:style-name="P501">}</text:p><text:p text:style-name="P501"/><text:p text:style-name="P501">/*</text:p><text:p text:style-name="P501"><text:s/>* Close database.</text:p><text:p text:style-name="P501"><text:s/>*/</text:p><text:p text:style-name="P501">close_db();</text:p><text:p text:style-name="P501"/><text:p text:style-name="P501">/*</text:p><text:p text:style-name="P501"><text:s/>* Output response.</text:p><text:p text:style-name="P501"><text:s/>*/</text:p><text:p text:style-name="P501">echo( $response );</text:p><text:p text:style-name="P501">flush();</text:p><text:p text:style-name="P501">?&gt;</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5886_1486593966"/><text:s text:c="4"/>number_of_anns.php<text:bookmark-end text:name="__RefHeading___Toc5886_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P501">&lt;?php</text:p><text:p text:style-name="P501">/*******************************************************************************</text:p><text:p text:style-name="P501"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P501"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P501"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P501"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P501"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P501"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P501"><text:s/>* Copyright (C) 2008-2009 by Todor Balabanov <text:s/>( tdb@tbsoft-bg.com ) <text:s text:c="10"/>*</text:p><text:p text:style-name="P501"><text:s/>* <text:s text:c="27"/>Iliyan Zankinski ( iliyan_mf@abv.bg ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P501"><text:s/>* <text:s text:c="27"/>Galq Cirkalova <text:s text:c="2"/>( galq_cirkalova@abv.bg ) <text:s text:c="6"/>*</text:p><text:p text:style-name="P501"><text:s/>* <text:s text:c="27"/>Ivan Grozev <text:s text:c="5"/>( ivan.iliev.grozev@gmail.com ) *</text:p><text:p text:style-name="P501"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P501"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P501"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P501"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P501"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P501"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P501"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P501"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P501"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P501"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P501"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P501"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P501"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P501"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P501"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P501">?&gt;</text:p><text:p text:style-name="P501"/><text:p text:style-name="P501">&lt;?php</text:p><text:p text:style-name="P501">/*</text:p><text:p text:style-name="P501"><text:s/>* Include database functions.</text:p><text:p text:style-name="P501"><text:s/>*/</text:p><text:p text:style-name="P501">include &quot;../common/db.php&quot;;</text:p><text:p text:style-name="P501"/><text:p text:style-name="P501">header(&quot;access-control-allow-origin: *&quot;);</text:p><text:p text:style-name="P501"/><text:p text:style-name="P501">/*</text:p><text:p text:style-name="P501"><text:s/>* Response output variable.</text:p><text:p text:style-name="P501"><text:s/>*/</text:p><text:p text:style-name="P501">$response = &apos;&apos;;</text:p><text:p text:style-name="P501"/><text:p text:style-name="P501">/*</text:p><text:p text:style-name="P501"><text:s/>* Check input parameters.</text:p><text:p text:style-name="P501"><text:s/>*/</text:p><text:p text:style-name="P501">if ( !isset($_POST[&apos;annid&apos;]) ) {</text:p><text:p text:style-name="P501"><text:tab/>$annid = -1;</text:p><text:p text:style-name="P501">} else {</text:p><text:p text:style-name="P501"><text:tab/>$annid = intval($_POST[&apos;annid&apos;]);</text:p><text:p text:style-name="P501">}</text:p><text:p text:style-name="P501"/><text:p text:style-name="P501">if ( !isset($_POST[&apos;symbol&apos;]) ) {</text:p><text:p text:style-name="P501"><text:tab/>$symbol = &quot;&quot;;</text:p><text:p text:style-name="P501">} else {</text:p><text:p text:style-name="P501"><text:tab/>$symbol = trim($_POST[&apos;symbol&apos;],&quot;\r\n&quot;);</text:p><text:p text:style-name="P501">}</text:p><text:p text:style-name="P501"/><text:p text:style-name="P501">if ( !isset($_POST[&apos;period&apos;]) ) {</text:p><text:p text:style-name="P501"><text:tab/>$period = 0;</text:p><text:p text:style-name="P501">} else {</text:p><text:p text:style-name="P501"><text:tab/>$period = intval($_POST[&apos;period&apos;]);</text:p><text:p text:style-name="P501"><text:soft-page-break/>}</text:p><text:p text:style-name="P501"/><text:p text:style-name="P501">/*</text:p><text:p text:style-name="P501"><text:s/>* Open database.</text:p><text:p text:style-name="P501"><text:s/>*/</text:p><text:p text:style-name="P501">open_db();</text:p><text:p text:style-name="P501"/><text:p text:style-name="P501">/*</text:p><text:p text:style-name="P501"><text:s/>* Prepare SQL query by ANN id.</text:p><text:p text:style-name="P501"><text:s/>*/</text:p><text:p text:style-name="P501">$sql = &apos;select id from ann where ann.ann_kind_id=(select ann_kind_id from ann where id=&apos; . $annid . &apos;) order by fitness asc;&apos;;</text:p><text:p text:style-name="P501"/><text:p text:style-name="P501">/*</text:p><text:p text:style-name="P501"><text:s/>* Run SQL query.</text:p><text:p text:style-name="P501"><text:s/>*/</text:p><text:p text:style-name="P501">$result = query_db( $sql );</text:p><text:p text:style-name="P501"/><text:p text:style-name="P501">/*</text:p><text:p text:style-name="P501"><text:s/>* Count number of artificial neural networks available.</text:p><text:p text:style-name="P501"><text:s/>*/</text:p><text:p text:style-name="P501">$count = 0;</text:p><text:p text:style-name="P501"/><text:p text:style-name="P501">/*</text:p><text:p text:style-name="P501"><text:s/>* Check SQL query result.</text:p><text:p text:style-name="P501"><text:s/>*/</text:p><text:p text:style-name="P501">if ($result != false) {</text:p><text:p text:style-name="P501"><text:tab/>/*</text:p><text:p text:style-name="P501"><text:tab/> * Response with all artificial neural networks identifyers available.</text:p><text:p text:style-name="P501"><text:tab/> */</text:p><text:p text:style-name="P501"><text:tab/>for ($i=0; $i&lt;count($result); $i++) {</text:p><text:p text:style-name="P501"><text:tab/><text:tab/>$response .= trim($result[$i][0],&quot;\r\n&quot;);</text:p><text:p text:style-name="P501"><text:tab/><text:tab/>$response .= &quot;\n&quot;;</text:p><text:p text:style-name="P501"><text:tab/><text:tab/>$count++;</text:p><text:p text:style-name="P501"><text:tab/>}</text:p><text:p text:style-name="P501">}</text:p><text:p text:style-name="P501"/><text:p text:style-name="P501">/*</text:p><text:p text:style-name="P501"><text:s/>* Prepare SQL query by ANN symbol and period.</text:p><text:p text:style-name="P501"><text:s/>*/</text:p><text:p text:style-name="P501">$sql = &apos;select id, ann_kind_id from ann where ann.ann_kind_id=(select ann_kind_id from ann_kind, currency_pairs, time_periods where currency_pairs_id=currency_pairs.id and period_id=time_periods.id and symbol=&apos; . $symbol . &apos; and period=&apos; . $period . &apos;) order by fitness asc;&apos;;</text:p><text:p text:style-name="P501"/><text:p text:style-name="P501">/*</text:p><text:p text:style-name="P501"><text:s/>* Run SQL query.</text:p><text:p text:style-name="P501"><text:s/>*/</text:p><text:p text:style-name="P501">$result = query_db( $sql );</text:p><text:p text:style-name="P501"/><text:p text:style-name="P501">/*</text:p><text:p text:style-name="P501"><text:s/>* Check SQL query result if there is no list by ANN id.</text:p><text:p text:style-name="P501"><text:s/>*/</text:p><text:p text:style-name="P501">if ($count==0 &amp;&amp; $result!=false) {</text:p><text:p text:style-name="P501"><text:tab/>/*</text:p><text:p text:style-name="P501"><text:tab/> * Artificial neural networks should be from the same kind.</text:p><text:p text:style-name="P501"><text:tab/> */</text:p><text:p text:style-name="P501"><text:tab/>$ann_kind_id = $result[0][1];</text:p><text:p text:style-name="P501"/><text:p text:style-name="P501"><text:tab/>/*</text:p><text:p text:style-name="P501"><text:tab/> * Response with all artificial neural networks identifyers available.</text:p><text:p text:style-name="P501"><text:tab/> */</text:p><text:p text:style-name="P501"><text:tab/>for ($i=0; $i&lt;count($result); $i++) {</text:p><text:p text:style-name="P501"><text:tab/><text:tab/>if ($result[$i][1] == $ann_kind_id) {</text:p><text:p text:style-name="P501"><text:tab/><text:tab/><text:tab/>$response .= trim($result[$i][0],&quot;\r\n&quot;);</text:p><text:p text:style-name="P501"><text:tab/><text:tab/><text:tab/>$response .= &quot;\n&quot;;</text:p><text:p text:style-name="P501"><text:tab/><text:tab/><text:tab/>$count++;</text:p><text:p text:style-name="P501"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P501"><text:tab/>}</text:p><text:p text:style-name="P501">}</text:p><text:p text:style-name="P501"/><text:p text:style-name="P501">/*</text:p><text:p text:style-name="P501"><text:s/>* Response with number of artificial neural networks available.</text:p><text:p text:style-name="P501"><text:s/>*/</text:p><text:p text:style-name="P501">$response = &quot;\n&quot; . $response;</text:p><text:p text:style-name="P501">$response = trim($count,&quot;\r\n&quot;) . $response;</text:p><text:p text:style-name="P501"/><text:p text:style-name="P501">/*</text:p><text:p text:style-name="P501"><text:s/>* Close database.</text:p><text:p text:style-name="P501"><text:s/>*/</text:p><text:p text:style-name="P501">close_db();</text:p><text:p text:style-name="P501"/><text:p text:style-name="P501">/*</text:p><text:p text:style-name="P501"><text:s/>* Output response.</text:p><text:p text:style-name="P501"><text:s/>*/</text:p><text:p text:style-name="P501">echo( $response );</text:p><text:p text:style-name="P501">flush();</text:p><text:p text:style-name="P501">?&gt;</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5888_1486593966"/><text:s text:c="4"/>save_ann.php<text:bookmark-end text:name="__RefHeading___Toc5888_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P501">&lt;?php</text:p><text:p text:style-name="P501">/*******************************************************************************</text:p><text:p text:style-name="P501"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P501"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P501"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P501"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P501"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P501"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P501"><text:s/>* Copyright (C) 2008-2009 by Todor Balabanov <text:s/>( tdb@tbsoft-bg.com ) <text:s text:c="10"/>*</text:p><text:p text:style-name="P501"><text:s/>* <text:s text:c="27"/>Iliyan Zankinski ( iliyan_mf@abv.bg ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P501"><text:s/>* <text:s text:c="27"/>Galq Cirkalova <text:s text:c="2"/>( galq_cirkalova@abv.bg ) <text:s text:c="6"/>*</text:p><text:p text:style-name="P501"><text:s/>* <text:s text:c="27"/>Ivan Grozev <text:s text:c="5"/>( ivan.iliev.grozev@gmail.com ) *</text:p><text:p text:style-name="P501"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P501"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P501"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P501"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P501"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P501"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P501"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P501"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P501"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P501"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P501"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P501"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P501"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P501"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P501"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P501">?&gt;</text:p><text:p text:style-name="P501"/><text:p text:style-name="P501">&lt;?php</text:p><text:p text:style-name="P501">/*</text:p><text:p text:style-name="P501"><text:soft-page-break/><text:s/>* Include database functions.</text:p><text:p text:style-name="P501"><text:s/>*/</text:p><text:p text:style-name="P501">include &quot;../common/db.php&quot;;</text:p><text:p text:style-name="P501"/><text:p text:style-name="P501">header(&quot;access-control-allow-origin: *&quot;);</text:p><text:p text:style-name="P501"/><text:p text:style-name="P501">/*</text:p><text:p text:style-name="P501"><text:s/>* Check input parameters.</text:p><text:p text:style-name="P501"><text:s/>*/</text:p><text:p text:style-name="P501">if ( !isset($_POST[&apos;symbol&apos;]) ) {</text:p><text:p text:style-name="P501"><text:tab/>$symbol = &quot;&quot;;</text:p><text:p text:style-name="P501">} else {</text:p><text:p text:style-name="P501"><text:tab/>$symbol = trim($_POST[&apos;symbol&apos;],&quot;\r\n&quot;);</text:p><text:p text:style-name="P501">}</text:p><text:p text:style-name="P501"/><text:p text:style-name="P501">if ( !isset($_POST[&apos;period&apos;]) ) {</text:p><text:p text:style-name="P501"><text:tab/>$period = 0;</text:p><text:p text:style-name="P501">} else {</text:p><text:p text:style-name="P501"><text:tab/>$period = intval($_POST[&apos;period&apos;]);</text:p><text:p text:style-name="P501">}</text:p><text:p text:style-name="P501"/><text:p text:style-name="P501">if ( !isset($_POST[&apos;fitness&apos;]) ) {</text:p><text:p text:style-name="P501"><text:tab/>$fitness = PHP_INT_MAX;</text:p><text:p text:style-name="P501">} else {</text:p><text:p text:style-name="P501"><text:tab/>$fitness = floatval($_POST[&apos;fitness&apos;]);</text:p><text:p text:style-name="P501">}</text:p><text:p text:style-name="P501"/><text:p text:style-name="P501">if ( !isset($_POST[&apos;number_of_neurons&apos;]) ) {</text:p><text:p text:style-name="P501"><text:tab/>$number_of_neurons = 0;</text:p><text:p text:style-name="P501">} else {</text:p><text:p text:style-name="P501"><text:tab/>$number_of_neurons = intval($_POST[&apos;number_of_neurons&apos;]);</text:p><text:p text:style-name="P501">}</text:p><text:p text:style-name="P501"/><text:p text:style-name="P501">if ( !isset($_POST[&apos;flags&apos;]) ) {</text:p><text:p text:style-name="P501"><text:tab/>$flags = &quot;&quot;;</text:p><text:p text:style-name="P501">} else {</text:p><text:p text:style-name="P501"><text:tab/>$flags = trim($_POST[&apos;flags&apos;],&quot;\r\n&quot;);</text:p><text:p text:style-name="P501">}</text:p><text:p text:style-name="P501"/><text:p text:style-name="P501">if ( !isset($_POST[&apos;weights&apos;]) ) {</text:p><text:p text:style-name="P501"><text:tab/>$weights = &quot;&quot;;</text:p><text:p text:style-name="P501">} else {</text:p><text:p text:style-name="P501"><text:tab/>$weights = trim($_POST[&apos;weights&apos;],&quot;\r\n&quot;);</text:p><text:p text:style-name="P501">}</text:p><text:p text:style-name="P501"/><text:p text:style-name="P501">if ( !isset($_POST[&apos;activities&apos;]) ) {</text:p><text:p text:style-name="P501"><text:tab/>$activities = &quot;&quot;;</text:p><text:p text:style-name="P501">} else {</text:p><text:p text:style-name="P501"><text:tab/>$activities = trim($_POST[&apos;activities&apos;],&quot;\r\n&quot;);</text:p><text:p text:style-name="P501">}</text:p><text:p text:style-name="P501"/><text:p text:style-name="P501">/*</text:p><text:p text:style-name="P501"><text:s/>* Validate flags array.</text:p><text:p text:style-name="P501"><text:s/>*/</text:p><text:p text:style-name="P501">$tok = strtok($flags, &quot; \r\n&quot;);</text:p><text:p text:style-name="P501">$buffer = &quot;&quot;;</text:p><text:p text:style-name="P501">for ($i=0; $i&lt;$number_of_neurons; $i++) {</text:p><text:p text:style-name="P501"><text:tab/>if ($tok != false) {</text:p><text:p text:style-name="P501"><text:tab/><text:tab/>$buffer .= (intval($tok) . &quot; &quot;);</text:p><text:p text:style-name="P501"><text:tab/>} else {</text:p><text:p text:style-name="P501"><text:tab/><text:tab/>$buffer .= &quot;0&quot; . &quot; &quot;;</text:p><text:p text:style-name="P501"><text:tab/>}</text:p><text:p text:style-name="P501"><text:tab/>$tok = strtok(&quot; \r\n&quot;);</text:p><text:p text:style-name="P501">}</text:p><text:p text:style-name="P501">$buffer = trim($buffer, &quot; \r\n&quot;);</text:p><text:p text:style-name="P501">$flags = $buffer;</text:p><text:p text:style-name="P501"/><text:p text:style-name="P501">/*</text:p><text:p text:style-name="P501"><text:s/>* Validate weights matrix.</text:p><text:p text:style-name="P501"><text:s/>*/</text:p><text:p text:style-name="P501">//TODO Be very careful with matrix transpose (C++ vs PHP).</text:p><text:p text:style-name="P501">$tok = strtok($weights, &quot; \r\n&quot;);</text:p><text:p text:style-name="P501">$buffer = &quot;&quot;;</text:p><text:p text:style-name="P501">for ($j=0; $j&lt;$number_of_neurons; $j++) {</text:p><text:p text:style-name="P501"><text:tab/>for ($i=0; $i&lt;$number_of_neurons; $i++) {</text:p><text:p text:style-name="P501"><text:tab/><text:tab/>if ($tok != false) {</text:p><text:p text:style-name="P501"><text:tab/><text:tab/><text:tab/>$buffer .= (floatval($tok) . &quot; &quot;);</text:p><text:p text:style-name="P501"><text:tab/><text:tab/>} else {</text:p><text:p text:style-name="P501"><text:tab/><text:tab/><text:tab/>$buffer .= &quot;0&quot; . &quot; &quot;;</text:p><text:p text:style-name="P501"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P501"/><text:p text:style-name="P501"><text:tab/><text:tab/>$tok = strtok(&quot; \r\n&quot;);</text:p><text:p text:style-name="P501"><text:tab/>}</text:p><text:p text:style-name="P501"/><text:p text:style-name="P501"><text:tab/>$buffer = trim($buffer, &quot; \r\n&quot;);</text:p><text:p text:style-name="P501"><text:tab/>$buffer .= &quot;\r\n&quot;;</text:p><text:p text:style-name="P501">}</text:p><text:p text:style-name="P501">$buffer = trim($buffer, &quot; \r\n&quot;);</text:p><text:p text:style-name="P501">$weights = $buffer;</text:p><text:p text:style-name="P501"/><text:p text:style-name="P501">/*</text:p><text:p text:style-name="P501"><text:s/>* Validate activities matrix.</text:p><text:p text:style-name="P501"><text:s/>*/</text:p><text:p text:style-name="P501">$tok = strtok($activities, &quot; \r\n&quot;);</text:p><text:p text:style-name="P501">$buffer = &quot;&quot;;</text:p><text:p text:style-name="P501">//TODO Be very careful with matrix transpose (C++ vs PHP).</text:p><text:p text:style-name="P501">for ($j=0; $j&lt;$number_of_neurons; $j++) {</text:p><text:p text:style-name="P501"><text:tab/>for ($i=0; $i&lt;$number_of_neurons; $i++) {</text:p><text:p text:style-name="P501"><text:tab/><text:tab/>if ($tok != false) {</text:p><text:p text:style-name="P501"><text:tab/><text:tab/><text:tab/>$buffer .= (floatval($tok) . &quot; &quot;);</text:p><text:p text:style-name="P501"><text:tab/><text:tab/>} else {</text:p><text:p text:style-name="P501"><text:tab/><text:tab/><text:tab/>$buffer .= &quot;0&quot; . &quot; &quot;;</text:p><text:p text:style-name="P501"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P501"/><text:p text:style-name="P501"><text:tab/><text:tab/>$tok = strtok(&quot; \r\n&quot;);</text:p><text:p text:style-name="P501"><text:tab/>}</text:p><text:p text:style-name="P501"/><text:p text:style-name="P501"><text:tab/>$buffer = trim($buffer, &quot; \r\n&quot;);</text:p><text:p text:style-name="P501"><text:tab/>$buffer .= &quot;\r\n&quot;;</text:p><text:p text:style-name="P501">}</text:p><text:p text:style-name="P501">$buffer = trim($buffer, &quot; \r\n&quot;);</text:p><text:p text:style-name="P501">$activities = $buffer;</text:p><text:p text:style-name="P501"/><text:p text:style-name="P501">/*</text:p><text:p text:style-name="P501"><text:s/>* Open database.</text:p><text:p text:style-name="P501"><text:s/>*/</text:p><text:p text:style-name="P501">open_db();</text:p><text:p text:style-name="P501"/><text:p text:style-name="P501">/*</text:p><text:p text:style-name="P501"><text:s/>* SQL query for ANN save.</text:p><text:p text:style-name="P501"><text:s/>*/</text:p><text:p text:style-name="P501">$sql = &quot;call saveAnn(&apos;&quot; . $symbol . &quot;&apos;, &quot; . $period . &quot;, &quot; . $number_of_neurons . &quot;, &apos;&quot; . $flags . &quot;&apos;, &apos;&quot; . $activities . &quot;&apos;, &quot; . $fitness . &quot;, &apos;&quot; . $weights . &quot;&apos;)&quot;;</text:p><text:p text:style-name="P501"/><text:p text:style-name="P501">$result = query_db( $sql );</text:p><text:p text:style-name="P501"/><text:p text:style-name="P501"><text:soft-page-break/>/*</text:p><text:p text:style-name="P501"><text:s/>* Close database.</text:p><text:p text:style-name="P501"><text:s/>*/</text:p><text:p text:style-name="P501">close_db();</text:p><text:p text:style-name="P501">?&gt;</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5890_1486593966"/><text:s text:c="4"/>save_training_set.php<text:bookmark-end text:name="__RefHeading___Toc5890_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P501">&lt;?php</text:p><text:p text:style-name="P501">/*******************************************************************************</text:p><text:p text:style-name="P501"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P501"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P501"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P501"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P501"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P501"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P501"><text:s/>* Copyright (C) 2008-2009 by Todor Balabanov <text:s/>( tdb@tbsoft-bg.com ) <text:s text:c="10"/>*</text:p><text:p text:style-name="P501"><text:s/>* <text:s text:c="27"/>Iliyan Zankinski ( iliyan_mf@abv.bg ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P501"><text:s/>* <text:s text:c="27"/>Galq Cirkalova <text:s text:c="2"/>( galq_cirkalova@abv.bg ) <text:s text:c="6"/>*</text:p><text:p text:style-name="P501"><text:s/>* <text:s text:c="27"/>Ivan Grozev <text:s text:c="5"/>( ivan.iliev.grozev@gmail.com ) *</text:p><text:p text:style-name="P501"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P501"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P501"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P501"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P501"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P501"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P501"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P501"><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P501"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P501"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P501"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P501"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P501"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P501"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P501"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P501">?&gt;</text:p><text:p text:style-name="P501"/><text:p text:style-name="P501"/><text:p text:style-name="P501">&lt;?php</text:p><text:p text:style-name="P501">/*</text:p><text:p text:style-name="P501"><text:s/>* Include database functions.</text:p><text:p text:style-name="P501"><text:s/>*/</text:p><text:p text:style-name="P501">include &quot;../common/db.php&quot;;</text:p><text:p text:style-name="P501"/><text:p text:style-name="P501">header(&quot;access-control-allow-origin: *&quot;);</text:p><text:p text:style-name="P501"/><text:p text:style-name="P501">/*</text:p><text:p text:style-name="P501"><text:s/>* Check input parameters.</text:p><text:p text:style-name="P501"><text:s/>*/</text:p><text:p text:style-name="P501">if ( !isset($_POST[&apos;symbol&apos;]) ) {</text:p><text:p text:style-name="P501"><text:tab/>$symbol = &quot;&quot;;</text:p><text:p text:style-name="P501">} else {</text:p><text:p text:style-name="P501"><text:tab/>$symbol = trim($_POST[&apos;symbol&apos;],&quot;\r\n&quot;);</text:p><text:p text:style-name="P501">}</text:p><text:p text:style-name="P501"/><text:p text:style-name="P501">if ( !isset($_POST[&apos;period&apos;]) ) {</text:p><text:p text:style-name="P501"><text:tab/>$period = 0;</text:p><text:p text:style-name="P501">} else {</text:p><text:p text:style-name="P501"><text:tab/>$period = intval($_POST[&apos;period&apos;]);</text:p><text:p text:style-name="P501">}</text:p><text:p text:style-name="P501"/><text:p text:style-name="P501">if ( !isset($_POST[&apos;number_of_examples&apos;]) ) {</text:p><text:p text:style-name="P501"><text:tab/>$number_of_examples = 0;</text:p><text:p text:style-name="P501">} else {</text:p><text:p text:style-name="P501"><text:tab/>$number_of_examples = intval($_POST[&apos;number_of_examples&apos;]);</text:p><text:p text:style-name="P501">}</text:p><text:p text:style-name="P501"/><text:p text:style-name="P501">if ( !isset($_POST[&apos;time&apos;]) ) {</text:p><text:p text:style-name="P501"><text:tab/>$time = &quot;&quot;;</text:p><text:p text:style-name="P501">} else {</text:p><text:p text:style-name="P501"><text:tab/>$time = trim($_POST[&apos;time&apos;],&quot;\r\n&quot;);</text:p><text:p text:style-name="P501">}</text:p><text:p text:style-name="P501"/><text:p text:style-name="P501">if ( !isset($_POST[&apos;open&apos;]) ) {</text:p><text:p text:style-name="P501"><text:tab/>$open = &quot;&quot;;</text:p><text:p text:style-name="P501">} else {</text:p><text:p text:style-name="P501"><text:tab/>$open = trim($_POST[&apos;open&apos;],&quot;\r\n&quot;);</text:p><text:p text:style-name="P501">}</text:p><text:p text:style-name="P501"/><text:p text:style-name="P501">if ( !isset($_POST[&apos;low&apos;]) ) {</text:p><text:p text:style-name="P501"><text:tab/>$low = &quot;&quot;;</text:p><text:p text:style-name="P501">} else {</text:p><text:p text:style-name="P501"><text:tab/>$low = trim($_POST[&apos;low&apos;],&quot;\r\n&quot;);</text:p><text:p text:style-name="P501">}</text:p><text:p text:style-name="P501"/><text:p text:style-name="P501">if ( !isset($_POST[&apos;high&apos;]) ) {</text:p><text:p text:style-name="P501"><text:tab/>$high = &quot;&quot;;</text:p><text:p text:style-name="P501">} else {</text:p><text:p text:style-name="P501"><text:tab/>$high = trim($_POST[&apos;high&apos;],&quot;\r\n&quot;);</text:p><text:p text:style-name="P501">}</text:p><text:p text:style-name="P501"/><text:p text:style-name="P501">if ( !isset($_POST[&apos;close&apos;]) ) {</text:p><text:p text:style-name="P501"><text:tab/>$close = &quot;&quot;;</text:p><text:p text:style-name="P501">} else {</text:p><text:p text:style-name="P501"><text:tab/>$close = trim($_POST[&apos;close&apos;],&quot;\r\n&quot;);</text:p><text:p text:style-name="P501">}</text:p><text:p text:style-name="P501"/><text:p text:style-name="P501">if ( !isset($_POST[&apos;volume&apos;]) ) {</text:p><text:p text:style-name="P501"><text:tab/>$volume = &quot;&quot;;</text:p><text:p text:style-name="P501">} else {</text:p><text:p text:style-name="P501"><text:tab/>$volume = trim($_POST[&apos;volume&apos;],&quot;\r\n&quot;);</text:p><text:p text:style-name="P501">}</text:p><text:p text:style-name="P501"/><text:p text:style-name="P501">/*</text:p><text:p text:style-name="P501"><text:s/>* Validate time array.</text:p><text:p text:style-name="P501"><text:s/>*/</text:p><text:p text:style-name="P501">$tok = strtok($time, &quot; \r\n&quot;);</text:p><text:p text:style-name="P501">$buffer = &quot;&quot;;</text:p><text:p text:style-name="P501">for ($i=0; $i&lt;$number_of_examples; $i++) {</text:p><text:p text:style-name="P501"><text:tab/>if ($tok != false) {</text:p><text:p text:style-name="P501"><text:tab/><text:tab/>$buffer .= (intval($tok) . &quot; &quot;);</text:p><text:p text:style-name="P501"><text:tab/>} else {</text:p><text:p text:style-name="P501"><text:tab/><text:tab/>$buffer .= &quot;0&quot; . &quot; &quot;;</text:p><text:p text:style-name="P501"><text:tab/>}</text:p><text:p text:style-name="P501"><text:tab/>$tok = strtok(&quot; \r\n&quot;);</text:p><text:p text:style-name="P501">}</text:p><text:p text:style-name="P501">$buffer = trim($buffer, &quot; \r\n&quot;);</text:p><text:p text:style-name="P501">$time = $buffer;</text:p><text:p text:style-name="P501"/><text:p text:style-name="P501"><text:soft-page-break/>/*</text:p><text:p text:style-name="P501"><text:s/>* Validate open array.</text:p><text:p text:style-name="P501"><text:s/>*/</text:p><text:p text:style-name="P501">$tok = strtok($open, &quot; \r\n&quot;);</text:p><text:p text:style-name="P501">$buffer = &quot;&quot;;</text:p><text:p text:style-name="P501">for ($i=0; $i&lt;$number_of_examples; $i++) {</text:p><text:p text:style-name="P501"><text:tab/>if ($tok != false) {</text:p><text:p text:style-name="P501"><text:tab/><text:tab/>$buffer .= (floatval($tok) . &quot; &quot;);</text:p><text:p text:style-name="P501"><text:tab/>} else {</text:p><text:p text:style-name="P501"><text:tab/><text:tab/>$buffer .= &quot;0&quot; . &quot; &quot;;</text:p><text:p text:style-name="P501"><text:tab/>}</text:p><text:p text:style-name="P501"><text:tab/>$tok = strtok(&quot; \r\n&quot;);</text:p><text:p text:style-name="P501">}</text:p><text:p text:style-name="P501">$buffer = trim($buffer, &quot; \r\n&quot;);</text:p><text:p text:style-name="P501">$open = $buffer;</text:p><text:p text:style-name="P501"/><text:p text:style-name="P501">/*</text:p><text:p text:style-name="P501"><text:s/>* Validate low array.</text:p><text:p text:style-name="P501"><text:s/>*/</text:p><text:p text:style-name="P501">$tok = strtok($low, &quot; \r\n&quot;);</text:p><text:p text:style-name="P501">$buffer = &quot;&quot;;</text:p><text:p text:style-name="P501">for ($i=0; $i&lt;$number_of_examples; $i++) {</text:p><text:p text:style-name="P501"><text:tab/>if ($tok != false) {</text:p><text:p text:style-name="P501"><text:tab/><text:tab/>$buffer .= (floatval($tok) . &quot; &quot;);</text:p><text:p text:style-name="P501"><text:tab/>} else {</text:p><text:p text:style-name="P501"><text:tab/><text:tab/>$buffer .= &quot;0&quot; . &quot; &quot;;</text:p><text:p text:style-name="P501"><text:tab/>}</text:p><text:p text:style-name="P501"><text:tab/>$tok = strtok(&quot; \r\n&quot;);</text:p><text:p text:style-name="P501">}</text:p><text:p text:style-name="P501">$buffer = trim($buffer, &quot; \r\n&quot;);</text:p><text:p text:style-name="P501">$low = $buffer;</text:p><text:p text:style-name="P501"/><text:p text:style-name="P501">/*</text:p><text:p text:style-name="P501"><text:s/>* Validate high array.</text:p><text:p text:style-name="P501"><text:s/>*/</text:p><text:p text:style-name="P501">$tok = strtok($high, &quot; \r\n&quot;);</text:p><text:p text:style-name="P501">$buffer = &quot;&quot;;</text:p><text:p text:style-name="P501">for ($i=0; $i&lt;$number_of_examples; $i++) {</text:p><text:p text:style-name="P501"><text:tab/>if ($tok != false) {</text:p><text:p text:style-name="P501"><text:tab/><text:tab/>$buffer .= (floatval($tok) . &quot; &quot;);</text:p><text:p text:style-name="P501"><text:tab/>} else {</text:p><text:p text:style-name="P501"><text:tab/><text:tab/>$buffer .= &quot;0&quot; . &quot; &quot;;</text:p><text:p text:style-name="P501"><text:tab/>}</text:p><text:p text:style-name="P501"><text:tab/>$tok = strtok(&quot; \r\n&quot;);</text:p><text:p text:style-name="P501">}</text:p><text:p text:style-name="P501">$buffer = trim($buffer, &quot; \r\n&quot;);</text:p><text:p text:style-name="P501">$high = $buffer;</text:p><text:p text:style-name="P501"/><text:p text:style-name="P501">/*</text:p><text:p text:style-name="P501"><text:s/>* Validate close array.</text:p><text:p text:style-name="P501"><text:s/>*/</text:p><text:p text:style-name="P501">$tok = strtok($close, &quot; \r\n&quot;);</text:p><text:p text:style-name="P501">$buffer = &quot;&quot;;</text:p><text:p text:style-name="P501">for ($i=0; $i&lt;$number_of_examples; $i++) {</text:p><text:p text:style-name="P501"><text:tab/>if ($tok != false) {</text:p><text:p text:style-name="P501"><text:tab/><text:tab/>$buffer .= (floatval($tok) . &quot; &quot;);</text:p><text:p text:style-name="P501"><text:tab/>} else {</text:p><text:p text:style-name="P501"><text:tab/><text:tab/>$buffer .= &quot;0&quot; . &quot; &quot;;</text:p><text:p text:style-name="P501"><text:tab/>}</text:p><text:p text:style-name="P501"><text:tab/>$tok = strtok(&quot; \r\n&quot;);</text:p><text:p text:style-name="P501">}</text:p><text:p text:style-name="P501">$buffer = trim($buffer, &quot; \r\n&quot;);</text:p><text:p text:style-name="P501">$close = $buffer;</text:p><text:p text:style-name="P501"/><text:p text:style-name="P501">/*</text:p><text:p text:style-name="P501"><text:s/>* Validate volume array.</text:p><text:p text:style-name="P501"><text:s/>*/</text:p><text:p text:style-name="P501">$tok = strtok($volume, &quot; \r\n&quot;);</text:p><text:p text:style-name="P501">$buffer = &quot;&quot;;</text:p><text:p text:style-name="P501">for ($i=0; $i&lt;$number_of_examples; $i++) {</text:p><text:p text:style-name="P501"><text:tab/>if ($tok != false) {</text:p><text:p text:style-name="P501"><text:tab/><text:tab/>$buffer .= (floatval($tok) . &quot; &quot;);</text:p><text:p text:style-name="P501"><text:tab/>} else {</text:p><text:p text:style-name="P501"><text:tab/><text:tab/>$buffer .= &quot;0&quot; . &quot; &quot;;</text:p><text:p text:style-name="P501"><text:tab/>}</text:p><text:p text:style-name="P501"><text:tab/>$tok = strtok(&quot; \r\n&quot;);</text:p><text:p text:style-name="P501">}</text:p><text:p text:style-name="P501">$buffer = trim($buffer, &quot; \r\n&quot;);</text:p><text:p text:style-name="P501">$volume = $buffer;</text:p><text:p text:style-name="P501"/><text:p text:style-name="P501">/*</text:p><text:p text:style-name="P501"><text:s/>* Open database.</text:p><text:p text:style-name="P501"><text:s/>*/</text:p><text:p text:style-name="P501">open_db();</text:p><text:p text:style-name="P501"/><text:p text:style-name="P501">/*</text:p><text:p text:style-name="P501"><text:s/>* Run SQL query to replace previous record or insert new one.</text:p><text:p text:style-name="P501"><text:s/>*/</text:p><text:p text:style-name="P501">$sql = &quot;call saveTrainingSet(&apos;&quot; . $symbol . &quot;&apos;, $period, $number_of_examples, &apos;&quot; . $time . &quot;&apos;, &apos;&quot; . $open . &quot;&apos;, &apos;&quot; . $low . &quot;&apos;, &apos;&quot; . $high . &quot;&apos;, &apos;&quot; . $close . &quot;&apos;, &apos;&quot; . $volume . &quot;&apos;);&quot;;</text:p><text:p text:style-name="P501">query_db( $sql );</text:p><text:p text:style-name="P501"/><text:p text:style-name="P501">/*</text:p><text:p text:style-name="P501"><text:s/>* Close database.</text:p><text:p text:style-name="P501"><text:s/>*/</text:p><text:p text:style-name="P501">close_db();</text:p><text:p text:style-name="P501">?&gt;</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5892_1486593966"/><text:s text:c="4"/>training_set_size.php<text:bookmark-end text:name="__RefHeading___Toc5892_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P501">&lt;?php</text:p><text:p text:style-name="P501">/*******************************************************************************</text:p><text:p text:style-name="P501"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P501"><text:s/>* VitoshaTrade is Distributed Artificial Neural Network trained by <text:s text:c="11"/>*</text:p><text:p text:style-name="P501"><text:s/>* Differential Evolution for prediction of Forex. Project development is in <text:s text:c="2"/>*</text:p><text:p text:style-name="P501"><text:s/>* Sofia, Bulgaria. Vitosha is a mountain massif, on the outskirts of Sofia, <text:s text:c="2"/>*</text:p><text:p text:style-name="P501"><text:s/>* the capital of Bulgaria. <text:s text:c="51"/>*</text:p><text:p text:style-name="P501"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P501"><text:s/>* Copyright (C) 2008-2009 by Todor Balabanov <text:s/>( tdb@tbsoft-bg.com ) <text:s text:c="10"/>*</text:p><text:p text:style-name="P501"><text:s/>* <text:s text:c="27"/>Iliyan Zankinski ( iliyan_mf@abv.bg ) <text:s text:c="11"/>*</text:p><text:p text:style-name="P501"><text:s/>* <text:s text:c="27"/>Galq Cirkalova <text:s text:c="2"/>( galq_cirkalova@abv.bg ) <text:s text:c="6"/>*</text:p><text:p text:style-name="P501"><text:s/>* <text:s text:c="27"/>Ivan Grozev <text:s text:c="5"/>( ivan.iliev.grozev@gmail.com ) *</text:p><text:p text:style-name="P501"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P501"><text:s/>* This program is free software: you can redistribute it and/or modify <text:s text:c="7"/>*</text:p><text:p text:style-name="P501"><text:s/>* it under the terms of the GNU General Public License as published by <text:s text:c="7"/>*</text:p><text:p text:style-name="P501"><text:s/>* the Free Software Foundation, either version 3 of the License, or <text:s text:c="10"/>*</text:p><text:p text:style-name="P501"><text:s/>* (at your option) any later version. <text:s text:c="40"/>*</text:p><text:p text:style-name="P501"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P501"><text:s/>* This program is distributed in the hope that it will be useful, <text:s text:c="12"/>*</text:p><text:p text:style-name="P501"><text:soft-page-break/><text:s/>* but WITHOUT ANY WARRANTY; without even the implied warranty of <text:s text:c="13"/>*</text:p><text:p text:style-name="P501"><text:s/>* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. <text:s/>See the <text:s text:c="14"/>*</text:p><text:p text:style-name="P501"><text:s/>* GNU General Public License for more details. <text:s text:c="31"/>*</text:p><text:p text:style-name="P501"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P501"><text:s/>* You should have received a copy of the GNU General Public License <text:s text:c="10"/>*</text:p><text:p text:style-name="P501"><text:s/>* along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. <text:s text:c="7"/>*</text:p><text:p text:style-name="P501"><text:s/>* <text:s text:c="76"/>*</text:p><text:p text:style-name="P501"><text:s/>******************************************************************************/</text:p><text:p text:style-name="P501">?&gt;</text:p><text:p text:style-name="P501"/><text:p text:style-name="P501">&lt;?php</text:p><text:p text:style-name="P501">/*</text:p><text:p text:style-name="P501"><text:s/>* Include database functions.</text:p><text:p text:style-name="P501"><text:s/>*/</text:p><text:p text:style-name="P501">include &quot;../common/db.php&quot;;</text:p><text:p text:style-name="P501"/><text:p text:style-name="P501">header(&quot;access-control-allow-origin: *&quot;);</text:p><text:p text:style-name="P501"/><text:p text:style-name="P501">/*</text:p><text:p text:style-name="P501"><text:s/>* Response output variable.</text:p><text:p text:style-name="P501"><text:s/>*/</text:p><text:p text:style-name="P501">$response = &apos;&apos;;</text:p><text:p text:style-name="P501"/><text:p text:style-name="P501">/*</text:p><text:p text:style-name="P501"><text:s/>* Check input parameters.</text:p><text:p text:style-name="P501"><text:s/>*/</text:p><text:p text:style-name="P501">if ( !isset($_POST[&apos;symbol&apos;]) ) {</text:p><text:p text:style-name="P501"><text:tab/>$symbol = &quot;&quot;;</text:p><text:p text:style-name="P501">} else {</text:p><text:p text:style-name="P501"><text:tab/>$symbol = trim($_POST[&apos;symbol&apos;],&quot;\r\n&quot;);</text:p><text:p text:style-name="P501">}</text:p><text:p text:style-name="P501"/><text:p text:style-name="P501">if ( !isset($_POST[&apos;period&apos;]) ) {</text:p><text:p text:style-name="P501"><text:tab/>$period = 0;</text:p><text:p text:style-name="P501">} else {</text:p><text:p text:style-name="P501"><text:tab/>$period = intval($_POST[&apos;period&apos;]);</text:p><text:p text:style-name="P501">}</text:p><text:p text:style-name="P501"/><text:p text:style-name="P501">/*</text:p><text:p text:style-name="P501"><text:s/>* Open database.</text:p><text:p text:style-name="P501"><text:s/>*/</text:p><text:p text:style-name="P501">open_db();</text:p><text:p text:style-name="P501"/><text:p text:style-name="P501">/*</text:p><text:p text:style-name="P501"><text:s/>* Prepare SQL query.</text:p><text:p text:style-name="P501"><text:s/>*/</text:p><text:p text:style-name="P501">$sql = &quot;select number_of_examples from training_set, currency_pairs, time_periods where training_set.currency_pairs_id=currency_pairs.id and currency_pairs.period_id=time_periods.id and currency_pairs.symbol=&apos;&quot; . $symbol . &quot;&apos; and time_periods.minutes=&quot; . $period . &quot;;&quot;;</text:p><text:p text:style-name="P501"/><text:p text:style-name="P501">/*</text:p><text:p text:style-name="P501"><text:s/>* Run SQL query.</text:p><text:p text:style-name="P501"><text:s/>*/</text:p><text:p text:style-name="P501">$result = query_db( $sql );</text:p><text:p text:style-name="P501"/><text:p text:style-name="P501">/*</text:p><text:p text:style-name="P501"><text:s/>* Check SQL query result.</text:p><text:p text:style-name="P501"><text:s/>*/</text:p><text:p text:style-name="P501">if ($result != false) {</text:p><text:p text:style-name="P501"><text:tab/>/*</text:p><text:p text:style-name="P501"><text:tab/> * Response with number of training examples.</text:p><text:p text:style-name="P501"><text:tab/> */</text:p><text:p text:style-name="P501"><text:tab/>$response .= trim($result[0][0],&quot;\r\n&quot;);</text:p><text:p text:style-name="P501"><text:tab/>$response .= &quot;\n&quot;;</text:p><text:p text:style-name="P501">} else {</text:p><text:p text:style-name="P501"><text:tab/>/*</text:p><text:p text:style-name="P501"><text:tab/> * Response with zeor available training examples.</text:p><text:p text:style-name="P501"><text:tab/> */</text:p><text:p text:style-name="P501"><text:tab/>$response .= 0;</text:p><text:p text:style-name="P501"><text:tab/>$response .= &quot;\n&quot;;</text:p><text:p text:style-name="P501">}</text:p><text:p text:style-name="P501"/><text:p text:style-name="P501">/*</text:p><text:p text:style-name="P501"><text:s/>* Close database.</text:p><text:p text:style-name="P501"><text:s/>*/</text:p><text:p text:style-name="P501">close_db();</text:p><text:p text:style-name="P501"/><text:p text:style-name="P501">/*</text:p><text:p text:style-name="P501"><text:s/>* Output response.</text:p><text:p text:style-name="P501"><text:s/>*/</text:p><text:p text:style-name="P501">echo( $response );</text:p><text:p text:style-name="P501">flush();</text:p><text:p text:style-name="P501">?&gt;</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5894_1486593966"/><text:s text:c="4"/>contactus.php3<text:bookmark-end text:name="__RefHeading___Toc5894_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P502">&lt;!DOCTYPE html&gt;</text:p><text:p text:style-name="P502">&lt;head&gt;</text:p><text:p text:style-name="P502">&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;</text:p><text:p text:style-name="P502">&lt;title&gt;.:: Vitosha Trade ::.&lt;/title&gt;</text:p><text:p text:style-name="P502">&lt;link href=&quot;styles.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot; /&gt;</text:p><text:p text:style-name="P502">&lt;/head&gt;</text:p><text:p text:style-name="P502">&lt;body style=&quot;overflow:hidden;&quot;&gt;</text:p><text:p text:style-name="P502"><text:tab/>&lt;div id=&quot;wrapper&quot;&gt;</text:p><text:p text:style-name="P502"><text:tab/><text:tab/>&lt;div id=&quot;logo&quot;&gt;</text:p><text:p text:style-name="P502"><text:tab/><text:tab/><text:tab/>&lt;ul id=&quot;menu&quot;&gt;</text:p><text:p text:style-name="P502"><text:tab/><text:tab/><text:tab/><text:tab/>&lt;li&gt;&lt;a href=&quot;index.php&quot; title=&quot;Home Page&quot;&gt;Home Page&lt;/a&gt;&lt;/li&gt;</text:p><text:p text:style-name="P502"><text:tab/><text:tab/><text:tab/><text:tab/>&lt;li class=&quot;spacer&quot;&gt;&amp;nbsp;&lt;/li&gt;</text:p><text:p text:style-name="P502"><text:tab/><text:tab/><text:tab/><text:tab/>&lt;li&gt;&lt;a href=&quot;products.php&quot; title=&quot;Products Information&quot;&gt;Products Information&lt;/a&gt;&lt;/li&gt;</text:p><text:p text:style-name="P502"><text:tab/><text:tab/><text:tab/><text:tab/>&lt;li class=&quot;spacer&quot;&gt;&amp;nbsp;&lt;/li&gt;</text:p><text:p text:style-name="P502"><text:tab/><text:tab/><text:tab/><text:tab/>&lt;li&gt;&lt;a class=&quot;current&quot; href=&quot;contactus.php&quot; title=&quot;Contact Us&quot;&gt;Contact Us&lt;/a&gt;&lt;/li&gt;</text:p><text:p text:style-name="P502"><text:tab/><text:tab/><text:tab/>&lt;/ul&gt;</text:p><text:p text:style-name="P502"><text:tab/><text:tab/>&lt;/div&gt;</text:p><text:p text:style-name="P502"><text:tab/><text:tab/>&lt;div id=&quot;header&quot;&gt;</text:p><text:p text:style-name="P502"><text:tab/><text:tab/><text:tab/>&lt;div id=&quot;slogan&quot;&gt;The Ultimate&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; Forex Prediction&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; </text:p><text:p text:style-name="P502"><text:tab/><text:tab/><text:tab/>&amp;nbsp; &amp;nbsp; &amp;nbsp; Indicator...&lt;/div&gt;</text:p><text:p text:style-name="P502"><text:tab/><text:tab/>&lt;/div&gt;</text:p><text:p text:style-name="P502"><text:tab/><text:tab/>&lt;div class=&quot;innerContainerTop&quot;&gt;&lt;/div&gt;</text:p><text:p text:style-name="P502"><text:tab/><text:tab/>&lt;div class=&quot;innerContainer&quot;&gt;</text:p><text:p text:style-name="P502"><text:tab/><text:tab/><text:tab/>&lt;h1 style=&quot;margin-top:-10px;&quot;&gt;Contact Us&lt;/h1&gt;</text:p><text:p text:style-name="P502"><text:tab/><text:tab/><text:tab/>&lt;p&gt;</text:p><text:p text:style-name="P502"><text:tab/><text:tab/><text:tab/><text:tab/>Velbazhd Software - Bulgarian Software Company</text:p><text:p text:style-name="P502"><text:tab/><text:tab/><text:tab/><text:tab/>&lt;br /&gt;&lt;br /&gt;</text:p><text:p text:style-name="P502"><text:tab/><text:tab/><text:tab/><text:tab/>Todor Balabanov, CEO&lt;br /&gt;</text:p><text:p text:style-name="P502"><text:tab/><text:tab/><text:tab/><text:tab/>Email: &lt;a href=&quot;mailto:todor.balabanov@gmail.com&quot; title=&quot;VitoshaTrade Email Request&quot;&gt;todor.balabanov gmail com&lt;/a&gt;&lt;br /&gt;</text:p><text:p text:style-name="P502"><text:tab/><text:tab/><text:tab/><text:tab/>Phone: +359 89 8237103</text:p><text:p text:style-name="P502"><text:tab/><text:tab/><text:tab/>&lt;/p&gt; </text:p><text:p text:style-name="P502"><text:tab/><text:tab/>&lt;/div&gt;</text:p><text:p text:style-name="P502"><text:tab/><text:tab/>&lt;div class=&quot;innerContainerBottom&quot;&gt;&lt;/div&gt;</text:p><text:p text:style-name="P502"><text:tab/><text:tab/>&lt;div class=&quot;clearer&quot;&gt;&lt;/div&gt;</text:p><text:p text:style-name="P502"><text:soft-page-break/><text:tab/><text:tab/></text:p><text:p text:style-name="P502"><text:tab/><text:tab/>&lt;div id=&quot;footer&quot;&gt;</text:p><text:p text:style-name="P502"><text:tab/><text:tab/><text:tab/>&lt;div class=&quot;footerLeft&quot;&gt;</text:p><text:p text:style-name="P502"><text:tab/><text:tab/><text:tab/> <text:tab/>Design by &lt;a href=&quot;http://www.mxworkz.com/&quot; target=&quot;_blank&quot; title=&quot;MXWorkz Creative&quot;&gt;MXWorkz&lt;/a&gt;</text:p><text:p text:style-name="P502"><text:tab/><text:tab/><text:tab/>&lt;/div&gt;</text:p><text:p text:style-name="P502"><text:tab/><text:tab/><text:tab/>&lt;div class=&quot;copy&quot;&gt;This website and its content is intellectual pfoperty of &lt;strong&gt;Velbazhd Software &amp;copy;&lt;/strong&gt;. &lt;/div&gt;</text:p><text:p text:style-name="P502"><text:tab/><text:tab/><text:tab/>&lt;div class=&quot;footerRight&quot;&gt;</text:p><text:p text:style-name="P502"><text:tab/><text:tab/><text:tab/><text:tab/> &lt;a href=&quot;index.php&quot; title=&quot;Home&quot;&gt;Home&lt;/a&gt; &amp;nbsp; &amp;nbsp; </text:p><text:p text:style-name="P502"><text:tab/><text:tab/><text:tab/><text:tab/> &lt;a href=&quot;products.php&quot; title=&quot;Products Information&quot;&gt;Products Information&lt;/a&gt; &amp;nbsp; &amp;nbsp; </text:p><text:p text:style-name="P502"><text:tab/><text:tab/><text:tab/><text:tab/> &lt;a href=&quot;contactus.php&quot; title=&quot;Contact Us&quot;&gt;Contact Us&lt;/a&gt;</text:p><text:p text:style-name="P502"><text:tab/><text:tab/><text:tab/>&lt;/div&gt;</text:p><text:p text:style-name="P502"><text:tab/><text:tab/>&lt;/div&gt;</text:p><text:p text:style-name="P502"><text:tab/>&lt;/div&gt;</text:p><text:p text:style-name="P502">&lt;/body&gt;</text:p><text:p text:style-name="P502">&lt;/html&gt;</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5896_1486593966"/><text:s text:c="4"/>index.php3<text:bookmark-end text:name="__RefHeading___Toc5896_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P503">&lt;?php</text:p><text:p text:style-name="P503">/*</text:p><text:p text:style-name="P503"><text:s/>* Include database functions.</text:p><text:p text:style-name="P503"><text:s/>*/</text:p><text:p text:style-name="P503">include &quot;./common/db.php&quot;;</text:p><text:p text:style-name="P503"/><text:p text:style-name="P503">/**</text:p><text:p text:style-name="P503"><text:s/>* Order e-mail address constant.</text:p><text:p text:style-name="P503"><text:s/>*/</text:p><text:p text:style-name="P503">define(&quot;ORDER_EMAIL&quot;, &quot;todor.balabanov@gmail.com&quot;);</text:p><text:p text:style-name="P503"/><text:p text:style-name="P503">/**</text:p><text:p text:style-name="P503"><text:s/>* ANN list results per page.</text:p><text:p text:style-name="P503"><text:s/>*/</text:p><text:p text:style-name="P503">define(&quot;PAGES_BEFORE_AND_AFTER&quot;, 5);</text:p><text:p text:style-name="P503"/><text:p text:style-name="P503">/**</text:p><text:p text:style-name="P503"><text:s/>* ANN list results per page.</text:p><text:p text:style-name="P503"><text:s/>*/</text:p><text:p text:style-name="P503">define(&quot;RESULTS_PER_PAGE&quot;, 5);</text:p><text:p text:style-name="P503"/><text:p text:style-name="P503">/*</text:p><text:p text:style-name="P503"><text:s/>* Check input parameters.</text:p><text:p text:style-name="P503"><text:s/>*/</text:p><text:p text:style-name="P503">if ( !isset($_POST[&apos;first_name&apos;]) ) {</text:p><text:p text:style-name="P503"><text:tab/>$first_name = &quot;&quot;;</text:p><text:p text:style-name="P503">} else {</text:p><text:p text:style-name="P503"><text:tab/>$first_name = trim($_POST[&apos;first_name&apos;]);</text:p><text:p text:style-name="P503">}</text:p><text:p text:style-name="P503"/><text:p text:style-name="P503">if ( !isset($_POST[&apos;last_name&apos;]) ) {</text:p><text:p text:style-name="P503"><text:tab/>$last_name = &quot;&quot;;</text:p><text:p text:style-name="P503">} else {</text:p><text:p text:style-name="P503"><text:tab/>$last_name = trim($_POST[&apos;last_name&apos;]);</text:p><text:p text:style-name="P503">}</text:p><text:p text:style-name="P503"/><text:p text:style-name="P503">if ( !isset($_POST[&apos;country_code&apos;]) ) {</text:p><text:p text:style-name="P503"><text:tab/>$country_code = &quot;&quot;;</text:p><text:p text:style-name="P503">} else {</text:p><text:p text:style-name="P503"><text:tab/>$country_code = trim($_POST[&apos;country_code&apos;]);</text:p><text:p text:style-name="P503">}</text:p><text:p text:style-name="P503"/><text:p text:style-name="P503">if ( !isset($_POST[&apos;area_code&apos;]) ) {</text:p><text:p text:style-name="P503"><text:tab/>$area_code = &quot;&quot;;</text:p><text:p text:style-name="P503">} else {</text:p><text:p text:style-name="P503"><text:tab/>$area_code = trim($_POST[&apos;area_code&apos;]);</text:p><text:p text:style-name="P503">}</text:p><text:p text:style-name="P503"/><text:p text:style-name="P503">if ( !isset($_POST[&apos;phone_number&apos;]) ) {</text:p><text:p text:style-name="P503"><text:tab/>$phone_number = &quot;&quot;;</text:p><text:p text:style-name="P503">} else {</text:p><text:p text:style-name="P503"><text:tab/>$phone_number = trim($_POST[&apos;phone_number&apos;]);</text:p><text:p text:style-name="P503">}</text:p><text:p text:style-name="P503"/><text:p text:style-name="P503">if ( !isset($_POST[&apos;email&apos;]) ) {</text:p><text:p text:style-name="P503"><text:tab/>$email = &quot;&quot;;</text:p><text:p text:style-name="P503">} else {</text:p><text:p text:style-name="P503"><text:tab/>$email = trim($_POST[&apos;email&apos;]);</text:p><text:p text:style-name="P503">}</text:p><text:p text:style-name="P503"/><text:p text:style-name="P503">if ( !isset($_GET[&apos;offset&apos;]) ) {</text:p><text:p text:style-name="P503"><text:tab/>$offset = 0;</text:p><text:p text:style-name="P503">} else {</text:p><text:p text:style-name="P503"><text:tab/>$offset = intval($_GET[&apos;offset&apos;]);</text:p><text:p text:style-name="P503">}</text:p><text:p text:style-name="P503"/><text:p text:style-name="P503">/*</text:p><text:p text:style-name="P503"><text:s/>* Assemble order message.</text:p><text:p text:style-name="P503"><text:s/>*/</text:p><text:p text:style-name="P503">$message = &quot;&quot;;</text:p><text:p text:style-name="P503">$message .= $first_name;</text:p><text:p text:style-name="P503">$message .= &quot;\n&quot;;</text:p><text:p text:style-name="P503">$message .= $last_name;</text:p><text:p text:style-name="P503">$message .= &quot;\n&quot;;</text:p><text:p text:style-name="P503">$message .= &quot;+&quot; . $country_code . $area_code . $phone_number;</text:p><text:p text:style-name="P503">$message .= &quot;\n&quot;;</text:p><text:p text:style-name="P503">$message .= $email;</text:p><text:p text:style-name="P503">$message .= &quot;\n&quot;;</text:p><text:p text:style-name="P503">if ($email != &apos;&apos;) {</text:p><text:p text:style-name="P503"><text:tab/>mail(ORDER_EMAIL, &apos;VitoshaTrade order!&apos;, $message, &quot;From: &quot; . $email . &quot;\nReply-to: &quot; . $email);</text:p><text:p text:style-name="P503">}</text:p><text:p text:style-name="P503"/><text:p text:style-name="P503">/*</text:p><text:p text:style-name="P503"><text:s/>* Open database.</text:p><text:p text:style-name="P503"><text:s/>*/</text:p><text:p text:style-name="P503">open_db();</text:p><text:p text:style-name="P503"/><text:p text:style-name="P503">$number_of_pages = 0;</text:p><text:p text:style-name="P503"/><text:p text:style-name="P503">/*</text:p><text:p text:style-name="P503"><text:s/>* Prepare SQL query.</text:p><text:p text:style-name="P503"><text:s/>*/</text:p><text:p text:style-name="P503">$sql = &quot;select ann.id, currency_pairs.symbol, time_periods.minutes, ann.fitness from ann, ann_kind, currency_pairs, time_periods where ann.ann_kind_id=ann_kind.id and ann_kind.currency_pairs_id=currency_pairs.id and currency_pairs.period_id=time_periods.id order by ann.fitness asc;&quot;;</text:p><text:p text:style-name="P503"/><text:p text:style-name="P503">/*</text:p><text:p text:style-name="P503"><text:s/>* Run SQL query.</text:p><text:p text:style-name="P503"><text:s/>*/</text:p><text:p text:style-name="P503">$result = query_db( $sql );</text:p><text:p text:style-name="P503"/><text:p text:style-name="P503">/*</text:p><text:p text:style-name="P503"><text:soft-page-break/><text:s/>* Check SQL query result.</text:p><text:p text:style-name="P503"><text:s/>*/</text:p><text:p text:style-name="P503">if ($result != false) {</text:p><text:p text:style-name="P503"><text:tab/>$number_of_pages = (int)ceil((double)count($result)/(double)RESULTS_PER_PAGE);</text:p><text:p text:style-name="P503">}</text:p><text:p text:style-name="P503"/><text:p text:style-name="P503">/*</text:p><text:p text:style-name="P503"><text:s/>* Close database.</text:p><text:p text:style-name="P503"><text:s/>*/</text:p><text:p text:style-name="P503">close_db();</text:p><text:p text:style-name="P503"/><text:p text:style-name="P503">if ($offset &lt; 0) {</text:p><text:p text:style-name="P503"><text:tab/>$offset = 0;</text:p><text:p text:style-name="P503">}</text:p><text:p text:style-name="P503">if ($offset &gt;= $number_of_pages) {</text:p><text:p text:style-name="P503"><text:tab/>$offset = $number_of_pages-1;</text:p><text:p text:style-name="P503">}</text:p><text:p text:style-name="P503">?&gt;</text:p><text:p text:style-name="P503"/><text:p text:style-name="P503">&lt;!DOCTYPE html&gt;</text:p><text:p text:style-name="P503">&lt;head&gt;</text:p><text:p text:style-name="P503">&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;</text:p><text:p text:style-name="P503">&lt;title&gt;.:: Vitosha Trade ::.&lt;/title&gt;</text:p><text:p text:style-name="P503">&lt;link href=&quot;styles.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot; /&gt;</text:p><text:p text:style-name="P503">&lt;/head&gt;</text:p><text:p text:style-name="P503"/><text:p text:style-name="P503">﻿&lt;body style=&quot;overflow:hidden;&quot;&gt;</text:p><text:p text:style-name="P503"><text:tab/>&lt;div id=&quot;wrapper&quot;&gt;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/>&lt;div id=&quot;logo&quot;&gt;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/><text:tab/>&lt;ul id=&quot;menu&quot;&gt;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/><text:tab/><text:tab/>&lt;li&gt;&lt;a class=&quot;current&quot; href=&quot;index.php&quot; title=&quot;Home Page&quot;&gt;Home Page&lt;/a&gt;&lt;/li&gt;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/><text:tab/><text:tab/>&lt;li class=&quot;spacer&quot;&gt;&amp;nbsp;&lt;/li&gt;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/><text:tab/><text:tab/>&lt;li&gt;&lt;a href=&quot;products.php&quot; title=&quot;Products Information&quot;&gt;Products Information&lt;/a&gt;&lt;/li&gt;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/><text:tab/><text:tab/>&lt;li class=&quot;spacer&quot;&gt;&amp;nbsp;&lt;/li&gt;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/><text:tab/><text:tab/>&lt;li&gt;&lt;a href=&quot;contactus.php&quot; title=&quot;Contact Us&quot;&gt;Contact Us&lt;/a&gt;&lt;/li&gt;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/><text:tab/>&lt;/ul&gt;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/>&lt;/div&gt;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/>&lt;div id=&quot;header&quot;&gt;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/><text:tab/>&lt;div id=&quot;slogan&quot;&gt;The Ultimate&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; Forex Prediction&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; </text:p><text:p text:style-name="P503"><text:tab/><text:tab/><text:tab/>&amp;nbsp; &amp;nbsp; &amp;nbsp; Indicator...&lt;/div&gt;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/>&lt;/div&gt;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/>&lt;div id=&quot;home_about_bevel&quot;&gt;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/><text:tab/>&lt;h1&gt;About Vitosha Trade&lt;/h1&gt;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/><text:tab/>&lt;div class=&quot;home_bevel_txt&quot;&gt;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/><text:tab/><text:tab/>VitoshaTrade &amp;reg; is &lt;a href=&quot;http://en.wikipedia.org/wiki/Foreign_exchange_market&quot;&gt;Forex&lt;/a&gt; prediction indicator that can be used only with &lt;a href=&quot;http://www.metatrader4.com/&quot;&gt;MetaTrader 4&lt;/a&gt; trading <text:s/>platform. </text:p><text:p text:style-name="P503"><text:tab/><text:tab/><text:tab/><text:tab/>The indicator is based on Artificial Neural Networks trained by Differential Evolution algorithm in </text:p><text:p text:style-name="P503"><text:tab/><text:tab/><text:tab/><text:tab/>distributed environment.</text:p><text:p text:style-name="P503"><text:tab/><text:tab/><text:tab/>&lt;/div&gt;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/>&lt;/div&gt;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/>&lt;div id=&quot;home_purchase_bevel&quot;&gt;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/><text:tab/>&lt;h1&gt;Purchase Information&lt;/h1&gt;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/><text:tab/>&lt;div class=&quot;home_bevel_txt&quot;&gt;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/><text:tab/><text:tab/>VitoshaTrade &amp;reg; comes on the price of &amp;euro;9999 (1/100 company shares included in the price). To make your order we would like to ask you fill </text:p><text:p text:style-name="P503"><text:tab/><text:tab/><text:tab/><text:tab/>out the &lt;a href=&quot;order.php&quot; title=&quot;Order Vitosha Trade&quot;&gt;order form&lt;/a&gt;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/><text:tab/>&lt;/div&gt;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/>&lt;/div&gt;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/>&lt;div id=&quot;home_contact_bevel&quot;&gt;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/><text:tab/>&lt;h1&gt;Contact Us&lt;/h1&gt;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/><text:tab/>&lt;div class=&quot;home_bevel_txt&quot;&gt;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/><text:tab/><text:tab/>Velbazhd Software - Bulgarian Software Company</text:p><text:p text:style-name="P503"><text:tab/><text:tab/><text:tab/><text:tab/>&lt;br /&gt;&lt;br /&gt;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/><text:tab/><text:tab/>Todor Balabanov, CEO&lt;br /&gt;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/><text:tab/><text:tab/>Email: &lt;a href=&quot;mailto:todor.balabanov@gmail.com&quot; title=&quot;VitoshaTrade Email Request&quot;&gt;todor.balabanov gmail com&lt;/a&gt;&lt;br /&gt;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/><text:tab/><text:tab/>Phone: +359 89 8237103</text:p><text:p text:style-name="P503"><text:tab/><text:tab/><text:tab/>&lt;/div&gt;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/>&lt;/div&gt;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/>&lt;div class=&quot;clearer&quot;&gt;&lt;/div&gt;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/>&lt;div id=&quot;grid_home&quot;&gt;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/><text:tab/>&lt;!-- &lt;h1&gt;&lt;center&gt;Artificial Neural Networks List&lt;/center&gt;&lt;/h1&gt; --&gt;</text:p><text:p text:style-name="P503"/><text:p text:style-name="P503"><text:tab/><text:tab/><text:tab/>&lt;table class=&quot;tableBorder&quot; style=&quot;width:100%;padding:1;border-spcacing:1;border-collapse:separate;&quot;&gt;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/><text:tab/><text:tab/>&lt;tr class=&quot;tableHeading&quot;&gt;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;th&gt;ID&lt;/th&gt;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;th&gt;Symbol&lt;/th&gt;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;th&gt;Period&lt;/th&gt;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;th&gt;Fitness&lt;/th&gt;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/><text:tab/><text:tab/>&lt;/tr&gt;</text:p><text:p text:style-name="P503"/><text:p text:style-name="P503">&lt;!-- Dynamic table content. <text:s/>--&gt;</text:p><text:p text:style-name="P503">&lt;?php</text:p><text:p text:style-name="P503">if ($result != false) {</text:p><text:p text:style-name="P503"><text:tab/>for ($i=$offset*RESULTS_PER_PAGE,$c=0; $i&lt;(($offset+1)*RESULTS_PER_PAGE)&amp;&amp;$i&lt;count($result); $i++,$c++) {</text:p><text:p text:style-name="P503"><text:tab/><text:tab/>switch( $result[$i][2] ){</text:p><text:p text:style-name="P503"><text:tab/><text:tab/>case 1: $result[$i][2] = &quot;M1&quot;;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/>case 5: $result[$i][2] = &quot;M5&quot;;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/>case 15: $result[$i][2] = &quot;M15&quot;;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/>case 30: $result[$i][2] = &quot;M30&quot;;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/>case 60: $result[$i][2] = &quot;H1&quot;;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/>case 240: $result[$i][2] = &quot;H4&quot;;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/>case 1440: $result[$i][2] = &quot;D1&quot;;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/>case 10080: $result[$i][2] = &quot;W1&quot;;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/>case 43200: $result[$i][2] = &quot;MN1&quot;;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/><text:tab/>break;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/>default: $result[$i][2] = &quot;N/A&quot;;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P503">?&gt;</text:p><text:p text:style-name="P503"/><text:p text:style-name="P503">&lt;tr class=&quot;&lt;?php echo( (($c%2)==0?&apos;tableRow&apos;:&apos;tableRowAlternative&apos;) );?&gt;&quot;&gt;</text:p><text:p text:style-name="P503">&lt;td&gt;&lt;?php echo($result[$i][0]);?&gt;&lt;/td&gt;</text:p><text:p text:style-name="P503">&lt;td&gt;&lt;?php echo($result[$i][1]);?&gt;&lt;/td&gt;</text:p><text:p text:style-name="P503">&lt;td&gt;&lt;?php echo($result[$i][2]);?&gt;&lt;/td&gt;</text:p><text:p text:style-name="P503">&lt;td&gt;&lt;?php echo($result[$i][3]);?&gt;&lt;/td&gt;</text:p><text:p text:style-name="P503">&lt;/tr&gt;</text:p><text:p text:style-name="P503"/><text:p text:style-name="P503">&lt;?php</text:p><text:p text:style-name="P503"><text:tab/>}</text:p><text:p text:style-name="P503">}</text:p><text:p text:style-name="P503">?&gt;</text:p><text:p text:style-name="P503">&lt;!-- Dynamic table content. <text:s/>--&gt;</text:p><text:p text:style-name="P503"/><text:p text:style-name="P503"><text:tab/><text:tab/><text:tab/>&lt;/table&gt;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/><text:tab/>&lt;br /&gt;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/><text:tab/>&lt;div class=&quot;paging&quot;&gt;</text:p><text:p text:style-name="P503"/><text:p text:style-name="P503">&lt;a href=&quot;?offset=0&quot; title=&quot;First Page&quot;&gt;&lt;img src=&quot;images/paging_first.jpg&quot; style=&quot;border:0;&quot; alt=&quot;First Page&quot; /&gt;&lt;/a&gt; <text:s/>&amp;nbsp;</text:p><text:p text:style-name="P503"><text:soft-page-break/>&lt;a href=&quot;?offset=&lt;?php echo($offset-1);?&gt;&quot; title=&quot;Previous&quot;&gt;&lt;img src=&quot;images/left_arrow.jpg&quot; style=&quot;border:0;&quot; alt=&quot;Previous&quot; /&gt;&lt;/a&gt; <text:s/>&amp;nbsp; </text:p><text:p text:style-name="P503"/><text:p text:style-name="P503">&lt;?php</text:p><text:p text:style-name="P503">if ($result != false) {</text:p><text:p text:style-name="P503"><text:tab/>for ($i=$offset-PAGES_BEFORE_AND_AFTER; $i&lt;=$offset+PAGES_BEFORE_AND_AFTER; $i++) {</text:p><text:p text:style-name="P503"><text:tab/><text:tab/>if ($i&lt;0 || $i&gt;=$number_of_pages) {</text:p><text:p text:style-name="P503"><text:tab/><text:tab/><text:tab/>continue;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/>}</text:p><text:p text:style-name="P503">?&gt;</text:p><text:p text:style-name="P503"/><text:p text:style-name="P503">&lt;a href=&quot;?offset=&lt;?php echo($i);?&gt;&quot;&gt;&lt;?php echo($i+1);?&gt;&lt;/a&gt;&amp;nbsp;</text:p><text:p text:style-name="P503"/><text:p text:style-name="P503">&lt;?php</text:p><text:p text:style-name="P503"><text:tab/>}</text:p><text:p text:style-name="P503">}</text:p><text:p text:style-name="P503">?&gt;</text:p><text:p text:style-name="P503"/><text:p text:style-name="P503">&lt;a href=&quot;?offset=&lt;?php echo($offset+1);?&gt;&quot; title=&quot;Next&quot;&gt;&lt;img src=&quot;images/right_arrow.jpg&quot; style=&quot;border:0;&quot; alt=&quot;Next&quot; /&gt;&lt;/a&gt; <text:s/>&amp;nbsp;</text:p><text:p text:style-name="P503">&lt;a href=&quot;?offset=&lt;?php echo($number_of_pages-1);?&gt;&quot; title=&quot;Last Page&quot;&gt;&lt;img src=&quot;images/paging_last.jpg&quot; style=&quot;border:0;&quot; alt=&quot;Last Page&quot; /&gt;&lt;/a&gt; <text:s/>&amp;nbsp; </text:p><text:p text:style-name="P503"/><text:p text:style-name="P503"><text:tab/><text:tab/><text:tab/>&lt;/div&gt;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/>&lt;/div&gt;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/>&lt;div class=&quot;clearer&quot;&gt;&lt;/div&gt;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/>&lt;div id=&quot;footer&quot;&gt;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/><text:tab/>&lt;div class=&quot;footerLeft&quot;&gt;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/><text:tab/> <text:tab/>Design by &lt;a href=&quot;http://www.mxworkz.com/&quot; target=&quot;_blank&quot; title=&quot;MXWorkz Creative&quot;&gt;MXWorkz&lt;/a&gt;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/><text:tab/>&lt;/div&gt;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/><text:tab/>&lt;div class=&quot;copy&quot;&gt;This website and its content is intellectual pfoperty of &lt;strong&gt;Velbazhd Software &amp;copy;&lt;/strong&gt;. &lt;/div&gt;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/><text:tab/>&lt;div class=&quot;footerRight&quot;&gt;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/><text:tab/><text:tab/> &lt;a href=&quot;index.php&quot; title=&quot;Home&quot;&gt;Home&lt;/a&gt; &amp;nbsp; &amp;nbsp; </text:p><text:p text:style-name="P503"><text:tab/><text:tab/><text:tab/><text:tab/> &lt;a href=&quot;products.php&quot; title=&quot;Products Information&quot;&gt;Products Information&lt;/a&gt; &amp;nbsp; &amp;nbsp; </text:p><text:p text:style-name="P503"><text:tab/><text:tab/><text:tab/><text:tab/> &lt;a href=&quot;contactus.php&quot; title=&quot;Contact Us&quot;&gt;Contact Us&lt;/a&gt;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/><text:tab/>&lt;/div&gt;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/>&lt;/div&gt;</text:p><text:p text:style-name="P503"><text:tab/>&lt;/div&gt;</text:p><text:p text:style-name="P503">&lt;/body&gt;</text:p><text:p text:style-name="P503">&lt;/html&gt;</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5898_1486593966"/><text:s text:c="4"/>order.php3<text:bookmark-end text:name="__RefHeading___Toc5898_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P503">&lt;!DOCTYPE html&gt;</text:p><text:p text:style-name="P503">&lt;head&gt;</text:p><text:p text:style-name="P503">&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;</text:p><text:p text:style-name="P503">&lt;title&gt;.:: Vitosha Trade - Order Vitosha Trade ::.&lt;/title&gt;</text:p><text:p text:style-name="P503">&lt;link href=&quot;styles.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot; /&gt;</text:p><text:p text:style-name="P503">&lt;/head&gt;</text:p><text:p text:style-name="P503"/><text:p text:style-name="P503">&lt;body style=&quot;overflow:hidden;&quot;&gt;</text:p><text:p text:style-name="P503"><text:tab/>&lt;div id=&quot;wrapper&quot;&gt;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/>&lt;div id=&quot;logo&quot;&gt;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/><text:tab/>&lt;ul id=&quot;menu&quot;&gt;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/><text:tab/><text:tab/>&lt;li&gt;&lt;a href=&quot;index.php&quot; title=&quot;Home Page&quot;&gt;Home Page&lt;/a&gt;&lt;/li&gt;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/><text:tab/><text:tab/>&lt;li class=&quot;spacer&quot;&gt;&amp;nbsp;&lt;/li&gt;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/><text:tab/><text:tab/>&lt;li&gt;&lt;a href=&quot;products.php&quot; title=&quot;Products Information&quot;&gt;Products Information&lt;/a&gt;&lt;/li&gt;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/><text:tab/><text:tab/>&lt;li class=&quot;spacer&quot;&gt;&amp;nbsp;&lt;/li&gt;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/><text:tab/><text:tab/>&lt;li&gt;&lt;a href=&quot;contactus.php&quot; title=&quot;Contact Us&quot;&gt;Contact Us&lt;/a&gt;&lt;/li&gt;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/><text:tab/>&lt;/ul&gt;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/>&lt;/div&gt;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/>&lt;div id=&quot;header&quot;&gt;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/><text:tab/>&lt;div id=&quot;slogan&quot;&gt;The Ultimate&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; Forex Prediction&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; </text:p><text:p text:style-name="P503"><text:tab/><text:tab/><text:tab/>&amp;nbsp; &amp;nbsp; &amp;nbsp; Indicator...&lt;/div&gt;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/>&lt;/div&gt;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/>&lt;div class=&quot;innerContainerTop&quot;&gt;&lt;/div&gt;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/>&lt;div class=&quot;innerContainer&quot;&gt;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/><text:tab/>&lt;h1 style=&quot;margin-top:-10px;&quot;&gt;Order Vitosha Trade&lt;/h1&gt;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/><text:tab/>&lt;form action=&quot;#&quot; class=&quot;orderform&quot; method=&quot;post&quot;&gt;</text:p><text:p text:style-name="P503"><text:s text:c="12"/><text:tab/>&lt;fieldset id=&quot;general_details&quot;&gt;</text:p><text:p text:style-name="P503"><text:s text:c="16"/><text:tab/>&lt;ul&gt;</text:p><text:p text:style-name="P503"><text:s text:c="20"/><text:tab/>&lt;li&gt;</text:p><text:p text:style-name="P503"><text:s text:c="28"/>&lt;label for=&quot;title&quot;&gt;Title &lt;/label&gt; </text:p><text:p text:style-name="P503"><text:s text:c="28"/>&lt;select id=&quot;title&quot; class=&quot;shortInput&quot; title=&quot;Title&quot; name=&quot;title&quot;&gt;</text:p><text:p text:style-name="P503"><text:s text:c="32"/>&lt;option value=&quot;Mr&quot; selected=&quot;selected&quot;&gt;Mr.&lt;/option&gt;</text:p><text:p text:style-name="P503"><text:s text:c="32"/>&lt;option value=&quot;Ms&quot;&gt;Ms.&lt;/option&gt;</text:p><text:p text:style-name="P503"><text:s text:c="32"/>&lt;option value=&quot;Mrs&quot;&gt;Mrs&lt;/option&gt;</text:p><text:p text:style-name="P503"><text:s text:c="32"/>&lt;option value=&quot;Miss&quot;&gt;Miss&lt;/option&gt;</text:p><text:p text:style-name="P503"><text:s text:c="32"/>&lt;option value=&quot;Dr&quot;&gt;Dr.&lt;/option&gt;</text:p><text:p text:style-name="P503"><text:s text:c="28"/>&lt;/select&gt;</text:p><text:p text:style-name="P503"><text:s text:c="24"/>&lt;/li&gt; <text:s text:c="11"/></text:p><text:p text:style-name="P503"><text:s text:c="24"/>&lt;li&gt;&lt;label for=&quot;first_name&quot;&gt;First Name &lt;/label&gt;&lt;input id=&quot;first_name&quot; type=&quot;text&quot; title=&quot;First Name&quot; name=&quot;first_name&quot;/&gt;&lt;/li&gt;</text:p><text:p text:style-name="P503"><text:s text:c="24"/>&lt;li&gt;&lt;label for=&quot;last_name&quot;&gt;Last Name &lt;/label&gt;&lt;input id=&quot;last_name&quot; type=&quot;text&quot; title=&quot;Last Name&quot; name=&quot;last_name&quot;/&gt;&lt;/li&gt;</text:p><text:p text:style-name="P503"><text:s text:c="24"/>&lt;li&gt;</text:p><text:p text:style-name="P503"><text:s text:c="24"/><text:tab/>&lt;label for=&quot;country_code&quot; &gt;Phone Number &lt;/label&gt;&lt;input id=&quot;country_code&quot; type=&quot;text&quot; class=&quot;shortInput&quot; value=&quot;Country&quot; onfocus=&quot;this.value=&apos;&apos;;&quot; title=&quot;Country Code&quot; name=&quot;country_code&quot;/&gt; </text:p><text:p text:style-name="P503"><text:s text:c="28"/>&lt;input id=&quot;area_code&quot; type=&quot;text&quot; class=&quot;shortInput&quot; value=&quot;Area&quot; onfocus=&quot;this.value=&apos;&apos;;&quot; title=&quot;Area Code&quot; name=&quot;area_code&quot;/&gt;</text:p><text:p text:style-name="P503"><text:s text:c="28"/>&lt;input id=&quot;phone_number&quot; type=&quot;text&quot; value=&quot;Phone Number&quot; class=&quot;phoneField&quot; onfocus=&quot;this.value=&apos;&apos;;&quot; title=&quot;Phone Number&quot; name=&quot;phone_number&quot;/&gt;</text:p><text:p text:style-name="P503"><text:s text:c="24"/>&lt;/li&gt;</text:p><text:p text:style-name="P503"><text:s text:c="24"/>&lt;li&gt;&lt;label for=&quot;email&quot; &gt;Email Address &lt;/label&gt;&lt;input id=&quot;email&quot; type=&quot;text&quot; title=&quot;Email Address&quot; name=&quot;email&quot;/&gt;&lt;/li&gt;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;li&gt;&lt;label class=&quot;labelLong&quot;&gt;All information is required because all orders will be confirmed by phone call, billing details and the software itself will be sent by email.&lt;/label&gt;&lt;/li&gt;</text:p><text:p text:style-name="P503"><text:s text:c="20"/>&lt;/ul&gt; </text:p><text:p text:style-name="P503"><text:s text:c="16"/>&lt;/fieldset&gt;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/><text:tab/><text:tab/>&lt;div class=&quot;submit&quot;&gt;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/><text:tab/><text:tab/><text:tab/>&lt;input type=&quot;button&quot; value=&quot;Send Order&quot; title=&quot;Send Order&quot; class=&quot;btn&quot; onmouseover=&quot;this.className=&apos;btn btnHov&apos;&quot; onmouseout=&quot;this.className=&apos;btn&apos;&quot;/&gt; </text:p><text:p text:style-name="P503"><text:tab/><text:tab/><text:tab/><text:tab/>&lt;/div&gt; <text:s text:c="14"/></text:p><text:p text:style-name="P503"><text:s text:c="12"/>&lt;/form&gt;</text:p><text:p text:style-name="P503"><text:s text:c="12"/></text:p><text:p text:style-name="P503"><text:tab/><text:tab/>&lt;/div&gt;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/>&lt;div class=&quot;innerContainerBottom&quot;&gt;&lt;/div&gt;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/>&lt;div class=&quot;clearer&quot;&gt;&lt;/div&gt;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/></text:p><text:p text:style-name="P503"><text:tab/><text:tab/>&lt;div id=&quot;footer&quot;&gt;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/><text:tab/>&lt;div class=&quot;footerLeft&quot;&gt;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/><text:tab/> <text:tab/>Design by &lt;a href=&quot;http://www.mxworkz.com/&quot; target=&quot;_blank&quot; title=&quot;MXWorkz Creative&quot;&gt;MXWorkz&lt;/a&gt;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/><text:tab/>&lt;/div&gt;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/><text:tab/>&lt;div class=&quot;copy&quot;&gt;This website and its content is intellectual pfoperty of &lt;strong&gt;Velbazhd Software ©&lt;/strong&gt;. &lt;/div&gt;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/><text:tab/>&lt;div class=&quot;footerRight&quot;&gt;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/><text:tab/><text:tab/> &lt;a href=&quot;index.php&quot; title=&quot;Home&quot;&gt;Home&lt;/a&gt; &amp;nbsp; &amp;nbsp; </text:p><text:p text:style-name="P503"><text:tab/><text:tab/><text:tab/><text:tab/> &lt;a href=&quot;products.php&quot; title=&quot;Products Information&quot;&gt;Products Information&lt;/a&gt; &amp;nbsp; &amp;nbsp; </text:p><text:p text:style-name="P503"><text:tab/><text:tab/><text:tab/><text:tab/> &lt;a href=&quot;contactus.php&quot; title=&quot;Contact Us&quot;&gt;Contact Us&lt;/a&gt;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/><text:tab/>&lt;/div&gt;</text:p><text:p text:style-name="P503"><text:tab/><text:tab/>&lt;/div&gt;</text:p><text:p text:style-name="P503"><text:tab/>&lt;/div&gt;</text:p><text:p text:style-name="P503">&lt;/body&gt;</text:p><text:p text:style-name="P503">&lt;/html&gt;</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5900_1486593966"/><text:soft-page-break/><text:s text:c="4"/>products.php3<text:bookmark-end text:name="__RefHeading___Toc5900_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P504">&lt;!DOCTYPE html&gt;</text:p><text:p text:style-name="P504">&lt;head&gt;</text:p><text:p text:style-name="P504">&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;</text:p><text:p text:style-name="P504">&lt;title&gt;.:: Vitosha Trade ::.&lt;/title&gt;</text:p><text:p text:style-name="P504">&lt;link href=&quot;styles.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot; /&gt;</text:p><text:p text:style-name="P504">&lt;/head&gt;</text:p><text:p text:style-name="P504">&lt;body style=&quot;overflow:hidden;&quot;&gt;</text:p><text:p text:style-name="P504"><text:tab/>&lt;div id=&quot;wrapper&quot;&gt;</text:p><text:p text:style-name="P504"><text:tab/><text:tab/>&lt;div id=&quot;logo&quot;&gt;</text:p><text:p text:style-name="P504"><text:tab/><text:tab/><text:tab/>&lt;ul id=&quot;menu&quot;&gt;</text:p><text:p text:style-name="P504"><text:tab/><text:tab/><text:tab/><text:tab/>&lt;li&gt;&lt;a href=&quot;index.php&quot; title=&quot;Home Page&quot;&gt;Home Page&lt;/a&gt;&lt;/li&gt;</text:p><text:p text:style-name="P504"><text:tab/><text:tab/><text:tab/><text:tab/>&lt;li class=&quot;spacer&quot;&gt;&amp;nbsp;&lt;/li&gt;</text:p><text:p text:style-name="P504"><text:tab/><text:tab/><text:tab/><text:tab/>&lt;li&gt;&lt;a class=&quot;current&quot; href=&quot;products.php&quot; title=&quot;Products Information&quot;&gt;Products Information&lt;/a&gt;&lt;/li&gt;</text:p><text:p text:style-name="P504"><text:tab/><text:tab/><text:tab/><text:tab/>&lt;li class=&quot;spacer&quot;&gt;&amp;nbsp;&lt;/li&gt;</text:p><text:p text:style-name="P504"><text:tab/><text:tab/><text:tab/><text:tab/>&lt;li&gt;&lt;a href=&quot;contactus.php&quot; title=&quot;Contact Us&quot;&gt;Contact Us&lt;/a&gt;&lt;/li&gt;</text:p><text:p text:style-name="P504"><text:tab/><text:tab/><text:tab/>&lt;/ul&gt;</text:p><text:p text:style-name="P504"><text:tab/><text:tab/>&lt;/div&gt;</text:p><text:p text:style-name="P504"><text:tab/><text:tab/>&lt;div id=&quot;header&quot;&gt;</text:p><text:p text:style-name="P504"><text:tab/><text:tab/><text:tab/>&lt;div id=&quot;slogan&quot;&gt;The Ultimate&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; Forex Prediction&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; </text:p><text:p text:style-name="P504"><text:tab/><text:tab/><text:tab/>&amp;nbsp; &amp;nbsp; &amp;nbsp; Indicator...&lt;/div&gt;</text:p><text:p text:style-name="P504"><text:tab/><text:tab/>&lt;/div&gt;</text:p><text:p text:style-name="P504"><text:tab/><text:tab/>&lt;div class=&quot;innerContainerTop&quot;&gt;&lt;/div&gt;</text:p><text:p text:style-name="P504"><text:tab/><text:tab/>&lt;div class=&quot;innerContainer&quot;&gt;</text:p><text:p text:style-name="P504"><text:tab/><text:tab/><text:tab/>&lt;h1 style=&quot;margin-top:-10px;&quot;&gt;Products&lt;/h1&gt;</text:p><text:p text:style-name="P504"><text:tab/><text:tab/><text:tab/>&lt;p&gt;</text:p><text:p text:style-name="P504"><text:tab/><text:tab/><text:tab/><text:tab/>&lt;a href=&quot;order.php&quot;&gt;MetaTrader 4 Client&lt;/a&gt; is a MetaTrader 4 client application.</text:p><text:p text:style-name="P504"><text:tab/><text:tab/><text:tab/>&lt;/p&gt; </text:p><text:p text:style-name="P504"><text:tab/><text:tab/><text:tab/>&lt;p&gt;</text:p><text:p text:style-name="P504"><text:tab/><text:tab/><text:tab/><text:tab/>&lt;a href=&quot;&quot;&gt;Windows Screensaver&lt;/a&gt; is a Windows screensaver free for download.</text:p><text:p text:style-name="P504"><text:tab/><text:tab/><text:tab/>&lt;/p&gt; </text:p><text:p text:style-name="P504"><text:tab/><text:tab/><text:tab/>&lt;p&gt;</text:p><text:p text:style-name="P504"><text:tab/><text:tab/><text:tab/><text:tab/>&lt;a href=&quot;&quot;&gt;Linux Screensaver&lt;/a&gt; is a Linux screensaver free for download.</text:p><text:p text:style-name="P504"><text:tab/><text:tab/><text:tab/>&lt;/p&gt; </text:p><text:p text:style-name="P504"><text:tab/><text:tab/><text:tab/>&lt;p&gt;</text:p><text:p text:style-name="P504"><text:tab/><text:tab/><text:tab/><text:tab/>&lt;a href=&quot;&quot;&gt;Mac OS X Screensaver&lt;/a&gt; is a Mac OS X screensaver free for download.</text:p><text:p text:style-name="P504"><text:tab/><text:tab/><text:tab/>&lt;/p&gt; </text:p><text:p text:style-name="P504"><text:tab/><text:tab/><text:tab/>&lt;p&gt;</text:p><text:p text:style-name="P504"><text:tab/><text:tab/><text:tab/><text:tab/>&lt;a href=&quot;&quot;&gt;BOINC Client&lt;/a&gt; is a BOINC client application free for download.</text:p><text:p text:style-name="P504"><text:tab/><text:tab/><text:tab/>&lt;/p&gt; </text:p><text:p text:style-name="P504"><text:tab/><text:tab/>&lt;/div&gt;</text:p><text:p text:style-name="P504"><text:tab/><text:tab/>&lt;div class=&quot;innerContainerBottom&quot;&gt;&lt;/div&gt;</text:p><text:p text:style-name="P504"><text:tab/><text:tab/>&lt;div class=&quot;clearer&quot;&gt;&lt;/div&gt;</text:p><text:p text:style-name="P504"><text:tab/><text:tab/></text:p><text:p text:style-name="P504"><text:tab/><text:tab/>&lt;div id=&quot;footer&quot;&gt;</text:p><text:p text:style-name="P504"><text:tab/><text:tab/><text:tab/>&lt;div class=&quot;footerLeft&quot;&gt;</text:p><text:p text:style-name="P504"><text:tab/><text:tab/><text:tab/> <text:tab/>Design by &lt;a href=&quot;http://www.mxworkz.com/&quot; target=&quot;_blank&quot; title=&quot;MXWorkz Creative&quot;&gt;MXWorkz&lt;/a&gt;</text:p><text:p text:style-name="P504"><text:tab/><text:tab/><text:tab/>&lt;/div&gt;</text:p><text:p text:style-name="P504"><text:tab/><text:tab/><text:tab/>&lt;div class=&quot;copy&quot;&gt;This website and its content is intellectual pfoperty of &lt;strong&gt;Velbazhd Software &amp;copy;&lt;/strong&gt;. &lt;/div&gt;</text:p><text:p text:style-name="P504"><text:tab/><text:tab/><text:tab/>&lt;div class=&quot;footerRight&quot;&gt;</text:p><text:p text:style-name="P504"><text:tab/><text:tab/><text:tab/><text:tab/> &lt;a href=&quot;index.php&quot; title=&quot;Home&quot;&gt;Home&lt;/a&gt; &amp;nbsp; &amp;nbsp; </text:p><text:p text:style-name="P504"><text:tab/><text:tab/><text:tab/><text:tab/> &lt;a href=&quot;products.php&quot; title=&quot;Products Information&quot;&gt;Products Information&lt;/a&gt; &amp;nbsp; &amp;nbsp; </text:p><text:p text:style-name="P504"><text:tab/><text:tab/><text:tab/><text:tab/> &lt;a href=&quot;contactus.php&quot; title=&quot;Contact Us&quot;&gt;Contact Us&lt;/a&gt;</text:p><text:p text:style-name="P504"><text:tab/><text:tab/><text:tab/>&lt;/div&gt;</text:p><text:p text:style-name="P504"><text:tab/><text:tab/>&lt;/div&gt;</text:p><text:p text:style-name="P504"><text:tab/>&lt;/div&gt;</text:p><text:p text:style-name="P504">&lt;/body&gt;</text:p><text:p text:style-name="P504">&lt;/html&gt;</text:p><text:p text:style-name="P506"/><text:p text:style-name="Heading"><text:bookmark-start text:name="__RefHeading___Toc5902_1486593966"/><text:s text:c="4"/>styles.css<text:bookmark-end text:name="__RefHeading___Toc5902_1486593966"/></text:p><text:p text:style-name="P506"/><text:p text:style-name="P505">/* CSS Document */</text:p><text:p text:style-name="P505"/><text:p text:style-name="P505">html {</text:p><text:p text:style-name="P505"><text:tab/>font-family: Arial, Helvetica, sans-serif;</text:p><text:p text:style-name="P505"><text:tab/>font-size: 12px;</text:p><text:p text:style-name="P505"><text:tab/>color: #333;</text:p><text:p text:style-name="P505">}</text:p><text:p text:style-name="P505"/><text:p text:style-name="P505">body {</text:p><text:p text:style-name="P505"><text:tab/>margin: 0px;</text:p><text:p text:style-name="P505"><text:tab/>padding: 0px;</text:p><text:p text:style-name="P505"><text:tab/>background: url(images/bg.jpg) left top no-repeat;</text:p><text:p text:style-name="P505"><text:tab/>background-color: #f2f2f2;</text:p><text:p text:style-name="P505">}</text:p><text:p text:style-name="P505"/><text:p text:style-name="P505">a:link {</text:p><text:p text:style-name="P505"><text:tab/>color: #4475B0;</text:p><text:p text:style-name="P505"><text:tab/>text-decoration: underline;</text:p><text:p text:style-name="P505">}</text:p><text:p text:style-name="P505"/><text:p text:style-name="P505">a:visited {</text:p><text:p text:style-name="P505"><text:tab/>color: #4475B0;</text:p><text:p text:style-name="P505"><text:tab/>text-decoration: underline;</text:p><text:p text:style-name="P505">}</text:p><text:p text:style-name="P505"/><text:p text:style-name="P505">a:hover {</text:p><text:p text:style-name="P505"><text:tab/>color: #2D7100;</text:p><text:p text:style-name="P505"><text:tab/>text-decoration: none;</text:p><text:p text:style-name="P505">}</text:p><text:p text:style-name="P505">a:active {</text:p><text:p text:style-name="P505"><text:tab/>color: #4475B0;</text:p><text:p text:style-name="P505"><text:tab/>text-decoration: underline;</text:p><text:p text:style-name="P505">}</text:p><text:p text:style-name="P505"/><text:p text:style-name="P505">#wrapper {</text:p><text:p text:style-name="P505"><text:tab/>margin: 0 auto;</text:p><text:p text:style-name="P505"><text:tab/>width: 980px;</text:p><text:p text:style-name="P505">}</text:p><text:p text:style-name="P505"/><text:p text:style-name="P505">#logo {</text:p><text:p text:style-name="P505"><text:tab/>width: 960px;</text:p><text:p text:style-name="P505"><text:tab/>height: 45px;</text:p><text:p text:style-name="P505"><text:tab/>padding: 25px 20px 0 0;</text:p><text:p text:style-name="P505"><text:tab/>background: url(images/logo_bg.jpg) left top no-repeat;</text:p><text:p text:style-name="P505"><text:tab/>text-align: right;</text:p><text:p text:style-name="P505">}</text:p><text:p text:style-name="P505"/><text:p text:style-name="P505">#header {</text:p><text:p text:style-name="P505"><text:tab/>width: 920px;</text:p><text:p text:style-name="P505"><text:tab/>height: 142px;</text:p><text:p text:style-name="P505"><text:tab/>background: url(images/header.jpg) left top no-repeat;</text:p><text:p text:style-name="P505"><text:tab/>padding: 160px 0 0 60px;</text:p><text:p text:style-name="P505"><text:soft-page-break/>}</text:p><text:p text:style-name="P505"/><text:p text:style-name="P505">#slogan {</text:p><text:p text:style-name="P505"><text:tab/>font-family: Trebuchet MS, Helvetica, sans-serif;</text:p><text:p text:style-name="P505"><text:tab/>font-size: 26px;</text:p><text:p text:style-name="P505"><text:tab/>color: #fff;</text:p><text:p text:style-name="P505"><text:tab/>line-height: 1.4em;</text:p><text:p text:style-name="P505">}</text:p><text:p text:style-name="P505"/><text:p text:style-name="P505">#home_about_bevel {</text:p><text:p text:style-name="P505"><text:tab/>float: left;</text:p><text:p text:style-name="P505"><text:tab/>width: 266px;</text:p><text:p text:style-name="P505"><text:tab/>height: 279px;</text:p><text:p text:style-name="P505"><text:tab/>padding: 15px 30px 20px 30px;</text:p><text:p text:style-name="P505"><text:tab/>background: url(images/home_about_bg.jpg) left top no-repeat;</text:p><text:p text:style-name="P505">}</text:p><text:p text:style-name="P505"/><text:p text:style-name="P505">.home_bevel_txt {</text:p><text:p text:style-name="P505"><text:tab/>margin: 100px 0 10px 0;</text:p><text:p text:style-name="P505"><text:tab/>line-height: 1.5em;</text:p><text:p text:style-name="P505"><text:tab/>overflow: hidden;</text:p><text:p text:style-name="P505">}</text:p><text:p text:style-name="P505"/><text:p text:style-name="P505">#home_purchase_bevel {</text:p><text:p text:style-name="P505"><text:tab/>float: left;</text:p><text:p text:style-name="P505"><text:tab/>width: 266px;</text:p><text:p text:style-name="P505"><text:tab/>height: 279px;</text:p><text:p text:style-name="P505"><text:tab/>padding: 15px 30px 20px 30px;</text:p><text:p text:style-name="P505"><text:tab/>background: url(images/home_purchase_bg.jpg) left top no-repeat;</text:p><text:p text:style-name="P505">}</text:p><text:p text:style-name="P505"/><text:p text:style-name="P505">#home_contact_bevel {</text:p><text:p text:style-name="P505"><text:tab/>float: left;</text:p><text:p text:style-name="P505"><text:tab/>width: 268px;</text:p><text:p text:style-name="P505"><text:tab/>height: 279px;</text:p><text:p text:style-name="P505"><text:tab/>padding: 15px 30px 20px 30px;</text:p><text:p text:style-name="P505"><text:tab/>background: url(images/home_contact_bg.jpg) left top no-repeat;</text:p><text:p text:style-name="P505">}</text:p><text:p text:style-name="P505"/><text:p text:style-name="P505">#grid_home {</text:p><text:p text:style-name="P505"><text:tab/>width: 920px;</text:p><text:p text:style-name="P505"><text:tab/>height: 254px;</text:p><text:p text:style-name="P505"><text:tab/>padding: 20px 30px 20px 30px;</text:p><text:p text:style-name="P505"><text:tab/>background: url(images/grid_home_bg.jpg) left top no-repeat;</text:p><text:p text:style-name="P505">}</text:p><text:p text:style-name="P505"/><text:p text:style-name="P505">.clearer {</text:p><text:p text:style-name="P505"><text:tab/>clear: both;</text:p><text:p text:style-name="P505">}</text:p><text:p text:style-name="P505"/><text:p text:style-name="P505">h1 {</text:p><text:p text:style-name="P505"><text:tab/>font-family: Trebuchet MS, Helvetica, sans-serif;</text:p><text:p text:style-name="P505"><text:tab/>font-size: 20px;</text:p><text:p text:style-name="P505"><text:tab/>color: #4475B0;</text:p><text:p text:style-name="P505">}</text:p><text:p text:style-name="P505"/><text:p text:style-name="P505">#menu {</text:p><text:p text:style-name="P505"><text:tab/>padding: 5px 0 5px 0;</text:p><text:p text:style-name="P505"><text:tab/>margin-left: 0;</text:p><text:p text:style-name="P505"><text:tab/>margin-bottom: 0;</text:p><text:p text:style-name="P505"><text:tab/>margin-top: 3px;</text:p><text:p text:style-name="P505"><text:tab/>font-family: Trebuchet MS, Helvetica, sans-serif;</text:p><text:p text:style-name="P505"><text:tab/>font-size: 18px;</text:p><text:p text:style-name="P505"><text:tab/>color: #000;</text:p><text:p text:style-name="P505">}</text:p><text:p text:style-name="P505"/><text:p text:style-name="P505">#menu li {</text:p><text:p text:style-name="P505"><text:tab/>list-style: none;</text:p><text:p text:style-name="P505"><text:tab/>display: inline;</text:p><text:p text:style-name="P505"><text:tab/>margin: 0;</text:p><text:p text:style-name="P505">}</text:p><text:p text:style-name="P505"/><text:p text:style-name="P505">#menu li a {</text:p><text:p text:style-name="P505"><text:tab/>text-decoration: none;</text:p><text:p text:style-name="P505"><text:tab/>padding: 3px 5px;</text:p><text:p text:style-name="P505"><text:tab/>margin-right: 1px;</text:p><text:p text:style-name="P505"><text:tab/>/* background: #fff; */</text:p><text:p text:style-name="P505">}</text:p><text:p text:style-name="P505"/><text:p text:style-name="P505">#menu li a:link, #menu li a:visited {</text:p><text:p text:style-name="P505"><text:tab/>color: #000;</text:p><text:p text:style-name="P505">}</text:p><text:p text:style-name="P505"/><text:p text:style-name="P505">#menu li a:hover {</text:p><text:p text:style-name="P505"><text:tab/>color: #4475B0;</text:p><text:p text:style-name="P505"><text:tab/>background: #fff;</text:p><text:p text:style-name="P505">}</text:p><text:p text:style-name="P505"/><text:p text:style-name="P505">#menu li a.current {</text:p><text:p text:style-name="P505"><text:tab/>padding: 9px 10px;</text:p><text:p text:style-name="P505"><text:tab/>color: #4475B0;</text:p><text:p text:style-name="P505">}</text:p><text:p text:style-name="P505"/><text:p text:style-name="P505">#menu li.spacer {</text:p><text:p text:style-name="P505"><text:tab/>padding: 1px 1px;</text:p><text:p text:style-name="P505">}</text:p><text:p text:style-name="P505"/><text:p text:style-name="P505">#footer {</text:p><text:p text:style-name="P505"><text:tab/>width: 950px;</text:p><text:p text:style-name="P505"><text:tab/>height: 50px;</text:p><text:p text:style-name="P505"><text:tab/>background: url(images/footer.jpg) left top no-repeat;</text:p><text:p text:style-name="P505"><text:tab/>margin: 10px auto 0 auto;</text:p><text:p text:style-name="P505"><text:tab/>padding: 20px 0 0 0;</text:p><text:p text:style-name="P505"><text:tab/>color: #999;</text:p><text:p text:style-name="P505">}</text:p><text:p text:style-name="P505"/><text:p text:style-name="P505">.footerLeft {</text:p><text:p text:style-name="P505"><text:tab/>float: left;</text:p><text:p text:style-name="P505"><text:tab/>padding-left: 10px;</text:p><text:p text:style-name="P505"><text:tab/>margin-right: 120px;</text:p><text:p text:style-name="P505">}</text:p><text:p text:style-name="P505"/><text:p text:style-name="P505">.footerLeft a:link {</text:p><text:p text:style-name="P505"><text:tab/>text-decoration: underline;</text:p><text:p text:style-name="P505"><text:tab/>color: #999;</text:p><text:p text:style-name="P505">}</text:p><text:p text:style-name="P505"/><text:p text:style-name="P505">.footerLeft a:visited {</text:p><text:p text:style-name="P505"><text:tab/>text-decoration: underline;</text:p><text:p text:style-name="P505"><text:tab/>color: #999;</text:p><text:p text:style-name="P505">}</text:p><text:p text:style-name="P505"/><text:p text:style-name="P505">.footerLeft a:hover {</text:p><text:p text:style-name="P505"><text:tab/>text-decoration: none;</text:p><text:p text:style-name="P505"><text:tab/>color: #4475B0;</text:p><text:p text:style-name="P505"><text:soft-page-break/>}</text:p><text:p text:style-name="P505"/><text:p text:style-name="P505">.footerLeft a:active {</text:p><text:p text:style-name="P505"><text:tab/>text-decoration: underline;</text:p><text:p text:style-name="P505"><text:tab/>color: #999;</text:p><text:p text:style-name="P505">}</text:p><text:p text:style-name="P505"/><text:p text:style-name="P505">.copy {</text:p><text:p text:style-name="P505"><text:tab/>float: left;</text:p><text:p text:style-name="P505">}</text:p><text:p text:style-name="P505"/><text:p text:style-name="P505">.footerRight {</text:p><text:p text:style-name="P505"><text:tab/>float: right;</text:p><text:p text:style-name="P505"><text:tab/>padding-right: 10px;</text:p><text:p text:style-name="P505">}</text:p><text:p text:style-name="P505"/><text:p text:style-name="P505">.footerRight a:link {</text:p><text:p text:style-name="P505"><text:tab/>text-decoration: underline;</text:p><text:p text:style-name="P505"><text:tab/>color: #999;</text:p><text:p text:style-name="P505">}</text:p><text:p text:style-name="P505"/><text:p text:style-name="P505">.footerRight a:visited {</text:p><text:p text:style-name="P505"><text:tab/>text-decoration: underline;</text:p><text:p text:style-name="P505"><text:tab/>color: #999;</text:p><text:p text:style-name="P505">}</text:p><text:p text:style-name="P505"/><text:p text:style-name="P505">.footerRight a:hover {</text:p><text:p text:style-name="P505"><text:tab/>text-decoration: none;</text:p><text:p text:style-name="P505"><text:tab/>color: #4475B0;</text:p><text:p text:style-name="P505">}</text:p><text:p text:style-name="P505"/><text:p text:style-name="P505">.footerRight a:active {</text:p><text:p text:style-name="P505"><text:tab/>text-decoration: underline;</text:p><text:p text:style-name="P505"><text:tab/>color: #999;</text:p><text:p text:style-name="P505">}</text:p><text:p text:style-name="P505"/><text:p text:style-name="P505">.tableBorder {</text:p><text:p text:style-name="P505"><text:tab/>border: 1px solid #ccc;</text:p><text:p text:style-name="P505">}</text:p><text:p text:style-name="P505"/><text:p text:style-name="P505">.tableHeading {</text:p><text:p text:style-name="P505"><text:tab/>height: 35px;</text:p><text:p text:style-name="P505"><text:tab/>background: url(images/table_heading_bg.jpg) left top repeat-x;</text:p><text:p text:style-name="P505">}</text:p><text:p text:style-name="P505"/><text:p text:style-name="P505">.tableRow {</text:p><text:p text:style-name="P505"><text:tab/>height: 30px;</text:p><text:p text:style-name="P505"><text:tab/>background-color: #fff;</text:p><text:p text:style-name="P505"><text:tab/>text-align: center;</text:p><text:p text:style-name="P505">}</text:p><text:p text:style-name="P505"/><text:p text:style-name="P505">.tableRowAlternative {</text:p><text:p text:style-name="P505"><text:tab/>height: 30px;</text:p><text:p text:style-name="P505"><text:tab/>background-color: #ECF4FD;</text:p><text:p text:style-name="P505"><text:tab/>text-align: center;</text:p><text:p text:style-name="P505">}</text:p><text:p text:style-name="P505"/><text:p text:style-name="P505">.innerContainerTop {</text:p><text:p text:style-name="P505"><text:tab/>width: 980px;</text:p><text:p text:style-name="P505"><text:tab/>height: 25px;</text:p><text:p text:style-name="P505"><text:tab/>background: url(images/inner_top.png) left top no-repeat;</text:p><text:p text:style-name="P505">}</text:p><text:p text:style-name="P505"/><text:p text:style-name="P505">.innerContainerBottom {</text:p><text:p text:style-name="P505"><text:tab/>width: 980px;</text:p><text:p text:style-name="P505"><text:tab/>height: 25px;</text:p><text:p text:style-name="P505"><text:tab/>background: url(images/inner_bottom.png) left top no-repeat;</text:p><text:p text:style-name="P505">}</text:p><text:p text:style-name="P505"/><text:p text:style-name="P505">.innerContainer {</text:p><text:p text:style-name="P505"><text:tab/>width: 920px;</text:p><text:p text:style-name="P505"><text:tab/>padding: 5px 30px 5px 30px;</text:p><text:p text:style-name="P505"><text:tab/>background: url(images/inner_bg.png) left top repeat-y;</text:p><text:p text:style-name="P505">}</text:p><text:p text:style-name="P505"/><text:p text:style-name="P505">.paging {</text:p><text:p text:style-name="P505"><text:tab/>padding-top: 20px;</text:p><text:p text:style-name="P505"><text:tab/>font-weight: bold;</text:p><text:p text:style-name="P505">}</text:p><text:p text:style-name="P505"/><text:p text:style-name="P505">/* <text:s/>Order form style definitions */</text:p><text:p text:style-name="P505"/><text:p text:style-name="P505">form.orderform {</text:p><text:p text:style-name="P505"><text:tab/>margin-left: 20px;</text:p><text:p text:style-name="P505">}</text:p><text:p text:style-name="P505"/><text:p text:style-name="P505">form.orderform label {</text:p><text:p text:style-name="P505"><text:tab/>width: 160px;</text:p><text:p text:style-name="P505"><text:tab/>display: inline-block;</text:p><text:p text:style-name="P505"><text:tab/>font-size: 1em;</text:p><text:p text:style-name="P505">}</text:p><text:p text:style-name="P505"/><text:p text:style-name="P505">form.orderform .label340px {</text:p><text:p text:style-name="P505"><text:tab/>width: 340px;</text:p><text:p text:style-name="P505">}</text:p><text:p text:style-name="P505"/><text:p text:style-name="P505">form.orderform .labelNoWidth {</text:p><text:p text:style-name="P505"><text:tab/>width: auto;</text:p><text:p text:style-name="P505">}</text:p><text:p text:style-name="P505"/><text:p text:style-name="P505">form.orderform .labelLong {</text:p><text:p text:style-name="P505"><text:tab/>color: #999;</text:p><text:p text:style-name="P505"><text:tab/>font-size: 11px;</text:p><text:p text:style-name="P505"><text:tab/>width: 380px;</text:p><text:p text:style-name="P505">}</text:p><text:p text:style-name="P505"/><text:p text:style-name="P505">form.orderform legend {</text:p><text:p text:style-name="P505"><text:tab/>padding: 0;</text:p><text:p text:style-name="P505"><text:tab/>font-weight: bold;</text:p><text:p text:style-name="P505">}</text:p><text:p text:style-name="P505"/><text:p text:style-name="P505">form.orderform fieldset {</text:p><text:p text:style-name="P505"><text:tab/>margin-bottom: 10px;</text:p><text:p text:style-name="P505"><text:tab/>border: none;</text:p><text:p text:style-name="P505">}</text:p><text:p text:style-name="P505"/><text:p text:style-name="P505">form.orderform fieldset ul {</text:p><text:p text:style-name="P505"><text:tab/>margin: 0;</text:p><text:p text:style-name="P505"><text:tab/>padding: 0;</text:p><text:p text:style-name="P505">}</text:p><text:p text:style-name="P505"/><text:p text:style-name="P505">form.orderform fieldset li {</text:p><text:p text:style-name="P505"><text:tab/>list-style: none;</text:p><text:p text:style-name="P505"><text:tab/>padding: 5px 0 5px 10px;</text:p><text:p text:style-name="P505"><text:tab/>margin: 0;</text:p><text:p text:style-name="P505"><text:soft-page-break/>}</text:p><text:p text:style-name="P505"/><text:p text:style-name="P505">fieldset input, fieldset select, fieldset textarea, .txtField {</text:p><text:p text:style-name="P505"><text:tab/>font-family: Arial, Helvetica, sans-serif;</text:p><text:p text:style-name="P505"><text:tab/>font-size: 12px;</text:p><text:p text:style-name="P505"><text:tab/>color: #656565;</text:p><text:p text:style-name="P505"><text:tab/>background-color: #fff;</text:p><text:p text:style-name="P505"><text:tab/>margin: 0;</text:p><text:p text:style-name="P505"><text:tab/>border: 1px solid #A5A5A5;</text:p><text:p text:style-name="P505"><text:tab/>padding-top: 2px;</text:p><text:p text:style-name="P505"><text:tab/>padding-left: 2px !important;</text:p><text:p text:style-name="P505"><text:tab/>width: 205px;</text:p><text:p text:style-name="P505">}</text:p><text:p text:style-name="P505"/><text:p text:style-name="P505">.noBorder {</text:p><text:p text:style-name="P505"><text:tab/>border: none;</text:p><text:p text:style-name="P505"><text:tab/>width: 30px;</text:p><text:p text:style-name="P505">}</text:p><text:p text:style-name="P505"/><text:p text:style-name="P505">form.orderform select {</text:p><text:p text:style-name="P505"><text:tab/>width: 159px;</text:p><text:p text:style-name="P505"><text:tab/>margin-left: -3px;</text:p><text:p text:style-name="P505">}</text:p><text:p text:style-name="P505"/><text:p text:style-name="P505">form.orderform select.shortInput, form.orderform .shortInput {</text:p><text:p text:style-name="P505"><text:tab/>width: 50px;</text:p><text:p text:style-name="P505">}</text:p><text:p text:style-name="P505"/><text:p text:style-name="P505">form.orderform .phoneField {</text:p><text:p text:style-name="P505"><text:tab/>width: 90px;</text:p><text:p text:style-name="P505">}</text:p><text:p text:style-name="P505"/><text:p text:style-name="P505">.submit {</text:p><text:p text:style-name="P505"><text:tab/>width: 380px;</text:p><text:p text:style-name="P505"><text:tab/>text-align: right;</text:p><text:p text:style-name="P505">}</text:p><text:p text:style-name="P505"/><text:p text:style-name="P505">.width160 {</text:p><text:p text:style-name="P505"><text:tab/>width: 160px;</text:p><text:p text:style-name="P505">}</text:p><text:p text:style-name="P505"/><text:p text:style-name="P505">.marginLeft-10 {</text:p><text:p text:style-name="P505"><text:tab/>margin-left: -10px;</text:p><text:p text:style-name="P505">}</text:p><text:p text:style-name="P505"/><text:p text:style-name="P505">input.btn {</text:p><text:p text:style-name="P505"><text:tab/>background: url(images/btn_bg.jpg);</text:p><text:p text:style-name="P505"><text:tab/>width: 140px;</text:p><text:p text:style-name="P505"><text:tab/>height: 30px;</text:p><text:p text:style-name="P505"><text:tab/>color: #676767;</text:p><text:p text:style-name="P505"><text:tab/>font-weight: bold;</text:p><text:p text:style-name="P505"><text:tab/>border: none;</text:p><text:p text:style-name="P505"><text:tab/>cursor: pointer;</text:p><text:p text:style-name="P505">}</text:p><text:p text:style-name="P505"/><text:p text:style-name="P505">input.btnHov {</text:p><text:p text:style-name="P505"><text:tab/>background: url(images/btn_over_bg.jpg);</text:p><text:p text:style-name="P505"><text:tab/>width: 140px;</text:p><text:p text:style-name="P505"><text:tab/>height: 30px;</text:p><text:p text:style-name="P505"><text:tab/>color: #4475B0;</text:p><text:p text:style-name="P505"><text:tab/>font-weight: bold;</text:p><text:p text:style-name="P505"><text:tab/>border: none;</text:p><text:p text:style-name="P505"><text:tab/>cursor: pointer;</text:p><text:p text:style-name="P507">}</text:p></text:section></office:text></office:body></office:document-content>